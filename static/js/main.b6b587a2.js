/*! For license information please see main.b6b587a2.js.LICENSE.txt */
(()=>{var e={8377:function(e,t,n){!function(e,t,n){"use strict";const a={1:{name:"/m/01g317",id:1,displayName:"person"},2:{name:"/m/0199g",id:2,displayName:"bicycle"},3:{name:"/m/0k4j",id:3,displayName:"car"},4:{name:"/m/04_sv",id:4,displayName:"motorcycle"},5:{name:"/m/05czz6l",id:5,displayName:"airplane"},6:{name:"/m/01bjv",id:6,displayName:"bus"},7:{name:"/m/07jdr",id:7,displayName:"train"},8:{name:"/m/07r04",id:8,displayName:"truck"},9:{name:"/m/019jd",id:9,displayName:"boat"},10:{name:"/m/015qff",id:10,displayName:"traffic light"},11:{name:"/m/01pns0",id:11,displayName:"fire hydrant"},13:{name:"/m/02pv19",id:13,displayName:"stop sign"},14:{name:"/m/015qbp",id:14,displayName:"parking meter"},15:{name:"/m/0cvnqh",id:15,displayName:"bench"},16:{name:"/m/015p6",id:16,displayName:"bird"},17:{name:"/m/01yrx",id:17,displayName:"cat"},18:{name:"/m/0bt9lr",id:18,displayName:"dog"},19:{name:"/m/03k3r",id:19,displayName:"horse"},20:{name:"/m/07bgp",id:20,displayName:"sheep"},21:{name:"/m/01xq0k1",id:21,displayName:"cow"},22:{name:"/m/0bwd_0j",id:22,displayName:"elephant"},23:{name:"/m/01dws",id:23,displayName:"bear"},24:{name:"/m/0898b",id:24,displayName:"zebra"},25:{name:"/m/03bk1",id:25,displayName:"giraffe"},27:{name:"/m/01940j",id:27,displayName:"backpack"},28:{name:"/m/0hnnb",id:28,displayName:"umbrella"},31:{name:"/m/080hkjn",id:31,displayName:"handbag"},32:{name:"/m/01rkbr",id:32,displayName:"tie"},33:{name:"/m/01s55n",id:33,displayName:"suitcase"},34:{name:"/m/02wmf",id:34,displayName:"frisbee"},35:{name:"/m/071p9",id:35,displayName:"skis"},36:{name:"/m/06__v",id:36,displayName:"snowboard"},37:{name:"/m/018xm",id:37,displayName:"sports ball"},38:{name:"/m/02zt3",id:38,displayName:"kite"},39:{name:"/m/03g8mr",id:39,displayName:"baseball bat"},40:{name:"/m/03grzl",id:40,displayName:"baseball glove"},41:{name:"/m/06_fw",id:41,displayName:"skateboard"},42:{name:"/m/019w40",id:42,displayName:"surfboard"},43:{name:"/m/0dv9c",id:43,displayName:"tennis racket"},44:{name:"/m/04dr76w",id:44,displayName:"bottle"},46:{name:"/m/09tvcd",id:46,displayName:"wine glass"},47:{name:"/m/08gqpm",id:47,displayName:"cup"},48:{name:"/m/0dt3t",id:48,displayName:"fork"},49:{name:"/m/04ctx",id:49,displayName:"knife"},50:{name:"/m/0cmx8",id:50,displayName:"spoon"},51:{name:"/m/04kkgm",id:51,displayName:"bowl"},52:{name:"/m/09qck",id:52,displayName:"banana"},53:{name:"/m/014j1m",id:53,displayName:"apple"},54:{name:"/m/0l515",id:54,displayName:"sandwich"},55:{name:"/m/0cyhj_",id:55,displayName:"orange"},56:{name:"/m/0hkxq",id:56,displayName:"broccoli"},57:{name:"/m/0fj52s",id:57,displayName:"carrot"},58:{name:"/m/01b9xk",id:58,displayName:"hot dog"},59:{name:"/m/0663v",id:59,displayName:"pizza"},60:{name:"/m/0jy4k",id:60,displayName:"donut"},61:{name:"/m/0fszt",id:61,displayName:"cake"},62:{name:"/m/01mzpv",id:62,displayName:"chair"},63:{name:"/m/02crq1",id:63,displayName:"couch"},64:{name:"/m/03fp41",id:64,displayName:"potted plant"},65:{name:"/m/03ssj5",id:65,displayName:"bed"},67:{name:"/m/04bcr3",id:67,displayName:"dining table"},70:{name:"/m/09g1w",id:70,displayName:"toilet"},72:{name:"/m/07c52",id:72,displayName:"tv"},73:{name:"/m/01c648",id:73,displayName:"laptop"},74:{name:"/m/020lf",id:74,displayName:"mouse"},75:{name:"/m/0qjjc",id:75,displayName:"remote"},76:{name:"/m/01m2v",id:76,displayName:"keyboard"},77:{name:"/m/050k8",id:77,displayName:"cell phone"},78:{name:"/m/0fx9l",id:78,displayName:"microwave"},79:{name:"/m/029bxz",id:79,displayName:"oven"},80:{name:"/m/01k6s3",id:80,displayName:"toaster"},81:{name:"/m/0130jx",id:81,displayName:"sink"},82:{name:"/m/040b_t",id:82,displayName:"refrigerator"},84:{name:"/m/0bt_c3",id:84,displayName:"book"},85:{name:"/m/01x3z",id:85,displayName:"clock"},86:{name:"/m/02s195",id:86,displayName:"vase"},87:{name:"/m/01lsmm",id:87,displayName:"scissors"},88:{name:"/m/0kmg4",id:88,displayName:"teddy bear"},89:{name:"/m/03wvsk",id:89,displayName:"hair drier"},90:{name:"/m/012xff",id:90,displayName:"toothbrush"}};class r{constructor(e,t){this.modelPath=t||"https://storage.googleapis.com/tfjs-models/savedmodel/".concat(this.getPrefix(e),"/model.json")}getPrefix(e){return"lite_mobilenet_v2"===e?"ssd".concat(e):"ssd_".concat(e)}async load(){this.model=await t.loadGraphModel(this.modelPath);const e=n.zeros([1,300,300,3],"int32"),a=await this.model.executeAsync(e);await Promise.all(a.map((e=>e.data()))),a.map((e=>e.dispose())),e.dispose()}async infer(e,t,a){const r=n.tidy((()=>(e instanceof n.Tensor||(e=n.browser.fromPixels(e)),n.expandDims(e)))),s=r.shape[1],o=r.shape[2],i=await this.model.executeAsync(r),c=i[0].dataSync(),l=i[1].dataSync();r.dispose(),n.dispose(i);const[u,d]=this.calculateMaxScores(c,i[0].shape[1],i[0].shape[2]),h=n.getBackend();"webgl"===n.getBackend()&&n.setBackend("cpu");const p=n.tidy((()=>{const e=n.tensor2d(l,[i[1].shape[1],i[1].shape[3]]);return n.image.nonMaxSuppression(e,u,t,a,a)})),f=p.dataSync();return p.dispose(),h!==n.getBackend()&&n.setBackend(h),this.buildDetectedObjects(o,s,l,u,f,d)}buildDetectedObjects(e,t,n,r,s,o){const i=s.length,c=[];for(let l=0;l<i;l++){const i=[];for(let e=0;e<4;e++)i[e]=n[4*s[l]+e];const u=i[0]*t,d=i[1]*e,h=i[2]*t,p=i[3]*e;i[0]=d,i[1]=u,i[2]=p-d,i[3]=h-u,c.push({bbox:i,class:a[o[s[l]]+1].displayName,score:r[s[l]]})}return c}calculateMaxScores(e,t,n){const a=[],r=[];for(let s=0;s<t;s++){let t=Number.MIN_VALUE,o=-1;for(let a=0;a<n;a++)e[s*n+a]>t&&(t=e[s*n+a],o=a);a[s]=t,r[s]=o}return[a,r]}async detect(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:20,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:.5;return this.infer(e,t,n)}dispose(){null!=this.model&&this.model.dispose()}}e.ObjectDetection=r,e.load=async function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};if(null==n)throw new Error("Cannot find TensorFlow.js. If you are using a <script> tag, please also include @tensorflow/tfjs on the page before using this model.");const t=e.base||"lite_mobilenet_v2",a=e.modelUrl;if(-1===["mobilenet_v1","mobilenet_v2","lite_mobilenet_v2"].indexOf(t))throw new Error("ObjectDetection constructed with invalid base model ".concat(t,". Valid names are 'mobilenet_v1', 'mobilenet_v2' and 'lite_mobilenet_v2'."));const s=new r(t,a);return await s.load(),s},e.version="2.2.3",Object.defineProperty(e,"__esModule",{value:!0})}(t,n(1447),n(3613))},1447:(e,t,n)=>{"use strict";n.r(t),n.d(t,{GraphModel:()=>ut,deregisterOp:()=>_,loadGraphModel:()=>dt,loadGraphModelSync:()=>ht,registerOp:()=>C,version_converter:()=>ft});var a={};n.r(a),n.d(a,{json:()=>B});var r={};n.r(r),n.d(r,{json:()=>P});var s={};n.r(s),n.d(s,{json:()=>V});var o={};n.r(o),n.d(o,{json:()=>W});var i={};n.r(i),n.d(i,{json:()=>U});var c={};n.r(c),n.d(c,{json:()=>G});var l={};n.r(l),n.d(l,{json:()=>H});var u={};n.r(u),n.d(u,{json:()=>j});var d={};n.r(d),n.d(d,{json:()=>q});var h={};n.r(h),n.d(h,{json:()=>X});var p={};n.r(p),n.d(p,{json:()=>K});var f={};n.r(f),n.d(f,{json:()=>Q});var m={};n.r(m),n.d(m,{json:()=>Y});var g={};n.r(g),n.d(g,{json:()=>Z});var y={};n.r(y),n.d(y,{json:()=>J});var b={};n.r(b),n.d(b,{json:()=>$});var v={};n.r(v),n.d(v,{json:()=>ee});var x={};n.r(x),n.d(x,{json:()=>te});var w={};n.r(w),n.d(w,{json:()=>ne});var k={};n.r(k),n.d(k,{OP_SCOPE_SUFFIX:()=>ve.zvA,abs:()=>ve.WnP,acos:()=>ve.Khb,acosh:()=>ve.__u,add:()=>ve.IHx,addN:()=>ve.QBD,all:()=>ve.$6P,any:()=>ve.YjB,argMax:()=>ve.NqF,argMin:()=>ve.vHJ,asin:()=>ve.ZRM,asinh:()=>ve.VfV,atan:()=>ve.z4N,atan2:()=>ve.fvJ,atanh:()=>ve.C80,avgPool:()=>ve.wS1,avgPool3d:()=>ve.uR5,basicLSTMCell:()=>ve.zEQ,batchNorm:()=>ve.tgs,batchNorm2d:()=>ve.Dxk,batchNorm3d:()=>ve.JY5,batchNorm4d:()=>ve.p3b,batchToSpaceND:()=>ve.E4h,bincount:()=>ve.yE8,bitwiseAnd:()=>ve.ycw,booleanMaskAsync:()=>ve.anm,broadcastArgs:()=>ve.XsQ,broadcastTo:()=>ve.UFq,buffer:()=>ve.f3b,cast:()=>ve.pju,ceil:()=>ve.mDi,clipByValue:()=>ve.iUl,clone:()=>ve.d9v,complex:()=>ve.PYB,concat:()=>ve.zoF,concat1d:()=>ve.gME,concat2d:()=>ve.Izb,concat3d:()=>ve.MNy,concat4d:()=>ve.ZaL,conv1d:()=>ve.PAt,conv2d:()=>ve.Tek,conv2dTranspose:()=>ve.bc,conv3d:()=>ve.pdZ,conv3dTranspose:()=>ve.$QV,cos:()=>ve.mCk,cosh:()=>ve.f9Y,cosineWindow:()=>ve.mew,cumprod:()=>ve.$Gn,cumsum:()=>ve.zbp,denseBincount:()=>ve.ppE,depthToSpace:()=>ve.nTT,depthwiseConv2d:()=>ve.B10,diag:()=>ve.Ka3,dilation2d:()=>ve.WmZ,div:()=>ve.hiC,divNoNan:()=>ve.NTj,dot:()=>ve.AKD,dropout:()=>ve.rvX,einsum:()=>ve.WYO,elu:()=>ve.pyx,enclosingPowerOfTwo:()=>ve.GRh,ensureShape:()=>ve.EDe,equal:()=>ve.DgJ,erf:()=>ve.qNN,euclideanNorm:()=>ve.d2q,exp:()=>ve.Qqt,expandDims:()=>ve.dt4,expm1:()=>ve.t$B,eye:()=>ve.iyy,fft:()=>ve.kp_,fill:()=>ve.hlL,floor:()=>ve.GWj,floorDiv:()=>ve.qPi,fused:()=>ve.imm,gather:()=>ve.Iqj,gatherND:()=>ve.dbB,greater:()=>ve.pjt,greaterEqual:()=>ve.brS,ifft:()=>ve.Sxn,imag:()=>ve.asL,image:()=>ve.BHj,inTopKAsync:()=>ve.V3u,irfft:()=>ve.wx0,isFinite:()=>ve.xVT,isInf:()=>ve.UWc,isNaN:()=>ve.i2d,leakyRelu:()=>ve.hi7,less:()=>ve.d9m,lessEqual:()=>ve.zN1,linalg:()=>ve.$r2,linspace:()=>ve.SX3,localResponseNormalization:()=>ve.G9k,log:()=>ve.cM7,log1p:()=>ve.Krr,logSigmoid:()=>ve.e_t,logSoftmax:()=>ve.CmS,logSumExp:()=>ve.l_t,logicalAnd:()=>ve.HvI,logicalNot:()=>ve.hJK,logicalOr:()=>ve.K5V,logicalXor:()=>ve.egP,losses:()=>ve.MB5,lowerBound:()=>ve.eab,matMul:()=>ve.OI3,max:()=>ve.Fp7,maxPool:()=>ve._sB,maxPool3d:()=>ve.YQQ,maxPoolWithArgmax:()=>ve.Ip$,maximum:()=>ve.gWQ,mean:()=>ve.J69,meshgrid:()=>ve.ry_,min:()=>ve.VV$,minimum:()=>ve.LTh,mirrorPad:()=>ve.VdP,mod:()=>ve.wQq,moments:()=>ve.Gi7,movingAverage:()=>ve.p_,mul:()=>ve.dC7,multiRNNCell:()=>ve.rq4,multinomial:()=>ve.SJ_,neg:()=>ve.W76,norm:()=>ve.KOy,notEqual:()=>ve.Quu,oneHot:()=>ve.lfX,ones:()=>ve.iUs,onesLike:()=>ve.JpU,op:()=>ve.op,outerProduct:()=>ve.N2O,pad:()=>ve.vku,pad1d:()=>ve.pNR,pad2d:()=>ve.koy,pad3d:()=>ve.t1L,pad4d:()=>ve.lGY,pool:()=>ve.d_R,pow:()=>ve.sQ3,prelu:()=>ve.AL3,print:()=>ve.S0v,prod:()=>ve.WVs,raggedGather:()=>ve.$gW,raggedRange:()=>ve.VT$,raggedTensorToTensor:()=>ve.N89,rand:()=>ve.TN_,randomGamma:()=>ve.wzB,randomNormal:()=>ve.nGf,randomStandardNormal:()=>ve.ruB,randomUniform:()=>ve.LGj,randomUniformInt:()=>ve.pe5,range:()=>ve.w6H,real:()=>ve.kwC,reciprocal:()=>ve.M25,relu:()=>ve.UYe,relu6:()=>ve.btT,reshape:()=>ve.XLQ,reverse:()=>ve.GYS,reverse1d:()=>ve.SDf,reverse2d:()=>ve.diP,reverse3d:()=>ve.sx7,reverse4d:()=>ve.mG2,rfft:()=>ve.QEs,round:()=>ve.NMM,rsqrt:()=>ve.bp0,scalar:()=>ve.iD$,scatterND:()=>ve.snQ,searchSorted:()=>ve.zcT,selu:()=>ve.U8D,separableConv2d:()=>ve.U_I,setdiff1dAsync:()=>ve.ODp,sigmoid:()=>ve.XD2,sign:()=>ve.Xxe,signal:()=>ve.tdS,sin:()=>ve.O$l,sinh:()=>ve.R_K,slice:()=>ve.tPi,slice1d:()=>ve.jZU,slice2d:()=>ve.SmN,slice3d:()=>ve.CnO,slice4d:()=>ve.p0P,softmax:()=>ve.XAC,softplus:()=>ve.Wvh,spaceToBatchND:()=>ve.fBT,sparse:()=>ve.rVs,sparseToDense:()=>ve.ers,spectral:()=>ve.uN7,split:()=>ve.Vl2,sqrt:()=>ve._b3,square:()=>ve.h62,squaredDifference:()=>ve.$i,squeeze:()=>ve.L9e,stack:()=>ve.knu,step:()=>ve.Nbs,stridedSlice:()=>ve.NXj,string:()=>ve.Z_8,sub:()=>ve.luU,sum:()=>ve.Smz,tan:()=>ve.ORZ,tanh:()=>ve.AEp,tensor:()=>ve.XeE,tensor1d:()=>ve.RRF,tensor2d:()=>ve.odF,tensor3d:()=>ve.wOQ,tensor4d:()=>ve.yXz,tensor5d:()=>ve.Bfx,tensor6d:()=>ve.xZs,tensorScatterUpdate:()=>ve.Pg0,tile:()=>ve.Gg6,topk:()=>ve.hg7,transpose:()=>ve.p4s,truncatedNormal:()=>ve.Xu6,unique:()=>ve.Two,unsortedSegmentSum:()=>ve.pUJ,unstack:()=>ve.HHK,upperBound:()=>ve.GaM,variable:()=>ve.VD$,where:()=>ve.arb,whereAsync:()=>ve.itS,zeros:()=>ve.lls,zerosLike:()=>ve.P84});var S=n(3613);var N,I;(0,S.env)().registerFlag("KEEP_INTERMEDIATE_TENSORS",(()=>!1),(e=>{e&&console.warn("Keep intermediate tensors is ON. This will print the values of all intermediate tensors during model inference. Not all models support this mode. For details, check e2e/benchmarks/ model_config.js. This significantly impacts performance.")})),function(e){e[e.DT_INVALID=0]="DT_INVALID",e[e.DT_FLOAT=1]="DT_FLOAT",e[e.DT_DOUBLE=2]="DT_DOUBLE",e[e.DT_INT32=3]="DT_INT32",e[e.DT_UINT8=4]="DT_UINT8",e[e.DT_INT16=5]="DT_INT16",e[e.DT_INT8=6]="DT_INT8",e[e.DT_STRING=7]="DT_STRING",e[e.DT_COMPLEX64=8]="DT_COMPLEX64",e[e.DT_INT64=9]="DT_INT64",e[e.DT_BOOL=10]="DT_BOOL",e[e.DT_QINT8=11]="DT_QINT8",e[e.DT_QUINT8=12]="DT_QUINT8",e[e.DT_QINT32=13]="DT_QINT32",e[e.DT_BFLOAT16=14]="DT_BFLOAT16",e[e.DT_QINT16=15]="DT_QINT16",e[e.DT_QUINT16=16]="DT_QUINT16",e[e.DT_UINT16=17]="DT_UINT16",e[e.DT_COMPLEX128=18]="DT_COMPLEX128",e[e.DT_HALF=19]="DT_HALF",e[e.DT_RESOURCE=20]="DT_RESOURCE",e[e.DT_VARIANT=21]="DT_VARIANT",e[e.DT_UINT32=22]="DT_UINT32",e[e.DT_UINT64=23]="DT_UINT64",e[e.DT_FLOAT_REF=101]="DT_FLOAT_REF",e[e.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",e[e.DT_INT32_REF=103]="DT_INT32_REF",e[e.DT_UINT8_REF=104]="DT_UINT8_REF",e[e.DT_INT16_REF=105]="DT_INT16_REF",e[e.DT_INT8_REF=106]="DT_INT8_REF",e[e.DT_STRING_REF=107]="DT_STRING_REF",e[e.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",e[e.DT_INT64_REF=109]="DT_INT64_REF",e[e.DT_BOOL_REF=110]="DT_BOOL_REF",e[e.DT_QINT8_REF=111]="DT_QINT8_REF",e[e.DT_QUINT8_REF=112]="DT_QUINT8_REF",e[e.DT_QINT32_REF=113]="DT_QINT32_REF",e[e.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF",e[e.DT_QINT16_REF=115]="DT_QINT16_REF",e[e.DT_QUINT16_REF=116]="DT_QUINT16_REF",e[e.DT_UINT16_REF=117]="DT_UINT16_REF",e[e.DT_COMPLEX128_REF=118]="DT_COMPLEX128_REF",e[e.DT_HALF_REF=119]="DT_HALF_REF",e[e.DT_RESOURCE_REF=120]="DT_RESOURCE_REF",e[e.DT_VARIANT_REF=121]="DT_VARIANT_REF",e[e.DT_UINT32_REF=122]="DT_UINT32_REF",e[e.DT_UINT64_REF=123]="DT_UINT64_REF"}(N||(N={})),function(e){let t;!function(e){e[e.LEGACY=0]="LEGACY",e[e.V1=1]="V1",e[e.V2=2]="V2"}(t=e.CheckpointFormatVersion||(e.CheckpointFormatVersion={}))}(I||(I={}));const T={};function C(e,t){const n={tfOpName:e,category:"custom",inputs:[],attrs:[],customExecutor:t};T[e]=n}function E(e){return T[e]}function _(e){delete T[e]}function A(e,t,n,a,r){const s=t.inputParams[e];if(s&&void 0!==s.inputIndexStart){const e=s.inputIndexStart,o=0===s.inputIndexEnd?void 0:void 0===s.inputIndexEnd?e+1:s.inputIndexEnd,i=e<0?t.inputNames.length+e:e;if("tensor"===s.type)return R(t.inputNames[i],n,a,r);if("tensors"===s.type){const s=t.inputs.slice(e,o);return t.inputNames.slice(e,o).filter(((e,t)=>{var n;return"NoOp"!==(null===(n=s[t])||void 0===n?void 0:n.op)})).map((e=>R(e,n,a,r)))}const c=R(t.inputNames[i],n,a,r),l=c.dataSync();return"number"===s.type?l[0]:S.util.toNestedArray(c.shape,l)}const o=t.attrParams[e];return o&&o.value}function R(e,t,n,a){const[r,s]=M(e,n);if(null!=a){const e=a.getHashTableHandleByName(r);if(null!=e)return e}const o=n.currentContextIds.find((e=>!!t[O(r,e)]));return void 0!==o?t[O(r,o)][s]:void 0}function F(e,t,n){return t[O(e,n.currentContextId)]}function D(e,t){const[n,a,r]=M(e,t);return[O(n,t&&t.currentContextId),a,r]}function O(e,t){return t?"".concat(e,"-").concat(t):e}function M(e,t){if(""===e)return["",0,void 0];const n=null!=t&&null!=t.parseNodeNameCache;if(n){const n=t.parseNodeNameCache.get(e);if(null!=n)return n}const a=e.split(":");let r;if(1===a.length)r=[e,0,void 0];else{const e=a[0],t=3===a.length?a[1]:void 0;r=[e,Number(a[a.length-1]),t]}return n&&t.parseNodeNameCache.set(e,r),r}function z(e,t,n){let a=A("pad",e,t,n);if("explicit"===a){a=A("explicitPaddings",e,t,n);const r=[[0,0],[0,0],[0,0],[0,0]];for(let e=0;e<4;e++)r[e][0]=a[2*e],r[e][1]=a[2*e+1];return r}return a}function L(e){return e.kept?e:(0,S.clone)(e)}const B=[{tfOpName:"Add",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddV2",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddN",category:"arithmetic",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"BiasAdd",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"Sub",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"RealDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Div",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"DivNoNan",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mul",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Maximum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Minimum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Pow",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SquaredDifference",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorMod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],P=[{tfOpName:"Abs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan2",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ceil",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ClipByValue",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"clipValueMin",type:"number"},{start:2,name:"clipValueMax",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Complex",category:"basic_math",inputs:[{start:0,name:"real",type:"tensor"},{start:1,name:"imag",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ComplexAbs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Elu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Exp",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Floor",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Imag",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Neg",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Real",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Prelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"alpha",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu6",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Selu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sigmoid",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Rsqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Square",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sign",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Round",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Expm1",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log1p",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Reciprocal",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Softplus",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Erf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LeakyRelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"alpha",name:"alpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsNan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsFinite",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsInf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],V=[{tfOpName:"EmptyTensorList",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"maxNumElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"LoopCond",category:"control",inputs:[{start:0,name:"pred",type:"tensor"}]},{tfOpName:"Switch",category:"control",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"pred",type:"tensor"}]},{tfOpName:"Merge",category:"control",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"Enter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"frame_name",name:"frameName",type:"string"},{tfName:"is_constant",name:"isConstant",type:"bool"}]},{tfOpName:"Exit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NextIteration",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayV3",category:"control",inputs:[{start:0,name:"size",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"dynamic_size",name:"dynamicSize",type:"bool"},{tfName:"clear_after_read",name:"clearAfterRead",type:"bool"},{tfName:"identical_element_shapes",name:"identicalElementShapes",type:"bool"},{tfName:"tensor_array_name",name:"name",type:"string"}]},{tfOpName:"TensorArrayWriteV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayReadV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayGatherV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"}]},{tfOpName:"TensorArrayScatterV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArrayConcatV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape_except0",name:"elementShapeExcept0",type:"shape",notSupported:!0}]},{tfOpName:"TensorArraySplitV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"tensor",type:"tensor"},{start:2,name:"lengths",type:"number[]"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArraySizeV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}]},{tfOpName:"TensorArrayCloseV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"}]},{tfOpName:"StatelessIf",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"If",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"StatelessWhile",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"While",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"TensorListScatter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListScatterV2",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"},{start:3,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGather",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListSetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListReserve",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListFromTensor",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListStack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"},{tfName:"num_elements",name:"numElements",type:"dtype"}]},{tfOpName:"TensorListSplit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"},{start:2,name:"lengths",type:"number[]"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcat",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcatV2",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPopBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPushBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListLength",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}]},{tfOpName:"TensorListResize",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"size",type:"number"}]}],W=[{tfOpName:"AvgPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[],notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPoolWithArgmax",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"include_batch_in_index",name:"includeBatchInIndex",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AvgPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Conv1D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"stride",name:"stride",type:"number"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NWC"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"dilation",name:"dilation",type:"number",defaultValue:1}]},{tfOpName:"Conv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"useCudnnOnGpu",name:"useCudnnOnGpu",type:"bool"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"_FusedConv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"use_cudnn_on_gpu",name:"useCudnnOnGpu",type:"bool",defaultValue:!0},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number",defaultValue:.2}]},{tfOpName:"Conv2DBackpropInput",category:"convolution",inputs:[{start:2,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:0,name:"outputShape",type:"number[]"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]",notSupported:!0}]},{tfOpName:"DepthwiseConv2d",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"DepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"FusedDepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]}]},{tfOpName:"Conv3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"Dilation2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"rates",name:"dilations",type:"number[]"},{tfName:"padding",name:"pad",type:"string"}]}],U=[{tfOpName:"Fill",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"},{start:1,name:"value",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"LinSpace",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"num",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"OneHot",category:"creation",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"depth",type:"number"},{start:2,name:"onValue",type:"number",defaultValue:1},{start:3,name:"offValue",type:"number",defaultValue:0}],attrs:[{tfName:"axis",name:"axis",type:"number",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Ones",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"OnesLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"RandomStandardNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"RandomUniform",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number",defaultValue:0},{tfName:"maxval",name:"maxval",type:"number",defaultValue:1},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"RandomUniformInt",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number"},{tfName:"maxval",name:"maxval",type:"number"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Range",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"step",type:"number",defaultValue:0}],attrs:[{tfName:"Tidx",name:"dtype",type:"dtype"}]},{tfOpName:"TruncatedNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"means",name:"mean",type:"number",defaultValue:0},{tfName:"stddev",name:"stdDev",type:"number",defaultValue:1},{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Zeros",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"ZerosLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Multinomial",category:"creation",inputs:[{start:0,name:"logits",type:"tensor"},{start:1,name:"numSamples",type:"number"}],attrs:[{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number"},{tfName:"T",name:"dtype",type:"dtype"},{tfName:"output_dtype",name:"output_dtype",type:"dtype"}]}],G=[{tfOpName:"NonMaxSuppressionV2",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV3",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV4",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"T_threshold",name:"threshold",type:"dtype",notSupported:!0},{tfName:"pad_to_max_output_size",name:"padToMaxOutputSize",type:"bool"}]},{tfOpName:"NonMaxSuppressionV5",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"},{start:5,name:"softNmsSigma",type:"number"}]},{tfOpName:"Where",category:"dynamic",inputs:[{start:0,name:"condition",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ListDiff",category:"dynamic",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],H=[{tfOpName:"LowerBound",category:"evaluation",inputs:[{start:0,name:"sortedSequence",type:"tensor"},{start:1,name:"values",type:"tensor"}]},{tfOpName:"TopKV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"k",type:"number"}],attrs:[{tfName:"sorted",name:"sorted",type:"bool"}]},{tfOpName:"UpperBound",category:"evaluation",inputs:[{start:0,name:"sortedSequence",type:"tensor"},{start:1,name:"values",type:"tensor"}]},{tfOpName:"Unique",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"UniqueV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]}],j=[{tfOpName:"PlaceholderWithDefault",category:"graph",inputs:[{start:0,name:"default",type:"tensor"}],attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Placeholder",category:"graph",attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Const",category:"graph"},{tfOpName:"Identity",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IdentityN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Snapshot",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Rank",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Size",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Shape",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"ShapeN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Print",category:"graph",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"data",type:"tensors"}],attrs:[{tfName:"message",name:"message",type:"string"},{tfName:"first_n",name:"firstN",type:"number",notSupported:!0},{tfName:"summarize",name:"summarize",type:"number",defaultValue:3}]},{tfOpName:"NoOp",category:"graph",inputs:[]},{tfOpName:"StopGradient",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"FakeQuantWithMinMaxVars",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"min",name:"min",type:"number"},{tfName:"max",name:"max",type:"number"}]}],q=[{tfOpName:"HashTable",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"HashTableV2",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"LookupTableImport",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableImportV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFind",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFindV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableSize",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"LookupTableSizeV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"InitializeTable",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}]},{tfOpName:"InitializeTableV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}]}],X=[{tfOpName:"ResizeBilinear",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ResizeNearestNeighbor",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"CropAndResize",category:"image",inputs:[{start:0,name:"image",type:"tensor"},{start:1,name:"boxes",type:"tensor"},{start:2,name:"boxInd",type:"tensor"},{start:3,name:"cropSize",type:"number[]"}],attrs:[{tfName:"method",name:"method",type:"string"},{tfName:"extrapolation_value",name:"extrapolationValue",type:"number"}]},{tfOpName:"ImageProjectiveTransformV3",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"transforms",type:"tensor"},{start:2,name:"outputShape",type:"number[]"},{start:3,name:"fillValue",type:"number"}],attrs:[{tfName:"interpolation",name:"interpolation",type:"string"},{tfName:"fill_mode",name:"fillMode",type:"string"}]}],K=[{tfOpName:"Equal",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NotEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Greater",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"GreaterEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Less",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LessEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalAnd",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalNot",category:"logical",inputs:[{start:0,name:"a",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalOr",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Select",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SelectV2",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BitwiseAnd",category:"logical",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}]}],Q=[{tfOpName:"_FusedMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMulV2",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Transpose",category:"matrices",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"perm",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Einsum",category:"matrices",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"equation",name:"equation",type:"string"},{tfName:"N",name:"n",type:"number",defaultValue:2},{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"MatrixBandPart",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"numLower",type:"tensor"},{start:1,name:"numUpper",type:"tensor"}]}],Y=[{tfOpName:"EuclideanNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool",defaultValue:!1}]},{tfOpName:"FusedBatchNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV2",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV3",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"LRN",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"depth_radius",name:"radius",type:"number",defaultValue:5},{tfName:"bias",name:"bias",type:"number",defaultValue:1},{tfName:"alpha",name:"alpha",type:"number",defaultValue:1},{tfName:"beta",name:"beta",type:"number",defaultValue:.5}]},{tfOpName:"Softmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"LogSoftmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]}],Z=[{tfOpName:"Bincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}]},{tfOpName:"DenseBincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}],attrs:[{tfName:"binary_output",name:"binaryOutput",type:"bool"}]},{tfOpName:"Max",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Mean",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Min",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Sum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"All",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Any",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"ArgMax",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"ArgMin",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"Prod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cumprod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]},{tfOpName:"Cumsum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]}],J=[{tfOpName:"ConcatV2",category:"slice_join",inputs:[{start:0,end:-1,name:"tensors",type:"tensors"},{start:-1,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"Concat",category:"slice_join",inputs:[{start:1,end:0,name:"tensors",type:"tensors"},{start:0,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"GatherV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"axis",type:"number",defaultValue:0}],attrs:[{tfName:"batch_dims",name:"batchDims",type:"number",defaultValue:0}]},{tfOpName:"Gather",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",notSupported:!0}]},{tfOpName:"Reverse",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"dims",type:"bool[]"}]},{tfOpName:"ReverseV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}]},{tfOpName:"Slice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"size",type:"number[]"}]},{tfOpName:"StridedSlice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"end",type:"number[]"},{start:3,name:"strides",type:"number[]"}],attrs:[{tfName:"begin_mask",name:"beginMask",type:"number",defaultValue:0},{tfName:"end_mask",name:"endMask",type:"number",defaultValue:0},{tfName:"new_axis_mask",name:"newAxisMask",type:"number",defaultValue:0},{tfName:"ellipsis_mask",name:"ellipsisMask",type:"number",defaultValue:0},{tfName:"shrink_axis_mask",name:"shrinkAxisMask",type:"number",defaultValue:0}]},{tfOpName:"Pack",category:"slice_join",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0}]},{tfOpName:"Unpack",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0},{tfName:"num",name:"num",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Tile",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"reps",type:"number[]"}]},{tfOpName:"Split",category:"slice_join",inputs:[{start:0,name:"axis",type:"number",defaultValue:0},{start:1,name:"x",type:"tensor"}],attrs:[{tfName:"num_split",name:"numOrSizeSplits",type:"number",defaultValue:1}]},{tfOpName:"SplitV",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"numOrSizeSplits",type:"number[]"},{start:2,name:"axis",type:"number",defaultValue:0}]},{tfOpName:"ScatterNd",category:"slice_join",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"shape",type:"number[]"}]},{tfOpName:"GatherNd",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}]},{tfOpName:"SparseToDense",category:"slice_join",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!1,notSupported:!0}]},{tfOpName:"TensorScatterUpdate",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"values",type:"tensor"}]}],$=[{tfOpName:"SparseFillEmptyRows",category:"sparse",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"denseShape",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}]},{tfOpName:"SparseReshape",category:"sparse",inputs:[{start:0,name:"inputIndices",type:"tensor"},{start:1,name:"inputShape",type:"tensor"},{start:2,name:"newShape",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SparseSegmentMean",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]},{tfOpName:"SparseSegmentSum",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]}],ee=[{tfOpName:"FFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"RFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]},{tfOpName:"IRFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]}],te=[{tfOpName:"StaticRegexReplace",category:"string",inputs:[{start:0,name:"input",type:"tensor"}],attrs:[{tfName:"pattern",name:"pattern",type:"string"},{tfName:"rewrite",name:"rewrite",type:"string"},{tfName:"replace_global",name:"replaceGlobal",type:"bool"}]},{tfOpName:"StringNGrams",category:"string",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"dataSplits",type:"tensor"}],attrs:[{tfName:"separator",name:"separator",type:"string"},{tfName:"ngram_widths",name:"nGramWidths",type:"number[]"},{tfName:"left_pad",name:"leftPad",type:"string"},{tfName:"right_pad",name:"rightPad",type:"string"},{tfName:"pad_width",name:"padWidth",type:"number"},{tfName:"preserve_short_sequences",name:"preserveShortSequences",type:"bool"}],outputs:["ngrams","ngrams_splits"]},{tfOpName:"StringSplit",category:"string",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"delimiter",type:"tensor"}],attrs:[{tfName:"skip_empty",name:"skipEmpty",type:"bool"}],outputs:["indices","values","shape"]},{tfOpName:"StringToHashBucketFast",category:"string",inputs:[{start:0,name:"input",type:"tensor"}],attrs:[{tfName:"num_buckets",name:"numBuckets",type:"number"}]}],ne=[{tfOpName:"Cast",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"SrcT",name:"sdtype",type:"dtype",notSupported:!0},{tfName:"DstT",name:"dtype",type:"dtype"}]},{tfOpName:"ExpandDims",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"MirrorPad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"mode",name:"mode",type:"string"}]},{tfOpName:"Pad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"constant_value",name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"PadV2",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"},{start:2,name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"Reshape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"EnsureShape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"Squeeze",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"axis",tfDeprecatedName:"squeeze_dims",name:"axis",type:"number[]"}]},{tfOpName:"SpaceToBatchND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"paddings",type:"number[]"}]},{tfOpName:"BatchToSpaceND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"crops",type:"number[]"}]},{tfOpName:"DepthToSpace",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"block_size",name:"blockSize",type:"number"},{tfName:"data_format",name:"dataFormat",type:"string"}]},{tfOpName:"BroadcastTo",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}],attrs:[]},{tfOpName:"BroadcastArgs",category:"transformation",inputs:[{start:0,name:"s0",type:"tensor"},{start:1,name:"s1",type:"tensor"}],attrs:[]}];class ae{static get Instance(){return this._instance||(this._instance=new this)}constructor(){const e=[].concat(...[a,r,s,o,i,c,l,u,d,h,p,f,m,g,y,b,v,x,w].map((e=>e.json)));this.opMappers=e.reduce(((e,t)=>(e[t.tfOpName]=t,e)),{})}transformGraph(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};const n=e.node,a=[],r=[],s=[],o=n.reduce(((e,t)=>(e[t.name]=this.mapNode(t),t.op.startsWith("Placeholder")?a.push(e[t.name]):"Const"===t.op?r.push(e[t.name]):null!=t.input&&0!==t.input.length||s.push(e[t.name]),e)),{});let i=[];const c=[];let l={},u={};null!=t&&(l=this.mapSignatureEntries(t.inputs),u=this.mapSignatureEntries(t.outputs));const d=Object.keys(o);d.forEach((e=>{const t=o[e];t.inputNames.forEach(((e,n)=>{const[a,,r]=D(e),s=o[a];if(null!=s.outputs){const e=s.outputs.indexOf(r);if(-1!==e){const r="".concat(a,":").concat(e);t.inputNames[n]=r}}t.inputs.push(s),s.children.push(t)}))})),0===Object.keys(u).length?d.forEach((e=>{const t=o[e];0===t.children.length&&c.push(t)})):Object.keys(u).forEach((e=>{const[t]=D(e),n=o[t];null!=n&&(n.signatureKey=u[e],c.push(n))})),Object.keys(l).length>0?Object.keys(l).forEach((e=>{const[t]=D(e),n=o[t];n&&(n.signatureKey=l[e],i.push(n))})):i=a;let h={};null!=e.library&&null!=e.library.function&&(h=e.library.function.reduce(((e,t)=>(e[t.signature.name]=this.mapFunction(t),e)),{}));const p={nodes:o,inputs:i,outputs:c,weights:r,placeholders:a,signature:t,functions:h};return s.length>0&&(p.initNodes=s),p}mapSignatureEntries(e){return Object.keys(e||{}).reduce(((t,n)=>(t[e[n].name]=n,t)),{})}mapNode(e){const t=E(e.op)||this.opMappers[e.op]||{};null==e.attr&&(e.attr={});const n={name:e.name,op:e.op,category:t.category,inputNames:(e.input||[]).map((e=>e.startsWith("^")?e.slice(1):e)),inputs:[],children:[],inputParams:{},attrParams:{},rawAttrs:e.attr,outputs:t.outputs};return null!=t.inputs&&(n.inputParams=t.inputs.reduce(((e,t)=>(e[t.name]={type:t.type,inputIndexStart:t.start,inputIndexEnd:t.end},e)),{})),null!=t.attrs&&(n.attrParams=t.attrs.reduce(((t,n)=>{const a=n.type;let r;switch(n.type){case"string":r=se(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=se(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"string[]":r=me(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=me(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"number":r=ie(e.attr,n.tfName,n.defaultValue||0),void 0===r&&n.tfDeprecatedName&&(r=ie(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"number[]":r=fe(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=fe(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"bool":r=oe(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=oe(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"bool[]":r=ye(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=ye(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"shape":r=pe(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=pe(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"shape[]":r=ge(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=ge(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"dtype":r=ue(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=ue(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"dtype[]":r=de(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=de(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"func":r=le(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=le(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"tensor":case"tensors":break;default:throw new Error("Unsupported param type: ".concat(n.type," for op: ").concat(e.op))}return t[n.name]={value:r,type:a},t}),{})),n}mapFunction(e){const t=e.nodeDef,n=[];let a={};null!=t&&(a=t.reduce(((e,t)=>(e[t.name]=this.mapNode(t),"Const"===t.op&&n.push(e[t.name]),e)),{}));const r=[],s=[];e.signature.inputArg.forEach((e=>{const[t]=D(e.name),n={name:t,op:"Placeholder",inputs:[],inputNames:[],category:"graph",inputParams:{},attrParams:{dtype:{value:ce(e.type),type:"dtype"}},children:[]};n.signatureKey=e.name,r.push(n),a[t]=n}));Object.keys(a).forEach((e=>{const t=a[e];t.inputNames.forEach(((e,n)=>{const[r,,s]=D(e),o=a[r];if(null!=o.outputs){const e=o.outputs.indexOf(s);if(-1!==e){const a="".concat(r,":").concat(e);t.inputNames[n]=a}}t.inputs.push(o),o.children.push(t)}))}));const o=e.ret;e.signature.outputArg.forEach((e=>{const[t,n]=D(o[e.name]),r=a[t];null!=r&&(r.defaultOutput=n,s.push(r))}));const i=this.mapArgsToSignature(e);return{nodes:a,inputs:r,outputs:s,weights:n,placeholders:[],signature:i}}mapArgsToSignature(e){return{methodName:e.signature.name,inputs:e.signature.inputArg.reduce(((e,t)=>(e[t.name]=this.mapArgToTensorInfo(t),e)),{}),outputs:e.signature.outputArg.reduce(((t,n)=>(t[n.name]=this.mapArgToTensorInfo(n,e.ret),t)),{})}}mapArgToTensorInfo(e,t){let n=e.name;return null!=t&&(n=t[n]),{name:n,dtype:e.type}}}function re(e,t){const n=Array.isArray(e)?String.fromCharCode.apply(null,e):function(e){const t=(0,S.env)().global;if("undefined"!==typeof t.atob)return t.atob(e);if("undefined"!==typeof Buffer)return new Buffer(e,"base64").toString();throw new Error("Unable to decode base64 in this environment. Missing built-in atob() or Buffer()")}(e);return t?n:n.toLowerCase()}function se(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const r=e[t];return null!=r?re(r.s,a):n}function oe(e,t,n){const a=e[t];return a?a.b:n}function ie(e,t,n){const a=e[t]||{},r=null!=a.i?a.i:null!=a.f?a.f:n;return"number"===typeof r?r:parseInt(r,10)}function ce(e){switch("string"===typeof e&&(e=N[e]),e){case N.DT_FLOAT:case N.DT_HALF:return"float32";case N.DT_INT32:case N.DT_INT64:case N.DT_INT8:case N.DT_UINT8:return"int32";case N.DT_BOOL:return"bool";case N.DT_DOUBLE:return"float32";case N.DT_STRING:return"string";case N.DT_COMPLEX64:case N.DT_COMPLEX128:return"complex64";default:return null}}function le(e,t,n){const a=e[t];return a&&a.func?a.func.name:n}function ue(e,t,n){const a=e[t];return a&&a.type?ce(a.type):n}function de(e,t,n){const a=e[t];return a&&a.list&&a.list.type?a.list.type.map((e=>ce(e))):n}function he(e){if(!e.unknownRank)return null!=e.dim?e.dim.map((e=>"number"===typeof e.size?e.size:parseInt(e.size,10))):[]}function pe(e,t,n){const a=e[t];return a&&a.shape?he(a.shape):n}function fe(e,t,n){const a=e[t];return a?((a.list.f&&a.list.f.length?a.list.f:a.list.i)||[]).map((e=>"number"===typeof e?e:parseInt(e,10))):n}function me(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const r=e[t];return r&&r.list&&r.list.s?r.list.s.map((e=>re(e,a))):n}function ge(e,t,n){const a=e[t];return a&&a.list&&a.list.shape?a.list.shape.map((e=>he(e))):n}function ye(e,t,n){const a=e[t];return a&&a.list&&a.list.b?a.list.b:n}class be{constructor(e,t,n){this.node=e,this.tensorMap=t,this.context=n,this.inputs=[],this.attrs={},this.inputs=e.inputNames.map((e=>this.getInput(e))),null!=e.rawAttrs&&(this.attrs=Object.keys(e.rawAttrs).reduce(((e,t)=>(e[t]=this.getAttr(t),e)),{}))}getInput(e){return R(e,this.tensorMap,this.context)}getAttr(e,t){const n=this.node.rawAttrs[e];if(null!=n.tensor)return R(e,this.tensorMap,this.context);if(null!=n.i||null!=n.f)return ie(this.node.rawAttrs,e,t);if(null!=n.s)return se(this.node.rawAttrs,e,t);if(null!=n.b)return oe(this.node.rawAttrs,e,t);if(null!=n.shape)return pe(this.node.rawAttrs,e,t);if(null!=n.type)return ue(this.node.rawAttrs,e,t);if(null!=n.list){if(null!=n.list.i||null!=n.list.f)return fe(this.node.rawAttrs,e,t);if(null!=n.list.s)return me(this.node.rawAttrs,e,t);if(null!=n.list.shape)return ge(this.node.rawAttrs,e,t);if(null!=n.list.b)return ye(this.node.rawAttrs,e,t);if(null!=n.list.type)return de(this.node.rawAttrs,e,t)}return t}}var ve=n(9503);const xe=function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:k;switch(e.op){case"BiasAdd":case"AddV2":case"Add":return[a.add(A("a",e,t,n),A("b",e,t,n))];case"AddN":return[a.addN(A("tensors",e,t,n))];case"FloorMod":case"Mod":return[a.mod(A("a",e,t,n),A("b",e,t,n))];case"Mul":return[a.mul(A("a",e,t,n),A("b",e,t,n))];case"RealDiv":case"Div":return[a.div(A("a",e,t,n),A("b",e,t,n))];case"DivNoNan":return[a.divNoNan(A("a",e,t,n),A("b",e,t,n))];case"FloorDiv":return[a.floorDiv(A("a",e,t,n),A("b",e,t,n))];case"Sub":return[a.sub(A("a",e,t,n),A("b",e,t,n))];case"Minimum":return[a.minimum(A("a",e,t,n),A("b",e,t,n))];case"Maximum":return[a.maximum(A("a",e,t,n),A("b",e,t,n))];case"Pow":return[a.pow(A("a",e,t,n),A("b",e,t,n))];case"SquaredDifference":return[a.squaredDifference(A("a",e,t,n),A("b",e,t,n))];default:throw TypeError("Node type ".concat(e.op," is not implemented"))}},we=function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:k;switch(e.op){case"Abs":case"ComplexAbs":return[a.abs(A("x",e,t,n))];case"Acos":return[a.acos(A("x",e,t,n))];case"Acosh":return[a.acosh(A("x",e,t,n))];case"Asin":return[a.asin(A("x",e,t,n))];case"Asinh":return[a.asinh(A("x",e,t,n))];case"Atan":return[a.atan(A("x",e,t,n))];case"Atan2":return[a.atan2(A("x",e,t,n),A("y",e,t,n))];case"Atanh":return[a.atanh(A("x",e,t,n))];case"Ceil":return[a.ceil(A("x",e,t,n))];case"Complex":return[a.complex(A("real",e,t,n),A("imag",e,t,n))];case"Cos":return[a.cos(A("x",e,t,n))];case"Cosh":return[a.cosh(A("x",e,t,n))];case"Elu":return[a.elu(A("x",e,t,n))];case"Erf":return[a.erf(A("x",e,t,n))];case"Exp":return[a.exp(A("x",e,t,n))];case"Expm1":return[a.expm1(A("x",e,t,n))];case"Floor":return[a.floor(A("x",e,t,n))];case"Log":return[a.log(A("x",e,t,n))];case"Log1p":return[a.log1p(A("x",e,t,n))];case"Imag":return[a.imag(A("x",e,t,n))];case"Neg":return[a.neg(A("x",e,t,n))];case"Reciprocal":return[a.reciprocal(A("x",e,t,n))];case"Real":return[a.real(A("x",e,t,n))];case"Relu":return[a.relu(A("x",e,t,n))];case"Round":return[a.round(A("x",e,t,n))];case"Selu":return[a.selu(A("x",e,t,n))];case"Sigmoid":return[a.sigmoid(A("x",e,t,n))];case"Sin":return[a.sin(A("x",e,t,n))];case"Sign":return[a.sign(A("x",e,t,n))];case"Sinh":return[a.sinh(A("x",e,t,n))];case"Softplus":return[a.softplus(A("x",e,t,n))];case"Sqrt":return[a.sqrt(A("x",e,t,n))];case"Square":return[a.square(A("x",e,t,n))];case"Tanh":return[a.tanh(A("x",e,t,n))];case"Tan":return[a.tan(A("x",e,t,n))];case"ClipByValue":return[a.clipByValue(A("x",e,t,n),A("clipValueMin",e,t,n),A("clipValueMax",e,t,n))];case"Relu6":return[a.relu6(A("x",e,t,n))];case"Rsqrt":return[a.rsqrt(R(e.inputNames[0],t,n))];case"LeakyRelu":return[a.leakyRelu(A("x",e,t,n),A("alpha",e,t,n))];case"Prelu":return[a.prelu(A("x",e,t,n),A("alpha",e,t,n))];case"IsNan":return[a.isNaN(R(e.inputNames[0],t,n))];case"IsInf":return[a.isInf(R(e.inputNames[0],t,n))];case"IsFinite":return[a.isFinite(R(e.inputNames[0],t,n))];default:throw TypeError("Node type ".concat(e.op," is not implemented"))}};function ke(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"";if("number"!==typeof e&&"number"!==typeof t){S.util.assert(e.length===t.length,(()=>n+" Shapes ".concat(e," and ").concat(t," must match")));for(let a=0;a<e.length;a++){const r=e[a],s=t[a];S.util.assert(r<0||s<0||r===s,(()=>n+" Shapes ".concat(e," and ").concat(t," must match")))}}}function Se(e){return"number"!==typeof e&&!e.some((e=>e<0))}function Ne(e,t,n){let a=Ie(e,n);const r=!Se(a);if(r&&0===t.length)throw new Error("Tried to calculate elements of an empty list"+" with non-fully-defined elementShape: ".concat(a));if(r&&t.forEach((e=>{a=Ie(e.shape,a)})),!Se(a))throw new Error("Non-fully-defined elementShape: ".concat(a));return a}function Ie(e,t){if("number"===typeof e)return t;if("number"===typeof t)return e;if(e.length!==t.length)throw new Error("Incompatible ranks during merge: ".concat(e," vs. ").concat(t));const n=[];for(let a=0;a<e.length;++a){const r=e[a],s=t[a];if(r>=0&&s>=0&&r!==s)throw new Error("Incompatible shape during merge: ".concat(e," vs. ").concat(t));n[a]=r>=0?r:s}return n}class Te{constructor(e,t,n,a,r,s,o){this.name=e,this.dtype=t,this.maxSize=n,this.elementShape=a,this.identicalElementShapes=r,this.dynamicSize=s,this.clearAfterRead=o,this.tensors=[],this.closed_=!1,this.idTensor=(0,S.scalar)(0),(0,S.keep)(this.idTensor)}get id(){return this.idTensor.id}get closed(){return this.closed_}clearAndClose(e){this.tensors.forEach((t=>{null!=e&&e.has(t.tensor.id)||t.tensor.dispose()})),this.tensors=[],this.closed_=!0,this.idTensor.dispose()}size(){return this.tensors.length}read(e){if(this.closed_)throw new Error("TensorArray ".concat(this.name," has already been closed."));if(e<0||e>=this.size())throw new Error("Tried to read from index ".concat(e,", but array size is: ").concat(this.size()));const t=this.tensors[e];if(t.cleared)throw new Error("TensorArray ".concat(this.name,": Could not read index ").concat(e," twice because it was cleared after a previous read ")+"(perhaps try setting clear_after_read = false?).");return this.clearAfterRead&&(t.cleared=!0),t.read=!0,t.tensor}readMany(e){return e.map((e=>this.read(e)))}write(e,t){if(this.closed_)throw new Error("TensorArray ".concat(this.name," has already been closed."));if(e<0||!this.dynamicSize&&e>=this.maxSize)throw new Error("Tried to write to index ".concat(e,", but array is not resizeable and size is: ").concat(this.maxSize));const n=this.tensors[e]||{};if(t.dtype!==this.dtype)throw new Error("TensorArray ".concat(this.name,": Could not write to TensorArray index ").concat(e,",\n          because the value dtype is ").concat(t.dtype,", but TensorArray dtype is ").concat(this.dtype,"."));if(0!==this.size()||null!=this.elementShape&&0!==this.elementShape.length||(this.elementShape=t.shape),ke(this.elementShape,t.shape,"TensorArray ".concat(this.name,": Could not write to TensorArray index ").concat(e,".")),n.read)throw new Error("TensorArray ".concat(this.name,": Could not write to TensorArray index ").concat(e,", because it has already been read."));if(n.written)throw new Error("TensorArray ".concat(this.name,": Could not write to TensorArray index ").concat(e,", because it has already been written."));n.tensor=t,(0,S.keep)(t),n.written=!0,this.tensors[e]=n}writeMany(e,t){if(e.length!==t.length)throw new Error("TensorArray ".concat(this.name,": could not write multiple tensors,")+"because the index size: ".concat(e.length," is not the same as tensors size: ").concat(t.length,"."));e.forEach(((e,n)=>this.write(e,t[n])))}gather(e,t){if(t&&t!==this.dtype)throw new Error("TensorArray dtype is ".concat(this.dtype," but gather requested dtype ").concat(t));if(e)e=e.slice(0,this.size());else{e=[];for(let t=0;t<this.size();t++)e.push(t)}if(0===e.length)return(0,S.tensor)([],[0].concat(this.elementShape));const n=this.readMany(e);return ke(this.elementShape,n[0].shape,"TensorArray shape mismatch: "),(0,S.stack)(n,0)}concat(e){if(e&&e!==this.dtype)throw new Error("TensorArray dtype is ".concat(this.dtype," but concat requested dtype ").concat(e));if(0===this.size())return(0,S.tensor)([],[0].concat(this.elementShape));const t=[];for(let a=0;a<this.size();a++)t.push(a);const n=this.readMany(t);return ke(this.elementShape,n[0].shape,"TensorArray shape mismatch: tensor array shape (".concat(this.elementShape,") vs first tensor shape (").concat(n[0].shape,")")),(0,S.concat)(n,0)}scatter(e,t){if(t.dtype!==this.dtype)throw new Error("TensorArray dtype is ".concat(this.dtype," but tensor has dtype ").concat(t.dtype));if(e.length!==t.shape[0])throw new Error("Expected len(indices) == tensor.shape[0], but saw: ".concat(e.length," vs. ").concat(t.shape[0]));const n=Math.max(...e);if(!this.dynamicSize&&n>=this.maxSize)throw new Error("Max index must be < array size (".concat(n,"  vs. ").concat(this.maxSize,")"));this.writeMany(e,(0,S.unstack)(t,0))}split(e,t){if(t.dtype!==this.dtype)throw new Error("TensorArray dtype is ".concat(this.dtype," but tensor has dtype ").concat(t.dtype));let n=0;const a=e.map((e=>(n+=e,n)));if(n!==t.shape[0])throw new Error("Expected sum of lengths to be equal to\n          tensor.shape[0], but sum of lengths is\n        ".concat(n,", and tensor's shape is: ").concat(t.shape));if(!this.dynamicSize&&e.length!==this.maxSize)throw new Error("TensorArray's size is not equal to the size of lengths (".concat(this.maxSize," vs. ").concat(e.length,"), ")+"and the TensorArray is not marked as dynamically resizeable");const r=0===n?0:t.size/n,s=[];(0,S.tidy)((()=>{t=(0,S.reshape)(t,[1,n,r]);for(let n=0;n<e.length;++n){const o=[0,0===n?0:a[n-1],0],i=[1,e[n],r];s[n]=(0,S.reshape)((0,S.slice)(t,o,i),this.elementShape)}return s}));const o=[];for(let i=0;i<e.length;i++)o[i]=i;this.writeMany(o,s)}}class Ce{get id(){return this.idTensor.id}constructor(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:-1;this.tensors=e,this.elementShape=t,this.elementDtype=n,null!=e&&e.forEach((e=>{if(n!==e.dtype)throw new Error("Invalid data types; op elements ".concat(n,", but list elements ").concat(e.dtype));ke(t,e.shape,"TensorList shape mismatch: "),(0,S.keep)(e)})),this.idTensor=(0,S.scalar)(0),this.maxNumElements=a,(0,S.keep)(this.idTensor)}copy(){return new Ce([...this.tensors],this.elementShape,this.elementDtype)}clearAndClose(e){this.tensors.forEach((t=>{null!=e&&e.has(t.id)||t.dispose()})),this.tensors.length=0,this.idTensor.dispose()}size(){return this.tensors.length}stack(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:-1;if(t!==this.elementDtype)throw new Error("Invalid data types; op elements ".concat(t,", but list elements ").concat(this.elementDtype));if(-1!==n&&this.tensors.length!==n)throw new Error("Operation expected a list with ".concat(n," elements but got a list with ").concat(this.tensors.length," elements."));ke(e,this.elementShape,"TensorList shape mismatch: ");const a=Ne(this.elementShape,this.tensors,e);return(0,S.tidy)((()=>{const e=this.tensors.map((e=>(0,S.reshape)(e,a)));return(0,S.stack)(e,0)}))}popBack(e,t){if(t!==this.elementDtype)throw new Error("Invalid data types; op elements ".concat(t,", but list elements ").concat(this.elementDtype));if(0===this.size())throw new Error("Trying to pop from an empty list.");const n=Ne(this.elementShape,this.tensors,e),a=this.tensors.pop();return a.kept=!1,ke(a.shape,e,"TensorList shape mismatch: "),(0,S.reshape)(a,n)}pushBack(e){if(e.dtype!==this.elementDtype)throw new Error("Invalid data types; op elements ".concat(e.dtype,", but list elements ").concat(this.elementDtype));if(ke(e.shape,this.elementShape,"TensorList shape mismatch: "),this.maxNumElements===this.size())throw new Error("Trying to push element into a full list.");(0,S.keep)(e),this.tensors.push(e)}resize(e){if(e<0)throw new Error("TensorListResize expects size to be non-negative. Got: ".concat(e));if(-1!==this.maxNumElements&&e>this.maxNumElements)throw new Error("TensorListResize input size ".concat(e," is greater maxNumElement ").concat(this.maxNumElements,"."));const t=new Ce([],this.elementShape,this.elementDtype,this.maxNumElements);t.tensors.length=e;for(let n=0;n<Math.min(this.tensors.length,e);++n)t.tensors[n]=this.tensors[n];return t}getItem(e,t,n){if(n!==this.elementDtype)throw new Error("Invalid data types; op elements ".concat(n,", but list elements ").concat(this.elementDtype));if(e<0||e>this.tensors.length)throw new Error("Trying to access element ".concat(e," in a list with ").concat(this.tensors.length," elements."));if(null==this.tensors[e])throw new Error("element at index ".concat(e," is null."));ke(this.tensors[e].shape,t,"TensorList shape mismatch: ");const a=Ne(this.elementShape,this.tensors,t);return(0,S.reshape)(this.tensors[e],a)}setItem(e,t){if(t.dtype!==this.elementDtype)throw new Error("Invalid data types; op elements ".concat(t.dtype,", but list elements ").concat(this.elementDtype));if(e<0||-1!==this.maxNumElements&&e>=this.maxNumElements)throw new Error("Trying to set element ".concat(e," in a list with max ").concat(this.maxNumElements," elements."));ke(this.elementShape,t.shape,"TensorList shape mismatch: "),(0,S.keep)(t),null!=this.tensors[e]&&(this.tensors[e].kept=!1),this.tensors[e]=t}gather(e,t,n){if(t!==this.elementDtype)throw new Error("Invalid data types; op elements ".concat(t,", but list elements ").concat(this.elementDtype));ke(this.elementShape,n,"TensorList shape mismatch: "),e=e.slice(0,this.size());const a=Ne(this.elementShape,this.tensors,n);return 0===e.length?(0,S.tensor)([],[0].concat(a)):(0,S.tidy)((()=>{const t=e.map((e=>(0,S.reshape)(this.tensors[e],a)));return(0,S.stack)(t,0)}))}concat(e,t){if(e&&e!==this.elementDtype)throw new Error("TensorList dtype is ".concat(this.elementDtype," but concat requested dtype ").concat(e));ke(this.elementShape,t,"TensorList shape mismatch: ");const n=Ne(this.elementShape,this.tensors,t);return 0===this.size()?(0,S.tensor)([],[0].concat(n)):(0,S.tidy)((()=>{const e=this.tensors.map((e=>(0,S.reshape)(e,n)));return(0,S.concat)(e,0)}))}}const Ee=async(e,t,n)=>{switch(e.op){case"If":case"StatelessIf":{const a=A("thenBranch",e,t,n),r=A("elseBranch",e,t,n),s=A("cond",e,t,n),o=A("args",e,t,n);return(await s.data())[0]?n.functionMap[a].executeFunctionAsync(o,n.tensorArrayMap,n.tensorListMap):n.functionMap[r].executeFunctionAsync(o,n.tensorArrayMap,n.tensorListMap)}case"While":case"StatelessWhile":{const a=A("body",e,t,n),r=A("cond",e,t,n),s=A("args",e,t,n),o=await n.functionMap[r].executeFunctionAsync(s,n.tensorArrayMap,n.tensorListMap),i=s.map((e=>e.id));let c=await o[0].data();o.forEach((e=>{e.kept||-1!==i.indexOf(e.id)||e.dispose()}));let l=s;for(;c[0];){const e=l;l=await n.functionMap[a].executeFunctionAsync(l,n.tensorArrayMap,n.tensorListMap);const t=l.map((e=>e.id));e.forEach((e=>{e.kept||-1!==i.indexOf(e.id)||-1!==t.indexOf(e.id)||e.dispose()}));const s=await n.functionMap[r].executeFunctionAsync(l,n.tensorArrayMap,n.tensorListMap);c=await s[0].data(),s.forEach((e=>{e.kept||-1!==i.indexOf(e.id)||-1!==t.indexOf(e.id)||e.dispose()}))}return l}case"LoopCond":return[L(A("pred",e,t,n))];case"Switch":{const a=A("pred",e,t,n);let r=A("data",e,t,n);return r.kept||(r=L(r)),(await a.data())[0]?[void 0,r]:[r,void 0]}case"Merge":{const a=e.inputNames.find((e=>void 0!==R(e,t,n)));if(a){return[L(R(a,t,n))]}return}case"Enter":{const a=A("frameName",e,t,n),r=A("tensor",e,t,n);return n.enterFrame(a),[L(r)]}case"Exit":{const a=A("tensor",e,t,n);return n.exitFrame(),[L(a)]}case"NextIteration":{const a=A("tensor",e,t,n);return n.nextIteration(),[L(a)]}case"TensorArrayV3":{const a=A("size",e,t,n),r=A("dtype",e,t,n),s=A("elementShape",e,t,n),o=A("dynamicSize",e,t,n),i=A("clearAfterRead",e,t,n),c=A("identicalElementShapes",e,t,n),l=A("name",e,t,n),u=new Te(l,r,a,s,c,o,i);return n.addTensorArray(u),[u.idTensor,(0,S.scalar)(1)]}case"TensorArrayWriteV3":{const a=A("tensorArrayId",e,t,n),r=A("index",e,t,n),s=A("tensor",e,t,n),o=n.getTensorArray(a.id);return o.write(r,s),[o.idTensor]}case"TensorArrayReadV3":{const a=A("tensorArrayId",e,t,n),r=A("index",e,t,n);return[n.getTensorArray(a.id).read(r)]}case"TensorArrayGatherV3":{const a=A("tensorArrayId",e,t,n),r=A("indices",e,t,n),s=A("dtype",e,t,n);return[n.getTensorArray(a.id).gather(r,s)]}case"TensorArrayScatterV3":{const a=A("tensorArrayId",e,t,n),r=A("indices",e,t,n),s=A("tensor",e,t,n),o=n.getTensorArray(a.id);return o.scatter(r,s),[o.idTensor]}case"TensorArrayConcatV3":{const a=A("tensorArrayId",e,t,n),r=n.getTensorArray(a.id),s=A("dtype",e,t,n);return[r.concat(s)]}case"TensorArraySplitV3":{const a=A("tensorArrayId",e,t,n),r=A("tensor",e,t,n),s=A("lengths",e,t,n),o=n.getTensorArray(a.id);return o.split(s,r),[o.idTensor]}case"TensorArraySizeV3":{const a=A("tensorArrayId",e,t,n),r=n.getTensorArray(a.id);return[(0,S.scalar)(r.size(),"int32")]}case"TensorArrayCloseV3":{const a=A("tensorArrayId",e,t,n),r=n.getTensorArray(a.id);return r.clearAndClose(),[r.idTensor]}case"TensorListSetItem":{const a=A("tensorListId",e,t,n),r=A("index",e,t,n),s=A("tensor",e,t,n),o=n.getTensorList(a.id);return o.setItem(r,s),[o.idTensor]}case"TensorListGetItem":{const a=A("tensorListId",e,t,n),r=A("index",e,t,n),s=A("elementShape",e,t,n),o=A("elementDType",e,t,n);return[n.getTensorList(a.id).getItem(r,s,o)]}case"TensorListScatterV2":case"TensorListScatter":{const a=A("indices",e,t,n),r=function(e,t,n,a){if(t.length!==e.shape[0])throw new Error("Expected len(indices) == tensor.shape[0], but saw: ".concat(t.length," vs. ").concat(e.shape[0]));const r=Math.max(...t);if(null!=a&&-1!==a&&r>=a)throw new Error("Max index must be < array size (".concat(r,"  vs. ").concat(a,")"));const s=new Ce([],n,e.dtype,a),o=(0,S.unstack)(e,0);return t.forEach(((e,t)=>{s.setItem(e,o[t])})),s}(A("tensor",e,t,n),a,A("elementShape",e,t,n),A("numElements",e,t,n));return n.addTensorList(r),[r.idTensor]}case"TensorListReserve":case"EmptyTensorList":{const a=A("elementShape",e,t,n),r=A("elementDType",e,t,n);let s;s="TensorListReserve"===e.op?"numElements":"maxNumElements";const o=A(s,e,t,n),i=function(e,t,n,a){return new Ce([],e,t,a)}(a,r,0,"TensorListReserve"===e.op?-1:o);return n.addTensorList(i),[i.idTensor]}case"TensorListGather":{const a=A("tensorListId",e,t,n),r=A("indices",e,t,n),s=A("elementShape",e,t,n),o=A("elementDType",e,t,n);return[n.getTensorList(a.id).gather(r,o,s)]}case"TensorListStack":{const a=A("tensorListId",e,t,n),r=A("elementShape",e,t,n),s=A("elementDType",e,t,n),o=A("numElements",e,t,n);return[n.getTensorList(a.id).stack(r,s,o)]}case"TensorListFromTensor":{const a=function(e,t,n){const a=e.dtype;if(e.shape.length<1)throw new Error("Tensor must be at least a vector, but saw shape: ".concat(e.shape));if(e.dtype!==n)throw new Error("Invalid data types; op elements ".concat(e.dtype,", but list elements ").concat(n));ke(e.shape.slice(1),t,"TensorList shape mismatch: ");const r=(0,S.unstack)(e);return new Ce(r,t,a)}(A("tensor",e,t,n),A("elementShape",e,t,n),A("elementDType",e,t,n));return n.addTensorList(a),[a.idTensor]}case"TensorListConcat":case"TensorListConcatV2":{const a=A("tensorListId",e,t,n),r=n.getTensorList(a.id),s=A("dtype",e,t,n),o=A("elementShape",e,t,n);return[r.concat(s,o)]}case"TensorListPushBack":{const a=A("tensorListId",e,t,n),r=A("tensor",e,t,n),s=n.getTensorList(a.id);return s.pushBack(r),[s.idTensor]}case"TensorListPopBack":{const a=A("tensorListId",e,t,n),r=A("elementShape",e,t,n),s=A("elementDType",e,t,n);return[n.getTensorList(a.id).popBack(r,s)]}case"TensorListSplit":{const a=A("tensor",e,t,n),r=A("elementShape",e,t,n),s=function(e,t,n){let a=0;const r=t.map((e=>(a+=e,a)));if(a!==e.shape[0])throw new Error("Expected sum of lengths to be equal to\n          tensor.shape[0], but sum of lengths is\n        ".concat(a,", and tensor's shape is: ").concat(e.shape));const s=Ie(e.shape.slice(1),n),o=0===a?0:e.size/a,i=(0,S.tidy)((()=>{const n=[];e=(0,S.reshape)(e,[1,a,o]);for(let a=0;a<t.length;++a){const i=[0,0===a?0:r[a-1],0],c=[1,t[a],o];n[a]=(0,S.reshape)((0,S.slice)(e,i,c),s)}return e.dispose(),n})),c=new Ce([],n,e.dtype,t.length);for(let l=0;l<i.length;l++)c.setItem(l,i[l]);return c}(a,A("lengths",e,t,n),r);return n.addTensorList(s),[s.idTensor]}case"TensorListLength":{const a=A("tensorListId",e,t,n),r=n.getTensorList(a.id);return[(0,S.scalar)(r.size(),"int32")]}case"TensorListResize":{const a=A("tensorListId",e,t,n),r=A("size",e,t,n),s=n.getTensorList(a.id).resize(r);return n.addTensorList(s),[s.idTensor]}default:throw TypeError("Node type ".concat(e.op," is not implemented"))}};function _e(e,t,n){const[a,r]=A("fusedOps",e,t,n),s="biasadd"===a,o=!s,i="prelu"===r,c="fusedbatchnorm"===a,l=A("numArgs",e,t,n);if(s){if(i&&2!==l)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!i&&s&&1!==l)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd must have one extra argument: bias.")}if(c)throw new Error("FusedConv2d and DepthwiseConv2d with FusedBatchNorm is not supported");const u=A("strides",e,t,n),d=z(e,t,n),h=A("dataFormat",e,t,n).toUpperCase(),p=A("dilations",e,t,n);let[f,m]=A("args",e,t,n);o&&(m=f,f=void 0);return{stride:u,pad:d,dataFormat:h,dilations:p,biasArg:f,preluArg:m,activationFunc:r,leakyreluAlpha:A("leakyreluAlpha",e,t,n)}}const Ae=function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:k;switch(e.op){case"Conv1D":{const r=A("stride",e,t,n),s=A("pad",e,t,n),o=A("dataFormat",e,t,n).toUpperCase(),i=A("dilation",e,t,n);return[a.conv1d(A("x",e,t,n),A("filter",e,t,n),r,s,o,i)]}case"Conv2D":{const r=A("strides",e,t,n),s=z(e,t,n),o=A("dataFormat",e,t,n).toUpperCase(),i=A("dilations",e,t,n);return[a.conv2d(A("x",e,t,n),A("filter",e,t,n),[r[1],r[2]],s,o,[i[1],i[2]])]}case"_FusedConv2D":{const{stride:r,pad:s,dataFormat:o,dilations:i,biasArg:c,preluArg:l,activationFunc:u,leakyreluAlpha:d}=_e(e,t,n);return[a.fused.conv2d({x:A("x",e,t,n),filter:A("filter",e,t,n),strides:[r[1],r[2]],pad:s,dataFormat:o,dilations:[i[1],i[2]],bias:c,activation:u,preluActivationWeights:l,leakyreluAlpha:d})]}case"FusedDepthwiseConv2dNative":{const{stride:r,pad:s,dataFormat:o,dilations:i,biasArg:c,preluArg:l,activationFunc:u,leakyreluAlpha:d}=_e(e,t,n);return[a.fused.depthwiseConv2d({x:A("x",e,t,n),filter:A("filter",e,t,n),strides:[r[1],r[2]],pad:s,dataFormat:o,dilations:[i[1],i[2]],bias:c,activation:u,preluActivationWeights:l,leakyreluAlpha:d})]}case"Conv2DBackpropInput":case"Conv2dTranspose":{const r=A("outputShape",e,t,n),s=A("strides",e,t,n),o=z(e,t,n);return[a.conv2dTranspose(A("x",e,t,n),A("filter",e,t,n),r,[s[1],s[2]],o)]}case"DepthwiseConv2dNative":case"DepthwiseConv2d":{const r=A("strides",e,t,n),s=z(e,t,n),o=A("dilations",e,t,n),i=A("dataFormat",e,t,n).toUpperCase();return[a.depthwiseConv2d(A("input",e,t,n),A("filter",e,t,n),[r[1],r[2]],s,i,[o[1],o[2]])]}case"Conv3D":{const r=A("strides",e,t,n),s=A("pad",e,t,n),o=A("dataFormat",e,t,n).toUpperCase(),i=A("dilations",e,t,n);return[a.conv3d(A("x",e,t,n),A("filter",e,t,n),[r[1],r[2],r[3]],s,o,[i[1],i[2],i[3]])]}case"AvgPool":{const r=A("strides",e,t,n),s=A("pad",e,t,n),o=A("kernelSize",e,t,n);return[a.avgPool(A("x",e,t,n),[o[1],o[2]],[r[1],r[2]],s)]}case"MaxPool":{const r=A("strides",e,t,n),s=A("pad",e,t,n),o=A("kernelSize",e,t,n);return[a.maxPool(A("x",e,t,n),[o[1],o[2]],[r[1],r[2]],s)]}case"MaxPoolWithArgmax":{const r=A("strides",e,t,n),s=A("pad",e,t,n),o=A("kernelSize",e,t,n),i=A("includeBatchInIndex",e,t,n),{result:c,indexes:l}=a.maxPoolWithArgmax(A("x",e,t,n),[o[1],o[2]],[r[1],r[2]],s,i);return[c,l]}case"AvgPool3D":{const r=A("strides",e,t,n),s=A("pad",e,t,n),o=A("kernelSize",e,t,n);return[a.avgPool3d(A("x",e,t,n),[o[1],o[2],o[3]],[r[1],r[2],r[3]],s)]}case"MaxPool3D":{const r=A("strides",e,t,n),s=A("pad",e,t,n),o=A("kernelSize",e,t,n);return[a.maxPool3d(A("x",e,t,n),[o[1],o[2],o[3]],[r[1],r[2],r[3]],s)]}case"Dilation2D":{const r=A("strides",e,t,n),s=A("pad",e,t,n),o=A("dilations",e,t,n),i=r[1],c=r[2],l=o[1],u=o[2];return[a.dilation2d(A("x",e,t,n),A("filter",e,t,n),[i,c],s,[l,u],"NHWC")]}default:throw TypeError("Node type ".concat(e.op," is not implemented"))}},Re=function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:k;switch(e.op){case"Fill":{const r=A("shape",e,t,n),s=A("dtype",e,t,n),o=A("value",e,t,n);return[a.fill(r,o,s)]}case"LinSpace":{const r=A("start",e,t,n),s=A("stop",e,t,n),o=A("num",e,t,n);return[a.linspace(r,s,o)]}case"Multinomial":{const r=A("logits",e,t,n),s=A("numSamples",e,t,n),o=A("seed",e,t,n);return[a.multinomial(r,s,o)]}case"OneHot":{const r=A("indices",e,t,n),s=A("depth",e,t,n),o=A("onValue",e,t,n),i=A("offValue",e,t,n),c=A("dtype",e,t,n);return[a.oneHot(r,s,o,i,c)]}case"Ones":return[a.ones(A("shape",e,t,n),A("dtype",e,t,n))];case"OnesLike":return[a.onesLike(A("x",e,t,n))];case"RandomStandardNormal":return[a.randomStandardNormal(A("shape",e,t,n),A("dtype",e,t,n),A("seed",e,t,n))];case"RandomUniform":return[a.randomUniform(A("shape",e,t,n),A("minval",e,t,n),A("maxval",e,t,n),A("dtype",e,t,n))];case"RandomUniformInt":return[a.randomUniformInt(A("shape",e,t,n),A("minval",e,t,n),A("maxval",e,t,n),A("seed",e,t,n))];case"Range":{const r=A("start",e,t,n),s=A("stop",e,t,n),o=A("step",e,t,n);return[a.range(r,s,o,A("dtype",e,t,n))]}case"TruncatedNormal":{const r=A("shape",e,t,n),s=A("mean",e,t,n),o=A("stdDev",e,t,n),i=A("seed",e,t,n);return[a.truncatedNormal(r,s,o,A("dtype",e,t,n),i)]}case"Zeros":return[a.zeros(A("shape",e,t,n),A("dtype",e,t,n))];case"ZerosLike":return[a.zerosLike(A("x",e,t,n))];default:throw TypeError("Node type ".concat(e.op," is not implemented"))}};function Fe(e,t,n){return{boxes:A("boxes",e,t,n),scores:A("scores",e,t,n),maxOutputSize:A("maxOutputSize",e,t,n),iouThreshold:A("iouThreshold",e,t,n),scoreThreshold:A("scoreThreshold",e,t,n),softNmsSigma:A("softNmsSigma",e,t,n)}}const De=async function(e,t,n,a){let r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:k;switch(e.op){case"NonMaxSuppressionV5":{const{boxes:a,scores:s,maxOutputSize:o,iouThreshold:i,scoreThreshold:c,softNmsSigma:l}=Fe(e,t,n),u=await r.image.nonMaxSuppressionWithScoreAsync(a,s,o,i,c,l);return[u.selectedIndices,u.selectedScores]}case"NonMaxSuppressionV4":{const{boxes:a,scores:s,maxOutputSize:o,iouThreshold:i,scoreThreshold:c}=Fe(e,t,n),l=A("padToMaxOutputSize",e,t,n),u=await r.image.nonMaxSuppressionPaddedAsync(a,s,o,i,c,l);return[u.selectedIndices,u.validOutputs]}case"NonMaxSuppressionV3":case"NonMaxSuppressionV2":{const{boxes:a,scores:s,maxOutputSize:o,iouThreshold:i,scoreThreshold:c}=Fe(e,t,n);return[await r.image.nonMaxSuppressionAsync(a,s,o,i,c)]}case"Where":{const a=r.cast(A("condition",e,t,n),"bool"),s=[await r.whereAsync(a)];return a.dispose(),s}case"ListDiff":return r.setdiff1dAsync(A("x",e,t,n),A("y",e,t,n));default:throw TypeError("Node type ".concat(e.op," is not implemented"))}},Oe=function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:k;switch(e.op){case"LowerBound":{const r=A("sortedSequence",e,t,n),s=A("values",e,t,n);return[a.lowerBound(r,s)]}case"TopKV2":{const r=A("x",e,t,n),s=A("k",e,t,n),o=A("sorted",e,t,n),i=a.topk(r,s,o);return[i.values,i.indices]}case"UpperBound":{const r=A("sortedSequence",e,t,n),s=A("values",e,t,n);return[a.upperBound(r,s)]}case"Unique":{const r=A("x",e,t,n),s=a.unique(r);return[s.values,s.indices]}case"UniqueV2":{const r=A("x",e,t,n),s=A("axis",e,t,n),o=a.unique(r,s);return[o.values,o.indices]}default:throw TypeError("Node type ".concat(e.op," is not implemented"))}},Me=function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:k;switch(e.op){case"Const":return t[e.name];case"PlaceholderWithDefault":const r=A("default",e,t,n);return[R(e.name,t,n)||r];case"Placeholder":return[R(e.name,t,n)];case"Identity":case"StopGradient":case"FakeQuantWithMinMaxVars":return[L(A("x",e,t,n))];case"IdentityN":return A("x",e,t,n).map((e=>L(e)));case"Snapshot":return[L(A("x",e,t,n))];case"Shape":return[a.tensor1d(A("x",e,t,n).shape,"int32")];case"ShapeN":return A("x",e,t,n).map((e=>a.tensor1d(e.shape)));case"Size":return[a.scalar(A("x",e,t,n).size,"int32")];case"Rank":return[a.scalar(A("x",e,t,n).rank,"int32")];case"NoOp":return[a.scalar(1)];case"Print":const s=A("x",e,t,n),o=A("data",e,t,n),i=A("message",e,t,n),c=A("summarize",e,t,n);console.warn("The graph has a tf.print() operation,usually used for debugging, which slows down performance."),console.log(i);for(let e=0;e<o.length;e++)console.log(Array.prototype.slice.call(o[e].dataSync()).slice(0,c));return[s];default:throw TypeError("Node type ".concat(e.op," is not implemented"))}};var ze=n(7067);class Le{get id(){return this.handle.id}constructor(e,t){this.keyDType=e,this.valueDType=t,this.handle=(0,S.scalar)(0),this.tensorMap=new Map,(0,S.keep)(this.handle)}clearAndClose(){this.tensorMap.forEach((e=>e.dispose())),this.tensorMap.clear(),this.handle.dispose()}size(){return this.tensorMap.size}tensorSize(){return ze.i(this.size(),"int32")}async import(e,t){this.checkKeyAndValueTensor(e,t);const n=await e.data();return this.tensorMap.forEach((e=>e.dispose())),this.tensorMap.clear(),(0,S.tidy)((()=>{const e=(0,S.unstack)(t),a=n.length,r=e.length;S.util.assert(a===r,(()=>"The number of elements doesn't match, keys has "+"".concat(a," elements, the values has ").concat(r," ")+"elements."));for(let t=0;t<a;t++){const a=n[t],r=e[t];(0,S.keep)(r),this.tensorMap.set(a,r)}return this.handle}))}async find(e,t){this.checkKeyAndValueTensor(e,t);const n=await e.data();return(0,S.tidy)((()=>{const e=[];for(let a=0;a<n.length;a++){const r=n[a],s=this.findWithDefault(r,t);e.push(s)}return(0,S.stack)(e)}))}findWithDefault(e,t){const n=this.tensorMap.get(e);return null!=n?n:t}checkKeyAndValueTensor(e,t){if(e.dtype!==this.keyDType)throw new Error("Expect key dtype ".concat(this.keyDType,", but got ")+"".concat(e.dtype));if(t.dtype!==this.valueDType)throw new Error("Expect value dtype ".concat(this.valueDType,", but got ")+"".concat(t.dtype))}}const Be=async(e,t,n,a)=>{switch(e.op){case"HashTable":case"HashTableV2":{const r=a.getHashTableHandleByName(e.name);if(null!=r)return[r];{const r=A("keyDType",e,t,n),s=A("valueDType",e,t,n),o=new Le(r,s);return a.addHashTable(e.name,o),[o.handle]}}case"InitializeTable":case"InitializeTableV2":case"LookupTableImport":case"LookupTableImportV2":{const r=A("tableHandle",e,t,n,a),s=A("keys",e,t,n),o=A("values",e,t,n),i=a.getHashTableById(r.id);return[await i.import(s,o)]}case"LookupTableFind":case"LookupTableFindV2":{const r=A("tableHandle",e,t,n,a),s=A("keys",e,t,n),o=A("defaultValue",e,t,n),i=a.getHashTableById(r.id);return[await i.find(s,o)]}case"LookupTableSize":case"LookupTableSizeV2":{const r=A("tableHandle",e,t,n,a);return[a.getHashTableById(r.id).tensorSize()]}default:throw TypeError("Node type ".concat(e.op," is not implemented"))}},Pe=function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:k;switch(e.op){case"ResizeBilinear":{const r=A("images",e,t,n),s=A("size",e,t,n),o=A("alignCorners",e,t,n),i=A("halfPixelCenters",e,t,n);return[a.image.resizeBilinear(r,[s[0],s[1]],o,i)]}case"ResizeNearestNeighbor":{const r=A("images",e,t,n),s=A("size",e,t,n),o=A("alignCorners",e,t,n),i=A("halfPixelCenters",e,t,n);return[a.image.resizeNearestNeighbor(r,[s[0],s[1]],o,i)]}case"CropAndResize":{const r=A("image",e,t,n),s=A("boxes",e,t,n),o=A("boxInd",e,t,n),i=A("cropSize",e,t,n),c=A("method",e,t,n),l=A("extrapolationValue",e,t,n);return[a.image.cropAndResize(r,s,o,i,c,l)]}case"ImageProjectiveTransformV3":{const r=A("images",e,t,n),s=A("transforms",e,t,n),o=A("outputShape",e,t,n),i=A("fillValue",e,t,n),c=A("interpolation",e,t,n),l=A("fillMode",e,t,n);return[a.image.transform(r,s,c.toLowerCase(),l.toLowerCase(),i,o)]}default:throw TypeError("Node type ".concat(e.op," is not implemented"))}},Ve=function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:k;switch(e.op){case"Equal":return[a.equal(A("a",e,t,n),A("b",e,t,n))];case"NotEqual":return[a.notEqual(A("a",e,t,n),A("b",e,t,n))];case"Greater":return[a.greater(A("a",e,t,n),A("b",e,t,n))];case"GreaterEqual":return[a.greaterEqual(A("a",e,t,n),A("b",e,t,n))];case"Less":return[a.less(A("a",e,t,n),A("b",e,t,n))];case"LessEqual":return[a.lessEqual(A("a",e,t,n),A("b",e,t,n))];case"LogicalAnd":return[a.logicalAnd(A("a",e,t,n),A("b",e,t,n))];case"LogicalNot":return[a.logicalNot(A("a",e,t,n))];case"LogicalOr":return[a.logicalOr(A("a",e,t,n),A("b",e,t,n))];case"Select":case"SelectV2":return[a.where(A("condition",e,t,n),A("a",e,t,n),A("b",e,t,n))];case"BitwiseAnd":return[a.bitwiseAnd(A("a",e,t,n),A("b",e,t,n))];default:throw TypeError("Node type ".concat(e.op," is not implemented"))}},We=function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:k;switch(e.op){case"BatchMatMul":case"BatchMatMulV2":case"MatMul":return[a.matMul(A("a",e,t,n),A("b",e,t,n),A("transposeA",e,t,n),A("transposeB",e,t,n))];case"Einsum":return[a.einsum(A("equation",e,t,n),...A("tensors",e,t,n))];case"Transpose":return[a.transpose(A("x",e,t,n),A("perm",e,t,n))];case"_FusedMatMul":const[r,s]=A("fusedOps",e,t,n),o="biasadd"===r,i="prelu"===s,c=A("numArgs",e,t,n),l=A("leakyreluAlpha",e,t,n);if(o){if(i&&2!==c)throw new Error("Fused MatMul with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!i&&1!==c)throw new Error("Fused MatMul with BiasAdd must have one extra argument: bias.")}const[u,d]=A("args",e,t,n);return[a.fused.matMul({a:A("a",e,t,n),b:A("b",e,t,n),transposeA:A("transposeA",e,t,n),transposeB:A("transposeB",e,t,n),bias:u,activation:s,preluActivationWeights:d,leakyreluAlpha:l})];case"MatrixBandPart":return[a.linalg.bandPart(A("a",e,t,n),A("numLower",e,t,n),A("numUpper",e,t,n))];default:throw TypeError("Node type ".concat(e.op," is not implemented"))}},Ue=function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:k;switch(e.op){case"EuclideanNorm":return[a.euclideanNorm(A("x",e,t,n),A("axis",e,t,n),A("keepDims",e,t,n))];case"FusedBatchNorm":case"FusedBatchNormV2":case"FusedBatchNormV3":return[a.batchNorm(A("x",e,t,n),A("mean",e,t,n),A("variance",e,t,n),A("offset",e,t,n),A("scale",e,t,n),A("epsilon",e,t,n))];case"LRN":return[a.localResponseNormalization(A("x",e,t,n),A("radius",e,t,n),A("bias",e,t,n),A("alpha",e,t,n),A("beta",e,t,n))];case"Softmax":return[a.softmax(A("x",e,t,n))];case"LogSoftmax":return[a.logSoftmax(A("x",e,t,n))];default:throw TypeError("Node type ".concat(e.op," is not implemented"))}},Ge=function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:k;switch(e.op){case"RaggedGather":{const{outputNestedSplits:r,outputDenseValues:s}=a.raggedGather(A("paramsNestedSplits",e,t,n),A("paramsDenseValues",e,t,n),A("indices",e,t,n),A("outputRaggedRank",e,t,n));return r.concat(s)}case"RaggedRange":{const{rtNestedSplits:r,rtDenseValues:s}=a.raggedRange(A("starts",e,t,n),A("limits",e,t,n),A("splits",e,t,n));return[r,s]}case"RaggedTensorToTensor":return[a.raggedTensorToTensor(A("shape",e,t,n),A("values",e,t,n),A("defaultValue",e,t,n),A("rowPartitionTensors",e,t,n),A("rowPartitionTypes",e,t,n))];default:throw TypeError("Node type ".concat(e.op," is not implemented"))}},He=function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:k;switch(e.op){case"Max":{const r=A("axis",e,t,n),s=A("keepDims",e,t,n);return[a.max(A("x",e,t,n),r,s)]}case"Mean":{const r=A("axis",e,t,n),s=A("keepDims",e,t,n);return[a.mean(A("x",e,t,n),r,s)]}case"Min":{const r=A("axis",e,t,n),s=A("keepDims",e,t,n);return[a.min(A("x",e,t,n),r,s)]}case"Sum":{const r=A("axis",e,t,n),s=A("keepDims",e,t,n);return[a.sum(A("x",e,t,n),r,s)]}case"All":{const r=A("axis",e,t,n),s=A("keepDims",e,t,n);return[a.all(A("x",e,t,n),r,s)]}case"Any":{const r=A("axis",e,t,n),s=A("keepDims",e,t,n);return[a.any(A("x",e,t,n),r,s)]}case"ArgMax":{const r=A("axis",e,t,n);return[a.argMax(A("x",e,t,n),r)]}case"ArgMin":{const r=A("axis",e,t,n);return[a.argMin(A("x",e,t,n),r)]}case"Prod":{const r=A("axis",e,t,n),s=A("keepDims",e,t,n);return[a.prod(A("x",e,t,n),r,s)]}case"Cumprod":{const r=A("axis",e,t,n),s=A("exclusive",e,t,n),o=A("reverse",e,t,n);return[a.cumprod(A("x",e,t,n),r,s,o)]}case"Cumsum":{const r=A("axis",e,t,n),s=A("exclusive",e,t,n),o=A("reverse",e,t,n);return[a.cumsum(A("x",e,t,n),r,s,o)]}case"Bincount":const r=A("x",e,t,n),s=A("weights",e,t,n),o=A("size",e,t,n);return[a.bincount(r,s,o)];case"DenseBincount":{const r=A("x",e,t,n),s=A("weights",e,t,n),o=A("size",e,t,n),i=A("binaryOutput",e,t,n);return[a.denseBincount(r,s,o,i)]}default:throw TypeError("Node type ".concat(e.op," is not implemented"))}},je=function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:k;switch(e.op){case"ConcatV2":case"Concat":{const r=A("n",e,t,n),s=A("axis",e,t,n);let o=A("tensors",e,t,n);return o=o.slice(0,r),[a.concat(o,s)]}case"Gather":{const r=A("x",e,t,n),s=A("indices",e,t,n);return[a.gather(r,a.cast(s,"int32"),0)]}case"GatherV2":{const r=A("axis",e,t,n),s=A("batchDims",e,t,n),o=A("x",e,t,n),i=A("indices",e,t,n);return[a.gather(o,a.cast(i,"int32"),r,s)]}case"Reverse":{const r=A("dims",e,t,n),s=[];for(let e=0;e<r.length;e++)r[e]&&s.push(e);const o=A("x",e,t,n);return[a.reverse(o,s)]}case"ReverseV2":{const r=A("axis",e,t,n),s=A("x",e,t,n);return[a.reverse(s,r)]}case"Slice":{const r=A("begin",e,t,n),s=A("size",e,t,n);return[a.slice(A("x",e,t,n),r,s)]}case"StridedSlice":{const r=A("begin",e,t,n),s=A("end",e,t,n),o=A("strides",e,t,n),i=A("beginMask",e,t,n),c=A("endMask",e,t,n),l=A("ellipsisMask",e,t,n),u=A("newAxisMask",e,t,n),d=A("shrinkAxisMask",e,t,n),h=A("x",e,t,n);return[a.stridedSlice(h,r,s,o,i,c,l,u,d)]}case"Pack":return(0,S.tidy)((()=>{const r=A("axis",e,t,n),s=A("tensors",e,t,n),o=s[0].shape,i=a.squeeze(s[0]).shape,c=s.map((e=>{const t=S.util.arraysEqual(e.shape,o);if(!t&&!S.util.arraysEqual(a.squeeze(e).shape,i))throw new Error("the input tensors shape does not match");return t?e:a.reshape(e,o)}));return[a.stack(c,r)]}));case"Unpack":{const r=A("axis",e,t,n),s=A("tensor",e,t,n);return a.unstack(s,r)}case"Tile":{const r=A("reps",e,t,n);return[a.tile(A("x",e,t,n),r)]}case"Split":case"SplitV":{const r=A("axis",e,t,n),s=A("numOrSizeSplits",e,t,n),o=A("x",e,t,n);return a.split(o,s,r)}case"ScatterNd":{const r=A("indices",e,t,n),s=A("values",e,t,n),o=A("shape",e,t,n);return[a.scatterND(r,s,o)]}case"GatherNd":{const r=A("x",e,t,n),s=A("indices",e,t,n);return[a.gatherND(r,s)]}case"SparseToDense":{const r=A("sparseIndices",e,t,n),s=A("outputShape",e,t,n),o=A("sparseValues",e,t,n),i=A("defaultValue",e,t,n);return[a.sparseToDense(r,o,s,o.dtype===i.dtype?i:a.cast(i,o.dtype))]}case"TensorScatterUpdate":{const r=A("indices",e,t,n),s=A("values",e,t,n),o=A("tensor",e,t,n);return[a.tensorScatterUpdate(o,r,s)]}default:throw TypeError("Node type ".concat(e.op," is not implemented"))}},qe=function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:k;switch(e.op){case"SparseFillEmptyRows":{const{outputIndices:r,outputValues:s,emptyRowIndicator:o,reverseIndexMap:i}=a.sparse.sparseFillEmptyRows(A("indices",e,t,n),A("values",e,t,n),A("denseShape",e,t,n),A("defaultValue",e,t,n));return[r,s,o,i]}case"SparseReshape":{const{outputIndices:r,outputShape:s}=a.sparse.sparseReshape(A("inputIndices",e,t,n),A("inputShape",e,t,n),A("newShape",e,t,n));return[r,s]}case"SparseSegmentMean":return[a.sparse.sparseSegmentMean(A("data",e,t,n),A("indices",e,t,n),A("segmentIds",e,t,n))];case"SparseSegmentSum":return[a.sparse.sparseSegmentSum(A("data",e,t,n),A("indices",e,t,n),A("segmentIds",e,t,n))];default:throw TypeError("Node type ".concat(e.op," is not implemented"))}},Xe=function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:k;switch(e.op){case"FFT":return[a.fft(A("x",e,t,n))];case"IFFT":return[a.ifft(A("x",e,t,n))];case"RFFT":return[a.rfft(A("x",e,t,n))];case"IRFFT":return[a.irfft(A("x",e,t,n))];default:throw TypeError("Node type ".concat(e.op," is not implemented"))}},Ke=function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:k;switch(e.op){case"StaticRegexReplace":return[a.string.staticRegexReplace(A("input",e,t,n),A("pattern",e,t,n),A("rewrite",e,t,n),A("replaceGlobal",e,t,n))];case"StringNGrams":{const{nGrams:r,nGramsSplits:s}=a.string.stringNGrams(A("data",e,t,n),A("dataSplits",e,t,n),A("separator",e,t,n),A("nGramWidths",e,t,n),A("leftPad",e,t,n),A("rightPad",e,t,n),A("padWidth",e,t,n),A("preserveShortSequences",e,t,n));return[r,s]}case"StringSplit":{const{indices:r,values:s,shape:o}=a.string.stringSplit(A("input",e,t,n),A("delimiter",e,t,n),A("skipEmpty",e,t,n));return[r,s,o]}case"StringToHashBucketFast":return[a.string.stringToHashBucketFast(A("input",e,t,n),A("numBuckets",e,t,n))];default:throw TypeError("Node type ".concat(e.op," is not implemented"))}},Qe=function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:k;switch(e.op){case"Cast":return[a.cast(A("x",e,t,n),A("dtype",e,t,n))];case"ExpandDims":{const r=A("axis",e,t,n);return[a.expandDims(A("x",e,t,n),r)]}case"Squeeze":{const r=A("axis",e,t,n);return[a.squeeze(A("x",e,t,n),r)]}case"Reshape":return[a.reshape(A("x",e,t,n),A("shape",e,t,n))];case"EnsureShape":return[a.ensureShape(A("x",e,t,n),A("shape",e,t,n))];case"MirrorPad":return[a.mirrorPad(A("x",e,t,n),A("padding",e,t,n),A("mode",e,t,n))];case"PadV2":case"Pad":return[a.pad(A("x",e,t,n),A("padding",e,t,n),A("constantValue",e,t,n))];case"SpaceToBatchND":{const r=A("blockShape",e,t,n),s=A("paddings",e,t,n);return[a.spaceToBatchND(A("x",e,t,n),r,s)]}case"BatchToSpaceND":{const r=A("blockShape",e,t,n),s=A("crops",e,t,n);return[a.batchToSpaceND(A("x",e,t,n),r,s)]}case"DepthToSpace":{const r=A("blockSize",e,t,n),s=A("dataFormat",e,t,n).toUpperCase();return[a.depthToSpace(A("x",e,t,n),r,s)]}case"BroadcastTo":return[a.broadcastTo(A("x",e,t,n),A("shape",e,t,n))];case"BroadcastArgs":return[a.broadcastArgs(A("s0",e,t,n),A("s1",e,t,n))];default:throw TypeError("Node type ".concat(e.op," is not implemented"))}};function Ye(e,t,n,a){let r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:S.tidy;const s=((e,t,n)=>{switch(e.category){case"arithmetic":return r((()=>xe(e,t,n)));case"basic_math":return r((()=>we(e,t,n)));case"control":return Ee(e,t,n);case"convolution":return r((()=>Ae(e,t,n)));case"creation":return r((()=>Re(e,t,n)));case"dynamic":return De(e,t,n);case"evaluation":return r((()=>Oe(e,t,n)));case"image":return r((()=>Pe(e,t,n)));case"graph":return r((()=>Me(e,t,n)));case"logical":return r((()=>Ve(e,t,n)));case"matrices":return r((()=>We(e,t,n)));case"normalization":return r((()=>Ue(e,t,n)));case"ragged":return r((()=>Ge(e,t,n)));case"reduction":return r((()=>He(e,t,n)));case"slice_join":return r((()=>je(e,t,n)));case"sparse":return r((()=>qe(e,t,n)));case"spectral":return r((()=>Xe(e,t,n)));case"string":return r((()=>Ke(e,t,n)));case"transformation":return r((()=>Qe(e,t,n)));case"hash_table":return Be(e,t,n,a);case"custom":const s=E(e.op);if(s&&s.customExecutor)return s.customExecutor(new be(e,t,n));throw TypeError("Custom op ".concat(e.op," is not registered."));default:throw TypeError("Unknown op '".concat(e.op,"'. File an issue at ")+"https://github.com/tensorflow/tfjs/issues so we can add it, or register a custom execution with tf.registerOp()")}})(e,t,n);return S.util.isPromise(s)?s.then((e=>[].concat(e))):[].concat(s)}class Ze{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{},r=arguments.length>4?arguments[4]:void 0;this.weightMap=e,this.tensorArrayMap=t,this.tensorListMap=n,this.functionMap=a,this.parseNodeNameCache=r,this.rootContext={id:0,frameName:"",iterationId:0},this.contexts=[this.rootContext],this.lastId=0,this.generateCurrentContextIds()}newFrame(e,t){return{id:e,frameName:t,iterationId:0}}set currentContext(e){this.contexts!==e&&(this.contexts=e,this.generateCurrentContextIds())}get currentContext(){return this.contexts}get currentContextId(){return this._currentContextIds[0]}get currentContextIds(){return this._currentContextIds}generateCurrentContextIds(){const e=[];for(let t=0;t<this.contexts.length-1;t++){const n=this.contexts.slice(0,this.contexts.length-t);e.push(this.contextIdforContexts(n))}e.push(""),this._currentContextIds=e}contextIdforContexts(e){return e?e.map((e=>0===e.id&&0===e.iterationId?"":"".concat(e.frameName,"-").concat(e.iterationId))).join("/"):""}enterFrame(e){this.contexts&&(this.lastId++,this.contexts=this.contexts.slice(),this.contexts.push(this.newFrame(this.lastId,e)),this._currentContextIds.unshift(this.contextIdforContexts(this.contexts)))}exitFrame(){if(!(this.contexts&&this.contexts.length>1))throw new Error("Cannot exit frame, the context is empty");this.contexts=this.contexts.slice(),this.contexts.splice(-1),this.currentContextIds.shift()}nextIteration(){if(!(this.contexts&&this.contexts.length>0))throw new Error("Cannot increase frame iteration, the context is empty");{this.contexts=this.contexts.slice(),this.lastId++;const e=Object.assign({},this.contexts[this.contexts.length-1]);e.iterationId+=1,e.id=this.lastId,this.contexts.splice(-1,1,e),this._currentContextIds.splice(0,1,this.contextIdforContexts(this.contexts))}}getWeight(e){return this.weightMap[e]}addTensorArray(e){this.tensorArrayMap[e.id]=e}getTensorArray(e){return this.tensorArrayMap[e]}addTensorList(e){this.tensorListMap[e.id]=e}getTensorList(e){return this.tensorListMap[e]}dispose(e){for(const t in this.tensorArrayMap)this.tensorArrayMap[t].clearAndClose(e);for(const t in this.tensorListMap)this.tensorListMap[t].clearAndClose(e)}}function Je(e,t,n,a){const r=new Set,s=[];let o=null,i=null;const c=new Set,l=new Set(Object.keys(e).map((e=>M(e)[0])));a=a||[];const u=new Set(a.map((e=>M(e.name)[0]))),d=[...t];for(;d.length>0;){const e=d.pop();(rt(e)||st(e)||ot(e))&&null==o&&(o=e,i=o.children.map((e=>e.name)).filter((e=>r.has(e)))),r.add(e.name),null==n[e.name]&&(l.has(e.name)||u.has(e.name)||(0!==e.inputs.length?e.inputs.forEach((e=>{c.has(e.name)||(c.add(e.name),d.push(e))})):s.push(e.name)))}return{inputs:e,outputs:t,usedNodes:r,missingInputs:s,dynamicNode:o,syncInputs:i}}function $e(e,t){const{usedNodes:n,inputs:a}=t,r=Object.keys(a).map((e=>M(e)[0])).map((t=>e.nodes[t])),s=e.initNodes||[],o=e=>n.has("string"===typeof e?e:e.name);function i(e){return[...new Map(e.map((e=>[e.name,e]))).values()]}const c=i([...r,...e.weights,...s]).filter(o),l=i([...c,...Object.values(e.nodes)]).filter(o),u=new Map(l.map((e=>[e.name,e]))),d={};for(const m of l){d[m.name]=d[m.name]||0;for(const e of m.children)o(e)||(d[e.name]=Number.POSITIVE_INFINITY),d[e.name]=(d[e.name]||0)+1}const h=Object.entries(d).filter((e=>{let[,t]=e;return 0===t})).map((e=>{let[t]=e;return t})),p=[...h];for(;h.length>0;){const e=h.pop(),t=u.get(e);for(const n of t.children.filter(o))0===--d[n.name]&&(p.push(n.name),h.push(n.name))}const f=function(e,t){const n=new Map(e.map((e=>[e.name,e]))),a=t.map((e=>e.name)),r=new Set(a);for(;a.length>0;){const e=a.pop(),t=n.get(e);for(const s of t.children)n.has(s.name)&&!r.has(s.name)&&(r.add(s.name),a.push(s.name))}return e.filter((e=>r.has(e.name)))}(p.map((e=>u.get(e))),c);return function(e,t){const n=new Map(e.map(((e,t)=>[e.name,t]))),a=new Set(t.map((e=>e.name))),r=e=>a.has("string"===typeof e?e:e.name),s=new Set(e.map((e=>e.name))),o=e=>s.has("string"===typeof e?e:e.name);for(const i of e){for(const e of i.children.filter(o)){if(!n.has(e.name))throw new et("Child ".concat(e.name," of node ").concat(i.name," is unreachable."));if(n.get(i.name)>n.get(e.name))throw new et("Node ".concat(i.name," is scheduled to run after its child ").concat(e.name,"."))}if(!r(i))for(const e of i.inputs){if(!n.has(e.name))throw new et("Input ".concat(e.name," of node ").concat(i.name," is unreachable."));if(n.get(e.name)>n.get(i.name))throw new et("Node ".concat(i.name," is scheduled to run before its input ").concat(e.name,"."))}}}(f,c),f}class et extends Error{constructor(e){super("NodesExecutionOrderError: ".concat(e))}}const tt=new Set(["Switch","Merge","Enter","Exit","NextIteration","StatelessIf","StatelessWhile","if","While"]),nt=new Set(["NonMaxSuppressionV2","NonMaxSuppressionV3","NonMaxSuppressionV5","Where"]),at=new Set(["HashTable","HashTableV2","LookupTableImport","LookupTableImportV2","LookupTableFind","LookupTableFindV2","LookupTableSize","LookupTableSizeV2"]);function rt(e){return tt.has(e.op)}function st(e){return nt.has(e.op)}function ot(e){return at.has(e.op)}class it{get weightIds(){return this.parent?this.parent.weightIds:this._weightIds}get functionExecutorMap(){return this.parent?this.parent.functionExecutorMap:this._functionExecutorMap}get weightMap(){return this.parent?this.parent.weightMap:this._weightMap}set weightMap(e){const t=Object.keys(e).map((t=>e[t].map((e=>e.id))));this._weightIds=[].concat(...t),this._weightMap=e}set resourceManager(e){this._resourceManager=e}get inputs(){return this._inputs.map((e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0})))}get outputs(){return this._outputs.map((e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0})))}get inputNodes(){return this._inputs.map((e=>e.signatureKey||e.name))}get outputNodes(){return this._outputs.map((e=>{const t=e.signatureKey||e.name;return e.defaultOutput?"".concat(t,":").concat(e.defaultOutput):t}))}get functions(){return Object.keys(this._functions).reduce(((e,t)=>(e[t]=this._functions[t].signature,e)),{})}constructor(e,t){this.graph=e,this.parent=t,this.compiledMap=new Map,this.parseNodeNameCache=new Map,this._weightMap={},this.SEPARATOR=",",this._functions={},this._functionExecutorMap={},this.keepIntermediateTensors=!1,this._outputs=e.outputs,this._inputs=e.inputs,this._initNodes=e.initNodes,this._signature=e.signature,this._functions=e.functions,null!=e.functions&&Object.keys(e.functions).forEach((t=>{this._functionExecutorMap[t]=new it(e.functions[t],this)}))}getCompilationKey(e,t){const n=e.map((e=>e.name)).sort(),a=t.map((e=>e.name)).sort();return n.join(this.SEPARATOR)+"--"+a.join(this.SEPARATOR)}compile(e,t){const n=Je(e,t,this.weightMap,this._initNodes),{missingInputs:a,dynamicNode:r,syncInputs:s}=n;if(null!=r)throw new Error("This execution contains the node '".concat(r.name,"', which has ")+"the dynamic op '".concat(r.op,"'. Please use ")+"model.executeAsync() instead. Alternatively, to avoid the "+"dynamic ops, specify the inputs [".concat(s,"]"));if(a.length>0){const n=t.map((e=>e.name)),r=Object.keys(e);throw new Error("Cannot compute the outputs [".concat(n,"] from the provided inputs ")+"[".concat(r,"]. Missing the following inputs: [").concat(a,"]"))}const o=$e(this.graph,n),i=function(e){const t=new Map(e.map(((e,t)=>[e.name,t]))),n=Number.MAX_SAFE_INTEGER,a=e.map(((e,t)=>rt(e)?n:t)),r=e=>{const n=a[t.get(e.name)];return null==n?-1:n},s=e.map(((e,t)=>e.children.map(r).reduce(((e,t)=>Math.max(e,t)),a[t]))),o=new Map;for(let i=0;i<e.length;++i){const t=s[i];if(t===n)continue;const a=e[i],r=e[t];o.has(r.name)||o.set(r.name,[]),o.get(r.name).push(a)}return o}(o);return{orderedNodes:o,nodeLiveUntilMap:i}}cloneAndKeepTensor(e){if(null==e)return null;const t=e.clone();return(0,S.keep)(t),t}cloneTensorList(e){if(!e)return null;return e.map((e=>this.cloneAndKeepTensor(e)))}cloneTensorMap(e){return Object.fromEntries(Object.entries(e).map((e=>{let[t,n]=e;return[t,this.cloneTensorList(n)]})))}execute(e,t){this.disposeIntermediateTensors(),e=this.mapInputs(e);const n=Object.keys(e).sort();this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t);const a=n.map((e=>this.graph.nodes[M(e)[0]])),r=t.map((e=>M(e)[0])),s=new Set(r);let o=r.map((e=>this.graph.nodes[e]));0===o.length&&(o=this._outputs);const i=this.getCompilationKey(a,o);let c=this.compiledMap.get(i);null==c&&(c=this.compile(e,o),this.compiledMap.set(i,c));try{this.keepIntermediateTensors=(0,S.env)().getBool("KEEP_INTERMEDIATE_TENSORS")}catch(d){this.keepIntermediateTensors=!1,console.warn(d.message)}const l={},u={};return(0,S.tidy)((()=>{const n=new Ze(this.weightMap,l,u,this.functionExecutorMap,this.parseNodeNameCache),a=Object.assign({},this.weightMap);this.keepIntermediateTensors&&(this.clonedTensorsMap=this.cloneTensorMap(this.weightMap)),Object.keys(e).forEach((t=>{const[r,s]=M(t,n),o=[];o[s]=e[t],a[r]=o,this.keepIntermediateTensors&&(this.clonedTensorsMap[r]=this.cloneTensorList(o))}));const r=this.getFrozenTensorIds(a),{orderedNodes:o,nodeLiveUntilMap:i}=c;for(const e of o){if(a[e.name])continue;const t=Ye(e,a,n,this._resourceManager);if(S.util.isPromise(t))throw new Error("The execution of the op '".concat(e.op,"' returned a promise. ")+"Please use model.executeAsync() instead.");a[e.name]=t,this.keepIntermediateTensors&&(this.clonedTensorsMap[e.name]=this.cloneTensorList(t)),this.checkTensorForDisposalWithNodeLiveUntilInfo(e,a,n,r,s,i.get(e.name))}return null==this.parent&&n.dispose(r),t.map((e=>R(e,a,n)))}))}getFrozenTensorIds(e){const t=[].concat.apply([],Object.keys(e).map((t=>e[t])).map((e=>e.map((e=>e.id)))));return new Set(t)}checkTensorForDisposal(e,t,n,a,r,s,o){if(!rt(t)&&!s.has(e)){for(const a of n[e])null!=a&&(o[a.id]=(o[a.id]||0)+t.children.length);for(const e of t.inputs){if(rt(e))continue;const t=F(e.name,n,a);if(null!=t)for(const e of t){if(!e||e.kept||r.has(e.id))continue;const t=o[e.id];1===t?(e.dispose(),delete o[e.id]):null!=t&&o[e.id]--}}}}checkTensorForDisposalWithNodeLiveUntilInfo(e,t,n,a,r,s){function o(e){return rt(e)||r.has(e.name)}if(!rt(e)&&null!=s)for(const i of s){if(o(i))continue;const e=F(i.name,t,n);for(const t of e)!t||t.kept||a.has(t.id)||t.dispose()}}async executeAsync(e,t){return this._executeAsync(e,t)}disposeIntermediateTensors(){this.clonedTensorsMap&&(Object.values(this.clonedTensorsMap).forEach((e=>{for(const t of e)t&&!t.isDisposed&&t.dispose()})),this.clonedTensorsMap=null)}getIntermediateTensors(){return this.clonedTensorsMap}async _executeAsync(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{},r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:{};this.disposeIntermediateTensors(),n||(e=this.mapInputs(e),this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t));try{this.keepIntermediateTensors=(0,S.env)().getBool("KEEP_INTERMEDIATE_TENSORS")}catch(d){this.keepIntermediateTensors=!1,console.warn(d.message)}const s=new Ze(this.weightMap,a,r,this.functionExecutorMap,this.parseNodeNameCache);this.keepIntermediateTensors&&(this.clonedTensorsMap=this.cloneTensorMap(this.weightMap));const o=await this.executeWithControlFlow(e,s,t,n),i=t.map((e=>R(e,o,s))),c=i.map((e=>e.id)),l=Object.keys(e).map((t=>e[t].id)),u=new Set([...c,...l,...this.weightIds]);return Object.values(o).forEach((e=>{e.forEach((e=>{!e||e.isDisposed||u.has(e.id)||e.dispose()}))})),null==this.parent&&s.dispose(u),i}async executeFunctionAsync(e,t,n){const a=e.reduce(((e,t,n)=>(e[this.inputs[n].name]=t,e)),{});return this._executeAsync(a,this.outputNodes,!0,t,n)}async executeWithControlFlow(e,t,n,a){const r=Object.keys(e),s=r.map((e=>this.graph.nodes[M(e)[0]])),o=n.map((e=>M(e)[0])),i=new Set(o);let c=o.map((e=>this.graph.nodes[e]));0===c.length&&(c=this._outputs);const{usedNodes:l,missingInputs:u,dynamicNode:d,syncInputs:h}=Je(e,c,this.weightMap,this._initNodes),p=[...s,...this.graph.weights,...this._initNodes||[]].map((e=>({node:e,contexts:t.currentContext}))),f=Object.assign({},this.weightMap);Object.keys(e).forEach((t=>{const[n,a]=M(t),r=[];r[a]=e[t],f[n]=r}));const m={},g=this.getFrozenTensorIds(f),y={};for(;p.length>0;){const e=this.processStack(s,p,t,f,y,g,i,m,l);await Promise.all(e)}null!=d||a||console.warn("This model execution did not contain any nodes with control flow or dynamic output shapes. You can use model.execute() instead.");const b=c.filter((e=>!rt(e)&&!R(e.name,f,t))).map((e=>e.name));if(b.length>0){let e="";throw null!=d&&(e="Alternatively, to avoid the dynamic ops, use model.execute() "+"and specify the inputs [".concat(h,"]")),new Error("Cannot compute the outputs [".concat(b,"] from the provided ")+"inputs [".concat(r,"]. Consider providing the following inputs: ")+"[".concat(u,"]. ").concat(e))}return f}processStack(e,t,n,a,r,s,o,i,c){const l=[];for(;t.length>0;){const e=t.pop();n.currentContext=e.contexts;let u="";if("Enter"===e.node.op&&A("isConstant",e.node,a,n)&&([u]=D(e.node.name,n)),null==a[e.node.name]){const d=Ye(e.node,a,n,this._resourceManager);u||([u]=D(e.node.name,n));const h=n.currentContext;S.util.isPromise(d)?l.push(d.then((l=>(a[u]=l,this.keepIntermediateTensors&&(this.clonedTensorsMap[u]=this.cloneTensorList(l)),n.currentContext=h,this.checkTensorForDisposal(u,e.node,a,n,s,o,i),this.processChildNodes(e.node,t,n,a,r,c),l)))):(a[u]=d,this.keepIntermediateTensors&&(this.clonedTensorsMap[u]=this.cloneTensorList(d)),this.checkTensorForDisposal(u,e.node,a,n,s,o,i),this.processChildNodes(e.node,t,n,a,r,c))}else this.processChildNodes(e.node,t,n,a,r,c)}return l}processChildNodes(e,t,n,a,r,s){e.children.forEach((e=>{const[o]=D(e.name,n);!r[o]&&s.has(e.name)&&("Merge"===e.op?e.inputNames.some((e=>!!R(e,a,n)))&&(r[o]=!0,t.push({contexts:n.currentContext,node:e})):e.inputNames.every((e=>!!R(e,a,n)))&&(r[o]=!0,t.push({contexts:n.currentContext,node:e})))}))}dispose(){Object.keys(this.weightMap).forEach((e=>this.weightMap[e].forEach((e=>e.dispose()))))}checkInputShapeAndType(e){Object.keys(e).forEach((t=>{const n=e[t],[a]=M(t),r=this.graph.nodes[a];if(r.attrParams.shape&&r.attrParams.shape.value){const e=r.attrParams.shape.value,t=e.length===n.shape.length&&n.shape.every(((t,n)=>-1===e[n]||e[n]===t));S.util.assert(t,(()=>"The shape of dict['".concat(r.name,"'] provided in ")+"model.execute(dict) must be [".concat(e,"], but was ")+"[".concat(n.shape,"]")))}r.attrParams.dtype&&r.attrParams.dtype.value&&S.util.assert(n.dtype===r.attrParams.dtype.value,(()=>"The dtype of dict['".concat(r.name,"'] provided in ")+"model.execute(dict) must be "+"".concat(r.attrParams.dtype.value,", but was ").concat(n.dtype)))}))}mapInputs(e){var t,n;const a={};for(const r in e){const s=null===(n=null===(t=this._signature)||void 0===t?void 0:t.inputs)||void 0===n?void 0:n[r];null!=s?a[s.name]=e[r]:a[r]=e[r]}return a}checkInputs(e){const t=Object.keys(e).filter((e=>{const[t]=M(e);return null==this.graph.nodes[t]}));if(t.length>0)throw new Error("The dict provided in model.execute(dict) has "+"keys: [".concat(t,"] that are not part of graph"))}mapOutputs(e){return e.map((e=>{var t,n;const a=null===(n=null===(t=this._signature)||void 0===t?void 0:t.outputs)||void 0===n?void 0:n[e];return null!=a?a.name:e}),{})}checkOutputs(e){e.forEach((e=>{const[t]=M(e);if(!this.graph.nodes[t])throw new Error("The output '".concat(e,"' is not found in the graph"))}))}}class ct{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};this.hashTableNameToHandle=e,this.hashTableMap=t}addHashTable(e,t){this.hashTableNameToHandle[e]=t.handle,this.hashTableMap[t.id]=t}getHashTableHandleByName(e){return this.hashTableNameToHandle[e]}getHashTableById(e){return this.hashTableMap[e]}dispose(){for(const e in this.hashTableMap)this.hashTableMap[e].clearAndClose(),delete this.hashTableMap[e];for(const e in this.hashTableNameToHandle)this.hashTableNameToHandle[e].dispose(),delete this.hashTableNameToHandle[e]}}var lt=n(1434);class ut{get modelVersion(){return this.version}get inputNodes(){return this.executor.inputNodes}get outputNodes(){return this.executor.outputNodes}get inputs(){return this.executor.inputs}get outputs(){return this.executor.outputs}get weights(){return this.executor.weightMap}get metadata(){return this.artifacts.userDefinedMetadata}get modelSignature(){return this.signature}get modelStructuredOutputKeys(){return this.structuredOutputKeys}constructor(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:S.io;this.modelUrl=e,this.loadOptions=t,this.version="n/a",this.io=n,null==t&&(this.loadOptions={}),this.resourceManager=new ct}findIOHandler(){const e=this.modelUrl;if(null!=e.load)this.handler=e;else if(null!=this.loadOptions.requestInit)this.handler=this.io.browserHTTPRequest(e,this.loadOptions);else{const t=this.io.getLoadHandlers(e,this.loadOptions);if(0===t.length)t.push(this.io.browserHTTPRequest(e,this.loadOptions));else if(t.length>1)throw new Error("Found more than one (".concat(t.length,") load handlers for ")+"URL '".concat([e],"'"));this.handler=t[0]}}load(){if(this.findIOHandler(),null==this.handler.load)throw new Error("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");const e=this.handler.load();return S.util.isPromise(e)?e.then((e=>null==e.getWeightStream?this.loadSync(e):this.loadStreaming(e))):this.loadSync(e)}loadSync(e){const t=this.io.decodeWeights(e.weightData,e.weightSpecs);return this.loadWithWeightMap(e,t)}async loadStreaming(e){if(null==e.getWeightStream)throw new Error("Model artifacts missing streamWeights function");const t=await(0,lt.r)(e.getWeightStream(),e.weightSpecs);return this.loadWithWeightMap(e,t)}loadWithWeightMap(e,t){this.artifacts=e;const n=this.artifacts.modelTopology;let a=this.artifacts.signature;if(null!=this.artifacts.userDefinedMetadata){const e=this.artifacts.userDefinedMetadata;null!=e.signature&&(a=e.signature),null!=e.structuredOutputKeys&&(this.structuredOutputKeys=e.structuredOutputKeys)}if(this.signature=a,this.version="".concat(n.versions.producer,".").concat(n.versions.minConsumer),this.executor=new it(ae.Instance.transformGraph(n,this.signature)),this.executor.weightMap=this.convertTensorMapToTensorsMap(t),this.executor.resourceManager=this.resourceManager,null!=e.modelInitializer&&null!=e.modelInitializer.node){const t=ae.Instance.transformGraph(e.modelInitializer);this.initializer=new it(t),this.initializer.weightMap=this.executor.weightMap,this.initializer.resourceManager=this.resourceManager,this.initializerSignature=e.initializerSignature}return!0}async save(e,t){if("string"===typeof e){const t=this.io.getSaveHandlers(e);if(0===t.length)throw new Error("Cannot find any save handlers for URL '".concat(e,"'"));if(t.length>1)throw new Error("Found more than one (".concat(t.length,") save handlers for ")+"URL '".concat(e,"'"));e=t[0]}if(null==e.save)throw new Error("GraphModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");return e.save(this.artifacts)}addStructuredOutputNames(e){if(this.structuredOutputKeys){const t=e instanceof S.Tensor?[e]:e,n={};return t.forEach(((e,t)=>n[this.structuredOutputKeys[t]]=e)),n}return e}predict(e,t){const n=this.execute(e,this.outputNodes);return this.addStructuredOutputNames(n)}async predictAsync(e,t){const n=await this.executeAsync(e,this.outputNodes);return this.addStructuredOutputNames(n)}normalizeInputs(e){var t;if(!(e instanceof S.Tensor)&&!Array.isArray(e)){const n=null===(t=this.signature)||void 0===t?void 0:t.inputs;if(null!=n)for(const t in n){const a=n[t];null!=a.resourceId&&(e[t]=this.resourceIdToCapturedInput[a.resourceId])}return e}e=Array.isArray(e)?e:[e];const n=Object.keys(this.resourceIdToCapturedInput).length;if(e.length+n!==this.inputNodes.length)throw new Error("Input tensor count mismatch, the graph model has ".concat(this.inputNodes.length-n," non-resource placeholders, while there are ").concat(e.length," input tensors provided."));let a=0;return this.inputNodes.reduce(((t,n)=>{var r,s,o;const i=null===(o=null===(s=null===(r=this.signature)||void 0===r?void 0:r.inputs)||void 0===s?void 0:s[n])||void 0===o?void 0:o.resourceId;return t[n]=null!=i?this.resourceIdToCapturedInput[i]:e[a++],t}),{})}normalizeOutputs(e){return e=e||this.outputNodes,Array.isArray(e)?e:[e]}executeInitializerGraph(){return null==this.initializer?[]:null==this.initializerSignature?this.initializer.execute({},[]):this.initializer.execute({},Object.keys(this.initializerSignature.outputs))}async executeInitializerGraphAsync(){return null==this.initializer?[]:null==this.initializerSignature?this.initializer.executeAsync({},[]):this.initializer.executeAsync({},Object.keys(this.initializerSignature.outputs))}setResourceIdToCapturedInput(e){if(this.resourceIdToCapturedInput={},this.initializerSignature){const t=this.initializerSignature.outputs,n=Object.keys(t);for(let a=0;a<n.length;a++){const r=t[n[a]];this.resourceIdToCapturedInput[r.resourceId]=e[a]}}}execute(e,t){null==this.resourceIdToCapturedInput&&this.setResourceIdToCapturedInput(this.executeInitializerGraph()),e=this.normalizeInputs(e),t=this.normalizeOutputs(t);const n=this.executor.execute(e,t);return n.length>1?n:n[0]}async executeAsync(e,t){null==this.resourceIdToCapturedInput&&this.setResourceIdToCapturedInput(await this.executeInitializerGraphAsync()),e=this.normalizeInputs(e),t=this.normalizeOutputs(t);const n=await this.executor.executeAsync(e,t);return n.length>1?n:n[0]}getIntermediateTensors(){return this.executor.getIntermediateTensors()}disposeIntermediateTensors(){this.executor.disposeIntermediateTensors()}convertTensorMapToTensorsMap(e){return Object.keys(e).reduce(((t,n)=>(t[n]=[e[n]],t)),{})}dispose(){this.executor.dispose(),this.initializer&&(this.initializer.dispose(),this.resourceIdToCapturedInput&&(0,S.dispose)(this.resourceIdToCapturedInput)),this.resourceManager.dispose()}}async function dt(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:S.io;if(null==e)throw new Error("modelUrl in loadGraphModel() cannot be null. Please provide a url or an IOHandler that loads the model");null==t&&(t={}),t.fromTFHub&&"string"===typeof e&&(e=pt(e));const a=new ut(e,t,n);return await a.load(),a}function ht(e){if(null==e)throw new Error("modelUrl in loadGraphModelSync() cannot be null. Please provide model artifacts or an IOHandler that loads the model");let t;if(e instanceof Array){const[n,a]=e;if(!n)throw new Error("modelJSON must be the first element of the array");if(!a||!(a instanceof ArrayBuffer))throw new Error("An ArrayBuffer of weights must be the second element of the array");if(!("modelTopology"in n))throw new Error("Model JSON is missing 'modelTopology'");if(!("weightsManifest"in n))throw new Error("Model JSON is missing 'weightsManifest'");const r=S.io.getWeightSpecs(n.weightsManifest),s=S.io.getModelArtifactsForJSONSync(n,r,a);t=S.io.fromMemorySync(s)}else if("load"in e)t=e;else{if(!("modelTopology"in e&&"weightSpecs"in e&&"weightData"in e))throw new Error("Unknown model format");t=S.io.fromMemorySync(e)}const n=new ut(t);return n.load(),n}function pt(e){return e.endsWith("/")||(e+="/"),"".concat(e).concat("model.json").concat("?tfjs-format=file")}const ft="4.20.0"},4679:(e,t,n)=>{"use strict";n.d(t,{JL:()=>a,Zu:()=>r});class a{constructor(e,t){this.backend=e,this.dataMover=t,this.data=new WeakMap,this.dataIdsCount=0}get(e){return this.data.has(e)||this.dataMover.moveData(this.backend,e),this.data.get(e)}set(e,t){this.dataIdsCount++,this.data.set(e,t)}has(e){return this.data.has(e)}delete(e){return this.dataIdsCount--,this.data.delete(e)}numDataIds(){return this.dataIdsCount}}class r{refCount(e){return s("refCount")}incRef(e){return s("incRef")}timerAvailable(){return!0}time(e){return s("time")}read(e){return s("read")}readSync(e){return s("readSync")}readToGPU(e,t){return s("readToGPU")}numDataIds(){return s("numDataIds")}disposeData(e,t){return s("disposeData")}write(e,t,n){return s("write")}move(e,t,n,a,r){return s("move")}createTensorFromGPUData(e,t,n){return s("createTensorFromGPUData")}memory(){return s("memory")}floatPrecision(){return s("floatPrecision")}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}dispose(){return s("dispose")}}function s(e){throw new Error("'".concat(e,"' not yet implemented or not found in the registry. ")+"This kernel may not be supported by the tfjs backend you have chosen")}},745:(e,t,n)=>{"use strict";function a(e,t,n){const a=function(e,t,n){return function(e,t,n){let a=0,r=e.length,s=0,o=!1;for(;a<r;){s=a+(r-a>>>1);const i=n(t,e[s]);i>0?a=s+1:(r=s,o=!i)}return o?a:-a-1}(e,t,n||r)}(e,t,n),s=a<0?-(a+1):a;e.splice(s,0,t)}function r(e,t){return e>t?1:e<t?-1:0}function s(e,t,n,a,r){return c(e,t,n,a,r,0)}function o(e,t,n,a,r,s){return c(e,t,n,a,r,0,!1,s,!0)}function i(e,t,n,a,r,s){return c(e,t,n,a,r,s,!0)}function c(e,t,n,r,s,o){let i=arguments.length>6&&void 0!==arguments[6]&&arguments[6],c=arguments.length>7&&void 0!==arguments[7]&&arguments[7],h=arguments.length>8&&void 0!==arguments[8]&&arguments[8];const p=[];for(let a=0;a<t.length;a++)t[a]>s&&p.push({score:t[a],boxIndex:a,suppressBeginIndex:0});p.sort(d);const f=o>0?-.5/o:0,m=[],g=[];for(;m.length<n&&p.length>0;){const t=p.pop(),{score:n,boxIndex:o,suppressBeginIndex:i}=t;if(n<s)break;let c=!1;for(let a=m.length-1;a>=i;--a){const n=l(e,o,m[a]);if(n>=r){c=!0;break}if(t.score=t.score*u(r,f,n),t.score<=s)break}t.suppressBeginIndex=m.length,c||(t.score===n?(m.push(o),g.push(t.score)):t.score>s&&a(p,t,d))}const y=m.length,b=n-y;c&&b>0&&(m.push(...new Array(b).fill(0)),g.push(...new Array(b).fill(0)));const v={selectedIndices:m};return i&&(v.selectedScores=g),h&&(v.validOutputs=y),v}function l(e,t,n){const a=e.subarray(4*t,4*t+4),r=e.subarray(4*n,4*n+4),s=Math.min(a[0],a[2]),o=Math.min(a[1],a[3]),i=Math.max(a[0],a[2]),c=Math.max(a[1],a[3]),l=Math.min(r[0],r[2]),u=Math.min(r[1],r[3]),d=Math.max(r[0],r[2]),h=Math.max(r[1],r[3]),p=(i-s)*(c-o),f=(d-l)*(h-u);if(p<=0||f<=0)return 0;const m=Math.max(s,l),g=Math.max(o,u),y=Math.min(i,d),b=Math.min(c,h),v=Math.max(y-m,0)*Math.max(b-g,0);return v/(p+f-v)}function u(e,t,n){const a=Math.exp(t*n*n);return n<=e?a:0}function d(e,t){return e.score-t.score||e.score===t.score&&t.boxIndex-e.boxIndex}n.d(t,{GP:()=>s,qP:()=>o,pA:()=>i})},4189:(e,t,n)=>{"use strict";n.d(t,{Z:()=>r});var a=n(7039);function r(e,t){const n=[];for(let a=0;a<t.length;a++)t[a]&&n.push(a);const r=(0,a.f)(e,"int32"),s=(0,a.f)([n.length,e.length],"int32");for(let a=0;a<n.length;a++){const t=r.indexToLoc(n[a]),o=a*e.length;s.values.set(t,o)}return s.toTensor()}},318:(e,t,n)=>{"use strict";n.d(t,{BV:()=>x,wv:()=>v});var a=n(4679),r=n(5050),s=n(6581),o=n(2145),i=n(8864),c=n(7269),l=n(115),u=n(6147);class d{constructor(e,t){this.backendTimer=e,this.logger=t,null==t&&(this.logger=new p)}profileKernel(e,t,n){let a;const s=()=>{a=n()};let o;const i=l.now();if(this.backendTimer.timerAvailable())o=this.backendTimer.time(s);else{s();for(const e of a)e.dataSync();o=Promise.resolve({kernelMs:l.now()-i})}if((0,r.OB)().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let r=0;r<a.length;r++){const t=a[r];t.data().then((n=>{h(n,t.dtype,e)}))}return{kernelName:e,outputs:a,inputs:t,timeMs:o.then((e=>e.kernelMs)),extraInfo:o.then((e=>null!=e.getExtraProfileInfo?e.getExtraProfileInfo():""))}}logKernelProfile(e){const{kernelName:t,outputs:n,timeMs:a,inputs:r,extraInfo:s}=e;n.forEach((e=>{Promise.all([e.data(),a,s]).then((n=>{this.logger.logKernelProfile(t,e,n[0],n[1],r,n[2])}))}))}}function h(e,t,n){if("float32"!==t)return!1;for(let a=0;a<e.length;a++){const t=e[a];if(isNaN(t)||!isFinite(t))return console.warn("Found ".concat(t," in the result of '").concat(n,"'")),!0}return!1}class p{logKernelProfile(e,t,n,a,r,s){const o="number"===typeof a?u.oj("".concat(a,"ms"),9):a.error,i=u.oj(e,25),c=t.rank,l=t.size,d=u.oj(t.shape.toString(),14);let h="";for(const u in r){const e=r[u];if(null!=e){const n=e.shape||t.shape,a=n.length;h+="".concat(u,": ").concat(a,"D ").concat(a>0?n:""," ")}}console.log("%c".concat(i,"\t%c").concat(o,"\t%c").concat(c,"D ").concat(d,"\t%c").concat(l,"\t%c").concat(h,"\t%c").concat(s),"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}}var f=n(4376),m=n(9064);function g(e){return null!=e.kernelName}class y{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map((e=>e.name))))}}}dispose(){for(const e in this.registeredVariables)this.registeredVariables[e].dispose()}}class b{constructor(e){this.ENV=e,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new y}async ready(){if(null!=this.pendingBackendInit)return this.pendingBackendInit.then((()=>{}));if(null!=this.backendInstance)return;const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const n=e[t];if(await this.initializeBackend(n).success)return void await this.setBackend(n)}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(null!=this.pendingBackendInit)throw new Error("Backend '".concat(this.backendName,"' has not yet been initialized. Make ")+"sure to await tf.ready() or await tf.setBackend() before calling other methods");if(null==this.backendInstance){const{name:e,asyncInit:t}=this.initializeBackendsAndReturnBest();if(t)throw new Error("The highest priority backend '".concat(e,"' has not yet been ")+"initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods");this.setBackend(e)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(e){if(!(e in this.registry)){if(!(e in this.registryFactory))return null;{const{asyncInit:t}=this.initializeBackend(e);if(t)return null}}return this.registry[e]}findBackendFactory(e){return e in this.registryFactory?this.registryFactory[e].factory:null}registerBackend(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1;return e in this.registryFactory?(c.Z("".concat(e," backend was already registered. ")+"Reusing existing backend factory."),!1):(this.registryFactory[e]={factory:t,priority:n},!0)}async setBackend(e){if(null==this.registryFactory[e])throw new Error("Backend name '".concat(e,"' not found in registry"));if(this.backendName=e,null==this.registry[e]){this.backendInstance=null;const{success:t,asyncInit:n}=this.initializeBackend(e);if(!(n?await t:t))return!1}return this.backendInstance=this.registry[e],this.setupRegisteredKernels(),this.profiler=new d(this.backendInstance),!0}setupRegisteredKernels(){(0,i.tr)(this.backendName).forEach((e=>{null!=e.setupFunc&&e.setupFunc(this.backendInstance)}))}disposeRegisteredKernels(e){(0,i.tr)(e).forEach((t=>{null!=t.disposeFunc&&t.disposeFunc(this.registry[e])}))}initializeBackend(e){const t=this.registryFactory[e];if(null==t)throw new Error("Cannot initialize backend ".concat(e,", no registration found."));try{const n=t.factory();if(!n||n instanceof a.Zu||"function"!==typeof n.then)return this.registry[e]=n,{success:!0,asyncInit:!1};{const t=++this.pendingBackendInitId,a=n.then((n=>!(t<this.pendingBackendInitId)&&(this.registry[e]=n,this.pendingBackendInit=null,!0))).catch((n=>(t<this.pendingBackendInitId||(this.pendingBackendInit=null,c.Z("Initialization of backend ".concat(e," failed")),c.Z(n.stack||n.message)),!1)));return this.pendingBackendInit=a,{success:a,asyncInit:!0}}}catch(n){return c.Z("Initialization of backend ".concat(e," failed")),c.Z(n.stack||n.message),{success:!1,asyncInit:!1}}}removeBackend(e){if(!(e in this.registryFactory))throw new Error("".concat(e," backend not found in registry"));this.backendName===e&&null!=this.pendingBackendInit&&this.pendingBackendInitId++,e in this.registry&&(this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e]),delete this.registryFactory[e],this.backendName===e&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(0===Object.keys(this.registryFactory).length)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort(((e,t)=>this.registryFactory[t].priority-this.registryFactory[e].priority))}initializeBackendsAndReturnBest(){const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const n=e[t],{success:a,asyncInit:r}=this.initializeBackend(n);if(r||a)return{name:n,asyncInit:r}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(e,t){const n=this.state.tensorInfo.get(t),a=n.backend,r=this.readSync(t),s=a.refCount(t);a.disposeData(t,!0),n.backend=e,e.move(t,r,n.shape,n.dtype,s),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(e,t){let n,a=null;if(null==t){if("function"!==typeof e)throw new Error("Please provide a function to tidy()");t=e}else{if("string"!==typeof e&&!(e instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if("function"!==typeof t)throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");a=e}return this.scopedRun((()=>this.startScope(a)),(()=>this.endScope(n)),(()=>(n=t(),n instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),n)))}scopedRun(e,t,n){e();try{const e=n();return t(),e}catch(a){throw t(),a}}nextTensorId(){return b.nextTensorId++}nextVariableId(){return b.nextVariableId++}clone(e){const t=x.runKernel(o.iJz,{x:e}),n={x:e};return this.addTapeNode(this.state.activeScope.name,n,[t],(e=>({x:()=>{const t={x:e},n={dtype:"float32"};return x.runKernel(o.RFZ,t,n)}})),[],{}),t}runKernel(e,t,n){null==this.backendName&&this.backend;if(!(null!=(0,i.pI)(e,this.backendName)))throw new Error("Kernel '".concat(e,"' not registered for backend '").concat(this.backendName,"'"));return this.runKernelFunc({kernelName:e,inputs:t,attrs:n})}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(e,t,n){const a=this.backend.numDataIds();let r=0;n.forEach((e=>{r+="complex64"===e.dtype?3:1}));const s=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],o=a-t-r-s;if(o>0)throw new Error("Backend '".concat(this.backendName,"' has an internal memory leak ")+"(".concat(o," data ids) after running '").concat(e,"'"))}runKernelFunc(e){let t,n=[];const a=this.isTapeOn(),r=this.state.numBytes,s=this.state.numTensors;let o,c;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0),null==this.backendName&&this.backend;const l=g(e)?e.kernelName:null!=this.state.activeScope?this.state.activeScope.name:"";if(g(e)){const{kernelName:t,inputs:r,attrs:s}=e;null==this.backendName&&this.backend;const l=(0,i.pI)(t,this.backendName);u.hu(null!=l,(()=>"Cannot find registered kernel '".concat(t,"' for backend '").concat(this.backendName,"'"))),o=()=>{const e=this.backend.numDataIds();c=l.kernelFunc({inputs:r,attrs:s,backend:this.backend});const o=Array.isArray(c)?c:[c];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(t,e,o);const i=o.map((e=>null!=e.rank?e:this.makeTensorFromTensorInfo(e)));if(a){const e=this.getTensorsForGradient(t,r,i);n=this.saveTensorsForBackwardMode(e)}return i}}else{const{forwardFunc:t}=e,r=e=>{a&&(n=e.map((e=>this.keep(this.clone(e)))))};o=()=>{const e=this.backend.numDataIds();c=this.tidy((()=>t(this.backend,r)));const n=Array.isArray(c)?c:[c];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(l,e,n),n}}const{inputs:d,attrs:h}=e,p=g(e)?null:e.backwardsFunc;let f;return this.scopedRun((()=>this.state.kernelDepth++),(()=>this.state.kernelDepth--),(()=>{this.ENV.getBool("DEBUG")||this.state.profiling?(f=this.profiler.profileKernel(l,d,(()=>o())),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(f),t=f.outputs):t=o()})),a&&this.addTapeNode(l,d,t,p,n,h),this.state.profiling&&this.state.activeProfile.kernels.push({name:l,bytesAdded:this.state.numBytes-r,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-s,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(d).map((e=>null!=d[e]?d[e].shape:null)),outputShapes:t.map((e=>e.shape)),kernelTimeMs:f.timeMs,extraInfo:f.extraInfo}),Array.isArray(c)?t:t[0]}saveTensorsForBackwardMode(e){const t=e.map((e=>this.keep(this.clone(e))));return t}getTensorsForGradient(e,t,n){const a=(0,i.uk)(e);if(null!=a){const e=a.inputsToSave||[],r=a.outputsToSave||[];let s;a.saveAllInputs?(u.hu(Array.isArray(t),(()=>"saveAllInputs is true, expected inputs to be an array.")),s=Object.keys(t).map((e=>t[e]))):s=e.map((e=>t[e]));const o=n.filter(((e,t)=>r[t]));return s.concat(o)}return[]}makeTensor(e,t,n,a){if(null==e)throw new Error("Values passed to engine.makeTensor() are null");n=n||"float32",a=a||this.backend;let r=e;"string"===n&&u.HD(e[0])&&(r=e.map((e=>l.encodeString(e))));const s=a.write(r,t,n),o=new f.es(t,n,s,this.nextTensorId());if(this.trackTensor(o,a),"string"===n){const e=this.state.tensorInfo.get(s),t=(0,u.Ub)(r);this.state.numBytes+=t-e.bytes,e.bytes=t}return o}makeTensorFromDataId(e,t,n,a){const r={dataId:e,shape:t,dtype:n=n||"float32"};return this.makeTensorFromTensorInfo(r,a)}makeTensorFromTensorInfo(e,t){const{dataId:n,shape:a,dtype:r}=e,s=new f.es(a,r,n,this.nextTensorId());return this.trackTensor(s,t),s}makeVariable(e){let t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],n=arguments.length>2?arguments[2]:void 0,a=arguments.length>3?arguments[3]:void 0;n=n||this.nextVariableId().toString(),null!=a&&a!==e.dtype&&(e=e.cast(a));const r=new f._w(e,t,n,this.nextTensorId());if(null!=this.state.registeredVariables[r.name])throw new Error("Variable with name ".concat(r.name," was already registered"));return this.state.registeredVariables[r.name]=r,this.incRef(r,this.backend),r}trackTensor(e,t){this.state.numTensors++,"string"===e.dtype&&this.state.numStringTensors++;let n=0;"complex64"!==e.dtype&&"string"!==e.dtype&&(n=e.size*u.bT(e.dtype)),this.state.numBytes+=n,this.state.tensorInfo.has(e.dataId)||(this.state.numDataBuffers++,this.state.tensorInfo.set(e.dataId,{backend:t||this.backend,dtype:e.dtype,shape:e.shape,bytes:n})),e instanceof f._w||this.track(e)}incRef(e,t){this.trackTensor(e,t),this.backend.incRef(e.dataId)}removeDataId(e,t){this.state.tensorInfo.has(e)&&this.state.tensorInfo.get(e).backend===t&&(this.state.tensorInfo.delete(e),this.state.numDataBuffers--)}disposeTensor(e){if(!this.state.tensorInfo.has(e.dataId))return;const t=this.state.tensorInfo.get(e.dataId);if(this.state.numTensors--,"string"===e.dtype&&(this.state.numStringTensors--,this.state.numBytes-=t.bytes),"complex64"!==e.dtype&&"string"!==e.dtype){const t=e.size*u.bT(e.dtype);this.state.numBytes-=t}t.backend.disposeData(e.dataId)&&this.removeDataId(e.dataId,t.backend)}disposeVariables(){for(const e in this.state.registeredVariables){const t=this.state.registeredVariables[e];this.disposeVariable(t)}}disposeVariable(e){this.disposeTensor(e),null!=this.state.registeredVariables[e.name]&&delete this.state.registeredVariables[e.name]}memory(){const e=this.backend.memory();return e.numTensors=this.state.numTensors,e.numDataBuffers=this.state.numDataBuffers,e.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(e.unreliable=!0,null==e.reasons&&(e.reasons=[]),e.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),e}async profile(e){this.state.profiling=!0;const t=this.state.numBytes,n=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await e(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map((e=>e.totalBytesSnapshot))),this.state.activeProfile.newBytes=this.state.numBytes-t,this.state.activeProfile.newTensors=this.state.numTensors-n;for(const a of this.state.activeProfile.kernels)a.kernelTimeMs=await a.kernelTimeMs,a.extraInfo=await a.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&0===this.state.kernelDepth}addTapeNode(e,t,n,a,r,s){const o={id:this.state.nextTapeNodeId++,kernelName:e,inputs:t,outputs:n,saved:r},c=(0,i.uk)(e);null!=c&&(a=c.gradFunc),null!=a&&(o.gradient=e=>(e=e.map(((e,t)=>{if(null==e){const e=n[t],a=u.wT(e.size,e.dtype);return this.makeTensor(a,e.shape,e.dtype)}return e})),a(e.length>1?e:e[0],r,s))),this.state.activeTape.push(o)}keep(e){return e.kept=!0,e}startTape(){0===this.state.gradientDepth&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(e){const t={track:[],name:"unnamed scope",id:this.state.nextScopeId++};e&&(t.name=e),this.state.scopeStack.push(t),this.state.activeScope=t}endScope(e){const t=(0,m.getTensorsInContainer)(e),n=new Set(t.map((e=>e.id)));for(let r=0;r<this.state.activeScope.track.length;r++){const e=this.state.activeScope.track[r];e.kept||n.has(e.id)||e.dispose()}const a=this.state.scopeStack.pop();this.state.activeScope=0===this.state.scopeStack.length?null:this.state.scopeStack[this.state.scopeStack.length-1],t.forEach((e=>{e.kept||e.scopeId!==a.id||this.track(e)}))}gradients(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]&&arguments[3];if(u.hu(t.length>0,(()=>"gradients() received an empty list of xs.")),null!=n&&"float32"!==n.dtype)throw new Error("dy must have 'float32' dtype, but has '".concat(n.dtype,"'"));const r=this.scopedRun((()=>this.startTape()),(()=>this.endTape()),(()=>this.tidy("forward",e)));u.hu(r instanceof f.es,(()=>"The result y returned by f() must be a tensor."));const s=function(e,t,n){const a={},r={};for(let c=0;c<t.length;c++)a[t[c].id]=!0;for(let c=0;c<e.length;c++){const n=e[c],s=n.inputs;for(const e in s){const o=s[e];let i=!1;for(let e=0;e<t.length;e++)if(a[o.id]){n.outputs.forEach((e=>a[e.id]=!0)),i=!0,r[n.id]=!0;break}if(i)break}}const s={};s[n.id]=!0;const o={};for(let c=e.length-1;c>=0;c--){const t=e[c],n=t.inputs;for(let e=0;e<t.outputs.length;e++)if(s[t.outputs[e].id]){for(const e in n)s[n[e].id]=!0,o[t.id]=!0;break}}const i=[];for(let c=0;c<e.length;c++){const t=e[c];if(r[t.id]&&o[t.id]){const e={};for(const r in t.inputs){const n=t.inputs[r];a[n.id]&&(e[r]=n)}const n=Object.assign({},t);n.inputs=e,n.outputs=t.outputs,i.push(n)}}return i}(this.state.activeTape,t,r);if(!a&&0===s.length&&t.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",(()=>{const e={};e[r.id]=null==n?function(e){const t=(0,u.p8)((0,u.NA)(e),"float32");return x.makeTensor(t,e,"float32")}(r.shape):n,function(e,t,n,a){for(let r=t.length-1;r>=0;r--){const s=t[r],o=[];if(s.outputs.forEach((t=>{const n=e[t.id];null!=n?o.push(n):o.push(null)})),null==s.gradient)throw new Error("Cannot compute gradient: gradient function not found "+"for ".concat(s.kernelName,"."));const i=s.gradient(o);for(const t in s.inputs){if(!(t in i))throw new Error("Cannot backprop through input ".concat(t,". ")+"Available gradients found: ".concat(Object.keys(i),"."));const r=n((()=>i[t]()));if("float32"!==r.dtype)throw new Error("Error in gradient for op ".concat(s.kernelName,". The gradient of input ")+"".concat(t," must have 'float32' dtype, but has '").concat(r.dtype,"'"));const o=s.inputs[t];if(!u.cO(r.shape,o.shape))throw new Error("Error in gradient for op ".concat(s.kernelName,". The gradient of input ")+"'".concat(t,"' has shape '").concat(r.shape,"', which does not match ")+"the shape of the input '".concat(o.shape,"'"));if(null==e[o.id])e[o.id]=r;else{const t=e[o.id];e[o.id]=a(t,r),t.dispose()}}}}(e,s,(e=>this.tidy(e)),w);const a=t.map((t=>e[t.id]));return 0===this.state.gradientDepth&&(this.state.activeTape.forEach((e=>{for(const t of e.saved)t.dispose()})),this.state.activeTape=null),{value:r,grads:a}}))}customGrad(e){var t=this;return u.hu(u.mf(e),(()=>"The f passed in customGrad(f) must be a function.")),function(){for(var n=arguments.length,a=new Array(n),r=0;r<n;r++)a[r]=arguments[r];let s;u.hu(a.every((e=>e instanceof f.es)),(()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors"));const o={};a.forEach(((e,t)=>{o[t]=e}));const i=(t,n)=>(s=e(...a,n),u.hu(s.value instanceof f.es,(()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor")),u.hu(u.mf(s.gradFunc),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function.")),s.value),c=(e,t)=>{const n=s.gradFunc(e,t),r=Array.isArray(n)?n:[n];u.hu(r.length===a.length,(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...).")),u.hu(r.every((e=>e instanceof f.es)),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors."));const o={};return r.forEach(((e,t)=>{o[t]=()=>e})),o};return t.runKernelFunc({forwardFunc:i,backwardsFunc:c,inputs:o})}}readSync(e){return this.state.tensorInfo.get(e).backend.readSync(e)}read(e){return this.state.tensorInfo.get(e).backend.read(e)}readToGPU(e,t){return this.state.tensorInfo.get(e).backend.readToGPU(e,t)}async time(e){const t=(0,l.now)(),n=await this.backend.time(e);return n.wallMs=(0,l.now)()-t,n}track(e){return null!=this.state.activeScope&&(e.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(e)),e}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new y;for(const e in this.registry)this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}}function v(){const e=(0,s.D)();if(null==e._tfengine){const t=new r.qA(e);e._tfengine=new b(t)}return(0,r.iG)(e._tfengine.ENV),(0,f.Vi)((()=>e._tfengine)),e._tfengine}b.nextTensorId=0,b.nextVariableId=0;const x=v();function w(e,t){const n={a:e,b:t};return x.runKernel(o.mm_,n)}},5050:(e,t,n)=>{"use strict";n.d(t,{OB:()=>c,Vi:()=>l,iG:()=>u,qA:()=>s});var a=n(6147);const r="tfjsflags";class s{constructor(e){this.global=e,this.flags={},this.flagRegistry={},this.urlFlags={},this.getQueryParams=o,this.populateURLFlags()}setPlatform(e,t){null!=this.platform&&(c().getBool("IS_TEST")||c().getBool("PROD")||console.warn("Platform ".concat(this.platformName," has already been set. ")+"Overwriting the platform with ".concat(e,"."))),this.platformName=e,this.platform=t}registerFlag(e,t,n){if(this.flagRegistry[e]={evaluationFn:t,setHook:n},null!=this.urlFlags[e]){const t=this.urlFlags[e];c().getBool("IS_TEST")||c().getBool("PROD")||console.warn("Setting feature override from URL ".concat(e,": ").concat(t,".")),this.set(e,t)}}async getAsync(e){return e in this.flags||(this.flags[e]=await this.evaluateFlag(e)),this.flags[e]}get(e){if(e in this.flags)return this.flags[e];const t=this.evaluateFlag(e);if((0,a.tI)(t))throw new Error("Flag ".concat(e," cannot be synchronously evaluated. ")+"Please use getAsync() instead.");return this.flags[e]=t,this.flags[e]}getNumber(e){return this.get(e)}getBool(e){return this.get(e)}getString(e){return this.get(e)}getFlags(){return this.flags}get features(){return this.flags}set(e,t){if(null==this.flagRegistry[e])throw new Error("Cannot set flag ".concat(e," as it has not been registered."));this.flags[e]=t,null!=this.flagRegistry[e].setHook&&this.flagRegistry[e].setHook(t)}evaluateFlag(e){if(null==this.flagRegistry[e])throw new Error("Cannot evaluate flag '".concat(e,"': no evaluation function found."));return this.flagRegistry[e].evaluationFn()}setFlags(e){this.flags=Object.assign({},e)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if("undefined"===typeof this.global||"undefined"===typeof this.global.location||"undefined"===typeof this.global.location.search)return;const e=this.getQueryParams(this.global.location.search);if(r in e){e.tfjsflags.split(",").forEach((e=>{const[t,n]=e.split(":");this.urlFlags[t]=function(e,t){const n=t.toLowerCase();return"true"===n||"false"===n?"true"===n:"".concat(+n)===n?+n:t}(0,n)}))}}}function o(e){const t={};return e.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,(function(e){for(var n=arguments.length,a=new Array(n>1?n-1:0),r=1;r<n;r++)a[r-1]=arguments[r];return i(t,a[0],a[1]),a.join("=")})),t}function i(e,t,n){e[decodeURIComponent(t)]=decodeURIComponent(n||"")}function c(){return l}let l=null;function u(e){l=e}},6581:(e,t,n)=>{"use strict";let a;function r(){if(null==a){let e;if("undefined"!==typeof window)e=window;else if("undefined"!==typeof n.g)e=n.g;else if("undefined"!==typeof process)e=process;else{if("undefined"===typeof self)throw new Error("Could not find a global object");e=self}a=e}return a}function s(e,t){const n=function(){const e=r();return null==e._tfGlobals&&(e._tfGlobals=new Map),e._tfGlobals}();if(n.has(e))return n.get(e);{const a=t();return n.set(e,a),n.get(e)}}n.d(t,{D:()=>r,R:()=>s})},5875:(e,t,n)=>{"use strict";n.d(t,{B9:()=>g,CQ:()=>v,Cd:()=>x,Cn:()=>y,G4:()=>i,MX:()=>u,N5:()=>f,N8:()=>d,N_:()=>w,R:()=>c,SR:()=>h,VY:()=>C,XV:()=>b,cF:()=>l,cj:()=>k,jq:()=>I,lu:()=>m,sq:()=>p,x3:()=>S,y3:()=>T,ze:()=>N});var a=n(318),r=n(5050),s=n(4376),o=n(9064);function i(){(0,r.OB)().set("PROD",!0)}function c(){(0,r.OB)().set("DEBUG",!0)}function l(){(0,r.OB)().set("DEPRECATION_WARNINGS_ENABLED",!1),console.warn("TensorFlow.js deprecation warnings have been disabled.")}function u(e){(0,r.OB)().getBool("DEPRECATION_WARNINGS_ENABLED")&&console.warn(e+" You can disable deprecation warnings with tf.disableDeprecationWarnings().")}function d(){a.BV.disposeVariables()}function h(){return a.BV}function p(){return a.BV.memory()}function f(e){return a.BV.profile(e)}function m(e,t){return a.BV.tidy(e,t)}function g(e){(0,o.getTensorsInContainer)(e).forEach((e=>e.dispose()))}function y(e){return a.BV.keep(e)}function b(e){return a.BV.time(e)}function v(e){return a.BV.setBackend(e)}function x(){return a.BV.ready()}function w(){return a.BV.backendName}function k(e){a.BV.removeBackend(e)}function S(e){return a.BV.findBackend(e)}function N(e){return a.BV.findBackendFactory(e)}function I(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1;return a.BV.registerBackend(e,t,n)}function T(){return a.BV.backend}function C(e,t){(0,r.OB)().setPlatform(e,t)}(0,s.FZ)(u)},6450:(e,t,n)=>{"use strict";n.d(t,{UQ:()=>i,cb:()=>h,fN:()=>u,h7:()=>l,pn:()=>d,ti:()=>c});var a=n(318),r=n(4376),s=n(8354),o=n(6147);function i(e){return o.hu(o.mf(e),(()=>"The f passed in grad(f) must be a function")),(t,n)=>{const r=(0,s._1)(t,"x","tf.grad","string_or_numeric"),i=null!=n?(0,s._1)(n,"dy","tf.grad"):null;return a.BV.tidy((()=>{const{value:t,grads:n}=a.BV.gradients((()=>e(r)),[r],i);return null!=i&&o.k5(t.shape,i.shape,"The shape of dy passed in grad(f)(x, dy) must match the shape returned by f(x)"),p(n),n[0]}))}}function c(e){return o.hu(o.mf(e),(()=>"The f passed in grads(f) must be a function")),(t,n)=>{o.hu(Array.isArray(t),(()=>"The args passed in grads(f)(args) must be an array of `Tensor`s or `TensorLike`s"));const r=(0,s.sI)(t,"args","tf.grads","string_or_numeric"),i=null!=n?(0,s._1)(n,"dy","tf.grads"):null;return a.BV.tidy((()=>{const{value:t,grads:n}=a.BV.gradients((()=>e(...r)),r,i);return null!=i&&o.k5(t.shape,i.shape,"The shape of dy passed in grads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),p(n),n}))}}function l(e){return o.hu(o.mf(e),(()=>"The f passed in valueAndGrad(f) must be a function")),(t,n)=>{o.hu(t instanceof r.es,(()=>"The x passed in valueAndGrad(f)(x) must be a tensor")),o.hu(null==n||n instanceof r.es,(()=>"The dy passed in valueAndGrad(f)(x, dy) must be a tensor"));const{grads:s,value:i}=a.BV.gradients((()=>e(t)),[t],n);return p(s),{grad:s[0],value:i}}}function u(e){return o.hu(o.mf(e),(()=>"The f passed in valueAndGrads(f) must be a function")),(t,n)=>{o.hu(Array.isArray(t)&&t.every((e=>e instanceof r.es)),(()=>"The args passed in valueAndGrads(f)(args) must be array of tensors")),o.hu(null==n||n instanceof r.es,(()=>"The dy passed in valueAndGrads(f)(args, dy) must be a tensor"));const s=a.BV.gradients((()=>e(...t)),t,n);return null!=n&&o.k5(s.value.shape,n.shape,"The shape of dy passed in valueAndGrads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),p(s.grads),s}}function d(e,t){o.hu(o.mf(e),(()=>"The f passed in variableGrads(f) must be a function")),o.hu(null==t||Array.isArray(t)&&t.every((e=>e instanceof r._w)),(()=>"The varList passed in variableGrads(f, varList) must be an array of variables"));const n=null!=t;if(!n){t=[];for(const e in a.BV.registeredVariables)t.push(a.BV.registeredVariables[e])}const s=n?t.filter((e=>!e.trainable)):null,i=t.length;t=t.filter((e=>e.trainable)),o.hu(t.length>0,(()=>"variableGrads() expects at least one of the input variables to "+"be trainable, but none of the ".concat(i," variables is ")+"trainable."));const{value:c,grads:l}=a.BV.gradients(e,t,null,!0);o.hu(l.some((e=>null!=e)),(()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize().")),o.hu(0===c.rank,(()=>"The f passed in variableGrads(f) must return a scalar, but it "+"returned a rank-".concat(c.rank," tensor")));const u={};return t.forEach(((e,t)=>{null!=l[t]&&(u[e.name]=l[t])})),null!=s&&s.forEach((e=>u[e.name]=null)),{value:c,grads:u}}function h(e){return a.BV.customGrad(e)}function p(e){if(e.filter((e=>null==e)).length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that\n    the f you passed encloses all operations that lead from x to y.")}},3613:(e,t,n)=>{"use strict";n.r(t),n.d(t,{Abs:()=>yt.SYM,Acos:()=>yt.VGw,Acosh:()=>yt.SpW,AdadeltaOptimizer:()=>Ae,AdagradOptimizer:()=>Fe,AdamOptimizer:()=>Me,AdamaxOptimizer:()=>Be,Add:()=>yt.mm_,AddN:()=>yt.Xze,All:()=>yt.oT6,Any:()=>yt.IKK,ArgMax:()=>yt.sJF,ArgMin:()=>yt.aJk,Asin:()=>yt.M2y,Asinh:()=>yt.qw7,Atan:()=>yt.jMg,Atan2:()=>yt.QCc,Atanh:()=>yt.Oyi,AvgPool:()=>yt.JhU,AvgPool3D:()=>yt._k9,AvgPool3DGrad:()=>yt.IMb,AvgPoolGrad:()=>yt.ROF,BatchMatMul:()=>yt.XLW,BatchToSpaceND:()=>yt.zws,Bincount:()=>yt.zvY,BitwiseAnd:()=>yt.hCO,BroadcastArgs:()=>yt.eEB,BroadcastTo:()=>yt.Ly9,Cast:()=>yt.RFZ,Ceil:()=>yt.gJX,ClipByValue:()=>yt.xnO,Complex:()=>yt.Zz9,ComplexAbs:()=>yt.yj2,Concat:()=>yt.Eh3,Conv2D:()=>yt.mhS,Conv2DBackpropFilter:()=>yt.wUP,Conv2DBackpropInput:()=>yt.wm,Conv3D:()=>yt.x12,Conv3DBackpropFilterV2:()=>yt.o2y,Conv3DBackpropInputV2:()=>yt.ik2,Cos:()=>yt.mc4,Cosh:()=>yt.TR1,CropAndResize:()=>yt.VcC,Cumprod:()=>yt.Byc,Cumsum:()=>yt.iHb,DataStorage:()=>ua.JL,DenseBincount:()=>yt.QRR,DepthToSpace:()=>yt.T0n,DepthwiseConv2dNative:()=>yt.cie,DepthwiseConv2dNativeBackpropFilter:()=>yt.sL$,DepthwiseConv2dNativeBackpropInput:()=>yt.y7R,Diag:()=>yt.$w,Dilation2D:()=>yt.p4S,Dilation2DBackpropFilter:()=>yt.Vn9,Dilation2DBackpropInput:()=>yt.ekb,Draw:()=>yt.hGc,ENV:()=>b.Vi,Einsum:()=>yt.$g6,Elu:()=>yt.SX0,EluGrad:()=>yt.HEU,Environment:()=>b.qA,Equal:()=>yt.hdR,Erf:()=>yt.Omj,Exp:()=>yt.NEP,ExpandDims:()=>yt.YFo,Expm1:()=>yt.Y0y,FFT:()=>yt.vwp,Fill:()=>yt.deh,FlipLeftRight:()=>yt.Uyb,Floor:()=>yt.OR,FloorDiv:()=>yt.jeX,FromPixels:()=>yt.eBW,FusedBatchNorm:()=>yt.sHE,FusedConv2D:()=>yt._V0,FusedDepthwiseConv2D:()=>yt.luS,GatherNd:()=>yt.q1x,GatherV2:()=>yt.qi_,Greater:()=>yt.iZT,GreaterEqual:()=>yt.Acj,IFFT:()=>yt.Qg5,Identity:()=>yt.iJz,Imag:()=>yt.J_u,IsFinite:()=>yt.avt,IsInf:()=>yt.iWB,IsNan:()=>yt.r7n,KernelBackend:()=>ua.Zu,LRN:()=>yt.eZ0,LRNGrad:()=>yt.Hhh,LeakyRelu:()=>yt.J$2,Less:()=>yt.vtC,LessEqual:()=>yt.CAk,LinSpace:()=>yt.e7N,Log:()=>yt.ZbH,Log1p:()=>yt.kU,LogSoftmax:()=>yt.qCd,LogicalAnd:()=>yt.PYm,LogicalNot:()=>yt.VfG,LogicalOr:()=>yt.MZg,LogicalXor:()=>yt.w6g,LowerBound:()=>yt.qIC,MatrixBandPart:()=>yt.J7O,Max:()=>yt.YoZ,MaxPool:()=>yt.mTV,MaxPool3D:()=>yt.OAf,MaxPool3DGrad:()=>yt.OU7,MaxPoolGrad:()=>yt.OV7,MaxPoolWithArgmax:()=>yt.vFR,Maximum:()=>yt.BMI,Mean:()=>yt.q2K,Min:()=>yt.c17,Minimum:()=>yt.q8u,MirrorPad:()=>yt.jQs,Mod:()=>yt.Vbg,MomentumOptimizer:()=>Ve,Multinomial:()=>yt.NZg,Multiply:()=>yt.wYn,Neg:()=>yt.kuV,NonMaxSuppressionV3:()=>yt.uv1,NonMaxSuppressionV4:()=>yt.cye,NonMaxSuppressionV5:()=>yt.W0H,NotEqual:()=>yt.yQU,OP_SCOPE_SUFFIX:()=>Yt.zvA,OneHot:()=>yt.we_,OnesLike:()=>yt.qWM,Optimizer:()=>_e,OptimizerConstructors:()=>Kt,Pack:()=>yt.QiL,PadV2:()=>yt.lyA,Pool:()=>yt.Kgp,Pow:()=>yt.pe_,Prelu:()=>yt.o0g,Prod:()=>yt.DlI,RMSPropOptimizer:()=>We,RaggedGather:()=>yt.dDz,RaggedRange:()=>yt.CQl,RaggedTensorToTensor:()=>yt.BiW,Range:()=>yt.e6w,Rank:()=>Qt.yw,Real:()=>yt.xJR,RealDiv:()=>yt.oHH,Reciprocal:()=>yt.$HU,Reduction:()=>Zt.I,Relu:()=>yt.qkr,Relu6:()=>yt.SbG,Reshape:()=>yt.HZH,ResizeBilinear:()=>yt._Yw,ResizeBilinearGrad:()=>yt.zbQ,ResizeNearestNeighbor:()=>yt.dpD,ResizeNearestNeighborGrad:()=>yt.Hmb,Reverse:()=>yt.mKl,RotateWithOffset:()=>yt.b9H,Round:()=>yt.e07,Rsqrt:()=>yt.bV0,SGDOptimizer:()=>Pe,ScatterNd:()=>yt.xQA,SearchSorted:()=>yt.nr8,Select:()=>yt.PhF,Selu:()=>yt.oFR,Sigmoid:()=>yt.a5O,Sign:()=>yt.i5y,Sin:()=>yt.RQH,Sinh:()=>yt.wYB,Slice:()=>yt.p2w,Softmax:()=>yt.Gcp,Softplus:()=>yt.MRv,SpaceToBatchND:()=>yt.TQc,SparseFillEmptyRows:()=>yt.O3z,SparseReshape:()=>yt.nhH,SparseSegmentMean:()=>yt.w3H,SparseSegmentSum:()=>yt.ZjV,SparseToDense:()=>yt.D2d,SplitV:()=>yt.L8s,Sqrt:()=>yt.FKq,Square:()=>yt.bK0,SquaredDifference:()=>yt._tC,StaticRegexReplace:()=>yt.e0R,Step:()=>yt.h8e,StridedSlice:()=>yt.jQk,StringNGrams:()=>yt._JP,StringSplit:()=>yt.s1s,StringToHashBucketFast:()=>yt.XkS,Sub:()=>yt.Tr8,Sum:()=>yt.GBy,Tan:()=>yt.sEM,Tanh:()=>yt.MIZ,Tensor:()=>he.es,TensorBuffer:()=>he.YD,TensorScatterUpdate:()=>yt.SIB,Tile:()=>yt.n9L,TopK:()=>yt.cWu,Transform:()=>yt.wx7,Transpose:()=>yt.G3Y,Unique:()=>yt.kpP,Unpack:()=>yt.ToN,UnsortedSegmentSum:()=>yt.Qvg,UpperBound:()=>yt.XDQ,Variable:()=>he._w,ZerosLike:()=>yt.RuY,_FusedMatMul:()=>yt.usg,abs:()=>Yt.WnP,acos:()=>Yt.Khb,acosh:()=>Yt.__u,add:()=>Yt.IHx,addN:()=>Yt.QBD,all:()=>Yt.$6P,any:()=>Yt.YjB,argMax:()=>Yt.NqF,argMin:()=>Yt.vHJ,asin:()=>Yt.ZRM,asinh:()=>Yt.VfV,atan:()=>Yt.z4N,atan2:()=>Yt.fvJ,atanh:()=>Yt.C80,avgPool:()=>Yt.wS1,avgPool3d:()=>Yt.uR5,backend:()=>fe.y3,backend_util:()=>d,basicLSTMCell:()=>Yt.zEQ,batchNorm:()=>Yt.tgs,batchNorm2d:()=>Yt.Dxk,batchNorm3d:()=>Yt.JY5,batchNorm4d:()=>Yt.p3b,batchToSpaceND:()=>Yt.E4h,bincount:()=>Yt.yE8,bitwiseAnd:()=>Yt.ycw,booleanMaskAsync:()=>Yt.anm,broadcastArgs:()=>Yt.XsQ,broadcastTo:()=>Yt.UFq,broadcast_util:()=>gt,browser:()=>i,buffer:()=>Yt.f3b,cast:()=>Yt.pju,ceil:()=>Yt.mDi,clipByValue:()=>Yt.iUl,clone:()=>Yt.d9v,complex:()=>Yt.PYB,concat:()=>Yt.zoF,concat1d:()=>Yt.gME,concat2d:()=>Yt.Izb,concat3d:()=>Yt.MNy,concat4d:()=>Yt.ZaL,conv1d:()=>Yt.PAt,conv2d:()=>Yt.Tek,conv2dTranspose:()=>Yt.bc,conv3d:()=>Yt.pdZ,conv3dTranspose:()=>Yt.$QV,copyRegisteredKernels:()=>bt.T3,cos:()=>Yt.mCk,cosh:()=>Yt.f9Y,cosineWindow:()=>Yt.mew,cumprod:()=>Yt.$Gn,cumsum:()=>Yt.zbp,customGrad:()=>we.cb,denseBincount:()=>Yt.ppE,deprecationWarn:()=>fe.MX,depthToSpace:()=>Yt.nTT,depthwiseConv2d:()=>Yt.B10,device_util:()=>a,diag:()=>Yt.Ka3,dilation2d:()=>Yt.WmZ,disableDeprecationWarnings:()=>fe.cF,dispose:()=>fe.B9,disposeVariables:()=>fe.N8,div:()=>Yt.hiC,divNoNan:()=>Yt.NTj,dot:()=>Yt.AKD,dropout:()=>Yt.rvX,einsum:()=>Yt.WYO,elu:()=>Yt.pyx,enableDebugMode:()=>fe.R,enableProdMode:()=>fe.G4,enclosingPowerOfTwo:()=>Yt.GRh,engine:()=>fe.SR,ensureShape:()=>Yt.EDe,env:()=>b.OB,equal:()=>Yt.DgJ,erf:()=>Yt.qNN,euclideanNorm:()=>Yt.d2q,exp:()=>Yt.Qqt,expandDims:()=>Yt.dt4,expm1:()=>Yt.t$B,eye:()=>Yt.iyy,fft:()=>Yt.kp_,fill:()=>Yt.hlL,findBackend:()=>fe.x3,findBackendFactory:()=>fe.ze,floor:()=>Yt.GWj,floorDiv:()=>Yt.qPi,fused:()=>Yt.imm,gather:()=>Yt.Iqj,gatherND:()=>Yt.dbB,gather_util:()=>c,getBackend:()=>fe.N_,getGradient:()=>bt.uk,getKernel:()=>bt.pI,getKernelsForBackend:()=>bt.tr,grad:()=>we.UQ,grads:()=>we.ti,greater:()=>Yt.pjt,greaterEqual:()=>Yt.brS,ifft:()=>Yt.Sxn,imag:()=>Yt.asL,image:()=>Yt.BHj,inTopKAsync:()=>Yt.V3u,io:()=>s,irfft:()=>Yt.wx0,isFinite:()=>Yt.xVT,isInf:()=>Yt.UWc,isNaN:()=>Yt.i2d,keep:()=>fe.Cn,kernel_impls:()=>h,leakyRelu:()=>Yt.hi7,less:()=>Yt.d9m,lessEqual:()=>Yt.zN1,linalg:()=>Yt.$r2,linspace:()=>Yt.SX3,localResponseNormalization:()=>Yt.G9k,log:()=>Yt.cM7,log1p:()=>Yt.Krr,logSigmoid:()=>Yt.e_t,logSoftmax:()=>Yt.CmS,logSumExp:()=>Yt.l_t,logicalAnd:()=>Yt.HvI,logicalNot:()=>Yt.hJK,logicalOr:()=>Yt.K5V,logicalXor:()=>Yt.egP,losses:()=>Yt.MB5,lowerBound:()=>Yt.eab,matMul:()=>Yt.OI3,math:()=>o,max:()=>Yt.Fp7,maxPool:()=>Yt._sB,maxPool3d:()=>Yt.YQQ,maxPoolWithArgmax:()=>Yt.Ip$,maximum:()=>Yt.gWQ,mean:()=>Yt.J69,memory:()=>fe.sq,meshgrid:()=>Yt.ry_,min:()=>Yt.VV$,minimum:()=>Yt.LTh,mirrorPad:()=>Yt.VdP,mod:()=>Yt.wQq,moments:()=>Yt.Gi7,movingAverage:()=>Yt.p_,mul:()=>Yt.dC7,multiRNNCell:()=>Yt.rq4,multinomial:()=>Yt.SJ_,neg:()=>Yt.W76,nextFrame:()=>en,norm:()=>Yt.KOy,notEqual:()=>Yt.Quu,oneHot:()=>Yt.lfX,ones:()=>Yt.iUs,onesLike:()=>Yt.JpU,op:()=>Yt.op,outerProduct:()=>Yt.N2O,pad:()=>Yt.vku,pad1d:()=>Yt.pNR,pad2d:()=>Yt.koy,pad3d:()=>Yt.t1L,pad4d:()=>Yt.lGY,pool:()=>Yt.d_R,pow:()=>Yt.sQ3,prelu:()=>Yt.AL3,print:()=>Yt.S0v,prod:()=>Yt.WVs,profile:()=>fe.N5,raggedGather:()=>Yt.$gW,raggedRange:()=>Yt.VT$,raggedTensorToTensor:()=>Yt.N89,rand:()=>Yt.TN_,randomGamma:()=>Yt.wzB,randomNormal:()=>Yt.nGf,randomStandardNormal:()=>Yt.ruB,randomUniform:()=>Yt.LGj,randomUniformInt:()=>Yt.pe5,range:()=>Yt.w6H,ready:()=>fe.Cd,real:()=>Yt.kwC,reciprocal:()=>Yt.M25,registerBackend:()=>fe.jq,registerGradient:()=>bt.Li,registerKernel:()=>bt.wC,relu:()=>Yt.UYe,relu6:()=>Yt.btT,removeBackend:()=>fe.cj,reshape:()=>Yt.XLQ,reverse:()=>Yt.GYS,reverse1d:()=>Yt.SDf,reverse2d:()=>Yt.diP,reverse3d:()=>Yt.sx7,reverse4d:()=>Yt.mG2,rfft:()=>Yt.QEs,round:()=>Yt.NMM,rsqrt:()=>Yt.bp0,scalar:()=>Yt.iD$,scatterND:()=>Yt.snQ,scatter_util:()=>At,searchSorted:()=>Yt.zcT,selu:()=>Yt.U8D,separableConv2d:()=>Yt.U_I,serialization:()=>r,setBackend:()=>fe.CQ,setPlatform:()=>fe.VY,setdiff1dAsync:()=>Yt.ODp,sigmoid:()=>Yt.XD2,sign:()=>Yt.Xxe,signal:()=>Yt.tdS,sin:()=>Yt.O$l,sinh:()=>Yt.R_K,slice:()=>Yt.tPi,slice1d:()=>Yt.jZU,slice2d:()=>Yt.SmN,slice3d:()=>Yt.CnO,slice4d:()=>Yt.p0P,slice_util:()=>Rt,softmax:()=>Yt.XAC,softplus:()=>Yt.Wvh,spaceToBatchND:()=>Yt.fBT,sparse:()=>Yt.rVs,sparseToDense:()=>Yt.ers,spectral:()=>Yt.uN7,split:()=>Yt.Vl2,sqrt:()=>Yt._b3,square:()=>Yt.h62,squaredDifference:()=>Yt.$i,squeeze:()=>Yt.L9e,stack:()=>Yt.knu,step:()=>Yt.Nbs,stridedSlice:()=>Yt.NXj,string:()=>Yt.Z_8,sub:()=>Yt.luU,sum:()=>Yt.Smz,sumOutType:()=>Qt.z4,tan:()=>Yt.ORZ,tanh:()=>Yt.AEp,tensor:()=>Yt.XeE,tensor1d:()=>Yt.RRF,tensor2d:()=>Yt.odF,tensor3d:()=>Yt.wOQ,tensor4d:()=>Yt.yXz,tensor5d:()=>Yt.Bfx,tensor6d:()=>Yt.xZs,tensorScatterUpdate:()=>Yt.Pg0,tensor_util:()=>Ft,test_util:()=>l,tidy:()=>fe.lu,tile:()=>Yt.Gg6,time:()=>fe.XV,topk:()=>Yt.hg7,train:()=>Jt,transpose:()=>Yt.p4s,truncatedNormal:()=>Yt.Xu6,unique:()=>Yt.Two,unregisterGradient:()=>bt.bt,unregisterKernel:()=>bt.nE,unsortedSegmentSum:()=>Yt.pUJ,unstack:()=>Yt.HHK,upcastType:()=>Qt.x8,upperBound:()=>Yt.GaM,util:()=>Dt,valueAndGrad:()=>we.h7,valueAndGrads:()=>we.fN,variable:()=>Yt.VD$,variableGrads:()=>we.pn,version_core:()=>Xt,where:()=>Yt.arb,whereAsync:()=>Yt.itS,zeros:()=>Yt.lls,zerosLike:()=>Yt.P84});var a={};n.r(a),n.d(a,{isBrowser:()=>y,isMobile:()=>g,mockIsMobile:()=>m});var r={};n.r(r),n.d(r,{Serializable:()=>Ie,SerializationMap:()=>Te,getRegisteredName:()=>Ee,registerClass:()=>Ce});var s={};n.r(s),n.d(s,{CompositeArrayBuffer:()=>T.w,browserFiles:()=>qe,browserHTTPRequest:()=>nt,concatenateArrayBuffers:()=>x.JY,copyModel:()=>te,decodeWeights:()=>x.dI,decodeWeightsStream:()=>x.r,encodeWeights:()=>x.yz,fromMemory:()=>ot,fromMemorySync:()=>it,getLoadHandlers:()=>I,getModelArtifactsForJSON:()=>x.jN,getModelArtifactsForJSONSync:()=>x.ji,getModelArtifactsInfoForJSON:()=>x.Q,getSaveHandlers:()=>N,getWeightSpecs:()=>x.hu,http:()=>tt,isHTTPScheme:()=>$e,listModels:()=>$,loadWeights:()=>Ye,moveModel:()=>ne,registerLoadRouter:()=>S,registerSaveRouter:()=>k,removeModel:()=>ee,weightsLoaderFactory:()=>Ze,withSaveHandler:()=>ct,withSaveHandlerSync:()=>lt});var o={};n.r(o),n.d(o,{confusionMatrix:()=>mt});var i={};n.r(i),n.d(i,{draw:()=>Ct,fromPixels:()=>Et,fromPixelsAsync:()=>Nt,toPixels:()=>Tt});var c={};n.r(c),n.d(c,{prepareAndValidate:()=>_t});var l={};n.r(l),n.d(l,{TEST_EPSILON_FLOAT16:()=>Ot,createVideoElement:()=>jt,encodeStrings:()=>Ht,expectArrayBuffersEqual:()=>Gt,expectArraysClose:()=>Mt,expectArraysEqual:()=>Pt,expectNumbersClose:()=>Vt,expectPromiseToFail:()=>Bt,expectValuesInRange:()=>Ut,play:()=>qt,testEpsilon:()=>zt});var u={};n.r(u),n.d(u,{collectGatherOpShapeInfo:()=>sa,computeOutShape:()=>ra,segOpComputeOptimalWindowSize:()=>aa});var d={};n.r(d),n.d(d,{ERF_A1:()=>kn,ERF_A2:()=>Sn,ERF_A3:()=>Nn,ERF_A4:()=>In,ERF_A5:()=>Tn,ERF_P:()=>wn,PARALLELIZE_THRESHOLD:()=>hn,RowPartitionType:()=>rn,SELU_SCALE:()=>xn.$,SELU_SCALEALPHA:()=>xn.y,applyActivation:()=>on.QH,assertAndGetBroadcastShape:()=>gt.assertAndGetBroadcastShape,assertAxesAreInnerMostDims:()=>tn.lB,assertParamsConsistent:()=>nn,assignToTypedArray:()=>Dn,axesAreInnerMostDims:()=>tn.YB,calculateShapes:()=>At.calculateShapes,checkEinsumDimSizes:()=>Vn,checkPadOnDimRoundingMode:()=>sn.m,combineLocations:()=>tn.Vh,combineRaggedTensorToTensorShapes:()=>cn,complexWithEvenIndex:()=>An,complexWithOddIndex:()=>Rn,computeConv2DInfo:()=>sn.Ix,computeConv3DInfo:()=>sn.jw,computeDefaultPad:()=>sn.aO,computeDilation2DInfo:()=>sn.Rf,computeOptimalWindowSize:()=>pn,computeOutAndReduceShapes:()=>tn.kz,computeOutShape:()=>an,computePool2DInfo:()=>sn.Xw,computePool3DInfo:()=>sn.pl,convertConv2DDataFormat:()=>sn.sl,decodeEinsumEquation:()=>Bn,eitherStridesOrDilationsAreOne:()=>sn.jT,expandShapeToKeepDim:()=>tn.rv,exponent:()=>Mn,exponents:()=>On,fromStringArrayToUint8:()=>ia,fromUint8ToStringArray:()=>oa,getAxesPermutation:()=>tn.Q3,getBroadcastDims:()=>gt.getBroadcastDims,getComplexWithIndex:()=>Fn,getEinsumComputePath:()=>Wn,getEinsumPermutation:()=>Pn,getFusedBiasGradient:()=>on.pf,getFusedDyActivation:()=>on.Fr,getImageCenter:()=>fn,getInnerMostAxes:()=>tn.sY,getPermuted:()=>gn,getRaggedRank:()=>un,getReductionAxes:()=>gt.getReductionAxes,getReshaped:()=>mn,getReshapedPermuted:()=>yn,getRowPartitionTypesHelper:()=>ln,getSliceBeginCoords:()=>bn,getSliceSize:()=>vn,getSparseFillEmptyRowsIndicesDenseShapeMismatch:()=>jn,getSparseFillEmptyRowsNegativeIndexErrorMessage:()=>qn,getSparseFillEmptyRowsOutOfRangeIndexErrorMessage:()=>Xn,getSparseReshapeEmptyTensorZeroOutputDimErrorMessage:()=>Yn,getSparseReshapeInputOutputMismatchErrorMessage:()=>Jn,getSparseReshapeInputOutputMultipleErrorMessage:()=>Zn,getSparseReshapeMultipleNegativeOneOutputDimErrorMessage:()=>Kn,getSparseReshapeNegativeOutputDimErrorMessage:()=>Qn,getSparseSegmentReductionIndicesOutOfRangeErrorMessage:()=>na,getSparseSegmentReductionNegativeSegmentIdsErrorMessage:()=>$n,getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage:()=>ea,getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage:()=>ta,getUndoAxesPermutation:()=>tn.LJ,isIdentityPermutation:()=>Un,log:()=>Cn.c,mergeRealAndImagArrays:()=>En,prepareAndValidate:()=>_t,prepareSplitSize:()=>Hn,segment_util:()=>u,shouldFuse:()=>on.uy,slice_util:()=>Rt,splitRealAndImagArrays:()=>_n,stridesOrDilationsArePositive:()=>sn.U3,tupleValuesAreOne:()=>sn.I0,upcastType:()=>Qt.x8,validateDefaultValueShape:()=>dn,validateInput:()=>At.validateInput,validateUpdateShape:()=>At.validateUpdateShape,warn:()=>Cn.Z});var h={};n.r(h),n.d(h,{nonMaxSuppressionV3Impl:()=>ca.GP,nonMaxSuppressionV4Impl:()=>ca.qP,nonMaxSuppressionV5Impl:()=>ca.pA,whereImpl:()=>la.Z});var p=n(318);let f;function m(e){f=e}function g(e){if(void 0!==f)return f;if(e||"undefined"!==typeof navigator&&null!=navigator){if(e||(e=navigator),"ReactNative"===e.product)return!0;const t=e.userAgent||e.vendor||("undefined"!==typeof window?window.opera:"");if(!t){const t=e;return t.userAgentData&&t.userAgentData.mobile}return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(t)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(t.substr(0,4))}return!1}function y(){return"undefined"!==typeof window&&null!=window.document||"undefined"!==typeof WorkerGlobalScope}var b=n(5050);const v=(0,b.OB)();v.registerFlag("DEBUG",(()=>!1),(e=>{e&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")})),v.registerFlag("IS_BROWSER",(()=>y())),v.registerFlag("IS_NODE",(()=>"undefined"!==typeof process&&"undefined"!==typeof process.versions&&"undefined"!==typeof process.versions.node)),v.registerFlag("IS_CHROME",(()=>"undefined"!==typeof navigator&&null!=navigator&&null!=navigator.userAgent&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor))),v.registerFlag("IS_SAFARI",(()=>"undefined"!==typeof navigator&&null!=navigator&&null!=navigator.userAgent&&/Safari/.test(navigator.userAgent)&&/Apple/.test(navigator.vendor))),v.registerFlag("PROD",(()=>!1)),v.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",(()=>v.getBool("DEBUG"))),v.registerFlag("DEPRECATION_WARNINGS_ENABLED",(()=>!0)),v.registerFlag("IS_TEST",(()=>!1)),v.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",(()=>v.getBool("DEBUG"))),v.registerFlag("WRAP_TO_IMAGEBITMAP",(()=>!1)),v.registerFlag("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU",(()=>!1)),v.registerFlag("USE_SETTIMEOUTCUSTOM",(()=>!1));var x=n(1434);class w{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return null==w.instance&&(w.instance=new w),w.instance}static registerSaveRouter(e){w.getInstance().saveRouters.push(e)}static registerLoadRouter(e){w.getInstance().loadRouters.push(e)}static getSaveHandlers(e){return w.getHandlers(e,"save")}static getLoadHandlers(e,t){return w.getHandlers(e,"load",t)}static getHandlers(e,t,n){const a=[];return("load"===t?w.getInstance().loadRouters:w.getInstance().saveRouters).forEach((t=>{const r=t(e,n);null!==r&&a.push(r)})),a}}const k=e=>w.registerSaveRouter(e),S=e=>w.registerLoadRouter(e),N=e=>w.getSaveHandlers(e),I=(e,t)=>w.getLoadHandlers(e,t);var T=n(5714);const C="tensorflowjs",E="models_store",_="model_info_store";function A(){if(!(0,b.OB)().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");const e="undefined"===typeof window?self:window,t=e.indexedDB||e.mozIndexedDB||e.webkitIndexedDB||e.msIndexedDB||e.shimIndexedDB;if(null==t)throw new Error("The current browser does not appear to support IndexedDB.");return t}function R(e){const t=e.result;t.createObjectStore(E,{keyPath:"modelPath"}),t.createObjectStore(_,{keyPath:"modelPath"})}class F{constructor(e){if(this.indexedDB=A(),null==e||!e)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=e}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,e)}async load(){return this.databaseAction(this.modelPath)}databaseAction(e,t){return new Promise(((e,n)=>{const a=this.indexedDB.open(C,1);a.onupgradeneeded=()=>R(a),a.onsuccess=()=>{const r=a.result;if(null==t){const t=r.transaction(E,"readonly"),a=t.objectStore(E).get(this.modelPath);a.onsuccess=()=>{if(null==a.result)return r.close(),n(new Error("Cannot find model with path '".concat(this.modelPath,"' ")+"in IndexedDB."));e(a.result.modelArtifacts)},a.onerror=e=>(r.close(),n(a.error)),t.oncomplete=()=>r.close()}else{t.weightData=T.w.join(t.weightData);const a=(0,x.Q)(t),o=r.transaction(_,"readwrite");let i,c,l=o.objectStore(_);try{i=l.put({modelPath:this.modelPath,modelArtifactsInfo:a})}catch(s){return n(s)}i.onsuccess=()=>{c=r.transaction(E,"readwrite");const i=c.objectStore(E);let u;try{u=i.put({modelPath:this.modelPath,modelArtifacts:t,modelArtifactsInfo:a})}catch(s){return n(s)}u.onsuccess=()=>e({modelArtifactsInfo:a}),u.onerror=e=>{l=o.objectStore(_);const t=l.delete(this.modelPath);t.onsuccess=()=>(r.close(),n(u.error)),t.onerror=e=>(r.close(),n(u.error))}},i.onerror=e=>(r.close(),n(i.error)),o.oncomplete=()=>{null==c?r.close():c.oncomplete=()=>r.close()}}},a.onerror=e=>n(a.error)}))}}F.URL_SCHEME="indexeddb://";const D=e=>{return(0,b.OB)().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(F.URL_SCHEME)?(t=e.slice(F.URL_SCHEME.length),new F(t)):null;var t};w.registerSaveRouter(D),w.registerLoadRouter(D);class O{constructor(){this.indexedDB=A()}async listModels(){return new Promise(((e,t)=>{const n=this.indexedDB.open(C,1);n.onupgradeneeded=()=>R(n),n.onsuccess=()=>{const a=n.result,r=a.transaction(_,"readonly"),s=r.objectStore(_).getAll();s.onsuccess=()=>{const t={};for(const e of s.result)t[e.modelPath]=e.modelArtifactsInfo;e(t)},s.onerror=e=>(a.close(),t(s.error)),r.oncomplete=()=>a.close()},n.onerror=e=>t(n.error)}))}async removeModel(e){var t;return e=(t=e).startsWith(F.URL_SCHEME)?t.slice(F.URL_SCHEME.length):t,new Promise(((t,n)=>{const a=this.indexedDB.open(C,1);a.onupgradeneeded=()=>R(a),a.onsuccess=()=>{const r=a.result,s=r.transaction(_,"readwrite"),o=s.objectStore(_),i=o.get(e);let c;i.onsuccess=()=>{if(null==i.result)return r.close(),n(new Error("Cannot find model with path '".concat(e,"' ")+"in IndexedDB."));{const a=o.delete(e),s=()=>{c=r.transaction(E,"readwrite");const a=c.objectStore(E).delete(e);a.onsuccess=()=>t(i.result.modelArtifactsInfo),a.onerror=e=>n(i.error)};a.onsuccess=s,a.onerror=e=>(s(),r.close(),n(i.error))}},i.onerror=e=>(r.close(),n(i.error)),s.oncomplete=()=>{null==c?r.close():c.oncomplete=()=>r.close()}},a.onerror=e=>n(a.error)}))}}var M=n(6147);const z="/",L="tensorflowjs_models",B="info",P="model_topology",V="weight_specs",W="weight_data",U="model_metadata";function G(e){return{info:[L,e,B].join(z),topology:[L,e,P].join(z),weightSpecs:[L,e,V].join(z),weightData:[L,e,W].join(z),modelMetadata:[L,e,U].join(z)}}function H(e){for(const t of Object.values(e))window.localStorage.removeItem(t)}function j(e){const t=e.split(z);if(t.length<3)throw new Error("Invalid key format: ".concat(e));return t.slice(1,t.length-1).join(z)}class q{constructor(e){if(!(0,b.OB)().getBool("IS_BROWSER")||"undefined"===typeof window||"undefined"===typeof window.localStorage)throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,null==e||!e)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=e,this.keys=G(this.modelPath)}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{const n=JSON.stringify(e.modelTopology),a=JSON.stringify(e.weightSpecs),r=(0,x.Q)(e),s=T.w.join(e.weightData);try{this.LS.setItem(this.keys.info,JSON.stringify(r)),this.LS.setItem(this.keys.topology,n),this.LS.setItem(this.keys.weightSpecs,a),this.LS.setItem(this.keys.weightData,(0,x._n)(s));const t={format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,signature:null!=e.signature?e.signature:void 0,userDefinedMetadata:null!=e.userDefinedMetadata?e.userDefinedMetadata:void 0,modelInitializer:null!=e.modelInitializer?e.modelInitializer:void 0,initializerSignature:null!=e.initializerSignature?e.initializerSignature:void 0,trainingConfig:null!=e.trainingConfig?e.trainingConfig:void 0};return this.LS.setItem(this.keys.modelMetadata,JSON.stringify(t)),{modelArtifactsInfo:r}}catch(t){throw H(this.keys),new Error("Failed to save model '".concat(this.modelPath,"' to local storage: ")+"size quota being exceeded is a possible cause of this failure: "+"modelTopologyBytes=".concat(r.modelTopologyBytes,", ")+"weightSpecsBytes=".concat(r.weightSpecsBytes,", ")+"weightDataBytes=".concat(r.weightDataBytes,"."))}}}async load(){const e=JSON.parse(this.LS.getItem(this.keys.info));if(null==e)throw new Error("In local storage, there is no model with name '".concat(this.modelPath,"'"));if("JSON"!==e.modelTopologyType)throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");const t={},n=JSON.parse(this.LS.getItem(this.keys.topology));if(null==n)throw new Error("In local storage, the topology of model '".concat(this.modelPath,"' ")+"is missing.");t.modelTopology=n;const a=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(null==a)throw new Error("In local storage, the weight specs of model '".concat(this.modelPath,"' ")+"are missing.");t.weightSpecs=a;const r=this.LS.getItem(this.keys.modelMetadata);if(null!=r){const e=JSON.parse(r);t.format=e.format,t.generatedBy=e.generatedBy,t.convertedBy=e.convertedBy,null!=e.signature&&(t.signature=e.signature),null!=e.userDefinedMetadata&&(t.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(t.modelInitializer=e.modelInitializer),null!=e.initializerSignature&&(t.initializerSignature=e.initializerSignature),null!=e.trainingConfig&&(t.trainingConfig=e.trainingConfig)}const s=this.LS.getItem(this.keys.weightData);if(null==s)throw new Error("In local storage, the binary weight values of model "+"'".concat(this.modelPath,"' are missing."));return t.weightData=(0,x.n7)(s),t}}q.URL_SCHEME="localstorage://";const X=e=>{return(0,b.OB)().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(q.URL_SCHEME)?(t=e.slice(q.URL_SCHEME.length),new q(t)):null;var t};w.registerSaveRouter(X),w.registerLoadRouter(X);class K{constructor(){(0,M.hu)((0,b.OB)().getBool("IS_BROWSER"),(()=>"Current environment is not a web browser")),(0,M.hu)("undefined"===typeof window||"undefined"!==typeof window.localStorage,(()=>"Current browser does not appear to support localStorage")),this.LS=window.localStorage}async listModels(){const e={},t=L+z,n=z+B;for(let a=0;a<this.LS.length;++a){const r=this.LS.key(a);if(r.startsWith(t)&&r.endsWith(n)){e[j(r)]=JSON.parse(this.LS.getItem(r))}}return e}async removeModel(e){var t;const n=G(e=(t=e).startsWith(q.URL_SCHEME)?t.slice(q.URL_SCHEME.length):t);if(null==this.LS.getItem(n.info))throw new Error("Cannot find model at path '".concat(e,"'"));const a=JSON.parse(this.LS.getItem(n.info));return H(n),a}}const Q="://";class Y{constructor(){this.managers={}}static getInstance(){return null==Y.instance&&(Y.instance=new Y),Y.instance}static registerManager(e,t){(0,M.hu)(null!=e,(()=>"scheme must not be undefined or null.")),e.endsWith(Q)&&(e=e.slice(0,e.indexOf(Q))),(0,M.hu)(e.length>0,(()=>"scheme must not be an empty string."));const n=Y.getInstance();(0,M.hu)(null==n.managers[e],(()=>"A model store manager is already registered for scheme '".concat(e,"'."))),n.managers[e]=t}static getManager(e){const t=Y.getInstance().managers[e];if(null==t)throw new Error("Cannot find model manager for scheme '".concat(e,"'"));return t}static getSchemes(){return Object.keys(Y.getInstance().managers)}}function Z(e){if(-1===e.indexOf(Q))throw new Error("The url string provided does not contain a scheme. Supported schemes are: "+"".concat(Y.getSchemes().join(",")));return{scheme:e.split(Q)[0],path:e.split(Q)[1]}}async function J(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];(0,M.hu)(e!==t,(()=>"Old path and new path are the same: '".concat(e,"'")));const a=w.getLoadHandlers(e);(0,M.hu)(a.length>0,(()=>"Copying failed because no load handler is found for source URL ".concat(e,"."))),(0,M.hu)(a.length<2,(()=>"Copying failed because more than one (".concat(a.length,") ")+"load handlers for source URL ".concat(e,".")));const r=a[0],s=w.getSaveHandlers(t);(0,M.hu)(s.length>0,(()=>"Copying failed because no save handler is found for destination "+"URL ".concat(t,"."))),(0,M.hu)(s.length<2,(()=>"Copying failed because more than one (".concat(a.length,") ")+"save handlers for destination URL ".concat(t,".")));const o=s[0],i=Z(e).scheme,c=Z(e).path,l=i===Z(e).scheme,u=await r.load();n&&l&&await Y.getManager(i).removeModel(c);const d=await o.save(u);return n&&!l&&await Y.getManager(i).removeModel(c),d.modelArtifactsInfo}async function $(){const e=Y.getSchemes(),t={};for(const n of e){const e=await Y.getManager(n).listModels();for(const a in e){t[n+Q+a]=e[a]}}return t}async function ee(e){const t=Z(e);return Y.getManager(t.scheme).removeModel(t.path)}async function te(e,t){return J(e,t,!1)}async function ne(e,t){return J(e,t,!0)}var ae=n(1539);class re{constructor(){this.messageName="setTimeoutCustom",this.functionRefs=[],this.handledMessageCount=0,this.hasEventListener=!1}fetch(e,t){return fetch(e,t)}now(){return performance.now()}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error("Browser's encoder only supports utf-8, but got ".concat(t));return null==this.textEncoder&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(e)}decode(e,t){return new TextDecoder(t).decode(e)}setTimeoutCustom(e,t){"undefined"!==typeof window&&(0,b.OB)().getBool("USE_SETTIMEOUTCUSTOM")?(this.functionRefs.push(e),setTimeout((()=>{window.postMessage({name:this.messageName,index:this.functionRefs.length-1},"*")}),t),this.hasEventListener||(this.hasEventListener=!0,window.addEventListener("message",(e=>{if(e.source===window&&e.data.name===this.messageName){e.stopPropagation();(0,this.functionRefs[e.data.index])(),this.handledMessageCount++,this.handledMessageCount===this.functionRefs.length&&(this.functionRefs=[],this.handledMessageCount=0)}}),!0))):setTimeout(e,t)}isTypedArray(e){return(0,ae.j)(e)}}if((0,b.OB)().get("IS_BROWSER")){(0,b.OB)().setPlatform("browser",new re);try{Y.registerManager(q.URL_SCHEME,new K)}catch(da){}try{Y.registerManager(F.URL_SCHEME,new O)}catch(da){}}const se=()=>n(5410);let oe;class ie{constructor(){this.util=n(8628),this.textEncoder=new this.util.TextEncoder}fetch(e,t){return null!=(0,b.OB)().global.fetch?(0,b.OB)().global.fetch(e,t):(null==oe&&(oe=se()),oe(e,t))}now(){const e=process.hrtime();return 1e3*e[0]+e[1]/1e6}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error("Node built-in encoder only supports utf-8, but got ".concat(t));return this.textEncoder.encode(e)}decode(e,t){return 0===e.length?"":new this.util.TextDecoder(t).decode(e)}isTypedArray(e){return this.util.types.isFloat32Array(e)||this.util.types.isInt32Array(e)||this.util.types.isUint8Array(e)||this.util.types.isUint8ClampedArray(e)}}(0,b.OB)().get("IS_NODE")&&!(0,b.OB)().get("IS_BROWSER")&&(0,b.OB)().setPlatform("node",new ie);var ce=n(7039),le=n(9118),ue=n(672),de=n(4600),he=n(4376);(0,p.wv)();const pe={buffer:ce.f,cast:le.p,clone:ue.d,print:de.S};(0,he.Vp)(pe);var fe=n(5875),me=n(3312),ge=n(5750),ye=n(651),be=n(6902),ve=n(7391),xe=n(7293),we=n(6450),ke=n(7067);const Se=new Map,Ne=new Map;class Ie{getClassName(){return this.constructor.className}static fromConfig(e,t){return new e(t)}}class Te{constructor(){this.classNameMap={}}static getMap(){return null==Te.instance&&(Te.instance=new Te),Te.instance}static register(e){Te.getMap().classNameMap[e.className]=[e,e.fromConfig]}}function Ce(e,t,n){(0,M.hu)(null!=e.className,(()=>"Class being registered does not have the static className property defined.")),(0,M.hu)("string"===typeof e.className,(()=>"className is required to be a string, but got type "+typeof e.className)),(0,M.hu)(e.className.length>0,(()=>"Class being registered has an empty-string as its className, which is disallowed.")),"undefined"===typeof t&&(t="Custom"),"undefined"===typeof n&&(n=e.className);const a=t+">"+n;return Te.register(e),Se.set(a,e),Ne.set(e,a),e}function Ee(e){return Ne.has(e)?Ne.get(e):e.className}class _e extends Ie{minimize(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=arguments.length>2?arguments[2]:void 0;const{value:a,grads:r}=this.computeGradients(e,n);if(null!=n){const e=n.map((e=>({name:e.name,tensor:r[e.name]})));this.applyGradients(e)}else this.applyGradients(r);return(0,fe.B9)(r),t?a:(a.dispose(),null)}get iterations(){return null==this.iterations_&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(e,t){return(0,we.pn)(e,t)}dispose(){null!=this.iterations_&&(0,fe.B9)(this.iterations_)}async saveIterations(){return null==this.iterations_&&(this.iterations_=0),{name:"iter",tensor:(0,ke.i)(this.iterations_,"int32")}}async getWeights(){throw new Error("getWeights() is not implemented for this optimizer yet.")}async setWeights(e){throw new Error("setWeights() is not implemented for this optimizer class "+"".concat(this.getClassName()))}async extractIterations(e){return this.iterations_=(await e[0].tensor.data())[0],e.slice(1)}}Object.defineProperty(_e,Symbol.hasInstance,{value:e=>null!=e.minimize&&null!=e.computeGradients&&null!=e.applyGradients});class Ae extends _e{static get className(){return"Adadelta"}constructor(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null;super(),this.learningRate=e,this.rho=t,this.epsilon=n,this.accumulatedGrads=[],this.accumulatedUpdates=[],null==n&&(this.epsilon=p.BV.backend.epsilon())}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const a=p.BV.registeredVariables[t];null==this.accumulatedGrads[n]&&(this.accumulatedGrads[n]={originalName:"".concat(t,"/accum_grad"),variable:(0,fe.lu)((()=>(0,xe.P)(a).variable(false)))}),null==this.accumulatedUpdates[n]&&(this.accumulatedUpdates[n]={originalName:"".concat(t,"/accum_var"),variable:(0,fe.lu)((()=>(0,xe.P)(a).variable(false)))});const r=Array.isArray(e)?e[n].tensor:e[t];if(null==r)return;const s=this.accumulatedGrads[n].variable,o=this.accumulatedUpdates[n].variable;(0,fe.lu)((()=>{const e=(0,me.I)((0,ye.d)(s,this.rho),(0,ye.d)((0,ve.h)(r),1-this.rho)),t=(0,ye.d)((0,ge.h)((0,be._)((0,me.I)(o,this.epsilon)),(0,be._)((0,me.I)(s,this.epsilon))),r),n=(0,me.I)((0,ye.d)(o,this.rho),(0,ye.d)((0,ve.h)(t),1-this.rho));s.assign(e),o.assign(n);const i=(0,me.I)((0,ye.d)(t,-this.learningRate),a);a.assign(i)}))})),this.incrementIterations()}dispose(){null!=this.accumulatedUpdates&&((0,fe.B9)(this.accumulatedGrads.map((e=>e.variable))),(0,fe.B9)(this.accumulatedUpdates.map((e=>e.variable))))}async getWeights(){const e=[...this.accumulatedGrads,...this.accumulatedUpdates];return[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){const t=(e=await this.extractIterations(e)).length/2;this.accumulatedGrads=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(false)}))),this.accumulatedUpdates=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(false)})))}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.rho,t.epsilon)}}var Re=n(8582);class Fe extends _e{static get className(){return"Adagrad"}constructor(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:.1;super(),this.learningRate=e,this.initialAccumulatorValue=t,this.accumulatedGrads=[]}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const a=p.BV.registeredVariables[t];if(null==this.accumulatedGrads[n]){const e=!1;this.accumulatedGrads[n]={originalName:"".concat(t,"/accumulator"),variable:(0,fe.lu)((()=>(0,Re.h)(a.shape,this.initialAccumulatorValue).variable(e)))}}const r=Array.isArray(e)?e[n].tensor:e[t];if(null==r)return;const s=this.accumulatedGrads[n].variable;(0,fe.lu)((()=>{const e=(0,me.I)(s,(0,ve.h)(r));s.assign(e);const t=(0,me.I)((0,ye.d)((0,ge.h)(r,(0,be._)((0,me.I)(e,p.BV.backend.epsilon()))),-this.learningRate),a);a.assign(t)}))})),this.incrementIterations()}dispose(){null!=this.accumulatedGrads&&(0,fe.B9)(this.accumulatedGrads.map((e=>e.variable)))}async getWeights(){return[await this.saveIterations()].concat(this.accumulatedGrads.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e);this.accumulatedGrads=e.map((e=>({originalName:e.name,variable:e.tensor.variable(false)})))}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(e,t){return new e(t.learningRate,t.initialAccumulatorValue)}}var De=n(4334),Oe=n(4774);class Me extends _e{static get className(){return"Adam"}constructor(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null;super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=a,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],(0,fe.lu)((()=>{this.accBeta1=(0,ke.i)(t).variable(),this.accBeta2=(0,ke.i)(n).variable()})),null==a&&(this.epsilon=p.BV.backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);(0,fe.lu)((()=>{const n=(0,Oe.l)(1,this.accBeta1),a=(0,Oe.l)(1,this.accBeta2);t.forEach(((t,r)=>{const s=p.BV.registeredVariables[t];null==this.accumulatedFirstMoment[r]&&(this.accumulatedFirstMoment[r]={originalName:"".concat(t,"/m"),variable:(0,fe.lu)((()=>(0,xe.P)(s).variable(false)))}),null==this.accumulatedSecondMoment[r]&&(this.accumulatedSecondMoment[r]={originalName:"".concat(t,"/v"),variable:(0,fe.lu)((()=>(0,xe.P)(s).variable(false)))});const o=Array.isArray(e)?e[r].tensor:e[t];if(null==o)return;const i=this.accumulatedFirstMoment[r].variable,c=this.accumulatedSecondMoment[r].variable,l=(0,me.I)((0,ye.d)(i,this.beta1),(0,ye.d)(o,1-this.beta1)),u=(0,me.I)((0,ye.d)(c,this.beta2),(0,ye.d)((0,ve.h)(o),1-this.beta2)),d=(0,ge.h)(l,n),h=(0,ge.h)(u,a);i.assign(l),c.assign(u);const f=(0,me.I)((0,ye.d)((0,ge.h)(d,(0,me.I)((0,be._)(h),this.epsilon)),-this.learningRate),s);s.assign(f)})),this.accBeta1.assign((0,ye.d)(this.accBeta1,this.beta1)),this.accBeta2.assign((0,ye.d)(this.accBeta2,this.beta2))})),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),null!=this.accumulatedFirstMoment&&(0,fe.B9)(this.accumulatedFirstMoment.map((e=>e.variable))),null!=this.accumulatedSecondMoment&&(0,fe.B9)(this.accumulatedSecondMoment.map((e=>e.variable)))}async getWeights(){const e=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e),(0,fe.lu)((()=>{this.accBeta1.assign((0,De.s)(this.beta1,this.iterations_+1)),this.accBeta2.assign((0,De.s)(this.beta2,this.iterations_+1))}));const t=e.length/2;this.accumulatedFirstMoment=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(false)}))),this.accumulatedSecondMoment=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(false)})))}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon)}}var ze=n(7613),Le=n(705);class Be extends _e{static get className(){return"Adamax"}constructor(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null,r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:0;super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=a,this.decay=r,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],(0,fe.lu)((()=>{this.iteration=(0,ke.i)(0).variable(),this.accBeta1=(0,ke.i)(t).variable()})),null==a&&(this.epsilon=p.BV.backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);(0,fe.lu)((()=>{const n=(0,Oe.l)(1,this.accBeta1),a=(0,ge.h)(-this.learningRate,(0,me.I)((0,ye.d)(this.iteration,this.decay),1));t.forEach(((t,r)=>{const s=p.BV.registeredVariables[t];null==this.accumulatedFirstMoment[r]&&(this.accumulatedFirstMoment[r]={originalName:"".concat(t,"/m"),variable:(0,xe.P)(s).variable(false)}),null==this.accumulatedWeightedInfNorm[r]&&(this.accumulatedWeightedInfNorm[r]={originalName:"".concat(t,"/v"),variable:(0,xe.P)(s).variable(false)});const o=Array.isArray(e)?e[r].tensor:e[t];if(null==o)return;const i=this.accumulatedFirstMoment[r].variable,c=this.accumulatedWeightedInfNorm[r].variable,l=(0,me.I)((0,ye.d)(i,this.beta1),(0,ye.d)(o,1-this.beta1)),u=(0,ye.d)(c,this.beta2),d=(0,ze.W)(o),h=(0,Le.g)(u,d);i.assign(l),c.assign(h);const f=(0,me.I)((0,ye.d)((0,ge.h)(a,n),(0,ge.h)(l,(0,me.I)(h,this.epsilon))),s);s.assign(f)})),this.iteration.assign((0,me.I)(this.iteration,1)),this.accBeta1.assign((0,ye.d)(this.accBeta1,this.beta1))})),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),null!=this.accumulatedFirstMoment&&(0,fe.B9)(this.accumulatedFirstMoment.map((e=>e.variable))),null!=this.accumulatedWeightedInfNorm&&(0,fe.B9)(this.accumulatedWeightedInfNorm.map((e=>e.variable)))}async getWeights(){throw new Error("getWeights() is not implemented for Adamax yet.")}async setWeights(e){throw new Error("setWeights() is not implemented for Adamax yet.")}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon,t.decay)}}class Pe extends _e{static get className(){return"SGD"}constructor(e){super(),this.learningRate=e,this.setLearningRate(e)}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const a=Array.isArray(e)?e[n].tensor:e[t];if(null==a)return;const r=p.BV.registeredVariables[t];(0,fe.lu)((()=>{const e=(0,me.I)((0,ye.d)(this.c,a),r);r.assign(e)}))})),this.incrementIterations()}setLearningRate(e){this.learningRate=e,null!=this.c&&this.c.dispose(),this.c=(0,fe.Cn)((0,ke.i)(-e))}dispose(){this.c.dispose()}async getWeights(){return[await this.saveIterations()]}async setWeights(e){if(0!==(e=await this.extractIterations(e)).length)throw new Error("SGD optimizer does not have settable weights.")}getConfig(){return{learningRate:this.learningRate}}static fromConfig(e,t){return new e(t.learningRate)}}class Ve extends Pe{static get className(){return"Momentum"}constructor(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];super(e),this.learningRate=e,this.momentum=t,this.useNesterov=n,this.accumulations=[],this.m=(0,ke.i)(this.momentum)}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const a=p.BV.registeredVariables[t];if(null==this.accumulations[n]){const e=!1;this.accumulations[n]={originalName:"".concat(t,"/momentum"),variable:(0,fe.lu)((()=>(0,xe.P)(a).variable(e)))}}const r=this.accumulations[n].variable,s=Array.isArray(e)?e[n].tensor:e[t];null!=s&&(0,fe.lu)((()=>{let e;const t=(0,me.I)((0,ye.d)(this.m,r),s);e=this.useNesterov?(0,me.I)((0,ye.d)(this.c,(0,me.I)(s,(0,ye.d)(t,this.m))),a):(0,me.I)((0,ye.d)(this.c,t),a),r.assign(t),a.assign(e)}))})),this.incrementIterations()}dispose(){this.m.dispose(),null!=this.accumulations&&(0,fe.B9)(this.accumulations.map((e=>e.variable)))}setMomentum(e){this.momentum=e}async getWeights(){return[await this.saveIterations()].concat(this.accumulations.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e);this.accumulations=e.map((e=>({originalName:e.name,variable:e.tensor.variable(false)})))}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(e,t){return new e(t.learningRate,t.momentum,t.useNesterov)}}class We extends _e{static get className(){return"RMSProp"}constructor(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:.9,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null,r=arguments.length>4&&void 0!==arguments[4]&&arguments[4];if(super(),this.learningRate=e,this.decay=t,this.momentum=n,this.epsilon=a,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=r,null==a&&(this.epsilon=p.BV.backend.epsilon()),null==e)throw new Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const a=p.BV.registeredVariables[t],r=!1;null==this.accumulatedMeanSquares[n]&&(this.accumulatedMeanSquares[n]={originalName:"".concat(t,"/rms"),variable:(0,fe.lu)((()=>(0,xe.P)(a).variable(r)))}),null==this.accumulatedMoments[n]&&(this.accumulatedMoments[n]={originalName:"".concat(t,"/momentum"),variable:(0,fe.lu)((()=>(0,xe.P)(a).variable(r)))}),null==this.accumulatedMeanGrads[n]&&this.centered&&(this.accumulatedMeanGrads[n]={originalName:"".concat(t,"/mg"),variable:(0,fe.lu)((()=>(0,xe.P)(a).variable(r)))});const s=Array.isArray(e)?e[n].tensor:e[t];if(null==s)return;const o=this.accumulatedMeanSquares[n].variable,i=this.accumulatedMoments[n].variable;(0,fe.lu)((()=>{const e=(0,me.I)((0,ye.d)(o,this.decay),(0,ye.d)((0,ve.h)(s),1-this.decay));if(this.centered){const t=this.accumulatedMeanGrads[n].variable,r=(0,me.I)((0,ye.d)(t,this.decay),(0,ye.d)(s,1-this.decay)),c=(0,ge.h)((0,ye.d)(s,this.learningRate),(0,be._)((0,Oe.l)(e,(0,me.I)((0,ve.h)(r),this.epsilon)))),l=(0,me.I)((0,ye.d)(i,this.momentum),c);o.assign(e),t.assign(r),i.assign(l);const u=(0,Oe.l)(a,l);a.assign(u)}else{const e=(0,me.I)((0,ye.d)(o,this.decay),(0,ye.d)((0,ve.h)(s),1-this.decay)),t=(0,me.I)((0,ye.d)(i,this.momentum),(0,ge.h)((0,ye.d)(s,this.learningRate),(0,be._)((0,me.I)(e,this.epsilon))));o.assign(e),i.assign(t);const n=(0,Oe.l)(a,t);a.assign(n)}}))})),this.incrementIterations()}dispose(){null!=this.accumulatedMeanSquares&&(0,fe.B9)(this.accumulatedMeanSquares.map((e=>e.variable))),null!=this.accumulatedMeanGrads&&this.centered&&(0,fe.B9)(this.accumulatedMeanGrads.map((e=>e.variable))),null!=this.accumulatedMoments&&(0,fe.B9)(this.accumulatedMoments.map((e=>e.variable)))}async getWeights(){const e=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&e.push(...this.accumulatedMeanGrads),[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e);const t=this.centered?e.length/3:e.length/2,n=!1;this.accumulatedMeanSquares=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))),this.accumulatedMoments=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))),this.centered&&(this.accumulatedMeanGrads=e.slice(2*t,3*t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))))}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(e,t){return new e(t.learningRate,t.decay,t.momentum,t.epsilon,t.centered)}}const Ue=[Ae,Fe,Me,Be,Ve,We,Pe];function Ge(e){return new Promise((e=>setTimeout(e))).then(e)}class He{constructor(e){if(!(0,b.OB)().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");e.startsWith(He.URL_SCHEME)&&(e=e.slice(He.URL_SCHEME.length)),null!=e&&0!==e.length||(e="model"),this.modelJsonFileName=e+".json",this.weightDataFileName=e+".weights.bin"}async save(e){if("undefined"===typeof document)throw new Error("Browser downloads are not supported in this environment since `document` is not present");const t=T.w.join(e.weightData),n=window.URL.createObjectURL(new Blob([t],{type:"application/octet-stream"}));if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{const t=[{paths:["./"+this.weightDataFileName],weights:e.weightSpecs}],a=(0,x.Yd)(e,t),r=window.URL.createObjectURL(new Blob([JSON.stringify(a)],{type:"application/json"})),s=null==this.modelJsonAnchor?document.createElement("a"):this.modelJsonAnchor;if(s.download=this.modelJsonFileName,s.href=r,await Ge((()=>s.dispatchEvent(new MouseEvent("click")))),null!=e.weightData){const e=null==this.weightDataAnchor?document.createElement("a"):this.weightDataAnchor;e.download=this.weightDataFileName,e.href=n,await Ge((()=>e.dispatchEvent(new MouseEvent("click"))))}return{modelArtifactsInfo:(0,x.Q)(e)}}}}He.URL_SCHEME="downloads://";class je{constructor(e){if(null==e||e.length<1)throw new Error("When calling browserFiles, at least 1 file is required, "+"but received ".concat(e));this.jsonFile=e[0],this.weightsFiles=e.slice(1)}async load(){return new Promise(((e,t)=>{const n=new FileReader;n.onload=n=>{const a=JSON.parse(n.target.result),r=a.modelTopology;if(null==r)return void t(new Error("modelTopology field is missing from file ".concat(this.jsonFile.name)));if(null==a.weightsManifest)return void t(new Error("weightManifest field is missing from file ".concat(this.jsonFile.name)));if(0===this.weightsFiles.length)return void e({modelTopology:r});const s=(0,x.jN)(a,(e=>this.loadWeights(e)));e(s)},n.onerror=e=>t("Failed to read model topology and weights manifest JSON "+"from file '".concat(this.jsonFile.name,"'. BrowserFiles supports loading ")+"Keras-style tf.Model artifacts only."),n.readAsText(this.jsonFile)}))}loadWeights(e){const t=[],n=[];for(const s of e)t.push(...s.weights),n.push(...s.paths);const a=this.checkManifestAndWeightFiles(e),r=n.map((e=>this.loadWeightsFile(e,a[e])));return Promise.all(r).then((e=>[t,e]))}loadWeightsFile(e,t){return new Promise(((n,a)=>{const r=new FileReader;r.onload=e=>{const t=e.target.result;n(t)},r.onerror=t=>a("Failed to weights data from file of path '".concat(e,"'.")),r.readAsArrayBuffer(t)}))}checkManifestAndWeightFiles(e){const t=[],n=this.weightsFiles.map((e=>(0,x.EZ)(e.name))),a={};for(const r of e)r.paths.forEach((e=>{const r=(0,x.EZ)(e);if(-1!==t.indexOf(r))throw new Error("Duplicate file basename found in weights manifest: "+"'".concat(r,"'"));if(t.push(r),-1===n.indexOf(r))throw new Error("Weight file with basename '".concat(r,"' is not provided."));a[e]=this.weightsFiles[n.indexOf(r)]}));if(t.length!==this.weightsFiles.length)throw new Error("Mismatch in the number of files in weights manifest "+"(".concat(t.length,") and the number of weight files provided ")+"(".concat(this.weightsFiles.length,")."));return a}}function qe(e){return new je(e)}function Xe(e,t,n,a){!function(e){(0,M.hu)(null!=e&&Array.isArray(e)&&e.length>0,(()=>"promises must be a none empty array"))}(e),function(e,t){(0,M.hu)(e>=0&&e<=1,(()=>"Progress fraction must be in range [0, 1], but "+"got startFraction ".concat(e))),(0,M.hu)(t>=0&&t<=1,(()=>"Progress fraction must be in range [0, 1], but "+"got endFraction ".concat(t))),(0,M.hu)(t>=e,(()=>"startFraction must be no more than endFraction, but "+"got startFraction ".concat(e," and endFraction ")+"".concat(t)))}(n=null==n?0:n,a=null==a?1:a);let r=0;return Promise.all(e.map((s=>(s.then((s=>{const o=n+ ++r/e.length*(a-n);return t(o),s})),s))))}w.registerSaveRouter((e=>(0,b.OB)().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(He.URL_SCHEME)?function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"model";return new He(e)}(e.slice(He.URL_SCHEME.length)):null));var Ke=n(1988);async function Qe(e,t){null==t&&(t={});const n=null==t.fetchFunc?(0,b.OB)().platform.fetch:t.fetchFunc,a=e.map((e=>n(e,t.requestInit,{isBinary:!0}))),r=(null==t.onProgress?await Promise.all(a):await Xe(a,t.onProgress,0,.5)).map((e=>e.arrayBuffer()));return null==t.onProgress?await Promise.all(r):await Xe(r,t.onProgress,.5,1)}async function Ye(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"",n=arguments.length>2?arguments[2]:void 0,a=arguments.length>3?arguments[3]:void 0;const r=e=>Qe(e,{requestInit:a}),s=Ze(r);return s(e,t,n)}function Ze(e){return async function(t){let n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"",a=arguments.length>2?arguments[2]:void 0;const r=t.map((()=>!1)),s={},o=null!=a?a.map((()=>!1)):[],i=[];if(t.forEach(((e,t)=>{let n=0;e.weights.forEach((e=>{const c="quantization"in e?e.quantization.dtype:e.dtype,l=Ke.J[c]*M.NA(e.shape),u=()=>{r[t]=!0,null==s[t]&&(s[t]=[]),s[t].push({manifestEntry:e,groupOffset:n,sizeBytes:l})};null!=a?a.forEach(((t,n)=>{t===e.name&&(u(),o[n]=!0)})):u(),i.push(e.name),n+=l}))})),!o.every((e=>e))){const e=a.filter(((e,t)=>!o[t]));throw new Error("Could not find weights in manifest with names: "+"".concat(e.join(", "),". \n")+"Manifest JSON has weights with names: "+"".concat(i.join(", "),"."))}const c=r.reduce(((e,t,n)=>(t&&e.push(n),e)),[]),l=[];c.forEach((e=>{t[e].paths.forEach((e=>{const t=n+(n.endsWith("/")?"":"/")+e;l.push(t)}))}));const u=await e(l),d={};let h=0;return c.forEach((e=>{const n=t[e].paths.length,a=new T.w(u.slice(h,h+n));s[e].forEach((e=>{const t=a.slice(e.groupOffset,e.groupOffset+e.sizeBytes),n=(0,x.dI)(t,[e.manifestEntry]);for(const a in n)d[a]=n[a]})),h+=n})),d}}class Je{constructor(e,t){if(this.DEFAULT_METHOD="POST",null==t&&(t={}),this.weightPathPrefix=t.weightPathPrefix,this.weightUrlConverter=t.weightUrlConverter,null!=t.fetchFunc?((0,M.hu)("function"===typeof t.fetchFunc,(()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)")),this.fetch=t.fetchFunc):this.fetch=(0,b.OB)().platform.fetch,(0,M.hu)(null!=e&&e.length>0,(()=>"URL path for http must not be null, undefined or empty.")),Array.isArray(e)&&(0,M.hu)(2===e.length,(()=>"URL paths for http must have a length of 2, "+"(actual length is ".concat(e.length,")."))),this.path=e,null!=t.requestInit&&null!=t.requestInit.body)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=t.requestInit||{},this.loadOptions=t}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");const t=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);t.body=new FormData;const n=[{paths:["./model.weights.bin"],weights:e.weightSpecs}],a=(0,x.Yd)(e,n);if(t.body.append("model.json",new Blob([JSON.stringify(a)],{type:"application/json"}),"model.json"),null!=e.weightData){const n=T.w.join(e.weightData);t.body.append("model.weights.bin",new Blob([n],{type:"application/octet-stream"}),"model.weights.bin")}const r=await this.fetch(this.path,t);if(r.ok)return{modelArtifactsInfo:(0,x.Q)(e),responses:[r]};throw new Error("BrowserHTTPRequest.save() failed due to HTTP response status "+"".concat(r.status,"."))}async loadModelJSON(){const e=await this.fetch(this.path,this.requestInit);if(!e.ok)throw new Error("Request to ".concat(this.path," failed with status code ")+"".concat(e.status,". Please verify this URL points to ")+"the model JSON of the model to load.");let t;try{t=await e.json()}catch(r){let e="Failed to parse model JSON of response from ".concat(this.path,".");throw this.path.endsWith(".pb")?e+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":e+=" Please make sure the server is serving valid JSON for this request.",new Error(e)}const n=t.modelTopology,a=t.weightsManifest;if(null==n&&null==a)throw new Error("The JSON from HTTP path ".concat(this.path," contains neither model ")+"topology or manifest for weights.");return t}async load(){if(this.loadOptions.streamWeights)return this.loadStream();const e=await this.loadModelJSON();return(0,x.jN)(e,(e=>this.loadWeights(e)))}async loadStream(){const e=await this.loadModelJSON(),t=await this.getWeightUrls(e.weightsManifest),n=(0,x.hu)(e.weightsManifest);return Object.assign(Object.assign({},e),{weightSpecs:n,getWeightStream:()=>function(e,t){var n;const a=null==t.fetchFunc?(0,b.OB)().platform.fetch:t.fetchFunc;let r,s=0;return null===(n=t.onProgress)||void 0===n||n.call(t,0),new ReadableStream({pull:async n=>{for(var o;s<e.length;){if(!r){const n=(await a(e[s],t.requestInit,{isBinary:!0})).body;r=n.getReader()}const{done:i,value:c}=await r.read();if(!i)return void n.enqueue(c);s++,r=void 0,null===(o=t.onProgress)||void 0===o||o.call(t,s/e.length)}n.close()}})}(t,this.loadOptions)})}async getWeightUrls(e){const t=Array.isArray(this.path)?this.path[1]:this.path,[n,a]=function(e){const t=e.lastIndexOf("/"),n=e.lastIndexOf("?"),a=e.substring(0,t),r=n>t?e.substring(n):"";return[a+"/",r]}(t),r=this.weightPathPrefix||n,s=[],o=[];for(const i of e)for(const e of i.paths)null!=this.weightUrlConverter?o.push(this.weightUrlConverter(e)):s.push(r+e+a);return this.weightUrlConverter&&s.push(...await Promise.all(o)),s}async loadWeights(e){const t=await this.getWeightUrls(e);return[(0,x.hu)(e),await Qe(t,this.loadOptions)]}}function $e(e){return null!=e.match(Je.URL_SCHEME_REGEX)}Je.URL_SCHEME_REGEX=/^https?:\/\//;const et=(e,t)=>{if("undefined"===typeof fetch&&(null==t||null==t.fetchFunc))return null;{let n=!0;if(n=Array.isArray(e)?e.every((e=>$e(e))):$e(e),n)return tt(e,t)}return null};function tt(e,t){return new Je(e,t)}function nt(e,t){return tt(e,t)}w.registerSaveRouter(et),w.registerLoadRouter(et);class at{constructor(e){this.modelArtifacts=e}load(){return this.modelArtifacts}}class rt{constructor(e){this.saveHandler=e}save(e){return this.saveHandler(e)}}class st{constructor(e){e.load&&(this.load=()=>Promise.resolve(e.load())),e.save&&(this.save=t=>Promise.resolve(e.save(t)))}}function ot(e,t,n,a){const r=arguments;return new st(it(...r))}function it(e,t,n,a){if(1===arguments.length){return null!=e.modelTopology||null!=e.weightSpecs?new at(e):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new at({modelTopology:e}))}return console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new at({modelTopology:e,weightSpecs:t,weightData:n,trainingConfig:a})}function ct(e){return new rt(e)}function lt(e){return new rt(e)}var ut=n(8354),dt=n(7221),ht=n(4326),pt=n(8640),ft=n(1240);const mt=(0,pt.op)({confusionMatrix_:function(e,t,n){const a=(0,ut._1)(e,"labels","confusionMatrix"),r=(0,ut._1)(t,"predictions","confusionMatrix");M.hu(null==n||n>0&&Number.isInteger(n),(()=>"If provided, numClasses must be a positive integer, "+"but got ".concat(n))),M.hu(1===a.rank,(()=>"Expected the rank of labels to be 1, but got ".concat(a.rank))),M.hu(1===r.rank,(()=>"Expected the rank of predictions to be 1, "+"but got ".concat(r.rank))),M.hu(a.shape[0]===r.shape[0],(()=>"Mismatch in the number of examples: "+"".concat(a.shape[0]," vs. ").concat(r.shape[0],". ")+"Labels and predictions should have the same number of elements.")),M.hu(n>0&&Number.isInteger(n),(()=>"numClasses is required to be a positive integer, but got "+"".concat(n)));const s=(0,ht.l)((0,le.p)(a,"int32"),n),o=(0,ht.l)((0,le.p)(r,"int32"),n),i=(0,ft.p)(s),c=(0,dt.O)(i,o);return(0,le.p)(c,"int32")}});var gt=n(5774),yt=n(2145),bt=n(8864),vt=n(3123);let xt,wt=!1;function kt(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:3;if(t>4)throw new Error("Cannot construct Tensor with more than 4 channels from pixels.");if(null==e)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");let n=!1,a=!1,r=!1,s=!1,o=!1,i=!1;if(e.data instanceof Uint8Array)n=!0;else if("undefined"!==typeof ImageData&&e instanceof ImageData)a=!0;else if("undefined"!==typeof HTMLVideoElement&&e instanceof HTMLVideoElement)r=!0;else if("undefined"!==typeof HTMLImageElement&&e instanceof HTMLImageElement)s=!0;else if(null!=e.getContext)o=!0;else{if(!("undefined"!==typeof ImageBitmap&&e instanceof ImageBitmap))throw new Error("pixels passed to tf.browser.fromPixels() must be either an HTMLVideoElement, HTMLImageElement, HTMLCanvasElement, ImageData in browser, or OffscreenCanvas, ImageData in webworker or {data: Uint32Array, width: number, height: number}, "+"but was ".concat(e.constructor.name));i=!0}const c=(0,bt.pI)(yt.eBW,p.BV.backendName);if(null!=c){const n={pixels:e},a={numChannels:t};return p.BV.runKernel(yt.eBW,n,a)}const[l,u]=r?[e.videoWidth,e.videoHeight]:[e.width,e.height];let d,h;if(o)d=e.getContext("2d").getImageData(0,0,l,u).data;else if(a||n)d=e.data;else if(s||r||i){if(null==xt)if("undefined"===typeof document){if("undefined"===typeof OffscreenCanvas||"undefined"===typeof OffscreenCanvasRenderingContext2D)throw new Error("Cannot parse input in current context. Reason: OffscreenCanvas Context2D rendering is not supported.");xt=new OffscreenCanvas(1,1).getContext("2d")}else xt=document.createElement("canvas").getContext("2d",{willReadFrequently:!0});xt.canvas.width=l,xt.canvas.height=u,xt.drawImage(e,0,0,l,u),d=xt.getImageData(0,0,l,u).data}if(4===t)h=new Int32Array(d);else{const e=l*u;h=new Int32Array(e*t);for(let n=0;n<e;n++)for(let e=0;e<t;++e)h[n*t+e]=d[4*n+e]}const f=[u,l,t];return(0,vt.w)(h,f,"int32")}function St(e){return"undefined"!==typeof window&&"undefined"!==typeof ImageBitmap&&window.hasOwnProperty("createImageBitmap")&&!(e instanceof ImageBitmap)&&function(e){return null!=e&&0!==e.width&&0!==e.height}(e)&&!function(e){return null!=e&&e.data instanceof Uint8Array}(e)}async function Nt(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:3,n=null;if((0,b.OB)().getBool("WRAP_TO_IMAGEBITMAP")&&St(e)){let t;try{t=await createImageBitmap(e,{premultiplyAlpha:"none"})}catch(a){t=null}n=null!=t&&t.width===e.width&&t.height===e.height?t:e}else n=e;return kt(n,t)}function It(e){if(2!==e.rank&&3!==e.rank)throw new Error("toPixels only supports rank 2 or 3 tensors, got rank ".concat(e.rank,"."));const t=2===e.rank?1:e.shape[2];if(t>4||2===t)throw new Error("toPixels only supports depth of size "+"1, 3 or 4 but got ".concat(t));if("float32"!==e.dtype&&"int32"!==e.dtype)throw new Error("Unsupported type for toPixels: ".concat(e.dtype,".")+" Please use float32 or int32 tensors.")}async function Tt(e,t){let n=(0,ut._1)(e,"img","toPixels");if(!(e instanceof he.es)){const e=n;n=(0,le.p)(e,"int32"),e.dispose()}It(n);const[a,r]=n.shape.slice(0,2),s=2===n.rank?1:n.shape[2],o=await n.data(),i="float32"===n.dtype?255:1,c=new Uint8ClampedArray(r*a*4);for(let l=0;l<a*r;++l){const e=[0,0,0,255];for(let a=0;a<s;a++){const t=o[l*s+a];if("float32"===n.dtype){if(t<0||t>1)throw new Error("Tensor values for a float32 Tensor must be in the "+"range [0 - 1] but encountered ".concat(t,"."))}else if("int32"===n.dtype&&(t<0||t>255))throw new Error("Tensor values for a int32 Tensor must be in the "+"range [0 - 255] but encountered ".concat(t,"."));1===s?(e[0]=t*i,e[1]=t*i,e[2]=t*i):e[a]=t*i}const t=4*l;c[t+0]=Math.round(e[0]),c[t+1]=Math.round(e[1]),c[t+2]=Math.round(e[2]),c[t+3]=Math.round(e[3])}if(null!=t){if(!wt){null!=(0,bt.pI)(yt.hGc,p.BV.backendName)&&(console.warn("tf.browser.toPixels is not efficient to draw tensor on canvas. Please try tf.browser.draw instead."),wt=!0)}t.width=r,t.height=a;const e=t.getContext("2d"),n=new ImageData(c,r,a);e.putImageData(n,0,0)}return n!==e&&n.dispose(),c}function Ct(e,t,n){let a=(0,ut._1)(e,"img","draw");if(!(e instanceof he.es)){const e=a;a=(0,le.p)(e,"int32"),e.dispose()}It(a),function(e){const t=(null===e||void 0===e?void 0:e.alpha)||1;if(t>1||t<0)throw new Error("Alpha value ".concat(t," is suppoed to be in range [0 - 1]."))}(null===n||void 0===n?void 0:n.imageOptions);const r={image:a},s={canvas:t,options:n};p.BV.runKernel(yt.hGc,r,s)}const Et=(0,pt.op)({fromPixels_:kt});function _t(e,t){const n=e.shape.length,a=t.shape.length;if(n<1)throw new Error("tf.gatherND() expects the input to be rank 1 or higher,"+" but the rank was ".concat(n,"."));if(a<1)throw new Error("tf.gatherND() expects the indices to be rank 1 or higher,"+" but the rank was ".concat(a,"."));if("int32"!==t.dtype)throw new Error("tf.gatherND() expects the indices to be int32 type,"+" but the dtype was ".concat(t.dtype,"."));if(t.shape[a-1]>n)throw new Error("index innermost dimension length must be <= tensor rank; saw: "+"".concat(t.shape[a-1]," vs. ").concat(n));if(0===(0,M.NA)(e.shape))throw new Error("Requested more than 0 entries, but input is empty."+" Input shape: ".concat(e.shape,"."));const r=t.shape,s=r[r.length-1];let o=1;for(let d=0;d<r.length-1;++d)o*=r[d];const i=e.shape,c=r.slice();c.pop();let l=1;for(let d=s;d<n;++d)l*=i[d],c.push(i[d]);const u=[...(0,M.e3)(e.shape).map((e=>e/l)),1].slice(0,s);return[c,o,l,u]}var At=n(8604),Rt=n(2875),Ft=n(9064),Dt=n(115);const Ot=.1;function Mt(e,t,n){return null==n&&(n=zt()),Lt(e,t,((e,t)=>Wt(e,t,n)))}function zt(){return 32===p.BV.backend.floatPrecision()?.001:Ot}function Lt(e,t,n){let a=!0;if(((0,Dt.isTypedArray)(e)||(0,Dt.isTypedArray)(t))&&(a=!1),(0,Dt.isTypedArray)(e)&&(0,Dt.isTypedArray)(t)&&(a=!0),a){const n=e.constructor.name,a=t.constructor.name;if(n!==a)throw new Error("Arrays are of different type. Actual: ".concat(n,". ")+"Expected: ".concat(a))}if(Array.isArray(e)&&Array.isArray(t)){const n=(0,ut.C)(e),a=(0,ut.C)(t);if(!(0,M.cO)(n,a))throw new Error("Arrays have different shapes. "+"Actual: [".concat(n,"]. Expected: [").concat(a,"]"))}const r=(0,Dt.isTypedArray)(e)?e:(0,Dt.flatten)(e),s=(0,Dt.isTypedArray)(t)?t:(0,Dt.flatten)(t);if(r.length!==s.length)throw new Error("Arrays have different lengths actual: ".concat(r.length," vs ")+"expected: ".concat(s.length,".\n")+"Actual:   ".concat(r,".\n")+"Expected: ".concat(s,"."));for(let o=0;o<s.length;++o){const e=r[o],t=s[o];if(!n(e,t))throw new Error("Arrays differ: actual[".concat(o,"] = ").concat(e,", expected[").concat(o,"] = ").concat(t,".\n")+"Actual:   ".concat(r,".\n")+"Expected: ".concat(s,"."))}"undefined"!==typeof expect&&expect().nothing()}function Bt(e,t){e().then((()=>t.fail()),(()=>t())),"undefined"!==typeof expect&&expect().nothing()}function Pt(e,t){const n="string"===typeof t||"number"===typeof t||"boolean"===typeof t?[t]:t;return(0,M.HD)(e)||(0,M.HD)(e[0])||(0,M.HD)(t)||(0,M.HD)(t[0])?Lt(e,n,((e,t)=>e==t)):Lt(e,t,((e,t)=>Wt(e,t,0)))}function Vt(e,t,n){if(null==n&&(n=zt()),!Wt(e,t,n))throw new Error("Numbers differ: actual === ".concat(e,", expected === ").concat(t));"undefined"!==typeof expect&&expect().nothing()}function Wt(e,t,n){return!isFinite(e)&&!isFinite(t)||!(isNaN(e)||isNaN(t)||Math.abs(e-t)>n)}function Ut(e,t,n){for(let a=0;a<e.length;a++)if(e[a]<t||e[a]>n)throw new Error("Value out of range:".concat(e[a]," low: ").concat(t,", high: ").concat(n))}function Gt(e,t){const n=new Float32Array(e),a=new Float32Array(t);if(n.length!==a.length)throw new Error("Expected ArrayBuffer to be of length "+"".concat(a.length,", but it was ").concat(n.length));for(let r=0;r<a.length;r++)if(n[r]!==a[r])throw new Error("Expected ArrayBuffer value at ".concat(r," to be ")+"".concat(a[r]," but got ").concat(n[r]," instead"))}function Ht(e){for(let t=0;t<e.length;t++){const n=e[t];Array.isArray(n)?Ht(n):e[t]=(0,Dt.encodeString)(n)}return e}function jt(e){const t=document.createElement("video");return"playsInline"in t&&(t.playsInline=!0),t.muted=!0,t.loop=!0,t.style.position="fixed",t.style.left="0px",t.style.top="0px",t.preload="auto",t.appendChild(e),new Promise((e=>{t.addEventListener("loadeddata",(n=>e(t))),t.load()}))}async function qt(e){await e.play(),"requestVideoFrameCallback"in e&&await new Promise((t=>{e.requestVideoFrameCallback(t)}))}const Xt="4.20.0";class Kt{static sgd(e){return new Pe(e)}static momentum(e,t){return new Ve(e,t,arguments.length>2&&void 0!==arguments[2]&&arguments[2])}static rmsprop(e){return new We(e,arguments.length>1&&void 0!==arguments[1]?arguments[1]:.9,arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,arguments.length>3&&void 0!==arguments[3]?arguments[3]:null,arguments.length>4&&void 0!==arguments[4]&&arguments[4])}static adam(){return new Me(arguments.length>0&&void 0!==arguments[0]?arguments[0]:.001,arguments.length>1&&void 0!==arguments[1]?arguments[1]:.9,arguments.length>2&&void 0!==arguments[2]?arguments[2]:.999,arguments.length>3&&void 0!==arguments[3]?arguments[3]:null)}static adadelta(){return new Ae(arguments.length>0&&void 0!==arguments[0]?arguments[0]:.001,arguments.length>1&&void 0!==arguments[1]?arguments[1]:.95,arguments.length>2&&void 0!==arguments[2]?arguments[2]:null)}static adamax(){return new Be(arguments.length>0&&void 0!==arguments[0]?arguments[0]:.002,arguments.length>1&&void 0!==arguments[1]?arguments[1]:.9,arguments.length>2&&void 0!==arguments[2]?arguments[2]:.999,arguments.length>3&&void 0!==arguments[3]?arguments[3]:null,arguments.length>4&&void 0!==arguments[4]?arguments[4]:0)}static adagrad(e){return new Fe(e,arguments.length>1&&void 0!==arguments[1]?arguments[1]:.1)}}var Qt=n(3525),Yt=n(9503),Zt=n(7627);const Jt=Kt,$t="undefined"!==typeof requestAnimationFrame?requestAnimationFrame:"undefined"!==typeof setImmediate?setImmediate:e=>e();function en(){return new Promise((e=>$t((()=>e()))))}var tn=n(8473);function nn(e,t){const n=e[0].length;e.forEach(((e,t)=>{M.hu(e.length===n,(()=>"Error in concat".concat(n,"D: rank of tensors[").concat(t,"] must be the same ")+"as the rank of the rest (".concat(n,")")))})),M.hu(t>=0&&t<n,(()=>"Error in concat".concat(n,"D: axis must be between 0 and ").concat(n-1,".")));const a=e[0];e.forEach(((e,r)=>{for(let s=0;s<n;s++)M.hu(s===t||e[s]===a[s],(()=>"Error in concat".concat(n,"D: Shape of tensors[").concat(r,"] (").concat(e,") ")+"does not match the shape of the rest (".concat(a,") ")+"along the non-concatenated axis ".concat(r,".")))}))}function an(e,t){const n=e[0].slice();for(let a=1;a<e.length;a++)n[t]+=e[a][t];return n}var rn,sn=n(9151),on=n(5171);function cn(e,t,n){let a=new Array;if(null==n&&null==t)return a;if(null==t)for(;a.length<e+n.length;)a.push(-1);else a=t.slice();if(null==n)return a;if(e+n.length!==a.length)throw new Error("rt input.shape and shape=".concat(t," are incompatible: rt input.rank = ").concat(e+n.length,", but shape.rank = ").concat(a.length));for(let r=1;r<n.length;++r){const s=n[r],o=a[a.length-n.length+r],i=a[o];if(s>=0)if(i>=0){if(i!==s)throw new Error("rt input.shape and shape=".concat(t," are incompatible: rt input.shape[").concat(r+e,"] = ").concat(s," but shape[").concat(r+e,"] = ").concat(i))}else a[o]=s}return a}function ln(e){const t={FIRST_DIM_SIZE:rn.FIRST_DIM_SIZE,VALUE_ROWIDS:rn.VALUE_ROWIDS,ROW_LENGTHS:rn.ROW_LENGTHS,ROW_SPLITS:rn.ROW_SPLITS,ROW_LIMITS:rn.ROW_LIMITS,ROW_STARTS:rn.ROW_STARTS},n=[];for(const a of e){if(!(a in t))break;n.push(t[a])}return n}function un(e){return 0===e.length?0:e[0]===rn.FIRST_DIM_SIZE?e.length-1:e.length}function dn(e,t){if(null==e||null==t)return;const n=e.length,a=t.length;if(n>=a)throw new Error("defaultValue.shape=".concat(e," and ragged tensor flatValues.shape=").concat(t,", are incompatible: defaultValue.rank = ").concat(n," must be less than ragged tensor input flatValues.rank = ").concat(a,")"));for(let r=0;r<Math.min(n,a-1);++r){const n=e[r],a=t[r+1];if(n>=0&&a>=0&&1!==n&&n!==a)throw new Error("defaultValue.shape=".concat(e,", and ragged tensor input flatValues.shape=").concat(t," are incompatible: defaultValue.shape[").concat(r-e.length,"] = ").concat(n," but ragged tensor input.flatValues.shape[").concat(r-e.length,"] = ").concat(a))}}!function(e){e[e.FIRST_DIM_SIZE=0]="FIRST_DIM_SIZE",e[e.VALUE_ROWIDS=1]="VALUE_ROWIDS",e[e.ROW_LENGTHS=2]="ROW_LENGTHS",e[e.ROW_SPLITS=3]="ROW_SPLITS",e[e.ROW_LIMITS=4]="ROW_LIMITS",e[e.ROW_STARTS=5]="ROW_STARTS"}(rn||(rn={}));const hn=30;function pn(e){return e<=hn?e:(0,M.jP)(e,Math.floor(Math.sqrt(e)))}function fn(e,t,n){return[n*("number"===typeof e?e:e[0]),t*("number"===typeof e?e:e[1])]}function mn(e,t,n){let a=!(arguments.length>3&&void 0!==arguments[3])||arguments[3],r=[];if(a)r=r.concat(t.slice(0)),r.push(e[0]/n),r=r.concat(e.slice(1));else{r=r.concat(e[0]);const n=t.length;for(let a=0;a<n;++a)r=r.concat([e[a+1]/t[a],t[a]]);r=r.concat(e.slice(n+1))}return r}function gn(e,t){let n=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];const a=[];if(n){a.push(t);for(let n=t+1;n<e;++n)n<=2*t?(a.push(n),a.push(n-(t+1))):a.push(n)}else{const n=[],r=[];for(let a=1;a<e;++a)a>=2*t+1||a%2===1?r.push(a):n.push(a);a.push(...n),a.push(0),a.push(...r)}return a}function yn(e,t,n){let a=!(arguments.length>3&&void 0!==arguments[3])||arguments[3];const r=[];a?r.push(e[0]/n):r.push(e[0]*n);for(let s=1;s<e.length;++s)s<=t.length?a?r.push(t[s-1]*e[s]):r.push(e[s]/t[s-1]):r.push(e[s]);return r}function bn(e,t){const n=[0];for(let a=0;a<t;++a)n.push(e[a][0]);return n}function vn(e,t,n){const a=e.slice(0,1);for(let r=0;r<n;++r)a.push(e[r+1]-t[r][0]-t[r][1]);return a}var xn=n(349);const wn=.3275911,kn=.254829592,Sn=-.284496736,Nn=1.421413741,In=-1.453152027,Tn=1.061405429;var Cn=n(7269);function En(e,t){if(e.length!==t.length)throw new Error("Cannot merge real and imag arrays of different lengths. real:"+"".concat(e.length,", imag: ").concat(t.length,"."));const n=new Float32Array(2*e.length);for(let a=0;a<n.length;a+=2)n[a]=e[a/2],n[a+1]=t[a/2];return n}function _n(e){const t=new Float32Array(e.length/2),n=new Float32Array(e.length/2);for(let a=0;a<e.length;a+=2)t[a/2]=e[a],n[a/2]=e[a+1];return{real:t,imag:n}}function An(e){const t=Math.ceil(e.length/4),n=new Float32Array(t),a=new Float32Array(t);for(let r=0;r<e.length;r+=4)n[Math.floor(r/4)]=e[r],a[Math.floor(r/4)]=e[r+1];return{real:n,imag:a}}function Rn(e){const t=Math.floor(e.length/4),n=new Float32Array(t),a=new Float32Array(t);for(let r=2;r<e.length;r+=4)n[Math.floor(r/4)]=e[r],a[Math.floor(r/4)]=e[r+1];return{real:n,imag:a}}function Fn(e,t){return{real:e[2*t],imag:e[2*t+1]}}function Dn(e,t,n,a){e[2*a]=t,e[2*a+1]=n}function On(e,t){const n=new Float32Array(e/2),a=new Float32Array(e/2);for(let r=0;r<Math.ceil(e/2);r++){const s=(t?2:-2)*Math.PI*(r/e);n[r]=Math.cos(s),a[r]=Math.sin(s)}return{real:n,imag:a}}function Mn(e,t,n){const a=(n?2:-2)*Math.PI*(e/t);return{real:Math.cos(a),imag:Math.sin(a)}}const zn="->",Ln=/->/g;function Bn(e,t){const n=((e=e.replace(/\s/g,"")).length-e.replace(Ln,"").length)/zn.length;if(n<1)throw new Error("Equations without an arrow are not supported.");if(n>1)throw new Error('Equation must contain exactly one arrow ("'.concat(zn,'").'));const[a,r]=e.split(zn);(0,M.hu)(-1===a.indexOf("..."),(()=>'The ellipsis notation ("'.concat("...",'") is not supported yet.')));const s=a.split(","),o=s.length;if(t!==o)throw new Error("Expected ".concat(o," input tensors, received ").concat(t));if(o>2)throw new Error("Support for more than 2 input tensors is not implemented yet.");const i=[];for(let d=0;d<r.length;++d){const e=r[d];if(!s.some((t=>-1!==t.indexOf(e))))throw new Error("Output subscripts contain the label ".concat(e," ")+"not present in the input subscripts.");-1===i.indexOf(e)&&i.push(e)}for(let d=0;d<a.length;++d){const e=a[d];-1===i.indexOf(e)&&","!==e&&i.push(e)}const c=new Array(s.length);for(let d=0;d<o;++d){if(new Set(s[d].split("")).size!==s[d].length)throw new Error("Found duplicate axes in input component ".concat(s[d],". ")+"Support for duplicate axes in input is not implemented yet.");c[d]=[];for(let e=0;e<s[d].length;++e)c[d].push(i.indexOf(s[d][e]))}const l=i.length,u=[];for(let d=r.length;d<l;++d)u.push(d);return{allDims:i,summedDims:u,idDims:c}}function Pn(e,t){let n=new Array(e);n.fill(-1);for(let r=0;r<t.length;++r)n[t[r]]=r;const a=[];for(let r=0;r<e;++r)-1===n[r]&&a.push(r);return n=n.filter((e=>-1!==e)),{permutationIndices:n,expandDims:a}}function Vn(e,t,n){const a=new Array(e);for(let r=0;r<n.length;++r){const e=n[r].shape;for(let n=0;n<t[r].length;++n)void 0===a[t[r][n]]?a[t[r][n]]=e[n]:(0,M.hu)(a[t[r][n]]===e[n],(()=>"Expected dimension ".concat(a[t[r][n]]," at axis ").concat(n," ")+"of input shaped ".concat(JSON.stringify(e),", ")+"but got dimension ".concat(e[n])))}}function Wn(e,t){const n=e,a=[];let r=0;0===e.length&&n.push(-1),r=e.length+1;for(let o=0;o<r;++o)a.push([]);const s=[];for(let o=0;o<n.length;++o){const e=Gn(t,n[o]);for(const t of e)-1===s.indexOf(t)&&(a[o].push(t),s.push(t))}return{path:n,steps:a}}function Un(e){return e.every(((e,t)=>e===t))}function Gn(e,t){const n=[];for(let a=0;a<e.length;++a)0!==e[a].length&&-1===e[a].indexOf(t)&&-1!==t||n.push(a);return n}function Hn(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,a=[];if("number"===typeof t)(0,M.hu)(e.shape[n]%t===0,(()=>"Number of splits must evenly divide the axis.")),a=new Array(t).fill(e.shape[n]/t);else{const r=t.reduce(((e,t)=>(-1===t&&(e+=1),e)),0);(0,M.hu)(r<=1,(()=>"There should be only one negative value in split array."));const s=t.indexOf(-1);if(-1!==s){const a=t.reduce(((e,t)=>t>0?e+t:e));t[s]=e.shape[n]-a}(0,M.hu)(e.shape[n]===t.reduce(((e,t)=>e+t)),(()=>"The sum of sizes must match the size of the axis dimension.")),a=t}return a}function jn(e){return"Received SparseTensor with denseShape[0] = 0 but\n  indices.shape[0] = ".concat(e)}function qn(e,t){return"indices(".concat(e,", 0) is invalid: ").concat(t," < 0")}function Xn(e,t,n){return"indices(".concat(e,", 0) is invalid: ").concat(t," >= ").concat(n)}function Kn(e,t){return"only one output dimension may be -1, not both ".concat(e," and ").concat(t)}function Qn(e,t){return"size ".concat(e," must be non-negative, not ").concat(t)}function Yn(){return"reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero"}function Zn(e,t){const n=(0,M.NA)(e),a=(0,M.NA)(t);return"Input to reshape is a SparseTensor with ".concat(n,"\n  dense values, but the requested shape requires a multiple of ").concat(a,". inputShape=").concat(e," outputShape= ").concat(t)}function Jn(e,t){const n=(0,M.NA)(e),a=(0,M.NA)(t);return"Input to reshape is a tensor with ".concat(n," dense values, but the requested shape has ").concat(a,". inputShape=").concat(e," outputShape=").concat(t)}function $n(){return"segment ids must be >= 0"}function ea(){return"segment ids are not increasing"}function ta(e,t){return"Segment id ".concat(e," out of range [0, ").concat(t,"), possibly because segmentIds input is not sorted.")}function na(e,t,n){return"Bad: indices[".concat(e,"] == ").concat(t," out of range [0, ").concat(n,")")}function aa(e,t){let n,a=!1;for(e<=hn?(n=e,a=!0):n=(0,M.jP)(e,Math.floor(Math.sqrt(e)));!a;)n>t||n===e?a=!0:n=(0,M.jP)(e,n+1);return n}function ra(e,t,n){const a=[],r=e.length;for(let s=0;s<r;s++)s!==t?a.push(e[s]):a.push(n);return a}function sa(e,t,n,a){const r=t.shape.length,s=e.shape.length;if(0!==a&&(a<-r||a>r))throw new Error("Expect batchDims in the range of [-".concat(r,", ").concat(r,"], but got ").concat(a));if(a<0&&(a+=r),a>s)throw new Error("batchDims (".concat(a,") must be less than rank(x) (\n    ").concat(s,")."));if(n<a)throw new Error("batchDims (".concat(a,") must be less than or equal to axis (").concat(n,")."));for(let d=0;d<a;++d)if(e.shape[d]!==t.shape[d])throw new Error("x.shape[".concat(d,"]: ").concat(e.shape[d]," should be equal to indices.shape[").concat(d,"]: ").concat(t.shape[d],"."));const o=e.shape[n],i=[];let c=1,l=1,u=1;for(let d=0;d<a;++d)i.push(e.shape[d]),c*=e.shape[d];for(let d=a;d<n;d++)i.push(e.shape[d]),l*=e.shape[d];for(let d=a;d<r;d++)i.push(t.shape[d]);for(let d=n+1;d<s;d++)i.push(e.shape[d]),u*=e.shape[d];return{batchSize:c,sliceSize:u,outerSize:l,dimSize:o,outputShape:i}}function oa(e){try{return e.map((e=>(0,Dt.decodeString)(e)))}catch(da){throw new Error("Failed to decode encoded string bytes into utf-8, error: ".concat(da))}}function ia(e){return e.map((e=>(0,Dt.encodeString)(e)))}var ca=n(745),la=n(4189),ua=n(4679);!function(){for(const e of Ue)Ce(e)}()},5714:(e,t,n)=>{"use strict";n.d(t,{w:()=>r});var a=n(115);class r{static join(e){return new r(e).slice()}constructor(e){if(this.shards=[],this.previousShardIndex=0,null==e)return;if(e instanceof Array||(e=[e]),0===(e=e.map((e=>a.isTypedArray(e)?e.buffer:e))).length)return;this.bufferUniformSize=e[0].byteLength;let t=0;for(let n=0;n<e.length;n++){const a=e[n];n!==e.length-1&&a.byteLength!==this.bufferUniformSize&&(this.bufferUniformSize=void 0);const r=t+a.byteLength;this.shards.push({buffer:a,start:t,end:r}),t=r}0===this.shards.length&&(this.byteLength=0),this.byteLength=this.shards[this.shards.length-1].end}slice(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0,t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:this.byteLength;if(0===this.shards.length)return new ArrayBuffer(0);if(e=isNaN(Number(e))?0:e,t=isNaN(Number(t))?0:t,e=Math.max(0,e),t=Math.min(this.byteLength,t),t<=e)return new ArrayBuffer(0);const n=this.findShardForByte(e);if(-1===n)throw new Error("Could not find start shard for byte ".concat(e));const a=new ArrayBuffer(t-e),r=new Uint8Array(a);let s=0;for(let o=n;o<this.shards.length;o++){const n=this.shards[o],a=e+s-n.start,i=s,c=Math.min(t,n.end)-n.start,l=new Uint8Array(n.buffer,a,c-a);if(r.set(l,i),s+=l.length,t<n.end)break}return a}findShardForByte(e){if(0===this.shards.length||e<0||e>=this.byteLength)return-1;if(null!=this.bufferUniformSize)return this.previousShardIndex=Math.floor(e/this.bufferUniformSize),this.previousShardIndex;function t(t){return e<t.start?-1:e>=t.end?1:0}if(0===t(this.shards[this.previousShardIndex]))return this.previousShardIndex;const n=function(e,t){let n=0,a=e.length;for(;n<=a;){const r=Math.floor((a-n)/2)+n,s=t(e[r]);if(0===s)return r;s<0?a=r:n=r+1}return-1}(this.shards,t);return-1===n?-1:(this.previousShardIndex=n,this.previousShardIndex)}}},1434:(e,t,n)=>{"use strict";n.d(t,{EZ:()=>S,JY:()=>k,Q:()=>C,Yd:()=>N,_n:()=>x,dI:()=>d,hu:()=>E,jN:()=>T,ji:()=>I,n7:()=>w,r:()=>g,yz:()=>u});var a=n(9253),r=n(2442),s=n(6147),o=n(1988),i=n(5714),c=n(5875),l=n(5050);async function u(e,t){const n=[],a=[],r=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);for(let s=0;s<r.length;++s){const o=r[s],i=Array.isArray(e)?e[s].tensor:e[o];if("float32"!==i.dtype&&"int32"!==i.dtype&&"bool"!==i.dtype&&"string"!==i.dtype&&"complex64"!==i.dtype)throw new Error("Unsupported dtype in weight '".concat(o,"': ").concat(i.dtype));const c={name:o,shape:i.shape,dtype:i.dtype};if("string"===i.dtype){const e=new Promise((async e=>{const t=await i.bytes(),n=t.reduce(((e,t)=>e+t.length),0)+4*t.length,a=new Uint8Array(n);let r=0;for(let s=0;s<t.length;s++){const e=t[s],n=new Uint8Array(new Uint32Array([e.length]).buffer);a.set(n,r),r+=4,a.set(e,r),r+=e.length}e(a)}));a.push(e)}else a.push(i.data());null!=t&&(c.group=t),n.push(c)}return{data:y(await Promise.all(a)),specs:n}}function d(e,t){const n=new i.w(e),a={};let r=0;for(const s of t){const e=h(s,((e,t)=>n.slice(r+e,r+t)));a[s.name]=f(s,n.slice(r,r+e)),r+=e}return a}function h(e,t){const n=(0,s.NA)(e.shape);let a;if("quantization"in e){const t=e.quantization;a=o.J[t.dtype]}else{if("string"===e.dtype){let e=0;for(let a=0;a<n;a++)e+=4+new Uint32Array(t(e,e+4))[0];return e}a=o.J[e.dtype]}return n*a}async function p(e,t){const n=(0,s.NA)(e.shape);let a;if("quantization"in e){const t=e.quantization;a=o.J[t.dtype]}else{if("string"===e.dtype){let e=0;for(let a=0;a<n;a++)e+=4+new Uint32Array(await t(e,e+4))[0];return e}a=o.J[e.dtype]}return n*a}function f(e,t){const n=e.name,i=e.dtype,c=e.shape,l=(0,s.NA)(c);let u,d=0;if("quantization"in e){const a=e.quantization;if("uint8"===a.dtype||"uint16"===a.dtype){if(!("min"in a)||!("scale"in a))throw new Error("Weight ".concat(e.name," with quantization ").concat(a.dtype," ")+"doesn't have corresponding metadata min and scale.")}else{if("float16"!==a.dtype)throw new Error("Weight ".concat(e.name," has unknown ")+"quantization dtype ".concat(a.dtype,". ")+"Supported quantization dtypes are: 'uint8', 'uint16', and 'float16'.");if("float32"!==i)throw new Error("Weight ".concat(e.name," is quantized with ").concat(a.dtype," ")+"which only supports weights of type float32 not ".concat(i,"."))}const r=o.J[a.dtype],s="uint8"===a.dtype?new Uint8Array(t):new Uint16Array(t);if("float32"===i)if("uint8"===a.dtype||"uint16"===a.dtype){u=new Float32Array(s.length);for(let e=0;e<s.length;e++){const t=s[e];u[e]=t*a.scale+a.min}}else{if("float16"!==a.dtype)throw new Error("Unsupported quantization type ".concat(a.dtype," ")+"for weight type float32.");{const e=function(){const e=function(){const e=e=>{let t=e<<13,n=0;for(;0===(8388608&t);)n-=8388608,t<<=1;return t&=-8388609,n+=947912704,t|n},t=new Uint32Array(2048);t[0]=0;for(let n=1;n<1024;n++)t[n]=e(n);for(let n=1024;n<2048;n++)t[n]=939524096+(n-1024<<13);return t}(),t=function(){const e=new Uint32Array(64);e[0]=0,e[31]=1199570944,e[32]=2147483648,e[63]=3347054592;for(let t=1;t<31;t++)e[t]=t<<23;for(let t=33;t<63;t++)e[t]=2147483648+(t-32<<23);return e}(),n=function(){const e=new Uint32Array(64);for(let t=0;t<64;t++)e[t]=1024;return e[0]=e[32]=0,e}();return a=>{const r=new ArrayBuffer(4*a.length),s=new Uint32Array(r);for(let o=0;o<a.length;o++){const r=a[o],i=e[n[r>>10]+(1023&r)]+t[r>>10];s[o]=i}return new Float32Array(r)}}();u=e(s)}}else{if("int32"!==i)throw new Error("Unsupported dtype in weight '".concat(n,"': ").concat(i));if("uint8"!==a.dtype&&"uint16"!==a.dtype)throw new Error("Unsupported quantization type ".concat(a.dtype," ")+"for weight type int32.");u=new Int32Array(s.length);for(let e=0;e<s.length;e++){const t=s[e];u[e]=Math.round(t*a.scale+a.min)}}d+=l*r}else if("string"===i){const n=(0,s.NA)(e.shape);u=[];for(let e=0;e<n;e++){const e=new Uint32Array(t.slice(d,d+4))[0];d+=4;const n=new Uint8Array(t.slice(d,d+e));u.push(n),d+=e}}else{const e=o.J[i];if("float32"===i)u=new Float32Array(t);else if("int32"===i)u=new Int32Array(t);else{if("bool"!==i){if("complex64"===i){u=new Float32Array(t);const e=new Float32Array(u.length/2),n=new Float32Array(u.length/2);for(let t=0;t<e.length;t++)e[t]=u[2*t],n[t]=u[2*t+1];const s=(0,r.X)(e,c,"float32"),o=(0,r.X)(n,c,"float32"),i=(0,a.P)(s,o);return s.dispose(),o.dispose(),i}throw new Error("Unsupported dtype in weight '".concat(n,"': ").concat(i))}u=new Uint8Array(t)}d+=l*e}return(0,r.X)(u,c,i)}async function m(e,t,n){let a=new Uint8Array(t);for(;a.byteLength<n;){const{done:t,value:r}=await e.read();if(t&&null==r){const e=n-a.byteLength;throw new Error("Reader is done but ".concat(e," bytes are still expected"))}const s=new Uint8Array(a.length+r.byteLength);s.set(a,0),s.set(new Uint8Array(r),a.length),a=s}return a.buffer}async function g(e,t){const n={},a=e.getReader();let r=new ArrayBuffer(0);for(const o of t){const e=await p(o,(async(e,t)=>(r=await m(a,r,t),r.slice(e,t))));r=await m(a,r,e);const t=r.slice(0,e);r=r.slice(e);const i=f(o,t);if(n[o.name]=i,"webgpu"===(0,c.N_)()){const e=(0,c.y3)();"uploadToGPU"in e&&(0,s.NA)(i.shape)>=(0,l.OB)().get("WEBGPU_CPU_HANDOFF_SIZE_THRESHOLD")&&e.uploadToGPU(i.dataId)}}return n}function y(e){if(null===e)throw new Error("Invalid input value: ".concat(JSON.stringify(e)));let t=0;const n=[];e.forEach((e=>{if(t+=e.byteLength,n.push(e.byteLength===e.buffer.byteLength?e:new e.constructor(e)),!(e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array))throw new Error("Unsupported TypedArray subtype: ".concat(e.constructor.name))}));const a=new Uint8Array(t);let r=0;return n.forEach((e=>{a.set(new Uint8Array(e.buffer),r),r+=e.byteLength})),a.buffer}const b="undefined"!==typeof Buffer&&("undefined"===typeof Blob||"undefined"===typeof atob||"undefined"===typeof btoa);function v(e){return b?Buffer.byteLength(e,"utf8"):new Blob([e]).size}function x(e){if(b)return Buffer.from(e).toString("base64");const t=new Uint8Array(e);let n="";for(let a=0,r=t.length;a<r;a++)n+=String.fromCharCode(t[a]);return btoa(n)}function w(e){if(b){const t=Buffer.from(e,"base64");return t.buffer.slice(t.byteOffset,t.byteOffset+t.byteLength)}const t=atob(e),n=new Uint8Array(t.length);for(let a=0;a<t.length;++a)n.set([t.charCodeAt(a)],a);return n.buffer}function k(e){return i.w.join(e)}function S(e){for(e=e.trim();e.endsWith("/");)e=e.slice(0,e.length-1);const t=e.split("/");return t[t.length-1]}function N(e,t){const n={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,weightsManifest:t};return null!=e.signature&&(n.signature=e.signature),null!=e.userDefinedMetadata&&(n.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(n.modelInitializer=e.modelInitializer),null!=e.initializerSignature&&(n.initializerSignature=e.initializerSignature),null!=e.trainingConfig&&(n.trainingConfig=e.trainingConfig),n}function I(e,t,n){const a={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy};if(null!=e.trainingConfig&&(a.trainingConfig=e.trainingConfig),null!=e.weightsManifest){if(!t)throw new Error("modelJSON has weightsManifest but weightSpecs is null");if(!n)throw new Error("modelJSON has weightsManifest but weightData is null");a.weightSpecs=t,a.weightData=n}return null!=e.signature&&(a.signature=e.signature),null!=e.userDefinedMetadata&&(a.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(a.modelInitializer=e.modelInitializer),null!=e.initializerSignature&&(a.initializerSignature=e.initializerSignature),a}async function T(e,t){let n,a;return null!=e.weightsManifest&&([n,a]=await t(e.weightsManifest)),I(e,n,a)}function C(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:null==e.modelTopology?0:v(JSON.stringify(e.modelTopology)),weightSpecsBytes:null==e.weightSpecs?0:v(JSON.stringify(e.weightSpecs)),weightDataBytes:null==e.weightData?0:new i.w(e.weightData).byteLength}}function E(e){const t=[];for(const n of e)t.push(...n.weights);return t}},1988:(e,t,n)=>{"use strict";n.d(t,{J:()=>a});const a={float32:4,float16:2,int32:4,uint16:2,uint8:1,bool:1,complex64:8}},2145:(e,t,n)=>{"use strict";n.d(t,{$HU:()=>bt,$g6:()=>te,$w:()=>Q,Acj:()=>be,BMI:()=>We,BiW:()=>mt,Byc:()=>W,CAk:()=>Ce,CQl:()=>ft,D2d:()=>Qt,DlI:()=>ht,Eh3:()=>F,FKq:()=>Vt,G3Y:()=>un,GBy:()=>Wt,Gcp:()=>Ht,HEU:()=>ae,HZH:()=>xt,Hhh:()=>Be,Hmb:()=>kt,IKK:()=>l,IMb:()=>x,J$2:()=>Ie,J7O:()=>Pe,J_u:()=>we,JhU:()=>y,Kgp:()=>lt,L8s:()=>Gt,Ly9:()=>I,M2y:()=>h,MIZ:()=>sn,MRv:()=>Pt,MZg:()=>De,NEP:()=>oe,NZg:()=>Je,O3z:()=>jt,OAf:()=>He,OR:()=>he,OU7:()=>je,OV7:()=>Ge,Omj:()=>re,Oyi:()=>m,PYm:()=>Re,PhF:()=>Ft,QCc:()=>g,QRR:()=>H,Qg5:()=>xe,QiL:()=>it,Qvg:()=>pn,RFZ:()=>C,ROF:()=>b,RQH:()=>Mt,RuY:()=>mn,SIB:()=>At,SX0:()=>ne,SYM:()=>a,SbG:()=>It,SpW:()=>s,T0n:()=>j,TQc:()=>Ut,TR1:()=>V,ToN:()=>hn,Tr8:()=>an,Uyb:()=>de,VGw:()=>r,Vbg:()=>Ze,VcC:()=>G,VfG:()=>Fe,Vn9:()=>J,W0H:()=>rt,XDQ:()=>fn,XLW:()=>w,XkS:()=>nn,Xze:()=>i,Y0y:()=>ce,YFo:()=>ie,YoZ:()=>Ve,ZbH:()=>_e,ZjV:()=>Kt,Zz9:()=>A,_JP:()=>en,_V0:()=>xn,_Yw:()=>St,_k9:()=>v,_tC:()=>Yt,a5O:()=>Bt,aJk:()=>d,avt:()=>ke,b9H:()=>bn,bK0:()=>Zt,bV0:()=>Et,c17:()=>Ke,cWu:()=>cn,cie:()=>q,cye:()=>at,dDz:()=>pt,deh:()=>ue,dpD:()=>wt,e07:()=>Ct,e0R:()=>Jt,e6w:()=>gt,e7N:()=>Ee,eBW:()=>yn,eEB:()=>T,eZ0:()=>Le,ekb:()=>Z,gJX:()=>E,h8e:()=>gn,hCO:()=>N,hGc:()=>$,hdR:()=>se,i5y:()=>Lt,iHb:()=>U,iJz:()=>ve,iWB:()=>Se,iZT:()=>ye,ik2:()=>B,jMg:()=>f,jQk:()=>$t,jQs:()=>Ye,jeX:()=>pe,kU:()=>Ae,kpP:()=>dn,kuV:()=>et,luS:()=>wn,lyA:()=>ct,mKl:()=>Tt,mTV:()=>Ue,mc4:()=>P,mhS:()=>D,mm_:()=>o,n9L:()=>on,nhH:()=>qt,nr8:()=>Rt,o0g:()=>dt,o2y:()=>L,oFR:()=>Dt,oHH:()=>ee,oT6:()=>c,p2w:()=>Ot,p4S:()=>Y,pe_:()=>ut,q1x:()=>ge,q2K:()=>Xe,q8u:()=>Qe,qCd:()=>Me,qIC:()=>ze,qWM:()=>st,qi_:()=>me,qkr:()=>vt,qw7:()=>p,r7n:()=>Ne,s1s:()=>tn,sEM:()=>rn,sHE:()=>fe,sJF:()=>u,sL$:()=>X,usg:()=>vn,uv1:()=>nt,vFR:()=>qe,vtC:()=>Te,vwp:()=>le,w3H:()=>Xt,w6g:()=>Oe,wUP:()=>O,wYB:()=>zt,wYn:()=>$e,we_:()=>ot,wm:()=>M,wx7:()=>ln,x12:()=>z,xJR:()=>yt,xQA:()=>_t,xnO:()=>_,y7R:()=>K,yQU:()=>tt,yj2:()=>R,zbQ:()=>Nt,zvY:()=>S,zws:()=>k});const a="Abs",r="Acos",s="Acosh",o="Add",i="AddN",c="All",l="Any",u="ArgMax",d="ArgMin",h="Asin",p="Asinh",f="Atan",m="Atanh",g="Atan2",y="AvgPool",b="AvgPoolGrad",v="AvgPool3D",x="AvgPool3DGrad",w="BatchMatMul",k="BatchToSpaceND",S="Bincount",N="BitwiseAnd",I="BroadcastTo",T="BroadcastArgs",C="Cast",E="Ceil",_="ClipByValue",A="Complex",R="ComplexAbs",F="Concat",D="Conv2D",O="Conv2DBackpropFilter",M="Conv2DBackpropInput",z="Conv3D",L="Conv3DBackpropFilterV2",B="Conv3DBackpropInputV2",P="Cos",V="Cosh",W="Cumprod",U="Cumsum",G="CropAndResize",H="DenseBincount",j="DepthToSpace",q="DepthwiseConv2dNative",X="DepthwiseConv2dNativeBackpropFilter",K="DepthwiseConv2dNativeBackpropInput",Q="Diag",Y="Dilation2D",Z="Dilation2DBackpropInput",J="Dilation2DBackpropFilter",$="Draw",ee="RealDiv",te="Einsum",ne="Elu",ae="EluGrad",re="Erf",se="Equal",oe="Exp",ie="ExpandDims",ce="Expm1",le="FFT",ue="Fill",de="FlipLeftRight",he="Floor",pe="FloorDiv",fe="FusedBatchNorm",me="GatherV2",ge="GatherNd",ye="Greater",be="GreaterEqual",ve="Identity",xe="IFFT",we="Imag",ke="IsFinite",Se="IsInf",Ne="IsNan",Ie="LeakyRelu",Te="Less",Ce="LessEqual",Ee="LinSpace",_e="Log",Ae="Log1p",Re="LogicalAnd",Fe="LogicalNot",De="LogicalOr",Oe="LogicalXor",Me="LogSoftmax",ze="LowerBound",Le="LRN",Be="LRNGrad",Pe="MatrixBandPart",Ve="Max",We="Maximum",Ue="MaxPool",Ge="MaxPoolGrad",He="MaxPool3D",je="MaxPool3DGrad",qe="MaxPoolWithArgmax",Xe="Mean",Ke="Min",Qe="Minimum",Ye="MirrorPad",Ze="Mod",Je="Multinomial",$e="Multiply",et="Neg",tt="NotEqual",nt="NonMaxSuppressionV3",at="NonMaxSuppressionV4",rt="NonMaxSuppressionV5",st="OnesLike",ot="OneHot",it="Pack",ct="PadV2",lt="Pool",ut="Pow",dt="Prelu",ht="Prod",pt="RaggedGather",ft="RaggedRange",mt="RaggedTensorToTensor",gt="Range",yt="Real",bt="Reciprocal",vt="Relu",xt="Reshape",wt="ResizeNearestNeighbor",kt="ResizeNearestNeighborGrad",St="ResizeBilinear",Nt="ResizeBilinearGrad",It="Relu6",Tt="Reverse",Ct="Round",Et="Rsqrt",_t="ScatterNd",At="TensorScatterUpdate",Rt="SearchSorted",Ft="Select",Dt="Selu",Ot="Slice",Mt="Sin",zt="Sinh",Lt="Sign",Bt="Sigmoid",Pt="Softplus",Vt="Sqrt",Wt="Sum",Ut="SpaceToBatchND",Gt="SplitV",Ht="Softmax",jt="SparseFillEmptyRows",qt="SparseReshape",Xt="SparseSegmentMean",Kt="SparseSegmentSum",Qt="SparseToDense",Yt="SquaredDifference",Zt="Square",Jt="StaticRegexReplace",$t="StridedSlice",en="StringNGrams",tn="StringSplit",nn="StringToHashBucketFast",an="Sub",rn="Tan",sn="Tanh",on="Tile",cn="TopK",ln="Transform",un="Transpose",dn="Unique",hn="Unpack",pn="UnsortedSegmentSum",fn="UpperBound",mn="ZerosLike",gn="Step",yn="FromPixels",bn="RotateWithOffset",vn="_FusedMatMul",xn="FusedConv2D",wn="FusedDepthwiseConv2D"},8864:(e,t,n)=>{"use strict";n.d(t,{Li:()=>h,T3:()=>m,bt:()=>f,nE:()=>p,pI:()=>c,tr:()=>u,uk:()=>l,wC:()=>d});var a=n(5050),r=n(6581),s=n(7269);const o=(0,r.R)("kernelRegistry",(()=>new Map)),i=(0,r.R)("gradRegistry",(()=>new Map));function c(e,t){const n=g(e,t);return o.get(n)}function l(e){return i.get(e)}function u(e){const t=o.entries(),n=[];for(;;){const{done:a,value:r}=t.next();if(a)break;const[s,o]=r,[i]=s.split("_");i===e&&n.push(o)}return n}function d(e){const{kernelName:t,backendName:n}=e,a=g(t,n);o.has(a)&&s.Z("The kernel '".concat(t,"' for backend ")+"'".concat(n,"' is already registered")),o.set(a,e)}function h(e){const{kernelName:t}=e;i.has(t)&&(0,a.OB)().getBool("DEBUG")&&s.Z("Overriding the gradient for '".concat(t,"'")),i.set(t,e)}function p(e,t){const n=g(e,t);if(!o.has(n))throw new Error("The kernel '".concat(e,"' for backend ")+"'".concat(t,"' is not registered"));o.delete(n)}function f(e){if(!i.has(e))throw new Error("The gradient '".concat(e,"' for backend is not registered"));i.delete(e)}function m(e,t){u(e).forEach((e=>{d(Object.assign({},e,{backendName:t}))}))}function g(e,t){return"".concat(t,"_").concat(e)}},7269:(e,t,n)=>{"use strict";n.d(t,{Z:()=>r,c:()=>s});var a=n(5050);function r(){(0,a.OB)().getBool("IS_TEST")||(0,a.OB)().getBool("PROD")||console.warn(...arguments)}function s(){(0,a.OB)().getBool("IS_TEST")||(0,a.OB)().getBool("PROD")||console.log(...arguments)}},7613:(e,t,n)=>{"use strict";n.d(t,{W:()=>o});var a=n(318),r=n(2145),s=n(8354);const o=(0,n(8640).op)({abs_:function(e){const t=(0,s._1)(e,"x","abs");if("complex64"===t.dtype){const e={x:t};return a.BV.runKernel(r.yj2,e)}{const e={x:t};return a.BV.runKernel(r.SYM,e)}}})},1719:(e,t,n)=>{"use strict";n.d(t,{K:()=>o});var a=n(318),r=n(2145),s=n(8354);const o=(0,n(8640).op)({acos_:function(e){const t={x:(0,s._1)(e,"x","acos")};return a.BV.runKernel(r.VGw,t)}})},4502:(e,t,n)=>{"use strict";n.d(t,{_:()=>o});var a=n(318),r=n(2145),s=n(8354);const o=(0,n(8640).op)({acosh_:function(e){const t={x:(0,s._1)(e,"x","acosh")};return a.BV.runKernel(r.SpW,t)}})},3312:(e,t,n)=>{"use strict";n.d(t,{I:()=>i});var a=n(318),r=n(2145),s=n(9064),o=n(8354);const i=(0,n(8640).op)({add_:function(e,t){let n=(0,o._1)(e,"a","add"),i=(0,o._1)(t,"b","add");[n,i]=(0,s.makeTypesMatch)(n,i);const c={a:n,b:i};return a.BV.runKernel(r.mm_,c)}})},4108:(e,t,n)=>{"use strict";n.d(t,{$:()=>o});var a=n(318),r=n(2145),s=n(8354);const o=(0,n(8640).op)({all_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];const o=(0,s._1)(e,"x","all","bool"),i={x:o},c={axis:t,keepDims:n};return a.BV.runKernel(r.oT6,i,c)}})},8543:(e,t,n)=>{"use strict";n.d(t,{Y:()=>o});var a=n(318),r=n(2145),s=n(8354);const o=(0,n(8640).op)({any_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];const o=(0,s._1)(e,"x","any","bool"),i={x:o},c={axis:t,keepDims:n};return a.BV.runKernel(r.IKK,i,c)}})},9995:(e,t,n)=>{"use strict";n.d(t,{N:()=>o});var a=n(318),r=n(2145),s=n(8354);const o=(0,n(8640).op)({argMax_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;const n=(0,s._1)(e,"x","argMax"),o={x:n},i={axis:t};return a.BV.runKernel(r.sJF,o,i)}})},5157:(e,t,n)=>{"use strict";n.d(t,{v:()=>o});var a=n(318),r=n(2145),s=n(8354);const o=(0,n(8640).op)({argMin_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;const n=(0,s._1)(e,"x","argMin"),o={x:n},i={axis:t};return a.BV.runKernel(r.aJk,o,i)}})},3053:(e,t,n)=>{"use strict";n.d(t,{Z:()=>o});var a=n(318),r=n(2145),s=n(8354);const o=(0,n(8640).op)({asin_:function(e){const t={x:(0,s._1)(e,"x","asin")};return a.BV.runKernel(r.M2y,t)}})},54:(e,t,n)=>{"use strict";n.d(t,{V:()=>o});var a=n(318),r=n(2145),s=n(8354);const o=(0,n(8640).op)({asinh_:function(e){const t={x:(0,s._1)(e,"x","asinh")};return a.BV.runKernel(r.qw7,t)}})},4778:(e,t,n)=>{"use strict";n.d(t,{z:()=>o});var a=n(318),r=n(2145),s=n(8354);const o=(0,n(8640).op)({atan_:function(e){const t={x:(0,s._1)(e,"x","atan")};return a.BV.runKernel(r.jMg,t)}})},2227:(e,t,n)=>{"use strict";n.d(t,{f:()=>i});var a=n(318),r=n(2145),s=n(9064),o=n(8354);const i=(0,n(8640).op)({atan2_:function(e,t){let n=(0,o._1)(e,"a","atan2"),i=(0,o._1)(t,"b","atan2");[n,i]=(0,s.makeTypesMatch)(n,i);const c={a:n,b:i};return a.BV.runKernel(r.QCc,c)}})},7897:(e,t,n)=>{"use strict";n.d(t,{C:()=>o});var a=n(318),r=n(2145),s=n(8354);const o=(0,n(8640).op)({atanh_:function(e){const t={x:(0,s._1)(e,"x","atanh")};return a.BV.runKernel(r.Oyi,t)}})},9204:(e,t,n)=>{"use strict";n.d(t,{w:()=>d});var a=n(318),r=n(2145),s=n(8354),o=n(6147),i=n(9118),c=n(9151),l=n(8640),u=n(5561);const d=(0,l.op)({avgPool_:function(e,t,n,l,d){const h=(0,s._1)(e,"x","avgPool","float32");o.hu(c.jT(n,1),(()=>"Error in avgPool: Either strides or dilations must be 1. "+"Got strides ".concat(n," and dilations '").concat(1,"'")));let p=h,f=!1;3===h.rank&&(f=!0,p=(0,u.X)(h,[1,h.shape[0],h.shape[1],h.shape[2]])),o.hu(4===p.rank,(()=>"Error in avgPool: x must be rank 4 but got rank ".concat(p.rank,"."))),c.m("avgPool",l,d);const m={x:p},g={filterSize:t,strides:n,pad:l,dimRoundingMode:d};let y=a.BV.runKernel(r.JhU,m,g);return y=(0,i.p)(y,h.dtype),f?(0,u.X)(y,[y.shape[1],y.shape[2],y.shape[3]]):y}})},8473:(e,t,n)=>{"use strict";n.d(t,{LJ:()=>u,Q3:()=>l,Vh:()=>s,YB:()=>r,kz:()=>o,lB:()=>c,rv:()=>i,sY:()=>d});var a=n(6147);function r(e,t){for(let n=0;n<e.length;++n)if(e[e.length-n-1]!==t-1-n)return!1;return!0}function s(e,t,n){const a=e.length+t.length,r=[];let s=0,o=0;for(let i=0;i<a;i++)-1===n.indexOf(i)?r.push(e[s++]):r.push(t[o++]);return r}function o(e,t){const n=[],a=e.length;for(let r=0;r<a;r++)-1===t.indexOf(r)&&n.push(e[r]);return[n,t.map((t=>e[t]))]}function i(e,t){return s(e,t.map((e=>1)),t)}function c(e,t,n){a.hu(r(t,n),(()=>"".concat(e," supports only inner-most axes for now. ")+"Got axes ".concat(t," and rank-").concat(n," input.")))}function l(e,t){if(r(e,t))return null;const n=[];for(let a=0;a<t;++a)-1===e.indexOf(a)&&n.push(a);return e.forEach((e=>n.push(e))),n}function u(e){return e.map(((e,t)=>[t,e])).sort(((e,t)=>e[1]-t[1])).map((e=>e[0]))}function d(e,t){const n=[];for(let a=t-e;a<t;++a)n.push(a);return n}},6994:(e,t,n)=>{"use strict";n.d(t,{E:()=>i});var a=n(318),r=n(2145),s=n(8354),o=n(6147);const i=(0,n(8640).op)({batchToSpaceND_:function(e,t,n){const i=(0,s._1)(e,"x","batchToSpaceND"),c=t.reduce(((e,t)=>e*t));o.hu(i.rank>=1+t.length,(()=>"input rank is ".concat(i.rank," but should be > than blockShape.length ").concat(t.length))),o.hu(n.length===t.length,(()=>"crops.length is ".concat(n.length," but should be equal to blockShape.length  ").concat(t.length))),o.hu(i.shape[0]%c===0,(()=>"input tensor batch is ".concat(i.shape[0]," but is not divisible by the product of ")+"the elements of blockShape ".concat(t.join(" * ")," === ").concat(c)));const l={x:i},u={blockShape:t,crops:n};return a.BV.runKernel(r.zws,l,u)}})},3700:(e,t,n)=>{"use strict";n.d(t,{t:()=>c});var a=n(318),r=n(2145),s=n(8354),o=n(6147),i=n(5561);const c=(0,n(8640).op)({batchNorm_:function(e,t,n,c,l,u){null==u&&(u=.001);const d=(0,s._1)(e,"x","batchNorm"),h=(0,s._1)(t,"mean","batchNorm"),p=(0,s._1)(n,"variance","batchNorm");let f,m;null!=l&&(f=(0,s._1)(l,"scale","batchNorm")),null!=c&&(m=(0,s._1)(c,"offset","batchNorm")),o.hu(h.rank===p.rank,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),o.hu(null==m||h.rank===m.rank,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),o.hu(null==f||h.rank===f.rank,(()=>"Batch normalization gradient requires mean and scale to have equal ranks."));const g=function(e){let t;return t=0===e.rank||1===e.rank?(0,i.X)(e,[1,1,1,e.size]):2===e.rank?(0,i.X)(e,[1,1,e.shape[0],e.shape[1]]):3===e.rank?(0,i.X)(e,[1,e.shape[0],e.shape[1],e.shape[2]]):e,t}(d),y={x:g,scale:f,offset:m,mean:h,variance:p},b={varianceEpsilon:u},v=a.BV.runKernel(r.sHE,y,b);return(0,i.X)(v,d.shape)}})},9742:(e,t,n)=>{"use strict";n.d(t,{U:()=>u});var a=n(318),r=n(2145),s=n(8354),o=n(6147),i=n(672),c=n(8640),l=n(5561);const u=(0,c.op)({broadcastTo_:function(e,t){let n=(0,s._1)(e,"broadcastTo","x");const c=n.shape;if((0,o.Mu)(t),t.length<n.rank)throw new Error("broadcastTo(): shape.length=".concat(t.length," < input.rank=").concat(n.rank,"."));if(t.length>n.rank){const e=n.shape.slice();for(;e.length<t.length;)e.unshift(1);n=(0,l.X)(n,e)}const u=n.shape,d=Array.from(t);for(let a=t.length-1;a>=0;a--)if(u[a]===t[a])d[a]=1;else if(1!==n.shape[a])throw new Error("broadcastTo(): [".concat(c,"] cannot be broadcast to [").concat(t,"]."));if(0===d.map(((e,t)=>e>1?t:-1)).filter((e=>e>=0)).length)return(0,i.d)(n);const h={x:n},p={reps:d};return a.BV.runKernel(r.n9L,h,p)}})},5774:(e,t,n)=>{"use strict";function a(e,t){const n=e.length,a=[];for(let r=0;r<n;r++){const s=n-1-r,o=e[s]||1;(t[t.length-1-r]||1)>1&&1===o&&a.unshift(s)}return a}function r(e,t){const n=[];for(let a=0;a<t.length;a++){const r=e[e.length-a-1],s=t.length-a-1,o=t[s];(null==r||1===r&&o>1)&&n.unshift(s)}return n}function s(e,t){const n=Math.max(e.length,t.length),a=new Array(n);for(let r=0;r<n;r++){let s=e[e.length-r-1];null==s&&(s=1);let o=t[t.length-r-1];if(null==o&&(o=1),1===s)a[n-r-1]=o;else if(1===o)a[n-r-1]=s;else{if(s!==o){const n="Operands could not be broadcast together with shapes "+"".concat(e," and ").concat(t,".");throw Error(n)}a[n-r-1]=s}}return a}n.r(t),n.d(t,{assertAndGetBroadcastShape:()=>s,getBroadcastDims:()=>a,getReductionAxes:()=>r})},7039:(e,t,n)=>{"use strict";n.d(t,{f:()=>s});var a=n(4376),r=n(6147);function s(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"float32",n=arguments.length>2?arguments[2]:void 0;return t=t||"float32",r.Mu(e),new a.YD(e,t,n)}},9118:(e,t,n)=>{"use strict";n.d(t,{p:()=>i});var a=n(318),r=n(2145),s=n(8354),o=n(6147);const i=(0,n(8640).op)({cast_:function(e,t){const n=(0,s._1)(e,"x","cast");if(!o.LP(t))throw new Error("Failed to cast to unknown dtype ".concat(t));if("string"===t&&"string"!==n.dtype||"string"!==t&&"string"===n.dtype)throw new Error("Only strings can be casted to strings");const i={x:n},c={dtype:t};return a.BV.runKernel(r.RFZ,i,c)}})},1396:(e,t,n)=>{"use strict";n.d(t,{m:()=>o});var a=n(318),r=n(2145),s=n(8354);const o=(0,n(8640).op)({ceil_:function(e){const t={x:(0,s._1)(e,"x","ceil","float32")};return a.BV.runKernel(r.gJX,t)}})},9836:(e,t,n)=>{"use strict";n.d(t,{i:()=>c});var a=n(318),r=n(2145),s=n(8354),o=n(6147),i=n(8582);const c=(0,n(8640).op)({clipByValue_:function(e,t,n){const c=(0,s._1)(e,"x","clipByValue");if(o.hu(t<=n,(()=>"Error in clip: min (".concat(t,") must be ")+"less than or equal to max (".concat(n,")."))),t===n)return(0,i.h)(c.shape,t,c.dtype);const l={x:c},u={clipValueMin:t,clipValueMax:n};return a.BV.runKernel(r.xnO,l,u)}})},672:(e,t,n)=>{"use strict";n.d(t,{d:()=>o});var a=n(318),r=n(2145),s=n(8354);const o=(0,n(8640).op)({clone_:function(e){const t={x:(0,s._1)(e,"x","clone","string_or_numeric")};return a.BV.runKernel(r.iJz,t)}})},9253:(e,t,n)=>{"use strict";n.d(t,{P:()=>i});var a=n(318),r=n(2145),s=n(8354),o=n(6147);const i=(0,n(8640).op)({complex_:function(e,t){const n=(0,s._1)(e,"real","complex"),i=(0,s._1)(t,"imag","complex");o.k5(n.shape,i.shape,"real and imag shapes, ".concat(n.shape," and ").concat(i.shape,", ")+"must match in call to tf.complex().");const c={real:n,imag:i};return a.BV.runKernel(r.Zz9,c)}})},4836:(e,t,n)=>{"use strict";n.d(t,{z:()=>c});var a=n(318),r=n(2145),s=n(8354),o=n(6147),i=n(672);const c=(0,n(8640).op)({concat_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;(0,o.hu)(e.length>=1,(()=>"Pass at least one tensor to concat"));const n=(0,s.sI)(e,"tensors","concat","string_or_numeric");if("complex64"===n[0].dtype&&n.forEach((e=>{if("complex64"!==e.dtype)throw new Error("Cannot concatenate complex64 tensors with a tensor\n          with dtype ".concat(e.dtype,". "))})),1===n.length)return(0,i.d)(n[0]);const c=n,l={axis:t};return a.BV.runKernel(r.Eh3,c,l)}})},4918:(e,t,n)=>{"use strict";n.d(t,{P:()=>l});var a=n(8354),r=n(6147),s=n(3457),o=n(9151),i=n(8640),c=n(5561);const l=(0,i.op)({conv1d_:function(e,t,n,i){let l=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"NWC",u=arguments.length>5&&void 0!==arguments[5]?arguments[5]:1,d=arguments.length>6?arguments[6]:void 0;const h=(0,a._1)(e,"x","conv1d"),p=(0,a._1)(t,"filter","conv1d");let f=h,m=!1;2===h.rank&&(m=!0,f=(0,c.X)(h,[1,h.shape[0],h.shape[1]])),r.hu(3===f.rank,(()=>"Error in conv1d: input must be rank 3, but got rank ".concat(f.rank,"."))),r.hu(3===p.rank,(()=>"Error in conv1d: filter must be rank 3, but got rank "+"".concat(p.rank,"."))),o.m("conv1d",i,d),r.hu(f.shape[2]===p.shape[1],(()=>"Error in conv1d: depth of input (".concat(f.shape[2],") must match ")+"input depth for filter ".concat(p.shape[1],"."))),r.hu(o.jT(n,u),(()=>"Error in conv1D: Either stride or dilation must be 1. "+"Got stride ".concat(n," and dilation '").concat(u,"'"))),r.hu(o.U3(u),(()=>"Error in conv1D: Dilated rates should be larger than 0.")),r.hu(o.U3(n),(()=>"Error in conv1D: Stride should be larger than 0.")),r.hu("NWC"===l,(()=>"Error in conv1d: got dataFormat of ".concat(l," but only NWC is currently supported.")));const g=(0,c.X)(p,[1,p.shape[0],p.shape[1],p.shape[2]]),y=(0,c.X)(f,[f.shape[0],1,f.shape[1],f.shape[2]]),b=[1,n],v=[1,u],x="NHWC",w=(0,s.T)(y,g,b,i,x,v,d);return m?(0,c.X)(w,[w.shape[2],w.shape[3]]):(0,c.X)(w,[w.shape[0],w.shape[2],w.shape[3]])}})},3457:(e,t,n)=>{"use strict";n.d(t,{T:()=>u});var a=n(318),r=n(2145),s=n(8354),o=n(6147),i=n(9151),c=n(8640),l=n(5561);const u=(0,c.op)({conv2d_:function(e,t,n,c){let u=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"NHWC",d=arguments.length>5&&void 0!==arguments[5]?arguments[5]:[1,1],h=arguments.length>6?arguments[6]:void 0;const p=(0,s._1)(e,"x","conv2d","float32"),f=(0,s._1)(t,"filter","conv2d","float32");let m=p,g=!1;3===p.rank&&(g=!0,m=(0,l.X)(p,[1,p.shape[0],p.shape[1],p.shape[2]])),o.hu(4===m.rank,(()=>"Error in conv2d: input must be rank 4, but got rank ".concat(m.rank,"."))),o.hu(4===f.rank,(()=>"Error in conv2d: filter must be rank 4, but got rank "+"".concat(f.rank,"."))),i.m("conv2d",c,h);const y="NHWC"===u?m.shape[3]:m.shape[1];o.hu(y===f.shape[2],(()=>"Error in conv2d: depth of input (".concat(y,") must match ")+"input depth for filter ".concat(f.shape[2],"."))),o.hu(i.jT(n,d),(()=>"Error in conv2D: Either strides or dilations must be 1. "+"Got strides ".concat(n," and dilations '").concat(d,"'"))),o.hu(i.U3(d),(()=>"Error in conv2D: Dilated rates should be larger than 0.")),o.hu(i.U3(n),(()=>"Error in conv2D: Strides should be larger than 0."));const b={x:m,filter:f},v={strides:n,pad:c,dataFormat:u,dilations:d,dimRoundingMode:h},x=a.BV.runKernel(r.mhS,b,v);return g?(0,l.X)(x,[x.shape[1],x.shape[2],x.shape[3]]):x}})},8744:(e,t,n)=>{"use strict";n.d(t,{p:()=>l});var a=n(318),r=n(2145),s=n(6147),o=n(9151),i=n(8640),c=n(5561);const l=(0,i.op)({conv2DBackpropFilter_:function(e,t,n,i,l){let u=arguments.length>5&&void 0!==arguments[5]?arguments[5]:"NHWC",d=arguments.length>6?arguments[6]:void 0,h=e;3===e.rank&&(h=(0,c.X)(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let p=t;3===p.rank&&(p=(0,c.X)(t,[1,t.shape[0],t.shape[1],t.shape[2]])),s.hu(4===h.rank,(()=>"Error in conv2dDerFilter: input must be rank 4, but got shape "+"".concat(h.shape,"."))),s.hu(4===p.rank,(()=>"Error in conv2dDerFilter: dy must be rank 4, but got shape "+"".concat(p.shape,"."))),s.hu(4===n.length,(()=>"Error in conv2dDerFilter: filterShape must be length 4, but got "+"".concat(n,".")));const f="NHWC"===u?h.shape[3]:h.shape[1],m="NHWC"===u?p.shape[3]:p.shape[1];s.hu(f===n[2],(()=>"Error in conv2dDerFilter: depth of input ".concat(f,") must ")+"match input depth in filter (".concat(n[2],"."))),s.hu(m===n[3],(()=>"Error in conv2dDerFilter: depth of dy (".concat(m,") must ")+"match output depth for filter (".concat(n[3],")."))),o.m("conv2dDerFilter",l,d);const g={x:h,dy:p},y={strides:i,pad:l,dataFormat:u,dimRoundingMode:d,filterShape:n};return a.BV.runKernel(r.wUP,g,y)}})},1045:(e,t,n)=>{"use strict";n.d(t,{_:()=>l});var a=n(318),r=n(2145),s=n(6147),o=n(9151),i=n(8640),c=n(5561);const l=(0,i.op)({conv2DBackpropInput_:function(e,t,n,i,l){let u=arguments.length>5&&void 0!==arguments[5]?arguments[5]:"NHWC",d=arguments.length>6?arguments[6]:void 0;s.hu(e.length===t.rank,(()=>"Length of inShape "+"(".concat(e.length,") and rank of dy (").concat(t.rank,") must match")));let h=e,p=t,f=!1;3===t.rank&&(f=!0,p=(0,c.X)(t,[1,t.shape[0],t.shape[1],t.shape[2]]),h=[1,e[0],e[1],e[2]]),s.hu(4===h.length,(()=>"Error in conv2dDerInput: inShape must be length 4, but got length "+"".concat(h.length,"."))),s.hu(4===p.rank,(()=>"Error in conv2dDerInput: dy must be rank 4, but got "+"rank ".concat(p.rank))),s.hu(4===n.rank,(()=>"Error in conv2dDerInput: filter must be rank 4, but got "+"rank ".concat(n.rank)));const m="NHWC"===u?h[3]:h[1],g="NHWC"===u?p.shape[3]:p.shape[1];s.hu(m===n.shape[2],(()=>"Error in conv2dDerInput: depth of input (".concat(m,") must ")+"match input depth for filter ".concat(n.shape[2],"."))),s.hu(g===n.shape[3],(()=>"Error in conv2dDerInput: depth of output (".concat(g,") must ")+"match output depth for filter ".concat(n.shape[3],"."))),o.m("conv2dDerInput",l,d);const y={dy:p,filter:n},b={strides:i,pad:l,dataFormat:u,dimRoundingMode:d,inputShape:h},v=a.BV.runKernel(r.wm,y,b);return f?(0,c.X)(v,[v.shape[1],v.shape[2],v.shape[3]]):v}})},1732:(e,t,n)=>{"use strict";n.d(t,{b:()=>s});var a=n(8354),r=n(1045);const s=(0,n(8640).op)({conv2dTranspose_:function(e,t,n,s,o,i){const c=(0,a._1)(e,"x","conv2dTranspose"),l=(0,a._1)(t,"filter","conv2dTranspose");return(0,r._)(n,c,l,s,o,"NHWC",i)}})},1873:(e,t,n)=>{"use strict";n.d(t,{_:()=>c});var a=n(318),r=n(2145),s=n(6147),o=n(8640),i=n(5561);const c=(0,o.op)({conv3DBackpropInput_:function(e,t,n,o,c){s.hu(e.length===t.rank,(()=>"Length of inShape "+"(".concat(e.length,") and rank of dy (").concat(t.rank,") must match")));let l=e,u=t,d=!1;4===t.rank&&(d=!0,u=(0,i.X)(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]]),l=[1,e[0],e[1],e[2],e[3]]);const h=l[4],p=u.shape[4];s.hu(5===l.length,(()=>"Error in conv3dDerInput: inShape must be length 5, but got length "+"".concat(l.length,"."))),s.hu(5===u.rank,(()=>"Error in conv3dDerInput: dy must be rank 5, but got "+"rank ".concat(u.rank))),s.hu(5===n.rank,(()=>"Error in conv3dDerInput: filter must be rank 5, but got "+"rank ".concat(n.rank))),s.hu(h===n.shape[3],(()=>"Error in conv3dDerInput: depth of input (".concat(h,") must ")+"match input depth for filter ".concat(n.shape[3],"."))),s.hu(p===n.shape[4],(()=>"Error in conv3dDerInput: depth of output (".concat(p,") must ")+"match output depth for filter ".concat(n.shape[4],".")));const f={dy:u,filter:n},m={pad:c,strides:o,inputShape:l},g=a.BV.runKernel(r.ik2,f,m);return d?(0,i.X)(g,[g.shape[1],g.shape[2],g.shape[3],g.shape[4]]):g}})},9151:(e,t,n)=>{"use strict";n.d(t,{I0:()=>g,Ix:()=>i,Rf:()=>r,U3:()=>b,Xw:()=>s,aO:()=>l,jT:()=>y,jw:()=>c,m:()=>x,pl:()=>o,sl:()=>v});var a=n(6147);function r(e,t,n,a){let r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"NHWC",s=arguments.length>5?arguments[5]:void 0;const o=e[3],c=[...t,o],l=v(r);return i(e,c,n,s,a,null,null,l)}function s(e,t,n,a,r,s){let o=arguments.length>6&&void 0!==arguments[6]?arguments[6]:"channelsLast";const[c,l]=u(t);let d;if("channelsLast"===o)d=[c,l,e[3],e[3]];else{if("channelsFirst"!==o)throw new Error("Unknown dataFormat ".concat(o));d=[c,l,e[1],e[1]]}return i(e,d,n,a,r,s,!1,o)}function o(e,t,n,a,r,s){let o=arguments.length>6&&void 0!==arguments[6]?arguments[6]:"NDHWC";const[i,l,u]=d(t);let h,p;if("NDHWC"===o)p="channelsLast",h=[i,l,u,e[4],e[4]];else{if("NCDHW"!==o)throw new Error("Unknown dataFormat ".concat(o));p="channelsFirst",h=[i,l,u,e[1],e[1]]}return c(e,h,n,a,r,!1,p,s)}function i(e,t,n,a,r,s){let o=arguments.length>6&&void 0!==arguments[6]&&arguments[6],i=arguments.length>7&&void 0!==arguments[7]?arguments[7]:"channelsLast",[c,l,d,f]=[-1,-1,-1,-1];if("channelsLast"===i)[c,l,d,f]=e;else{if("channelsFirst"!==i)throw new Error("Unknown dataFormat ".concat(i));[c,f,l,d]=e}const[m,g,,y]=t,[b,v]=u(n),[x,w]=u(a),k=h(m,x),S=h(g,w),{padInfo:N,outHeight:I,outWidth:T}=p(r,l,d,b,v,k,S,s,i),C=o?y*f:y;let E;return"channelsFirst"===i?E=[c,C,I,T]:"channelsLast"===i&&(E=[c,I,T,C]),{batchSize:c,dataFormat:i,inHeight:l,inWidth:d,inChannels:f,outHeight:I,outWidth:T,outChannels:C,padInfo:N,strideHeight:b,strideWidth:v,filterHeight:m,filterWidth:g,effectiveFilterHeight:k,effectiveFilterWidth:S,dilationHeight:x,dilationWidth:w,inShape:e,outShape:E,filterShape:t}}function c(e,t,n,a,r){let s=arguments.length>5&&void 0!==arguments[5]&&arguments[5],o=arguments.length>6&&void 0!==arguments[6]?arguments[6]:"channelsLast",i=arguments.length>7?arguments[7]:void 0,[c,l,u,p,m]=[-1,-1,-1,-1,-1];if("channelsLast"===o)[c,l,u,p,m]=e;else{if("channelsFirst"!==o)throw new Error("Unknown dataFormat ".concat(o));[c,m,l,u,p]=e}const[g,y,b,,v]=t,[x,w,k]=d(n),[S,N,I]=d(a),T=h(g,S),C=h(y,N),E=h(b,I),{padInfo:_,outDepth:A,outHeight:R,outWidth:F}=f(r,l,u,p,x,w,k,T,C,E,i),D=s?v*m:v;let O;return"channelsFirst"===o?O=[c,D,A,R,F]:"channelsLast"===o&&(O=[c,A,R,F,D]),{batchSize:c,dataFormat:o,inDepth:l,inHeight:u,inWidth:p,inChannels:m,outDepth:A,outHeight:R,outWidth:F,outChannels:D,padInfo:_,strideDepth:x,strideHeight:w,strideWidth:k,filterDepth:g,filterHeight:y,filterWidth:b,effectiveFilterDepth:T,effectiveFilterHeight:C,effectiveFilterWidth:E,dilationDepth:S,dilationHeight:N,dilationWidth:I,inShape:e,outShape:O,filterShape:t}}function l(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1;const r=h(t,a);return Math.floor((e[0]*(n-1)-n+r)/2)}function u(e){return"number"===typeof e?[e,e,e]:2===e.length?[e[0],e[1],1]:e}function d(e){return"number"===typeof e?[e,e,e]:e}function h(e,t){return t<=1?e:e+(e-1)*(t-1)}function p(e,t,n,a,r,s,o,i,c){let u,d,h;if("number"===typeof e){u={top:e,bottom:e,left:e,right:e,type:0===e?"VALID":"NUMBER"};const r=function(e,t,n,a,r){null==a&&(a=l(e,t,n));const s=e[0],o=e[1];return[m((s-t+2*a)/n+1,r),m((o-t+2*a)/n+1,r)]}([t,n],s,a,e,i);d=r[0],h=r[1]}else if("same"===e){d=Math.ceil(t/a),h=Math.ceil(n/r);const e=Math.max(0,(d-1)*a+s-t),i=Math.max(0,(h-1)*r+o-n),c=Math.floor(e/2),l=e-c,p=Math.floor(i/2);u={top:c,bottom:l,left:p,right:i-p,type:"SAME"}}else if("valid"===e)u={top:0,bottom:0,left:0,right:0,type:"VALID"},d=Math.ceil((t-s+1)/a),h=Math.ceil((n-o+1)/r);else{if("object"!==typeof e)throw Error("Unknown padding parameter: ".concat(e));{const l="channelsLast"===c?e[1][0]:e[2][0],p="channelsLast"===c?e[1][1]:e[2][1],f="channelsLast"===c?e[2][0]:e[3][0],g="channelsLast"===c?e[2][1]:e[3][1];u={top:l,bottom:p,left:f,right:g,type:0===l&&0===p&&0===f&&0===g?"VALID":"EXPLICIT"},d=m((t-s+l+p)/a+1,i),h=m((n-o+f+g)/r+1,i)}}return{padInfo:u,outHeight:d,outWidth:h}}function f(e,t,n,a,r,s,o,i,c,u,d){let h,p,f,g;if("valid"===e&&(e=0),"number"===typeof e){h={top:e,bottom:e,left:e,right:e,front:e,back:e,type:0===e?"VALID":"NUMBER"};const y=function(e,t,n,a,r,s){null==r&&(r=l(e,t[0],a[0]));const o=[0,0,0,n];for(let i=0;i<3;i++)e[i]+2*r>=t[i]&&(o[i]=m((e[i]-t[i]+2*r)/a[i]+1,s));return o}([t,n,a,1],[i,c,u],1,[r,s,o],e,d);p=y[0],f=y[1],g=y[2]}else{if("same"!==e)throw Error("Unknown padding parameter: ".concat(e));{p=Math.ceil(t/r),f=Math.ceil(n/s),g=Math.ceil(a/o);const e=(p-1)*r+i-t,l=(f-1)*s+c-n,d=(g-1)*o+u-a,m=Math.floor(e/2),y=e-m,b=Math.floor(l/2),v=l-b,x=Math.floor(d/2);h={top:b,bottom:v,left:x,right:d-x,front:m,back:y,type:"SAME"}}}return{padInfo:h,outDepth:p,outHeight:f,outWidth:g}}function m(e,t){if(!t)return Math.trunc(e);switch(t){case"round":return Math.round(e);case"ceil":return Math.ceil(e);case"floor":return Math.floor(e);default:throw new Error("Unknown roundingMode ".concat(t))}}function g(e){const[t,n,a]=u(e);return 1===t&&1===n&&1===a}function y(e,t){return g(e)||g(t)}function b(e){return u(e).every((e=>e>0))}function v(e){if("NHWC"===e)return"channelsLast";if("NCHW"===e)return"channelsFirst";throw new Error("Unknown dataFormat ".concat(e))}function x(e,t,n){if(null!=n){if("string"===typeof t)throw Error("Error in ".concat(e,": pad must be an integer when using ")+"dimRoundingMode ".concat(n," but got pad ").concat(t,"."));if("number"===typeof t)a.hu(a.GN(t),(()=>"Error in ".concat(e,": pad must be an integer when using ")+"dimRoundingMode ".concat(n," but got pad ").concat(t,".")));else{if("object"!==typeof t)throw Error("Error in ".concat(e,": Unknown padding parameter: ").concat(t));t.forEach((t=>{t.forEach((t=>{a.hu(a.GN(t),(()=>"Error in ".concat(e,": pad must be an integer when using ")+"dimRoundingMode ".concat(n," but got pad ").concat(t,".")))}))}))}}}},1227:(e,t,n)=>{"use strict";n.d(t,{m:()=>o});var a=n(318),r=n(2145),s=n(8354);const o=(0,n(8640).op)({cos_:function(e){const t={x:(0,s._1)(e,"x","cos","float32")};return a.BV.runKernel(r.mc4,t)}})},6679:(e,t,n)=>{"use strict";n.d(t,{f:()=>o});var a=n(318),r=n(2145),s=n(8354);const o=(0,n(8640).op)({cosh_:function(e){const t={x:(0,s._1)(e,"x","cosh","float32")};return a.BV.runKernel(r.TR1,t)}})},9457:(e,t,n)=>{"use strict";n.d(t,{$:()=>o});var a=n(318),r=n(2145),s=n(8354);const o=(0,n(8640).op)({cumprod_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],o=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const i=(0,s._1)(e,"x","cumprod"),c={x:i},l={axis:t,exclusive:n,reverse:o};return a.BV.runKernel(r.Byc,c,l)}})},8862:(e,t,n)=>{"use strict";n.d(t,{z:()=>o});var a=n(318),r=n(2145),s=n(8354);const o=(0,n(8640).op)({cumsum_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],o=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const i=(0,s._1)(e,"x","cumsum"),c={x:i},l={axis:t,exclusive:n,reverse:o};return a.BV.runKernel(r.iHb,c,l)}})},1878:(e,t,n)=>{"use strict";n.d(t,{n:()=>i});var a=n(318),r=n(2145),s=n(8354),o=n(6147);const i=(0,n(8640).op)({depthToSpace_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"NHWC";const i=(0,s._1)(e,"x","depthToSpace","float32"),c="NHWC"===n?i.shape[1]:i.shape[2],l="NHWC"===n?i.shape[2]:i.shape[3],u="NHWC"===n?i.shape[3]:i.shape[1];o.hu(t>1,(()=>"blockSize should be > 1 for depthToSpace, but was: ".concat(t))),o.hu(c*t>=0,(()=>"Negative dimension size caused by overflow when multiplying\n    ".concat(c," and ").concat(t,"  for depthToSpace with input shape\n    ").concat(i.shape))),o.hu(l*t>=0,(()=>"Negative dimension size caused by overflow when multiplying\n    ".concat(l," and ").concat(t," for depthToSpace with input shape\n        ").concat(i.shape))),o.hu(u%(t*t)===0,(()=>"Dimension size must be evenly divisible by ".concat(t*t," but is ").concat(u," for depthToSpace with input shape ").concat(i.shape)));const d={x:i},h={blockSize:t,dataFormat:n};return a.BV.runKernel(r.T0n,d,h)}})},1147:(e,t,n)=>{"use strict";n.d(t,{B:()=>u});var a=n(318),r=n(2145),s=n(8354),o=n(6147),i=n(9151),c=n(8640),l=n(5561);const u=(0,c.op)({depthwiseConv2d_:function(e,t,n,c){let u=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"NHWC",d=arguments.length>5&&void 0!==arguments[5]?arguments[5]:[1,1],h=arguments.length>6?arguments[6]:void 0;const p=(0,s._1)(e,"x","depthwiseConv2d","float32"),f=(0,s._1)(t,"filter","depthwiseConv2d","float32");let m=p,g=!1;3===p.rank&&(g=!0,m=(0,l.X)(p,[1,p.shape[0],p.shape[1],p.shape[2]])),o.hu(4===m.rank,(()=>"Error in depthwiseConv2d: input must be rank 4, but got "+"rank ".concat(m.rank,"."))),o.hu(4===f.rank,(()=>"Error in depthwiseConv2d: filter must be rank 4, but got rank "+"".concat(f.rank,".")));const y="NHWC"===u?m.shape[3]:m.shape[1];o.hu(y===f.shape[2],(()=>"Error in depthwiseConv2d: number of input channels "+"(".concat(y,") must match the inChannels dimension in ")+"filter ".concat(f.shape[2],"."))),i.m("depthwiseConv2d",c,h);const b={x:m,filter:f},v={strides:n,pad:c,dataFormat:u,dilations:d,dimRoundingMode:h},x=a.BV.runKernel(r.cie,b,v);return g?(0,l.X)(x,[x.shape[1],x.shape[2],x.shape[3]]):x}})},288:(e,t,n)=>{"use strict";n.d(t,{z:()=>i});var a=n(318),r=n(2145),s=n(8640),o=n(5561);const i=(0,s.op)({depthwiseConv2dNativeBackpropFilter_:function(e,t,n,s,i){let c=arguments.length>5&&void 0!==arguments[5]?arguments[5]:[1,1],l=arguments.length>6?arguments[6]:void 0,u=e;3===e.rank&&(u=(0,o.X)(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let d=t;3===d.rank&&(d=(0,o.X)(t,[1,t.shape[0],t.shape[1],t.shape[2]]));const h={x:u,dy:d},p={strides:s,pad:i,dimRoundingMode:l,dilations:c,filterShape:n};return a.BV.runKernel(r.sL$,h,p)}})},6939:(e,t,n)=>{"use strict";n.d(t,{v:()=>i});var a=n(318),r=n(2145),s=n(8640),o=n(5561);const i=(0,s.op)({depthwiseConv2dNativeBackpropInput_:function(e,t,n,s,i){let c=arguments.length>5&&void 0!==arguments[5]?arguments[5]:[1,1],l=arguments.length>6?arguments[6]:void 0,u=t,d=!1;3===t.rank&&(d=!0,u=(0,o.X)(t,[1,t.shape[0],t.shape[1],t.shape[2]]));const h={dy:u,filter:n},p={strides:s,pad:i,dimRoundingMode:l,dilations:c,inputShape:e},f=a.BV.runKernel(r.y7R,h,p);return d?(0,o.X)(f,[f.shape[1],f.shape[2],f.shape[3]]):f}})},7580:(e,t,n)=>{"use strict";n.d(t,{W:()=>l});var a=n(318),r=n(2145),s=n(8354),o=n(6147),i=n(8640),c=n(5561);const l=(0,i.op)({dilation2d_:function(e,t,n,i){let l=arguments.length>4&&void 0!==arguments[4]?arguments[4]:[1,1],u=arguments.length>5&&void 0!==arguments[5]?arguments[5]:"NHWC";const d=(0,s._1)(e,"x","dilation2d"),h=(0,s._1)(t,"filter","dilation2d");o.hu(3===d.rank||4===d.rank,(()=>"Error in dilation2d: input must be rank 3 or 4, but got rank "+"".concat(d.rank,"."))),o.hu(3===h.rank,(()=>"Error in dilation2d: filter must be rank 3, but got rank "+"".concat(h.rank,"."))),o.hu("NHWC"===u,(()=>"Error in dilation2d: Only NHWC is currently supported, "+"but got dataFormat of ".concat(u)));let p=d,f=!1;3===d.rank&&(p=(0,c.X)(d,[1,d.shape[0],d.shape[1],d.shape[2]]),f=!0),o.hu(p.shape[3]===h.shape[2],(()=>"Error in dilation2d:  input and filter must have the same depth: ".concat(p.shape[3]," vs ").concat(h.shape[2])));const m={x:p,filter:h},g={strides:n,pad:i,dilations:l},y=a.BV.runKernel(r.p4S,m,g);return f?(0,c.X)(y,[y.shape[1],y.shape[2],y.shape[3]]):y}})},5750:(e,t,n)=>{"use strict";n.d(t,{h:()=>c});var a=n(318),r=n(2145),s=n(9064),o=n(8354),i=n(7145);const c=(0,n(8640).op)({div_:function(e,t){let n=(0,o._1)(e,"a","div"),c=(0,o._1)(t,"b","div");if([n,c]=(0,s.makeTypesMatch)(n,c),"int32"===n.dtype&&"int32"===c.dtype)return(0,i.q)(n,c);const l={a:n,b:c};return a.BV.runKernel(r.oHH,l,{})}})},5923:(e,t,n)=>{"use strict";n.d(t,{N:()=>u});var a=n(9064),r=n(8354),s=n(5750),o=n(3254),i=n(8640),c=n(329),l=n(7293);const u=(0,i.op)({divNoNan_:function(e,t){let n=(0,r._1)(e,"a","div"),i=(0,r._1)(t,"b","div");[n,i]=(0,a.makeTypesMatch)(n,i);const u=(0,s.h)(n,i),d=(0,l.P)(u),h=(0,o.D)(i,d);return(0,c.a)(h,d,u)}})},5043:(e,t,n)=>{"use strict";n.d(t,{A:()=>c});var a=n(8354),r=n(6147),s=n(7221),o=n(8640),i=n(5561);const c=(0,o.op)({dot_:function(e,t){const n=(0,a._1)(e,"t1","dot"),o=(0,a._1)(t,"t2","dot");r.hu((1===n.rank||2===n.rank)&&(1===o.rank||2===o.rank),(()=>"Error in dot: inputs must all be rank 1 or 2, but got ranks "+"".concat(n.rank," and ").concat(o.rank,".")));const c=1===n.rank?n.size:n.shape[1],l=1===o.rank?o.size:o.shape[0];if(r.hu(c===l,(()=>"Error in dot: inner dimensions of inputs must match, but got "+"".concat(c," and ").concat(l,"."))),1===n.rank&&1===o.rank){const e=(0,i.X)(n,[1,-1]),t=(0,i.X)(o,[-1,1]),a=(0,s.O)(e,t);return(0,i.X)(a,[])}if(1===n.rank&&2===o.rank){const e=(0,i.X)(n,[1,-1]),t=(0,i.X)(o,[o.shape[0],o.shape[1]]),a=(0,s.O)(e,t);return(0,i.X)(a,[a.size])}if(2===n.rank&&1===o.rank){const e=(0,i.X)(o,[-1,1]),t=(0,s.O)(n,e);return(0,i.X)(t,[t.size])}{const e=(0,i.X)(o,[o.shape[0],o.shape[1]]);return(0,s.O)(n,e)}}})},2353:(e,t,n)=>{"use strict";n.d(t,{p:()=>o});var a=n(318),r=n(2145),s=n(8354);const o=(0,n(8640).op)({elu_:function(e){const t={x:(0,s._1)(e,"x","elu","float32")};return a.BV.runKernel(r.SX0,t)}})},3254:(e,t,n)=>{"use strict";n.d(t,{D:()=>c});var a=n(318),r=n(2145),s=n(9064),o=n(8354),i=n(5774);const c=(0,n(8640).op)({equal_:function(e,t){let n=(0,o._1)(e,"a","equal","string_or_numeric"),c=(0,o._1)(t,"b","equal","string_or_numeric");[n,c]=(0,s.makeTypesMatch)(n,c),(0,i.assertAndGetBroadcastShape)(n.shape,c.shape);const l={a:n,b:c};return a.BV.runKernel(r.hdR,l)}})},3891:(e,t,n)=>{"use strict";n.d(t,{q:()=>c});var a=n(318),r=n(2145),s=n(8354),o=n(6147),i=n(9118);const c=(0,n(8640).op)({erf_:function(e){let t=(0,s._1)(e,"x","erf");o.hu("int32"===t.dtype||"float32"===t.dtype,(()=>"Input dtype must be `int32` or `float32`.")),"int32"===t.dtype&&(t=(0,i.p)(t,"float32"));const n={x:t};return a.BV.runKernel(r.Omj,n)}})},3313:(e,t,n)=>{"use strict";n.d(t,{d:()=>r});var a=n(6662);const r=(0,n(8640).op)({euclideanNorm_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];return(0,a.K)(e,"euclidean",t,n)}})},411:(e,t,n)=>{"use strict";n.d(t,{Q:()=>o});var a=n(318),r=n(2145),s=n(8354);const o=(0,n(8640).op)({exp_:function(e){const t={x:(0,s._1)(e,"x","exp")};return a.BV.runKernel(r.NEP,t)}})},2975:(e,t,n)=>{"use strict";n.d(t,{d:()=>i});var a=n(318),r=n(2145),s=n(8354),o=n(6147);const i=(0,n(8640).op)({expandDims_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;const n=(0,s._1)(e,"x","expandDims","string_or_numeric");o.hu(t<=n.rank,(()=>"Axis must be <= rank of the tensor"));const i={input:n},c={dim:t};return a.BV.runKernel(r.YFo,i,c)}})},5682:(e,t,n)=>{"use strict";n.d(t,{t:()=>o});var a=n(318),r=n(2145),s=n(8354);const o=(0,n(8640).op)({expm1_:function(e){const t={x:(0,s._1)(e,"x","expm1")};return a.BV.runKernel(r.Y0y,t)}})},8582:(e,t,n)=>{"use strict";n.d(t,{h:()=>o});var a=n(318),r=n(2145),s=n(6147);function o(e,t,n){(0,s.Mu)(e);const o={shape:e,value:t,dtype:n=n||(0,s.D2)(t)};return a.BV.runKernel(r.deh,{},o)}},2628:(e,t,n)=>{"use strict";n.d(t,{G:()=>o});var a=n(318),r=n(2145),s=n(8354);const o=(0,n(8640).op)({floor_:function(e){const t={x:(0,s._1)(e,"x","floor","float32")};return a.BV.runKernel(r.OR,t)}})},7145:(e,t,n)=>{"use strict";n.d(t,{q:()=>i});var a=n(318),r=n(2145),s=n(9064),o=n(8354);const i=(0,n(8640).op)({floorDiv_:function(e,t){let n=(0,o._1)(e,"a","floorDiv"),i=(0,o._1)(t,"b","floorDiv");[n,i]=(0,s.makeTypesMatch)(n,i);const c={a:n,b:i};return a.BV.runKernel(r.jeX,c)}})},5171:(e,t,n)=>{"use strict";n.d(t,{Fr:()=>f,QH:()=>g,pf:()=>m,uy:()=>y});var a=n(5774),r=n(2353),s=n(4419),o=n(651),i=n(6859),c=n(7539),l=n(5900),u=n(5561),d=n(7643),h=n(4031),p=n(227);function f(e,t,n){if(null==n||"linear"===n)return e;if("relu"===n)return(0,o.d)(e,(0,h.N)(t));throw new Error("Cannot compute gradient for fused activation ".concat(n,"."))}function m(e,t){let n=t;const r=a.getReductionAxes(e.shape,t.shape);return r.length>0&&(n=(0,p.S)(n,r)),(0,u.X)(n,e.shape)}function g(e,t,n,a){if("linear"===t)return e;if("relu"===t)return(0,c.U)(e);if("elu"===t)return(0,r.p)(e);if("relu6"===t)return(0,l.b)(e);if("prelu"===t)return(0,i.A)(e,n);if("leakyrelu"===t)return(0,s.h)(e,a);if("sigmoid"===t)return(0,d.X)(e);throw new Error("Unknown fused activation ".concat(t,"."))}const y=(e,t)=>!(e>0)||"linear"===t},9498:(e,t,n)=>{"use strict";n.d(t,{I:()=>o});var a=n(318),r=n(2145),s=n(8354);const o=(0,n(8640).op)({gather_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,o=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0;const i=(0,s._1)(e,"x","gather"),c=(0,s._1)(t,"indices","gather","int32"),l={x:i,indices:c},u={axis:n,batchDims:o};return a.BV.runKernel(r.qi_,l,u)}})},5014:(e,t,n)=>{"use strict";n.d(t,{p:()=>c});var a=n(318),r=n(2145),s=n(9064),o=n(8354),i=n(5774);const c=(0,n(8640).op)({greater_:function(e,t){let n=(0,o._1)(e,"a","greater","string_or_numeric"),c=(0,o._1)(t,"b","greater","string_or_numeric");[n,c]=(0,s.makeTypesMatch)(n,c),(0,i.assertAndGetBroadcastShape)(n.shape,c.shape);const l={a:n,b:c};return a.BV.runKernel(r.iZT,l)}})},8327:(e,t,n)=>{"use strict";n.d(t,{b:()=>c});var a=n(318),r=n(2145),s=n(9064),o=n(8354),i=n(5774);const c=(0,n(8640).op)({greaterEqual_:function(e,t){let n=(0,o._1)(e,"a","greaterEqual","string_or_numeric"),c=(0,o._1)(t,"b","greaterEqual","string_or_numeric");[n,c]=(0,s.makeTypesMatch)(n,c),(0,i.assertAndGetBroadcastShape)(n.shape,c.shape);const l={a:n,b:c};return a.BV.runKernel(r.Acj,l)}})},6996:(e,t,n)=>{"use strict";n.d(t,{a:()=>o});var a=n(318),r=n(2145),s=n(8354);const o=(0,n(8640).op)({imag_:function(e){const t={input:(0,s._1)(e,"input","imag")};return a.BV.runKernel(r.J_u,t)}})},464:(e,t,n)=>{"use strict";n.d(t,{I:()=>l});var a=n(318),r=n(2145),s=n(8354),o=n(6147),i=n(8640),c=n(5561);const l=(0,i.op)({resizeBilinear_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],i=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const l=(0,s._1)(e,"images","resizeBilinear");o.hu(3===l.rank||4===l.rank,(()=>"Error in resizeBilinear: x must be rank 3 or 4, but got "+"rank ".concat(l.rank,"."))),o.hu(2===t.length,(()=>"Error in resizeBilinear: new shape must 2D, but got shape "+"".concat(t,"."))),o.hu(!1===i||!1===n,(()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false."));let u=l,d=!1;3===l.rank&&(d=!0,u=(0,c.X)(l,[1,l.shape[0],l.shape[1],l.shape[2]]));const[]=t,h={images:u},p={alignCorners:n,halfPixelCenters:i,size:t},f=a.BV.runKernel(r._Yw,h,p);return d?(0,c.X)(f,[f.shape[1],f.shape[2],f.shape[3]]):f}})},8600:(e,t,n)=>{"use strict";n.d(t,{j:()=>l});var a=n(318),r=n(2145),s=n(8354),o=n(6147),i=n(8640),c=n(5561);const l=(0,i.op)({resizeNearestNeighbor_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],i=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const l=(0,s._1)(e,"images","resizeNearestNeighbor");o.hu(3===l.rank||4===l.rank,(()=>"Error in resizeNearestNeighbor: x must be rank 3 or 4, but got "+"rank ".concat(l.rank,"."))),o.hu(2===t.length,(()=>"Error in resizeNearestNeighbor: new shape must 2D, but got shape "+"".concat(t,"."))),o.hu("float32"===l.dtype||"int32"===l.dtype,(()=>"`images` must have `int32` or `float32` as dtype")),o.hu(!1===i||!1===n,(()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false."));let u=l,d=!1;3===l.rank&&(d=!0,u=(0,c.X)(l,[1,l.shape[0],l.shape[1],l.shape[2]]));const[]=t,h={images:u},p={alignCorners:n,halfPixelCenters:i,size:t},f=a.BV.runKernel(r.dpD,h,p);return d?(0,c.X)(f,[f.shape[1],f.shape[2],f.shape[3]]):f}})},300:(e,t,n)=>{"use strict";n.d(t,{x:()=>o});var a=n(318),r=n(2145),s=n(8354);const o=(0,n(8640).op)({isFinite_:function(e){const t={x:(0,s._1)(e,"x","isFinite")};return a.BV.runKernel(r.avt,t)}})},4652:(e,t,n)=>{"use strict";n.d(t,{U:()=>o});var a=n(318),r=n(2145),s=n(8354);const o=(0,n(8640).op)({isInf_:function(e){const t={x:(0,s._1)(e,"x","isInf")};return a.BV.runKernel(r.iWB,t)}})},7005:(e,t,n)=>{"use strict";n.d(t,{i:()=>o});var a=n(318),r=n(2145),s=n(8354);const o=(0,n(8640).op)({isNaN_:function(e){const t={x:(0,s._1)(e,"x","isNaN")};return a.BV.runKernel(r.r7n,t)}})},4419:(e,t,n)=>{"use strict";n.d(t,{h:()=>o});var a=n(318),r=n(2145),s=n(8354);const o=(0,n(8640).op)({leakyRelu_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:.2;const n=(0,s._1)(e,"x","leakyRelu"),o={x:n},i={alpha:t};return a.BV.runKernel(r.J$2,o,i)}})},4920:(e,t,n)=>{"use strict";n.d(t,{d:()=>c});var a=n(318),r=n(2145),s=n(9064),o=n(8354),i=n(5774);const c=(0,n(8640).op)({less_:function(e,t){let n=(0,o._1)(e,"a","less","string_or_numeric"),c=(0,o._1)(t,"b","less","string_or_numeric");[n,c]=(0,s.makeTypesMatch)(n,c),(0,i.assertAndGetBroadcastShape)(n.shape,c.shape);const l={a:n,b:c};return a.BV.runKernel(r.vtC,l)}})},2642:(e,t,n)=>{"use strict";n.d(t,{z:()=>c});var a=n(318),r=n(2145),s=n(9064),o=n(8354),i=n(5774);const c=(0,n(8640).op)({lessEqual_:function(e,t){let n=(0,o._1)(e,"a","lessEqual","string_or_numeric"),c=(0,o._1)(t,"b","lessEqual","string_or_numeric");[n,c]=(0,s.makeTypesMatch)(n,c),(0,i.assertAndGetBroadcastShape)(n.shape,c.shape);const l={a:n,b:c};return a.BV.runKernel(r.CAk,l)}})},936:(e,t,n)=>{"use strict";n.d(t,{G:()=>l});var a=n(318),r=n(2145),s=n(8354),o=n(6147),i=n(8640),c=n(5561);const l=(0,i.op)({localResponseNormalization_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:5,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,i=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1,l=arguments.length>4&&void 0!==arguments[4]?arguments[4]:.5;const u=(0,s._1)(e,"x","localResponseNormalization");o.hu(4===u.rank||3===u.rank,(()=>"Error in localResponseNormalization: x must be rank 3 or 4 but got\n               rank ".concat(u.rank,"."))),o.hu(o.GN(t),(()=>"Error in localResponseNormalization: depthRadius must be an "+"integer but got depthRadius ".concat(t,".")));let d=u,h=!1;3===u.rank&&(h=!0,d=(0,c.X)(u,[1,u.shape[0],u.shape[1],u.shape[2]]));const p={x:d},f={depthRadius:t,bias:n,alpha:i,beta:l},m=a.BV.runKernel(r.eZ0,p,f);return h?(0,c.X)(m,[m.shape[1],m.shape[2],m.shape[3]]):m}})},378:(e,t,n)=>{"use strict";n.d(t,{c:()=>o});var a=n(318),r=n(2145),s=n(8354);const o=(0,n(8640).op)({log_:function(e){const t={x:(0,s._1)(e,"x","log","float32")};return a.BV.runKernel(r.ZbH,t)}})},5341:(e,t,n)=>{"use strict";n.d(t,{K:()=>o});var a=n(318),r=n(2145),s=n(8354);const o=(0,n(8640).op)({log1p_:function(e){const t={x:(0,s._1)(e,"x","log1p")};return a.BV.runKernel(r.kU,t)}})},5113:(e,t,n)=>{"use strict";n.d(t,{e:()=>u});var a=n(6450),r=n(8354),s=n(651),o=n(4362),i=n(8640),c=n(7643),l=n(4626);const u=(0,i.op)({logSigmoid_:function(e){const t=(0,r._1)(e,"x","logSigmoid"),n=(0,a.cb)((e=>({value:(0,o.W)((0,l.W)((0,o.W)(e))),gradFunc:t=>(0,s.d)(t,(0,c.X)((0,o.W)(e)))})));return n(t)}})},4561:(e,t,n)=>{"use strict";n.d(t,{C:()=>p});var a=n(6450),r=n(8354),s=n(9118),o=n(411),i=n(378),c=n(6176),l=n(651),u=n(8640),d=n(4774),h=n(227);const p=(0,u.op)({logSoftmax_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:-1;const n=(0,r._1)(e,"logits","logSoftmax");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error("Log Softmax along a non-last dimension is not yet supported. "+"Logits was rank ".concat(n.rank," and axis was ").concat(t));const u=(0,a.cb)(((e,n)=>{const a=(0,c.F)(e,t,!0),r=(0,d.l)(e,a),u=(0,d.l)((0,s.p)(r,"float32"),(0,i.c)((0,h.S)((0,o.Q)(r),t,!0)));n([u]);return{value:u,gradFunc:(e,n)=>{const[a]=n,r=(0,o.Q)(a);return(0,d.l)(e,(0,l.d)((0,h.S)(e,t,!0),r))}}}));return u(n)}})},5530:(e,t,n)=>{"use strict";n.d(t,{l:()=>f});var a=n(8354),r=n(6147),s=n(3312),o=n(8473),i=n(411),c=n(378),l=n(6176),u=n(8640),d=n(5561),h=n(4774),p=n(227);const f=(0,u.op)({logSumExp_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];const u=(0,a._1)(e,"x","logSumExp"),f=(0,r.EC)(t,u.shape),m=(0,l.F)(u,f,!0),g=(0,h.l)(u,m),y=(0,i.Q)(g),b=(0,p.S)(y,f),v=(0,c.c)(b),x=(0,s.I)((0,d.X)(m,v.shape),v);if(n){const e=(0,o.rv)(x.shape,f);return(0,d.X)(x,e)}return x}})},2177:(e,t,n)=>{"use strict";n.d(t,{H:()=>i});var a=n(318),r=n(2145),s=n(8354),o=n(5774);const i=(0,n(8640).op)({logicalAnd_:function(e,t){const n=(0,s._1)(e,"a","logicalAnd","bool"),i=(0,s._1)(t,"b","logicalAnd","bool");(0,o.assertAndGetBroadcastShape)(n.shape,i.shape);const c={a:n,b:i};return a.BV.runKernel(r.PYm,c)}})},875:(e,t,n)=>{"use strict";n.d(t,{h:()=>o});var a=n(318),r=n(2145),s=n(8354);const o=(0,n(8640).op)({logicalNot_:function(e){const t={x:(0,s._1)(e,"x","logicalNot","bool")};return a.BV.runKernel(r.VfG,t)}})},5117:(e,t,n)=>{"use strict";n.d(t,{K:()=>i});var a=n(318),r=n(2145),s=n(8354),o=n(5774);const i=(0,n(8640).op)({logicalOr_:function(e,t){const n=(0,s._1)(e,"a","logicalOr","bool"),i=(0,s._1)(t,"b","logicalOr","bool");(0,o.assertAndGetBroadcastShape)(n.shape,i.shape);const c={a:n,b:i};return a.BV.runKernel(r.MZg,c)}})},1712:(e,t,n)=>{"use strict";n.d(t,{e:()=>c});var a=n(8354),r=n(5774),s=n(2177),o=n(875),i=n(5117);const c=(0,n(8640).op)({logicalXor_:function(e,t){const n=(0,a._1)(e,"a","logicalXor","bool"),c=(0,a._1)(t,"b","logicalXor","bool");return(0,r.assertAndGetBroadcastShape)(n.shape,c.shape),(0,s.H)((0,i.K)(e,t),(0,o.h)((0,s.H)(e,t)))}})},7627:(e,t,n)=>{"use strict";var a;n.d(t,{I:()=>a}),function(e){e[e.NONE=0]="NONE",e[e.MEAN=1]="MEAN",e[e.SUM=2]="SUM",e[e.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS"}(a||(a={}))},7221:(e,t,n)=>{"use strict";n.d(t,{O:()=>i});var a=n(318),r=n(2145),s=n(9064),o=n(8354);const i=(0,n(8640).op)({matMul_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],i=arguments.length>3&&void 0!==arguments[3]&&arguments[3],c=(0,o._1)(e,"a","matMul"),l=(0,o._1)(t,"b","matMul");[c,l]=(0,s.makeTypesMatch)(c,l);const u={a:c,b:l},d={transposeA:n,transposeB:i};return a.BV.runKernel(r.XLW,u,d)}})},6176:(e,t,n)=>{"use strict";n.d(t,{F:()=>o});var a=n(318),r=n(2145),s=n(8354);const o=(0,n(8640).op)({max_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];const o=(0,s._1)(e,"x","max"),i={x:o},c={reductionIndices:t,keepDims:n};return a.BV.runKernel(r.YoZ,i,c)}})},5777:(e,t,n)=>{"use strict";n.d(t,{_:()=>u});var a=n(318),r=n(2145),s=n(8354),o=n(6147),i=n(9151),c=n(8640),l=n(5561);const u=(0,c.op)({maxPool_:function(e,t,n,c,u){const d=(0,s._1)(e,"x","maxPool");let h=d,p=!1;3===d.rank&&(p=!0,h=(0,l.X)(d,[1,d.shape[0],d.shape[1],d.shape[2]])),o.hu(4===h.rank,(()=>"Error in maxPool: input must be rank 4 but got rank ".concat(h.rank,"."))),o.hu(i.jT(n,1),(()=>"Error in maxPool: Either strides or dilations must be 1. "+"Got strides ".concat(n," and dilations '").concat(1,"'"))),i.m("maxPool",c,u);const f={x:h},m={filterSize:t,strides:n,pad:c,dimRoundingMode:u},g=a.BV.runKernel(r.mTV,f,m);return p?(0,l.X)(g,[g.shape[1],g.shape[2],g.shape[3]]):g}})},705:(e,t,n)=>{"use strict";n.d(t,{g:()=>l});var a=n(318),r=n(2145),s=n(9064),o=n(8354),i=n(5774),c=n(9118);const l=(0,n(8640).op)({maximum_:function(e,t){let n=(0,o._1)(e,"a","maximum"),l=(0,o._1)(t,"b","maximum");[n,l]=(0,s.makeTypesMatch)(n,l),"bool"===n.dtype&&(n=(0,c.p)(n,"int32"),l=(0,c.p)(l,"int32")),(0,i.assertAndGetBroadcastShape)(n.shape,l.shape);const u={a:n,b:l};return a.BV.runKernel(r.BMI,u)}})},6568:(e,t,n)=>{"use strict";n.d(t,{J:()=>o});var a=n(318),r=n(2145),s=n(8354);const o=(0,n(8640).op)({mean_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];const o=(0,s._1)(e,"x","mean"),i={x:o},c={axis:t,keepDims:n};return a.BV.runKernel(r.q2K,i,c)}})},7891:(e,t,n)=>{"use strict";n.d(t,{V:()=>o});var a=n(318),r=n(2145),s=n(8354);const o=(0,n(8640).op)({min_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];const o=(0,s._1)(e,"x","min"),i={x:o},c={axis:t,keepDims:n};return a.BV.runKernel(r.c17,i,c)}})},2273:(e,t,n)=>{"use strict";n.d(t,{L:()=>l});var a=n(318),r=n(2145),s=n(9064),o=n(8354),i=n(5774),c=n(9118);const l=(0,n(8640).op)({minimum_:function(e,t){let n=(0,o._1)(e,"a","minimum"),l=(0,o._1)(t,"b","minimum");[n,l]=(0,s.makeTypesMatch)(n,l),"bool"===n.dtype&&(n=(0,c.p)(n,"int32"),l=(0,c.p)(l,"int32")),(0,i.assertAndGetBroadcastShape)(n.shape,l.shape);const u={a:n,b:l};return a.BV.runKernel(r.q8u,u)}})},9719:(e,t,n)=>{"use strict";n.d(t,{V:()=>i});var a=n(318),r=n(2145),s=n(8354),o=n(6147);const i=(0,n(8640).op)({mirrorPad_:function(e,t,n){o.hu("reflect"===n||"symmetric"===n,(()=>"Invalid mode. Mode must be either reflect or symmetric. "+"Got ".concat(n,".")));const i=(0,s._1)(e,"x","mirrorPad");if(0===i.rank)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");o.hu(t.length===i.rank,(()=>"Padding doesn't match input. Must be ".concat(i.rank,". ")+"Got ".concat(t.length,".")));const c="reflect"===n?1:0;for(let a=0;a<i.rank;a++)o.hu(2===t[a].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),o.hu(t[a][0]>=0&&t[a][0]<=i.shape[a]-c&&t[a][1]>=0&&t[a][1]<=i.shape[a]-c,(()=>"Padding in dimension ".concat(a," cannot be greater than or equal ")+"to ".concat(i.shape[a]-c," or less than 0 for input of ")+"shape ".concat(i.shape)));const l={paddings:t,mode:n},u={x:i};return a.BV.runKernel(r.jQs,u,l)}})},4645:(e,t,n)=>{"use strict";n.d(t,{w:()=>i});var a=n(318),r=n(2145),s=n(9064),o=n(8354);const i=(0,n(8640).op)({mod_:function(e,t){let n=(0,o._1)(e,"a","mod"),i=(0,o._1)(t,"b","mod");[n,i]=(0,s.makeTypesMatch)(n,i);const c={a:n,b:i};return a.BV.runKernel(r.Vbg,c)}})},651:(e,t,n)=>{"use strict";n.d(t,{d:()=>i});var a=n(318),r=n(2145),s=n(9064),o=n(8354);const i=(0,n(8640).op)({mul_:function(e,t){let n=(0,o._1)(e,"a","mul"),i=(0,o._1)(t,"b","mul");[n,i]=(0,s.makeTypesMatch)(n,i);const c={a:n,b:i};return a.BV.runKernel(r.wYn,c)}})},4362:(e,t,n)=>{"use strict";n.d(t,{W:()=>o});var a=n(318),r=n(2145),s=n(8354);const o=(0,n(8640).op)({neg_:function(e){const t={x:(0,s._1)(e,"x","neg")};return a.BV.runKernel(r.kuV,t)}})},6662:(e,t,n)=>{"use strict";n.d(t,{K:()=>y});var a=n(8354),r=n(6147),s=n(7613),o=n(8473),i=n(6176),c=n(7891),l=n(8640),u=n(4334),d=n(5561),h=n(7067),p=n(6902),f=n(7391),m=n(227);function g(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null;if(0===e.rank)return(0,s.W)(e);if(1!==e.rank&&null===n)return g((0,d.X)(e,[-1]),t,n);if(1===e.rank||"number"===typeof n||Array.isArray(n)&&1===n.length){if(1===t)return(0,m.S)((0,s.W)(e),n);if(t===1/0)return(0,i.F)((0,s.W)(e),n);if(t===-1/0)return(0,c.V)((0,s.W)(e),n);if("euclidean"===t||2===t)return(0,p._)((0,m.S)((0,u.s)((0,s.W)(e),(0,h.i)(2,"int32")),n));throw new Error("Error in norm: invalid ord value: ".concat(t))}if(Array.isArray(n)&&2===n.length){if(1===t)return(0,i.F)((0,m.S)((0,s.W)(e),n[0]),n[1]-1);if(t===1/0)return(0,i.F)((0,m.S)((0,s.W)(e),n[1]),n[0]);if(t===-1/0)return(0,c.V)((0,m.S)((0,s.W)(e),n[1]),n[0]);if("fro"===t||"euclidean"===t)return(0,p._)((0,m.S)((0,f.h)(e),n));throw new Error("Error in norm: invalid ord value: ".concat(t))}throw new Error("Error in norm: invalid axis: ".concat(n))}const y=(0,l.op)({norm_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"euclidean",n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,s=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const i=g(e=(0,a._1)(e,"x","norm"),t,n);let c=i.shape;if(s){const t=(0,r.EC)(n,e.shape);c=o.rv(i.shape,t)}return(0,d.X)(i,c)}})},5549:(e,t,n)=>{"use strict";n.d(t,{Q:()=>c});var a=n(318),r=n(2145),s=n(9064),o=n(8354),i=n(5774);const c=(0,n(8640).op)({notEqual_:function(e,t){let n=(0,o._1)(e,"a","notEqual","string_or_numeric"),c=(0,o._1)(t,"b","notEqual","string_or_numeric");[n,c]=(0,s.makeTypesMatch)(n,c),(0,i.assertAndGetBroadcastShape)(n.shape,c.shape);const l={a:n,b:c};return a.BV.runKernel(r.yQU,l)}})},4326:(e,t,n)=>{"use strict";n.d(t,{l:()=>o});var a=n(318),r=n(2145),s=n(8354);const o=(0,n(8640).op)({oneHot_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,o=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0,i=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"int32";if(t<2)throw new Error("Error in oneHot: depth must be >=2, but it is ".concat(t));const c=(0,s._1)(e,"indices","oneHot","int32"),l={indices:c},u={dtype:i,depth:t,onValue:n,offValue:o};return a.BV.runKernel(r.we_,l,u)}})},6100:(e,t,n)=>{"use strict";n.d(t,{i:()=>i});var a=n(318),r=n(6147),s=n(9253),o=n(7742);function i(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"float32";if((0,r.Mu)(e),"complex64"===t){const t=i(e,"float32"),n=(0,o.l)(e,"float32");return(0,s.P)(t,n)}const n=(0,r.p8)((0,r.NA)(e),t);return a.BV.makeTensor(n,e,t)}},773:(e,t,n)=>{"use strict";n.d(t,{J:()=>o});var a=n(318),r=n(2145),s=n(8354);const o=(0,n(8640).op)({onesLike_:function(e){const t={x:(0,s._1)(e,"x","onesLike")};return a.BV.runKernel(r.qWM,t)}})},8640:(e,t,n)=>{"use strict";n.d(t,{op:()=>o,z:()=>s});var a=n(318),r=n(6147);const s="__op";function o(e){const t=Object.keys(e);if(1!==t.length)throw new Error("Please provide an object with a single key (operation name) mapping to a function. Got an object with "+"".concat(t.length," keys."));let n=t[0];const o=e[n];n.endsWith("_")&&(n=n.substring(0,n.length-1)),n+=s;const i=function(){a.BV.startScope(n);try{const e=o(...arguments);return(0,r.tI)(e)&&console.error("Cannot return a Promise inside of tidy."),a.BV.endScope(e),e}catch(e){throw a.BV.endScope(null),e}};return Object.defineProperty(i,"name",{value:n,configurable:!0}),i}},9503:(e,t,n)=>{"use strict";n.d(t,{zvA:()=>h.z,WnP:()=>r.W,Khb:()=>s.K,__u:()=>o._,IHx:()=>i.I,QBD:()=>p,$6P:()=>f.$,YjB:()=>m.Y,NqF:()=>g.N,vHJ:()=>y.v,ZRM:()=>b.Z,VfV:()=>v.V,z4N:()=>x.z,fvJ:()=>w.f,C80:()=>k.C,wS1:()=>S.w,uR5:()=>C,zEQ:()=>O,tgs:()=>z.t,Dxk:()=>L,JY5:()=>B,p3b:()=>P,E4h:()=>M.E,yE8:()=>V,ycw:()=>W,anm:()=>na,XsQ:()=>U,UFq:()=>G.U,f3b:()=>H.f,pju:()=>N.p,mDi:()=>j.m,iUl:()=>q.i,d9v:()=>X.d,PYB:()=>K.P,zoF:()=>E.z,gME:()=>Q,Izb:()=>Y,MNy:()=>Z,ZaL:()=>J,PAt:()=>$.P,Tek:()=>ee.T,bc:()=>te.b,pdZ:()=>ne,$QV:()=>re,mCk:()=>se.m,f9Y:()=>oe.f,mew:()=>pa,$Gn:()=>ie.$,zbp:()=>ce.z,ppE:()=>le,nTT:()=>ue.n,B10:()=>de.B,Ka3:()=>he,WmZ:()=>pe.W,hiC:()=>fe.h,NTj:()=>me.N,AKD:()=>ge.A,rvX:()=>da,WYO:()=>ye,pyx:()=>be.p,GRh:()=>ha,EDe:()=>ve,DgJ:()=>xe.D,qNN:()=>we.q,d2q:()=>ke.d,Qqt:()=>Se.Q,dt4:()=>Ne.d,t$B:()=>Ie.t,iyy:()=>Ce,kp_:()=>wn.k,hlL:()=>Ee.h,GWj:()=>_e.G,qPi:()=>Ae.q,imm:()=>a,Iqj:()=>Re.I,dbB:()=>ua,pjt:()=>Fe.p,brS:()=>De.b,Sxn:()=>kn.S,asL:()=>Oe.a,BHj:()=>xr,V3u:()=>fa,wx0:()=>Sn.w,xVT:()=>Me.x,UWc:()=>ze.U,i2d:()=>Le.i,hi7:()=>Be.h,d9m:()=>Pe.d,zN1:()=>Ve.z,$r2:()=>wr,SX3:()=>We,G9k:()=>Ue.G,cM7:()=>Ge.c,Krr:()=>He.K,e_t:()=>je.e,CmS:()=>qe.C,l_t:()=>Xe.l,HvI:()=>Ke.H,hJK:()=>Qe.h,K5V:()=>Ye.K,egP:()=>Ze.e,MB5:()=>kr,eab:()=>et,OI3:()=>_.O,Fp7:()=>tt.F,_sB:()=>nt._,YQQ:()=>at,Ip$:()=>rt,gWQ:()=>st.g,J69:()=>ot.J,ry_:()=>lt,VV$:()=>ut.V,LTh:()=>dt.L,VdP:()=>ht.V,wQq:()=>pt.w,Gi7:()=>yt,p_:()=>oa,dC7:()=>A.d,rq4:()=>bt,SJ_:()=>vt,W76:()=>xt.W,KOy:()=>ra.K,Quu:()=>wt.Q,lfX:()=>kt.l,iUs:()=>it.i,JpU:()=>St.J,op:()=>h.op,N2O:()=>Nt,vku:()=>It.v,pNR:()=>Tt,koy:()=>Ct,t1L:()=>Et,lGY:()=>_t,d_R:()=>At.d,sQ3:()=>Rt.s,AL3:()=>Ft.A,S0v:()=>Dt.S,WVs:()=>Ot.W,$gW:()=>Mt,VT$:()=>zt,N89:()=>Lt,TN_:()=>Bt,wzB:()=>Gt,nGf:()=>Ht,ruB:()=>jt,LGj:()=>qt,pe5:()=>Xt,w6H:()=>Kt,kwC:()=>Qt.k,M25:()=>Yt.M,UYe:()=>Zt.U,btT:()=>Jt.b,XLQ:()=>T.X,GYS:()=>$t.G,SDf:()=>en,diP:()=>tn,sx7:()=>nn,mG2:()=>an,QEs:()=>Nn.Q,NMM:()=>rn.N,bp0:()=>sn.b,iD$:()=>on.i,snQ:()=>ia,zcT:()=>$e,U8D:()=>cn.U,U_I:()=>ln.U,ODp:()=>un,XD2:()=>R.X,Xxe:()=>dn.X,tdS:()=>vr,O$l:()=>hn.O,R_K:()=>pn.R,tPi:()=>F.t,jZU:()=>fn,SmN:()=>mn,CnO:()=>gn,p0P:()=>yn,XAC:()=>bn.X,Wvh:()=>vn.W,fBT:()=>xn.f,rVs:()=>Sr,ers:()=>la,uN7:()=>br,Vl2:()=>In.V,_b3:()=>Tn._,h62:()=>mt.h,$i:()=>Cn.$,L9e:()=>En.L,knu:()=>_n.k,Nbs:()=>An.N,NXj:()=>Rn.N,Z_8:()=>Nr,luU:()=>gt.l,Smz:()=>Fn.S,ORZ:()=>Dn.O,AEp:()=>D.A,XeE:()=>On.X,RRF:()=>zn,odF:()=>Ln,wOQ:()=>Bn.w,yXz:()=>Pn,Bfx:()=>Vn,xZs:()=>Wn,Pg0:()=>Gn,Gg6:()=>Te.G,hg7:()=>Hn.h,p4s:()=>aa.p,Xu6:()=>jn,Two:()=>qn.T,pUJ:()=>Xn.p,HHK:()=>Kn.H,GaM:()=>Qn,VD$:()=>Yn,arb:()=>Zn.a,itS:()=>$n,lls:()=>ea.l,P84:()=>ta.P});var a={};n.r(a),n.d(a,{conv2d:()=>xa,depthwiseConv2d:()=>Sa,matMul:()=>Na});var r=n(7613),s=n(1719),o=n(4502),i=n(3312),c=n(318),l=n(2145),u=n(8354),d=n(6147),h=n(8640);const p=(0,h.op)({addN_:function(e){d.hu(Array.isArray(e),(()=>"The argument passed to tf.addN() must be a list of tensors")),d.hu(e.length>=1,(()=>"Must pass at least one tensor to tf.addN(), but got "+"".concat(e.length)));const t=e.map(((e,t)=>(0,u._1)(e,"tensors".concat(t),"addN"))),n=t[0];t.forEach((e=>{if(e.dtype!==n.dtype)throw new Error("All tensors passed to tf.addN() must have the same dtype")})),t.forEach((e=>{if(!d.cO(e.shape,n.shape))throw new Error("All tensors passed to tf.addN() must have the same shape")}));const a=t;return c.BV.runKernel(l.Xze,a)}});var f=n(4108),m=n(8543),g=n(9995),y=n(5157),b=n(3053),v=n(54),x=n(4778),w=n(2227),k=n(7897),S=n(9204),N=n(9118),I=n(9151),T=n(5561);const C=(0,h.op)({avgPool3d_:function(e,t,n,a,r){let s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:"NDHWC";const o=(0,u._1)(e,"x","avgPool3d","float32");let i=o,h=!1;4===o.rank&&(h=!0,i=(0,T.X)(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),d.hu(5===i.rank,(()=>"Error in avgPool3d: x must be rank 5 but got rank ".concat(i.rank,"."))),d.hu("NDHWC"===s,(()=>"Error in avgPool3d: Only NDHWC is currently supported, "+"but got dataFormat of ".concat(s))),d.hu("number"===typeof n&&n>0||Array.isArray(n)&&n[0]>0&&n[1]>0&&n[2]>0,(()=>"Error in avgPool3d: Stride must be > 0, but got '".concat(n,"'"))),(0,I.m)("avgPool3d",a,r);const p={x:i},f={filterSize:t,strides:n,pad:a,dimRoundingMode:r,dataFormat:s};let m=c.BV.runKernel(l._k9,p,f);return m=(0,N.p)(m,i.dtype),h?(0,T.X)(m,[m.shape[1],m.shape[2],m.shape[3],m.shape[4]]):m}});var E=n(4836),_=n(7221),A=n(651),R=n(7643),F=n(9238),D=n(1744);const O=(0,h.op)({basicLSTMCell_:function(e,t,n,a,r,s){const o=(0,u._1)(e,"forgetBias","basicLSTMCell"),c=(0,u._1)(t,"lstmKernel","basicLSTMCell"),l=(0,u._1)(n,"lstmBias","basicLSTMCell"),d=(0,u._1)(a,"data","basicLSTMCell"),h=(0,u._1)(r,"c","basicLSTMCell"),p=(0,u._1)(s,"h","basicLSTMCell"),f=(0,E.z)([d,p],1),m=(0,_.O)(f,c),g=(0,i.I)(m,l),y=g.shape[0],b=g.shape[1]/4,v=[y,b],x=(0,F.t)(g,[0,0],v),w=(0,F.t)(g,[0,b],v),k=(0,F.t)(g,[0,2*b],v),S=(0,F.t)(g,[0,3*b],v),N=(0,i.I)((0,A.d)((0,R.X)(x),(0,D.A)(w)),(0,A.d)(h,(0,R.X)((0,i.I)(o,k))));return[N,(0,A.d)((0,D.A)(N),(0,R.X)(S))]}});var M=n(6994),z=n(3700);const L=(0,h.op)({batchNorm2d_:function(e,t,n,a,r,s){const o=(0,u._1)(e,"x","batchNorm"),i=(0,u._1)(t,"mean","batchNorm"),c=(0,u._1)(n,"variance","batchNorm");let l,h;return null!=r&&(l=(0,u._1)(r,"scale","batchNorm")),null!=a&&(h=(0,u._1)(a,"offset","batchNorm")),d.hu(2===o.rank,(()=>"Error in batchNorm2D: x must be rank 2 but got rank "+"".concat(o.rank,"."))),d.hu(2===i.rank||1===i.rank,(()=>"Error in batchNorm2D: mean must be rank 2 or rank 1 but "+"got rank ".concat(i.rank,"."))),d.hu(2===c.rank||1===c.rank,(()=>"Error in batchNorm2D: variance must be rank 2 or rank 1 "+"but got rank ".concat(c.rank,"."))),null!=l&&d.hu(2===l.rank||1===l.rank,(()=>"Error in batchNorm2D: scale must be rank 2 or rank 1 "+"but got rank ".concat(l.rank,"."))),null!=h&&d.hu(2===h.rank||1===h.rank,(()=>"Error in batchNorm2D: offset must be rank 2 or rank 1 "+"but got rank ".concat(h.rank,"."))),(0,z.t)(o,i,c,h,l,s)}});const B=(0,h.op)({batchNorm3d_:function(e,t,n,a,r,s){const o=(0,u._1)(e,"x","batchNorm"),i=(0,u._1)(t,"mean","batchNorm"),c=(0,u._1)(n,"variance","batchNorm");let l,h;return null!=r&&(l=(0,u._1)(r,"scale","batchNorm")),null!=a&&(h=(0,u._1)(a,"offset","batchNorm")),d.hu(3===o.rank,(()=>"Error in batchNorm3D: x must be rank 3 but got rank "+"".concat(o.rank,"."))),d.hu(3===i.rank||1===i.rank,(()=>"Error in batchNorm3D: mean must be rank 3 or rank 1 but "+"got rank ".concat(i.rank,"."))),d.hu(3===c.rank||1===c.rank,(()=>"Error in batchNorm3D: variance must be rank 3 or rank 1 "+"but got rank ".concat(c.rank,"."))),null!=l&&d.hu(3===l.rank||1===l.rank,(()=>"Error in batchNorm3D: scale must be rank 3 or rank 1 "+"but got rank ".concat(l.rank,"."))),null!=h&&d.hu(3===h.rank||1===h.rank,(()=>"Error in batchNorm3D: offset must be rank 3 or rank 1 "+"but got rank ".concat(h.rank,"."))),(0,z.t)(o,i,c,h,l,s)}});const P=(0,h.op)({batchNorm4d_:function(e,t,n,a,r,s){const o=(0,u._1)(e,"x","batchNorm"),i=(0,u._1)(t,"mean","batchNorm"),c=(0,u._1)(n,"variance","batchNorm");let l,h;return null!=r&&(l=(0,u._1)(r,"scale","batchNorm")),null!=a&&(h=(0,u._1)(a,"offset","batchNorm")),d.hu(4===o.rank,(()=>"Error in batchNorm4D: x must be rank 4 but got rank "+"".concat(o.rank,"."))),d.hu(4===i.rank||1===i.rank,(()=>"Error in batchNorm4D: mean must be rank 4 or rank 1 but "+"got rank ".concat(i.rank,"."))),d.hu(4===c.rank||1===c.rank,(()=>"Error in batchNorm4D: variance must be rank 4 or rank 1 "+"but got rank ".concat(c.rank,"."))),null!=l&&d.hu(4===l.rank||1===l.rank,(()=>"Error in batchNorm4D: scale must be rank 4 or rank 1 "+"but got rank ".concat(l.rank,"."))),null!=h&&d.hu(4===h.rank||1===h.rank,(()=>"Error in batchNorm4D: offset must be rank 4 or rank 1 "+"but got rank ".concat(h.rank,"."))),(0,z.t)(o,i,c,h,l,s)}});const V=(0,h.op)({bincount_:function(e,t,n){const a=(0,u._1)(e,"x","bincount"),r=(0,u._1)(t,"weights","bincount");d.hu("int32"===a.dtype,(()=>"Error in bincount: input "+"dtype must be int32, but got ".concat(a.dtype))),d.hu(n>=0,(()=>"size must be non-negative, but got ".concat(n,"."))),d.hu(r.size===a.size||0===r.size,(()=>"Error in bincount: weights must have the same size as input or"+"0-length, but got input shape: ".concat(a.shape,", weights shape: ")+"".concat(r.shape,".")));const s={x:a,weights:r},o={size:n};return c.BV.runKernel(l.zvY,s,o)}});const W=(0,h.op)({bitwiseAnd_:function(e,t){const n=(0,u._1)(e,"x","bitwiseAnd"),a=(0,u._1)(t,"y","bitwiseAnd");if(!(0,d.cO)(n.shape,a.shape))throw new Error("BitwiseAnd: Tensors must have the same shape. x: ".concat(n.shape,", y: ").concat(a.shape));if("int32"!==n.dtype||"int32"!==a.dtype)throw new Error("BitwiseAnd: Only supports 'int32' values in tensor, found type of x: ".concat(n.dtype," and type of y: ").concat(a.dtype));const r={a:n,b:a};return c.BV.runKernel(l.hCO,r)}});const U=(0,h.op)({broadcastArgs_:function(e,t){const n=(0,u._1)(e,"s0","broadcastArgs","int32"),a=(0,u._1)(t,"s1","broadcastArgs","int32");if(1!==n.rank)throw new Error("broadcastArgs(): first input must be a vector (rank=1). "+"Has rank ".concat(n.rank));if(1!==a.rank)throw new Error("broadcastArgs(): second input must be a vector (rank=1). "+"Has rank ".concat(a.rank));const r={s0:n,s1:a};return c.BV.runKernel(l.eEB,r)}});var G=n(9742),H=n(7039),j=n(1396),q=n(9836),X=n(672),K=n(9253);const Q=(0,h.op)({concat1d_:function(e){return(0,E.z)(e,0)}});const Y=(0,h.op)({concat2d_:function(e,t){return(0,E.z)(e,t)}});const Z=(0,h.op)({concat3d_:function(e,t){return(0,E.z)(e,t)}});const J=(0,h.op)({concat4d_:function(e,t){return(0,E.z)(e,t)}});var $=n(4918),ee=n(3457),te=n(1732);const ne=(0,h.op)({conv3d_:function(e,t,n,a){let r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"NDHWC",s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:[1,1,1];const o=(0,u._1)(e,"x","conv3d"),i=(0,u._1)(t,"filter","conv3d");let h=o,p=!1;4===o.rank&&(p=!0,h=(0,T.X)(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),d.hu(5===h.rank,(()=>"Error in conv3d: input must be rank 5, but got rank ".concat(h.rank,"."))),d.hu(5===i.rank,(()=>"Error in conv3d: filter must be rank 5, but got rank "+"".concat(i.rank,"."))),d.hu(h.shape[4]===i.shape[3],(()=>"Error in conv3d: depth of input (".concat(h.shape[4],") must match ")+"input depth for filter ".concat(i.shape[3],"."))),d.hu((0,I.jT)(n,s),(()=>"Error in conv3D: Either strides or dilations must be 1. "+"Got strides ".concat(n," and dilations '").concat(s,"'"))),d.hu("NDHWC"===r,(()=>"Error in conv3d: got dataFormat of ".concat(r," but only NDHWC is currently supported."))),d.hu((0,I.U3)(s),(()=>"Error in conv3D: Dilated rates should be larger than 0.")),d.hu((0,I.U3)(n),(()=>"Error in conv3D: Strides should be larger than 0."));const f={x:h,filter:i},m={strides:n,pad:a,dataFormat:r,dilations:s},g=c.BV.runKernel(l.x12,f,m);return p?(0,T.X)(g,[g.shape[1],g.shape[2],g.shape[3],g.shape[4]]):g}});var ae=n(1873);const re=(0,h.op)({conv3dTranspose_:function(e,t,n,a,r){const s=(0,u._1)(e,"x","conv3dTranspose"),o=(0,u._1)(t,"filter","conv3dTranspose");return(0,ae._)(n,s,o,a,r)}});var se=n(1227),oe=n(6679),ie=n(9457),ce=n(8862);const le=(0,h.op)({denseBincount_:function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const r=(0,u._1)(e,"x","denseBincount"),s=(0,u._1)(t,"weights","denseBincount");d.hu("int32"===r.dtype,(()=>"Error in denseBincount: input "+"dtype must be int32, but got ".concat(r.dtype))),d.hu(r.rank<=2,(()=>"Error in denseBincount: input must be at most rank 2, but got "+"rank ".concat(r.rank,"."))),d.hu(n>=0,(()=>"size must be non-negative, but got ".concat(n,"."))),d.hu(s.size===r.size||0===s.size,(()=>"Error in denseBincount: weights must have the same shape as x or "+"0-length, but got x shape: ".concat(r.shape,", weights shape: ")+"".concat(s.shape,".")));const o={x:r,weights:s},i={size:n,binaryOutput:a};return c.BV.runKernel(l.QRR,o,i)}});var ue=n(1878),de=n(1147);const he=(0,h.op)({diag_:function(e){const t={x:(0,u._1)(e,"x","diag")};return c.BV.runKernel(l.$w,t)}});var pe=n(7580),fe=n(5750),me=n(5923),ge=n(5043);const ye=(0,h.op)({einsum_:function(e){for(var t=arguments.length,n=new Array(t>1?t-1:0),a=1;a<t;a++)n[a-1]=arguments[a];const r=n.map(((e,t)=>(0,u._1)(e,"tensors".concat(t),"einsum"))),s={equation:e};return c.BV.runKernel(l.$g6,r,s)}});var be=n(2353);const ve=(0,h.op)({ensureShape_:function(e,t){const n=(0,u._1)(e,"x","ensureShape","string_or_numeric");if(!(0,d.DK)(n.shape,t))throw new Error("EnsureShape: Shape of tensor ".concat(n.shape," is not compatible with expected shape ").concat(t));return e}});var xe=n(3254),we=n(3891),ke=n(3313),Se=n(411),Ne=n(2975),Ie=n(5682),Te=n(2343);const Ce=(0,h.op)({eye_:function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"float32";null==t&&(t=e);const r=(0,H.f)([e,t],a),s=e<=t?e:t;for(let i=0;i<s;++i)r.set(1,i,i);const o=(0,T.X)(r.toTensor(),[e,t]);if(null==n)return o;if(1===n.length)return(0,Te.G)((0,Ne.d)(o,0),[n[0],1,1]);if(2===n.length)return(0,Te.G)((0,Ne.d)((0,Ne.d)(o,0),0),[n[0],n[1],1,1]);if(3===n.length)return(0,Te.G)((0,Ne.d)((0,Ne.d)((0,Ne.d)(o,0),0),0),[n[0],n[1],n[2],1,1]);throw new Error("eye() currently supports only 1D and 2D "+"batchShapes, but received ".concat(n.length,"D."))}});var Ee=n(8582),_e=n(2628),Ae=n(7145),Re=n(9498),Fe=n(5014),De=n(8327),Oe=n(6996),Me=n(300),ze=n(4652),Le=n(7005),Be=n(4419),Pe=n(4920),Ve=n(2642);function We(e,t,n){if(n<=0)throw new Error("The number of values should be positive.");const a={start:e,stop:t,num:n};return c.BV.runKernel(l.e7N,{},a)}var Ue=n(936),Ge=n(378),He=n(5341),je=n(5113),qe=n(4561),Xe=n(5530),Ke=n(2177),Qe=n(875),Ye=n(5117),Ze=n(1712);const Je=2147483648;const $e=(0,h.op)({searchSorted_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"left";const a=(0,u._1)(e,"sortedSequence","searchSorted"),r=(0,u._1)(t,"values","searchSorted"),s=a.shape[a.shape.length-1],o=r.shape[r.shape.length-1],i=(0,T.X)(a,[-1,s]),h=(0,T.X)(r,[-1,o]);if(i.rank<2)throw new Error("Sorted input argument must be at least 2-dimensional");if(i.shape[0]!==h.shape[0])throw new Error("Leading dimension of 'sortedSequence' and 'values' must match.");if((0,d.NA)(h.shape)>=Je)throw new Error("values tensor size must less than ".concat(Je));if(i.shape[1]>=Je)throw new Error("trailing dim_size must less than ".concat(Je," for int32 output type, was ").concat(i.shape[1]));const p={sortedSequence:i,values:h},f={side:n};return c.BV.runKernel(l.nr8,p,f)}});function et(e,t){return $e(e,t,"left")}var tt=n(6176),nt=n(5777);const at=(0,h.op)({maxPool3d_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:[1,1,1],n=arguments.length>2?arguments[2]:void 0,a=arguments.length>3?arguments[3]:void 0,r=arguments.length>4?arguments[4]:void 0,s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:"NDHWC";const o=(0,u._1)(e,"x","maxPool3d");let i=o,h=!1;4===o.rank&&(h=!0,i=(0,T.X)(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),d.hu(5===i.rank,(()=>"Error in maxPool3d: x must be rank 5 but got rank ".concat(i.rank,"."))),d.hu("NDHWC"===s,(()=>"Error in maxPool3d: Only NDHWC is currently supported, "+"but got dataFormat of ".concat(s))),(0,I.m)("maxPool3d",a,r);const p={x:i},f={filterSize:t,strides:n,pad:a,dimRoundingMode:r,dataFormat:s},m=c.BV.runKernel(l.OAf,p,f);return h?(0,T.X)(m,[m.shape[1],m.shape[2],m.shape[3],m.shape[4]]):m}});const rt=(0,h.op)({maxPoolWithArgmax_:function(e,t,n,a){let r=arguments.length>4&&void 0!==arguments[4]&&arguments[4];const s=(0,u._1)(e,"x","maxPoolWithArgmax"),o={x:s},i={filterSize:t,strides:n,pad:a,includeBatchInIndex:r},d=c.BV.runKernel(l.vFR,o,i);return{result:d[0],indexes:d[1]}}});var st=n(705),ot=n(6568),it=n(6100),ct=n(4376);function lt(e,t){let{indexing:n="xy"}=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};if("xy"!==n&&"ij"!==n)throw new TypeError("".concat(n," is not a valid third argument to meshgrid"));if(void 0===e)return[];let a=(0,u._1)(e,"x","meshgrid",e instanceof ct.es?e.dtype:"float32");if(void 0===t)return[a];let r=(0,u._1)(t,"y","meshgrid",t instanceof ct.es?t.dtype:"float32");const s=(0,d.NA)(a.shape),o=(0,d.NA)(r.shape);return"xy"===n?(a=(0,T.X)(a,[1,-1]),r=(0,T.X)(r,[-1,1]),[(0,_.O)((0,it.i)([o,1],a.dtype),a),(0,_.O)(r,(0,it.i)([1,s],r.dtype))]):(a=(0,T.X)(a,[-1,1]),r=(0,T.X)(r,[1,-1]),[(0,_.O)(a,(0,it.i)([1,o],a.dtype)),(0,_.O)((0,it.i)([s,1],r.dtype),r)])}var ut=n(7891),dt=n(2273),ht=n(9719),pt=n(4645),ft=n(8473),mt=n(7391),gt=n(4774);const yt=(0,h.op)({moments_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];e=(0,u._1)(e,"x","moments");const a=(0,d.EC)(t,e.shape),r=(0,ot.J)(e,a,n);let s=r.shape;n||(s=(0,ft.rv)(r.shape,a));const o=(0,mt.h)((0,gt.l)((0,N.p)(e,"float32"),(0,T.X)(r,s))),i=(0,ot.J)(o,a,n);return{mean:r,variance:i}}});const bt=(0,h.op)({multiRNNCell_:function(e,t,n,a){const r=(0,u._1)(t,"data","multiRNNCell"),s=(0,u.sI)(n,"c","multiRNNCell"),o=(0,u.sI)(a,"h","multiRNNCell");let i=r;const c=[];for(let u=0;u<e.length;u++){const t=e[u](i,s[u],o[u]);c.push(t[0]),c.push(t[1]),i=t[1]}const l=[],d=[];for(let u=0;u<c.length;u+=2)l.push(c[u]),d.push(c[u+1]);return[l,d]}});const vt=(0,h.op)({multinomial_:function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const r=(0,u._1)(e,"logits","multinomial"),s=r.size,o=r.rank;if(s<2)throw new Error("Error in multinomial: you need at least 2 outcomes, but got "+"".concat(s,"."));if(o>2)throw new Error("Rank of probabilities must be 1 or 2, but is ".concat(o));n=n||Math.random();const i=1===o?(0,T.X)(r,[1,-1]):r,d={logits:i},h={numSamples:t,seed:n,normalized:a},p=c.BV.runKernel(l.NZg,d,h);return 1===o?(0,T.X)(p,[p.size]):p}});var xt=n(4362),wt=n(5549),kt=n(4326),St=n(773);const Nt=(0,h.op)({outerProduct_:function(e,t){const n=(0,u._1)(e,"v1","outerProduct"),a=(0,u._1)(t,"v2","outerProduct");d.hu(1===n.rank&&1===a.rank,(()=>"Error in outerProduct: inputs must be rank 1, but got ranks "+"".concat(n.rank," and ").concat(a.rank,".")));const r=(0,T.X)(n,[-1,1]),s=(0,T.X)(a,[1,-1]);return(0,_.O)(r,s)}});var It=n(1970);const Tt=(0,h.op)({pad1d_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;return(0,d.hu)(2===t.length,(()=>"Invalid number of paddings. Must be length of 2.")),(0,It.v)(e,[t],n)}});const Ct=(0,h.op)({pad2d_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;return(0,d.hu)(2===t.length&&2===t[0].length&&2===t[1].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),(0,It.v)(e,t,n)}});const Et=(0,h.op)({pad3d_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;return(0,d.hu)(3===t.length&&2===t[0].length&&2===t[1].length&&2===t[2].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),(0,It.v)(e,t,n)}});const _t=(0,h.op)({pad4d_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;return(0,d.hu)(4===t.length&&2===t[0].length&&2===t[1].length&&2===t[2].length&&2===t[3].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),(0,It.v)(e,t,n)}});var At=n(7226),Rt=n(4334),Ft=n(6859),Dt=n(4600),Ot=n(7722);const Mt=(0,h.op)({raggedGather_:function(e,t,n,a){const r={paramsNestedSplits:e.map(((e,t)=>(0,u._1)(e,"tensors".concat(t),"raggedGather","int32"))),paramsDenseValues:(0,u._1)(t,"paramsDenseValues","raggedGather"),indices:(0,u._1)(n,"indices","raggedGather","int32")},s={outputRaggedRank:a},o=c.BV.runKernel(l.dDz,r,s);return{outputNestedSplits:o.slice(0,o.length-1),outputDenseValues:o[o.length-1]}}});const zt=(0,h.op)({raggedRange_:function(e,t,n){const a=(0,u._1)(e,"starts","raggedRange"),r={starts:a,limits:(0,u._1)(t,"limits","raggedRange",a.dtype),deltas:(0,u._1)(n,"deltas","raggedRange",a.dtype)},s=c.BV.runKernel(l.CQl,r);return{rtNestedSplits:s[0],rtDenseValues:s[1]}}});const Lt=(0,h.op)({raggedTensorToTensor_:function(e,t,n,a,r){const s=(0,u._1)(e,"shape","raggedTensorToTensor","int32"),o=(0,u._1)(t,"values","raggedTensorToTensor"),i={shape:s,values:o,defaultValue:(0,u._1)(n,"defaultValue","raggedTensorToTensor",o.dtype),rowPartitionTensors:a.map(((e,t)=>(0,u._1)(e,"tensors".concat(t),"raggedTensorToTensor","int32")))},d={rowPartitionTypes:r};return c.BV.runKernel(l.BiW,i,d)}});const Bt=(0,h.op)({rand_:function(e,t,n){(0,d.Mu)(e);const a=(0,d.NA)(e);let r=null;if(null==n||"float32"===n)r=new Float32Array(a);else if("int32"===n)r=new Int32Array(a);else{if("bool"!==n)throw new Error("Unknown data type ".concat(n));r=new Uint8Array(a)}for(let s=0;s<a;s++)r[s]=t();return c.BV.makeTensor(r,e,n)}});var Pt=n(6699);class Vt{constructor(e,t,n,a,r){this.mean=e,this.stdDev=t,this.dtype=n,this.nextVal=NaN,this.truncated=a,this.truncated&&(this.upper=this.mean+2*this.stdDev,this.lower=this.mean-2*this.stdDev);const s=r||Math.random();this.random=Pt.alea(s.toString())}nextValue(){if(!isNaN(this.nextVal)){const e=this.nextVal;return this.nextVal=NaN,e}let e,t,n=!1;for(;!n;){let a,r,s;do{a=2*this.random()-1,r=2*this.random()-1,s=a*a+r*r}while(s>=1||0===s);const o=Math.sqrt(-2*Math.log(s)/s);e=this.mean+this.stdDev*a*o,t=this.mean+this.stdDev*r*o,this.truncated&&!this.isValidTruncated(e)||(n=!0)}return this.truncated&&!this.isValidTruncated(t)||(this.nextVal=this.convertValue(t)),this.convertValue(e)}convertValue(e){return null==this.dtype||"float32"===this.dtype?e:Math.round(e)}isValidTruncated(e){return e<=this.upper&&e>=this.lower}}class Wt{constructor(e,t,n,a){this.alpha=e,this.beta=1/t,this.dtype=n;const r=a||Math.random();this.randu=Pt.alea(r.toString()),this.randn=new Vt(0,1,n,!1,this.randu()),this.d=e<1?e+2/3:e-1/3,this.c=1/Math.sqrt(9*this.d)}nextValue(){let e,t,n,a,r,s;for(;;){do{a=this.randn.nextValue(),s=1+this.c*a}while(s<=0);if(s*=s*s,e=a*a,t=1-.331*e*e,n=.5*e+this.d*(1-s+Math.log(s)),r=this.randu(),r<t||Math.log(r)<n)break}return s=1/this.beta*this.d*s,this.alpha<1&&(s*=Math.pow(this.randu(),1/this.alpha)),this.convertValue(s)}convertValue(e){return"float32"===this.dtype?e:Math.round(e)}}class Ut{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0,t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,n=arguments.length>2?arguments[2]:void 0,a=arguments.length>3?arguments[3]:void 0;if(this.canReturnFloat=()=>null==this.dtype||"float32"===this.dtype,this.min=e,this.range=t-e,this.dtype=n,null==a&&(a=Math.random()),"number"===typeof a&&(a=a.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error("The difference between ".concat(e," - ").concat(t," <= 1 and dtype is not float"));this.random=Pt.alea(a)}convertValue(e){return this.canReturnFloat()?e:Math.round(e)}nextValue(){return this.convertValue(this.min+this.range*this.random())}}const Gt=(0,h.op)({randomGamma_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"float32",r=arguments.length>4?arguments[4]:void 0;if((0,d.Mu)(e),null==n&&(n=1),null==a&&(a="float32"),"float32"!==a&&"int32"!==a)throw new Error("Unsupported data type ".concat(a));const s=new Wt(t,n,a,r),o=(0,H.f)(e,a);for(let i=0;i<o.values.length;i++)o.values[i]=s.nextValue();return o.toTensor()}});const Ht=(0,h.op)({randomNormal_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,a=arguments.length>3?arguments[3]:void 0,r=arguments.length>4?arguments[4]:void 0;if((0,d.Mu)(e),null!=a&&"bool"===a)throw new Error("Unsupported data type ".concat(a));const s=new Vt(t,n,a,!1,r),o=(0,H.f)(e,a);for(let i=0;i<o.values.length;i++)o.values[i]=s.nextValue();return o.toTensor()}});const jt=(0,h.op)({randomStandardNormal_:function(e,t,n){if(null!=t&&"bool"===t)throw new Error("Unsupported data type ".concat(t));return Ht(e,0,1,t,n)}});const qt=(0,h.op)({randomUniform_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"float32",r=arguments.length>4?arguments[4]:void 0;(0,d.Mu)(e);const s=(0,H.f)(e,a),o=new Ut(t,n,null,r);for(let i=0;i<s.values.length;i++)s.values[i]=o.nextValue();return s.toTensor()}});const Xt=(0,h.op)({randomUniformInt_:function(e,t,n,a){return qt(e,t,n,"int32",a)}});function Kt(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"float32";if(0===n)throw new Error("Cannot have a step of zero");const r={start:e,stop:t,step:n,dtype:a};return c.BV.runKernel(l.e6w,{},r)}var Qt=n(6972),Yt=n(2209),Zt=n(7539),Jt=n(5900),$t=n(4933);const en=(0,h.op)({reverse1d_:function(e){const t=(0,u._1)(e,"x","reverse");return d.hu(1===t.rank,(()=>"Error in reverse1D: x must be rank 1 but got rank ".concat(t.rank,"."))),(0,$t.G)(t,0)}});const tn=(0,h.op)({reverse2d_:function(e,t){const n=(0,u._1)(e,"x","reverse");return d.hu(2===n.rank,(()=>"Error in reverse2D: x must be rank 2 but got rank ".concat(n.rank,"."))),(0,$t.G)(n,t)}});const nn=(0,h.op)({reverse3d_:function(e,t){const n=(0,u._1)(e,"x","reverse");return d.hu(3===n.rank,(()=>"Error in reverse3D: x must be rank 3 but got rank ".concat(n.rank,"."))),(0,$t.G)(n,t)}});const an=(0,h.op)({reverse4d_:function(e,t){const n=(0,u._1)(e,"x","reverse");return d.hu(4===n.rank,(()=>"Error in reverse4D: x must be rank 4 but got rank ".concat(n.rank,"."))),(0,$t.G)(n,t)}});var rn=n(766),sn=n(5115),on=n(7067),cn=n(413),ln=n(119);const un=async function(e,t){const n=(0,u._1)(e,"x","setdiff1d"),a=(0,u._1)(t,"y","setdiff1d");d.hu(n.dtype===a.dtype,(()=>"x and y should have the same dtype, but got x (".concat(n.dtype,") and y (").concat(a.dtype,")."))),d.hu(1===n.rank,(()=>"x should be 1D tensor, but got x (".concat(n.shape,")."))),d.hu(1===a.rank,(()=>"y should be 1D tensor, but got y (".concat(a.shape,").")));const r=await n.data(),s=await a.data(),o=new Set(s);let i=0;for(let u=0;u<r.length;u++)o.has(r[u])||i++;const c=new ct.YD([i],n.dtype),l=new ct.YD([i],"int32");for(let u=0,d=0;u<r.length;u++)o.has(r[u])||(c.values[d]=r[u],l.values[d]=u,d++);return[c.toTensor(),l.toTensor()]};var dn=n(2070),hn=n(7254),pn=n(7657);const fn=(0,h.op)({slice1d_:function(e,t,n){const a=(0,u._1)(e,"x","slice1d");return d.hu(1===a.rank,(()=>"slice1d expects a rank-1 tensor, but got a rank-".concat(a.rank," tensor"))),(0,F.t)(a,[t],[n])}});const mn=(0,h.op)({slice2d_:function(e,t,n){const a=(0,u._1)(e,"x","slice2d");return d.hu(2===a.rank,(()=>"slice2d expects a rank-2 tensor, but got a rank-".concat(a.rank," tensor"))),(0,F.t)(a,t,n)}});const gn=(0,h.op)({slice3d_:function(e,t,n){const a=(0,u._1)(e,"x","slice3d");return d.hu(3===a.rank,(()=>"slice3d expects a rank-3 tensor, but got a rank-".concat(a.rank," tensor"))),(0,F.t)(a,t,n)}});const yn=(0,h.op)({slice4d_:function(e,t,n){const a=(0,u._1)(e,"x","slice4d");return d.hu(4===a.rank,(()=>"slice4d expects a rank-4 tensor, but got a rank-".concat(a.rank," tensor"))),(0,F.t)(a,t,n)}});var bn=n(4910),vn=n(4626),xn=n(5696),wn=n(7635),kn=n(530),Sn=n(774),Nn=n(4617),In=n(2588),Tn=n(6902),Cn=n(7993),En=n(3931),_n=n(8306),An=n(4031),Rn=n(9017),Fn=n(227),Dn=n(6999),On=n(2442),Mn=n(7960);function zn(e,t){(0,d.Cq)(e);const n=(0,u.C)(e,t);if(1!==n.length)throw new Error("tensor1d() requires values to be a flat/TypedArray");return(0,Mn.H)(e,null,n,t)}function Ln(e,t,n){if((0,d.Cq)(e),null!=t&&2!==t.length)throw new Error("tensor2d() requires shape to have two numbers");const a=(0,u.C)(e,n);if(2!==a.length&&1!==a.length)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(1===a.length&&null==t)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return(0,Mn.H)(e,t,a,n)}var Bn=n(3123);function Pn(e,t,n){if((0,d.Cq)(e),null!=t&&4!==t.length)throw new Error("tensor4d() requires shape to have four numbers");const a=(0,u.C)(e,n);if(4!==a.length&&1!==a.length)throw new Error("tensor4d() requires values to be number[][][][] or flat/TypedArray");if(1===a.length&&null==t)throw new Error("tensor4d() requires shape to be provided when `values` are a flat array");return(0,Mn.H)(e,t,a,n)}function Vn(e,t,n){if((0,d.Cq)(e),null!=t&&5!==t.length)throw new Error("tensor5d() requires shape to have five numbers");const a=(0,u.C)(e,n);if(5!==a.length&&1!==a.length)throw new Error("tensor5d() requires values to be number[][][][][] or flat/TypedArray");if(1===a.length&&null==t)throw new Error("tensor5d() requires shape to be provided when `values` are a flat array");return(0,Mn.H)(e,t,a,n)}function Wn(e,t,n){if((0,d.Cq)(e),null!=t&&6!==t.length)throw new Error("tensor6d() requires shape to have six numbers");const a=(0,u.C)(e,n);if(6!==a.length&&1!==a.length)throw new Error("tensor6d() requires values to be number[][][][][][] or flat/TypedArray");if(1===a.length&&null==t)throw new Error("tensor6d() requires shape to be provided when `values` are a flat array");return t=t||a,(0,Mn.H)(e,t,a,n)}var Un=n(8604);const Gn=(0,h.op)({tensorScatterUpdate_:function(e,t,n){const a=(0,u._1)(e,"tensor","tensorScatterupdate"),r=(0,u._1)(t,"indices","tensorScatterupdate","int32"),s=(0,u._1)(n,"updates","tensorScatterupdate");if(Un.validateInput(s,r,a.shape),a.dtype!==s.dtype)throw new Error("tensor and updates must have the same dtype, instead they are ".concat(a.dtype," and ").concat(s.dtype,"."));const o={tensor:a,indices:r,updates:s};return c.BV.runKernel(l.SIB,o,{})}});var Hn=n(9085);const jn=(0,h.op)({truncatedNormal_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,a=arguments.length>3?arguments[3]:void 0,r=arguments.length>4?arguments[4]:void 0;if((0,d.Mu)(e),null!=a&&"bool"===a)throw new Error("Unsupported data type $ { dtype }");const s=new Vt(t,n,a,!0,r),o=(0,H.f)(e,a);for(let i=0;i<o.values.length;i++)o.values[i]=s.nextValue();return o.toTensor()}});var qn=n(4860),Xn=n(6918),Kn=n(4566);function Qn(e,t){return $e(e,t,"right")}function Yn(e){let t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],n=arguments.length>2?arguments[2]:void 0,a=arguments.length>3?arguments[3]:void 0;return c.BV.makeVariable(e,t,n,a)}var Zn=n(329),Jn=n(4189);const $n=async function(e){const t=(0,u._1)(e,"condition","whereAsync","bool"),n=await t.data(),a=(0,Jn.Z)(t.shape,n);return e!==t&&t.dispose(),a};var ea=n(7742),ta=n(7293);const na=async function(e,t,n){const a=(0,u._1)(e,"tensor","boolMask"),r=(0,u._1)(t,"mask","boolMask","bool"),s=null==n?0:n,o=r.rank,i=a.shape;d.hu(o>0,(()=>"mask cannot be scalar")),d.k5(i.slice(s,s+o),r.shape,"mask's shape must match the first K dimensions of tensor's shape,");let c=1;for(let u=s;u<s+o;u++)c*=i[u];const l=i.slice(0,s).concat([c],i.slice(s+o)),h=(0,T.X)(a,l),p=(0,T.X)(r,[-1]),f=await $n(p),m=(0,En.L)(f,[1]),g=(0,Re.I)(h,m,s);return e!==a&&a.dispose(),t!==r&&r.dispose(),m.dispose(),h.dispose(),p.dispose(),f.dispose(),g};var aa=n(1240),ra=n(6662),sa=n(9064);const oa=(0,h.op)({movingAverage_:function(e,t,n,a){let r=!(arguments.length>4&&void 0!==arguments[4])||arguments[4];const s=(0,u._1)(e,"v","movingAverage"),o=(0,u._1)(t,"x","movingAverage"),c=(0,u._1)(n,"decay","movingAverage");(0,sa.assertTypesMatch)(s,o),d.hu(d.cO(s.shape,o.shape),(()=>"Shape mismatch in v and x"));const l=(0,on.i)(1),h=(0,gt.l)(l,c);let p=(0,A.d)((0,gt.l)(o,s),h);if(r){d.hu(null!=a,(()=>"When using zeroDebias: true, step is required."));const e=(0,u._1)(a,"step","movingAverage");p=(0,fe.h)(p,(0,gt.l)(l,(0,Rt.s)(c,e)))}return(0,i.I)(s,p)}});const ia=(0,h.op)({scatterND_:function(e,t,n){(0,d.Mu)(n);const a=(0,u._1)(e,"indices","scatterND","int32"),r=(0,u._1)(t,"updates","scatterND");Un.validateInput(r,a,n);const s={indices:a,updates:r},o={shape:n};return c.BV.runKernel(l.xQA,s,o)}});function ca(e,t,n,a){if("int32"!==e.dtype)throw new Error("tf.sparseToDense() expects the indices to be int32 type,"+" but the dtype was ".concat(e.dtype,"."));if(e.rank>2)throw new Error("sparseIndices should be a scalar, vector, or matrix,"+" but got shape ".concat(e.shape,"."));const r=e.rank>0?e.shape[0]:1,s=e.rank>1?e.shape[1]:1;if(n.length!==s)throw new Error("outputShape has incorrect number of elements:,"+" ".concat(n.length,", should be: ").concat(s,"."));const o=t.size;if(0!==t.rank&&(1!==t.rank||o!==r))throw new Error("sparseValues has incorrect shape "+"".concat(t.shape,", should be [] or [").concat(r,"]"));if(t.dtype!==a.dtype)throw new Error("sparseValues.dtype must match defaultValues.dtype")}const la=(0,h.op)({sparseToDense_:function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0;(0,d.Mu)(n);const r=(0,u._1)(e,"sparseIndices","sparseToDense","int32"),s=(0,u._1)(t,"sparseValues","sparseToDense","string_or_numeric"),o=(0,u._1)(a,"defaultValue","sparseToDense",s.dtype);ca(r,s,n,o);const i={sparseIndices:r,sparseValues:s,defaultValue:o},h={outputShape:n};return c.BV.runKernel(l.D2d,i,h)}});const ua=(0,h.op)({gatherND_:function(e,t){const n=(0,u._1)(t,"indices","gatherND","int32"),a={params:(0,u._1)(e,"x","gatherND","string_or_numeric"),indices:n};return c.BV.runKernel(l.q1x,a)}});const da=(0,h.op)({dropout_:function(e,t,n,a){const r=(0,u._1)(e,"x","dropout");if(d.hu("float32"===r.dtype,(()=>"x has to be a floating point tensor since it's going to be "+"scaled, but got a ".concat(r.dtype," tensor instead."))),d.hu(t>=0&&t<1,(()=>"rate must be a float in the range [0, 1), but got ".concat(t,"."))),0===t)return e instanceof ct.es?r.clone():r;const s=function(e,t){if(null==t)return e.shape.slice();if(d.cO(e.shape,t))return t;if(e.shape.length===t.length){const n=[];for(let a=0;a<e.shape.length;a++)null==t[a]&&null!=e.shape[a]?n.push(e.shape[a]):n.push(t[a]);return n}return t}(r,n),o=1-t,c=(0,fe.h)((0,_e.G)((0,i.I)(qt(s,0,1,"float32",a),o)),o);return(0,A.d)(r,c)}});function ha(e){return Math.floor(Math.pow(2,Math.ceil(Math.log(e)/Math.log(2))))}function pa(e,t,n){const a=1-e%2,r=new Float32Array(e);for(let s=0;s<e;++s){const o=2*Math.PI*s/(e+a-1);r[s]=t-n*Math.cos(o)}return zn(r,"float32")}const fa=async function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1;const a=(0,u._1)(e,"predictions","inTopK"),r=(0,u._1)(t,"targets","inTopK");(0,d.hu)(a.rank>1,(()=>"inTopK() expects the predictions to be of rank 2 or higher, "+"but got ".concat(a.rank))),(0,d.hu)(a.rank-1===r.rank,(()=>"predictions rank should be 1 larger than targets rank, but got predictions rank "+"".concat(a.rank," and targets rank ").concat(r.rank))),(0,d.k5)(a.shape.slice(0,a.shape.length-1),r.shape,"predictions's shape should be align with the targets' shape, except the last dimension.");const s=a.shape[a.shape.length-1];(0,d.hu)(n>0&&n<=s,(()=>"'k' passed to inTopK() must be > 0 && <= the predictions last "+"dimension (".concat(s,"), but got ").concat(n)));const o=await a.data(),i=await r.data(),[c,l]=[o.length/s,s],h=(0,d.WP)("bool",c);for(let u=0;u<c;u++){const e=u*l,t=o.subarray(e,e+l),a=[];for(let n=0;n<t.length;n++)a.push({value:t[n],index:n});a.sort(((e,t)=>t.value-e.value)),h[u]=0;for(let r=0;r<n;r++)if(a[r].index===i[u]){h[u]=1;break}}return e!==a&&a.dispose(),t!==r&&r.dispose(),(0,On.X)(h,r.shape,"bool")};var ma=n(6450),ga=n(5774),ya=n(8744),ba=n(1045),va=n(5171);const xa=(0,h.op)({fusedConv2d_:function(e){let{x:t,filter:n,strides:a,pad:r,dataFormat:s="NHWC",dilations:o=[1,1],dimRoundingMode:h,bias:p,activation:f="linear",preluActivationWeights:m,leakyreluAlpha:g}=e;if(f=f||"linear",!1===(0,va.uy)(c.BV.state.gradientDepth,f)){d.hu("NHWC"===s,(()=>"Error in fused conv2d: got dataFormat of ".concat(s," but ")+"only NHWC is currently supported for the case of gradient depth is 0 and the activation is not linear."));let e=(0,ee.T)(t,n,a,r,s,o,h);return null!=p&&(e=(0,i.I)(e,p)),(0,va.QH)(e,f,m,g)}const y=(0,u._1)(t,"x","conv2d","float32"),b=(0,u._1)(n,"filter","conv2d","float32");let v=y,x=!1;3===y.rank&&(x=!0,v=(0,T.X)(y,[1,y.shape[0],y.shape[1],y.shape[2]])),d.hu(4===v.rank,(()=>"Error in fused conv2d: input must be rank 4, but got rank "+"".concat(v.rank,"."))),d.hu(4===b.rank,(()=>"Error in fused conv2d: filter must be rank 4, but got rank "+"".concat(b.rank,"."))),I.m("fused conv2d",r,h);const w="NHWC"===s?v.shape[3]:v.shape[1];d.hu(b.shape[2]===w,(()=>"Error in conv2d: depth of input (".concat(w,") must match ")+"input depth for filter ".concat(b.shape[2],"."))),d.hu(I.jT(a,o),(()=>"Error in conv2D: Either strides or dilations must be 1. "+"Got strides ".concat(a," and dilations '").concat(o,"'")));const k=I.Ix(v.shape,b.shape,a,o,r,h);let S,N;if(null!=p&&(S=(0,u._1)(p,"bias","fused conv2d"),[S]=(0,sa.makeTypesMatch)(S,y),"NHWC"===s?ga.assertAndGetBroadcastShape(k.outShape,S.shape):(d.hu(S.shape.length<=1,(()=>"Error in fused conv2d: only supports scalar or 1-D Tensor bias for NCHW format but got the bias of "+"rank-".concat(S.shape.length,"."))),d.hu(0===S.shape.length||S.shape[0]===k.outChannels||1===S.shape[0],(()=>"Error in fused conv2d: bias shape (".concat(S.shape,") is not ")+"compatible with the number of output channels "+"(".concat(k.outChannels,")"))))),null!=m){const e=m.shape;if(d.hu(e.length<=1||3===e.length,(()=>"Error in fused conv2d: only supports scalar, 1-D Tensor or 3-D Tensor PReLU activation weights but got a tensor of "+"rank-".concat(e.length,"."))),1===e.length)d.hu(1===e[0]||e[0]===k.outChannels,(()=>"Error in fused conv2d: PReLU activation weights "+"(".concat(e,") is not compatible with the number of output ")+"channels (".concat(k.outChannels,").")));else if(3===e.length)try{ga.assertAndGetBroadcastShape(e,k.outShape)}catch(A){const t="Error in fused conv2d: PReLU activation weights (".concat(e,") ")+"is not compatible with the output shape of the conv2d "+"(".concat(k.outShape,").");throw Error(t)}N=(0,u._1)(m,"prelu weights","fused conv2d")}const C=(e,t)=>{d.hu("NHWC"===s,(()=>"Error in gradient of fused conv2D: got dataFormat of ".concat(s," but only NHWC is currently supported.")));const[n,i,c,l]=t,u=(0,va.Fr)(e,c,f);d.hu(I.I0(o),(()=>"Error in gradient of fused conv2D: dilation rates greater than 1 "+"are not yet supported in gradients. Got dilations '".concat(o,"'")));const h=[(0,ba._)(i.shape,u,n,a,r),(0,ya.p)(i,u,n.shape,a,r)];if(null!=l){const e=(0,va.pf)(l,u);h.push(e)}return h},E={x:v,filter:b,bias:S,preluActivationWeights:N},_={strides:a,pad:r,dataFormat:s,dilations:o,dimRoundingMode:h,activation:f,leakyreluAlpha:g};if(null==p){const e=(0,ma.cb)(((e,t,n)=>{let a=c.BV.runKernel(l._V0,E,_);return n([t,e,a]),x&&(a=(0,T.X)(a,[a.shape[1],a.shape[2],a.shape[3]])),{value:a,gradFunc:C}}));return e(v,b)}{const e=(0,ma.cb)(((e,t,n,a)=>{let r=c.BV.runKernel(l._V0,E,_);return a([t,e,r,n]),x&&(r=(0,T.X)(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:C}}));return e(v,b,S)}}});var wa=n(288),ka=n(6939);const Sa=(0,h.op)({fusedDepthwiseConv2d_:function(e){let{x:t,filter:n,strides:a,pad:r,dataFormat:s="NHWC",dilations:o=[1,1],dimRoundingMode:h,bias:p,activation:f="linear",preluActivationWeights:m,leakyreluAlpha:g}=e;if(!1===(0,va.uy)(c.BV.state.gradientDepth,f)){let e=(0,de.B)(t,n,a,r,s,o,h);return null!=p&&(e=(0,i.I)(e,p)),(0,va.QH)(e,f,m,g)}const y=(0,u._1)(t,"x","depthwiseConv2d","float32"),b=(0,u._1)(n,"filter","depthwiseConv2d","float32");let v=y,x=!1;3===y.rank&&(x=!0,v=(0,T.X)(y,[1,y.shape[0],y.shape[1],y.shape[2]])),d.hu(4===v.rank,(()=>"Error in fused depthwiseConv2d: input must be rank 4, but got "+"rank ".concat(v.rank,"."))),d.hu(4===b.rank,(()=>"Error in fused depthwiseConv2d: filter must be rank 4, "+"but got rank ".concat(b.rank,"."))),d.hu(v.shape[3]===b.shape[2],(()=>"Error in fused depthwiseConv2d: number of input channels "+"(".concat(v.shape[3],") must match the inChannels dimension in ")+"filter ".concat(b.shape[2],"."))),null==o&&(o=[1,1]),d.hu(I.jT(a,o),(()=>"Error in fused depthwiseConv2d: Either strides or dilations must "+"be 1. Got strides ".concat(a," and dilations '").concat(o,"'"))),I.m("fused depthwiseConv2d",r,h);const w=I.Ix(v.shape,b.shape,a,o,r,h,!0);let k,S;null!=p&&(k=(0,u._1)(p,"bias","fused conv2d"),[k]=(0,sa.makeTypesMatch)(k,y),ga.assertAndGetBroadcastShape(w.outShape,k.shape)),null!=m&&(S=(0,u._1)(m,"prelu weights","fused depthwiseConv2d"));const N=(e,t)=>{d.hu(I.I0(o),(()=>"Error in gradient of fused depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations "+"'".concat(o,"'")));const[n,s,i,c]=t,l=(0,va.Fr)(e,i,f),u=(0,ka.v)(s.shape,l,n,a,r,o,h),p=(0,wa.z)(s,l,n.shape,a,r,o,h);if(null!=c){return[u,p,(0,va.pf)(k,l)]}return[u,p]},C={x:v,filter:b,bias:k,preluActivationWeights:S},E={strides:a,pad:r,dataFormat:s,dilations:o,dimRoundingMode:h,activation:f,leakyreluAlpha:g};if(null==p){const e=(0,ma.cb)(((e,t,n)=>{let a=c.BV.runKernel(l.luS,C,E);return n([t,e,a]),x&&(a=(0,T.X)(a,[a.shape[1],a.shape[2],a.shape[3]])),{value:a,gradFunc:N}}));return e(v,b)}{const e=(0,ma.cb)(((e,t,n,a)=>{let r=c.BV.runKernel(l.luS,C,E);return a([t,e,r,n]),x&&(r=(0,T.X)(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:N}}));return e(v,b,k)}}});const Na=(0,h.op)({fusedMatMul_:function(e){let{a:t,b:n,transposeA:a=!1,transposeB:r=!1,bias:s,activation:o="linear",preluActivationWeights:h,leakyreluAlpha:p=.2}=e;if(!1===(0,va.uy)(c.BV.state.gradientDepth,o)){let e=(0,_.O)(t,n,a,r);return null!=s&&(e=(0,i.I)(e,s)),(0,va.QH)(e,o,h,p)}let f=(0,u._1)(t,"a","fused matMul"),m=(0,u._1)(n,"b","fused matMul");[f,m]=(0,sa.makeTypesMatch)(f,m);const g=a?f.shape[f.rank-2]:f.shape[f.rank-1],y=r?m.shape[m.rank-1]:m.shape[m.rank-2],b=a?f.shape[f.rank-1]:f.shape[f.rank-2],v=r?m.shape[m.rank-2]:m.shape[m.rank-1],x=f.shape.slice(0,-2),w=m.shape.slice(0,-2),k=d.NA(x),S=d.NA(w);d.hu(g===y,(()=>"Error in fused matMul: inner shapes (".concat(g,") and (")+"".concat(y,") of Tensors with shapes ").concat(f.shape," and ")+"".concat(m.shape," and transposeA=").concat(a)+" and transposeB=".concat(r," must match.")));const N=ga.assertAndGetBroadcastShape(f.shape.slice(0,-2),m.shape.slice(0,-2)).concat([b,v]),I=a?(0,T.X)(f,[k,g,b]):(0,T.X)(f,[k,b,g]),C=r?(0,T.X)(m,[S,v,y]):(0,T.X)(m,[S,y,v]);let E,A;null!=s&&(E=(0,u._1)(s,"bias","fused matMul"),[E]=(0,sa.makeTypesMatch)(E,f),ga.assertAndGetBroadcastShape(N,E.shape)),null!=h&&(A=(0,u._1)(h,"prelu weights","fused matMul"));const R=(e,t)=>{const[n,i,c,l]=t,u=(0,va.Fr)((0,T.X)(e,c.shape),c,o);let d,h;if(a||r?!a&&r?(d=(0,_.O)(u,i,!1,!1),h=(0,_.O)(u,n,!0,!1)):a&&!r?(d=(0,_.O)(i,u,!1,!0),h=(0,_.O)(n,u,!1,!1)):(d=(0,_.O)(i,u,!0,!0),h=(0,_.O)(u,n,!0,!0)):(d=(0,_.O)(u,i,!1,!0),h=(0,_.O)(n,u,!0,!1)),null!=s){return[d,h,(0,va.pf)(l,u)]}return[d,h]},F={a:I,b:C,bias:E,preluActivationWeights:A},D={transposeA:a,transposeB:r,activation:o,leakyreluAlpha:p};if(null==s){const e=(0,ma.cb)(((e,t,n)=>{const a=c.BV.runKernel(l.usg,F,D);return n([e,t,a]),{value:(0,T.X)(a,N),gradFunc:R}}));return e(I,C)}{const e=(0,ma.cb)(((e,t,n,a)=>{const r=c.BV.runKernel(l.usg,F,D);return a([e,t,r,n]),{value:(0,T.X)(r,N),gradFunc:R}}));return e(I,C,E)}}});const Ia=(0,h.op)({hammingWindow_:function(e){return pa(e,.54,.46)}});const Ta=(0,h.op)({hannWindow_:function(e){return pa(e,.5,.5)}});const Ca=(0,h.op)({frame_:function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]&&arguments[3],r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:0,s=0;const o=[];for(;s+t<=e.size;)o.push((0,F.t)(e,s,t)),s+=n;if(a)for(;s<e.size;){const a=s+t-e.size,i=(0,E.z)([(0,F.t)(e,s,t-a),(0,Ee.h)([a],r)]);o.push(i),s+=n}return 0===o.length?Ln([],[0,t]):(0,T.X)((0,E.z)(o),[o.length,t])}});const Ea=(0,h.op)({stft_:function(e,t,n,a){let r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Ta;null==a&&(a=ha(t));const s=Ca(e,t,n),o=(0,A.d)(s,r(t));return(0,Nn.Q)(o,a)}});const _a=(0,h.op)({cropAndResize_:function(e,t,n,a){let r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"bilinear",s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:0;const o=(0,u._1)(e,"image","cropAndResize"),i=(0,u._1)(t,"boxes","cropAndResize","float32"),h=(0,u._1)(n,"boxInd","cropAndResize","int32"),p=i.shape[0];d.hu(4===o.rank,(()=>"Error in cropAndResize: image must be rank 4,"+"but got rank ".concat(o.rank,"."))),d.hu(2===i.rank&&4===i.shape[1],(()=>"Error in cropAndResize: boxes must be have size [".concat(p,",4] ")+"but had shape ".concat(i.shape,"."))),d.hu(1===h.rank&&h.shape[0]===p,(()=>"Error in cropAndResize: boxInd must be have size [".concat(p,"] ")+"but had shape ".concat(i.shape,"."))),d.hu(2===a.length,(()=>"Error in cropAndResize: cropSize must be of length 2, but got "+"length ".concat(a.length,"."))),d.hu(a[0]>=1&&a[1]>=1,(()=>"cropSize must be atleast [1,1], but was ".concat(a))),d.hu("bilinear"===r||"nearest"===r,(()=>"method must be bilinear or nearest, but was ".concat(r)));const f={image:o,boxes:i,boxInd:h},m={method:r,extrapolationValue:s,cropSize:a},g=c.BV.runKernel(l.VcC,f,m);return g}});const Aa=(0,h.op)({flipLeftRight_:function(e){const t=(0,u._1)(e,"image","flipLeftRight","float32");d.hu(4===t.rank,(()=>"Error in flipLeftRight: image must be rank 4,"+"but got rank ".concat(t.rank,".")));const n={image:t};return c.BV.runKernel(l.Uyb,n,{})}});const Ra=(0,h.op)({grayscaleToRGB_:function(e){const t=(0,u._1)(e,"image","grayscaleToRGB"),n=t.rank-1,a=t.shape[n];d.hu(t.rank>=2,(()=>"Error in grayscaleToRGB: images must be at least rank 2, "+"but got rank ".concat(t.rank,"."))),d.hu(1===a,(()=>"Error in grayscaleToRGB: last dimension of a grayscale image "+"should be size 1, but got size ".concat(a,".")));const r=new Array(t.rank);return r.fill(1,0,n),r[n]=3,(0,Te.G)(t,r)}});const Fa=(0,h.op)({rgbToGrayscale_:function(e){const t=(0,u._1)(e,"image","RGBToGrayscale"),n=t.rank-1,a=t.shape[n];d.hu(t.rank>=2,(()=>"Error in RGBToGrayscale: images must be at least rank 2, "+"but got rank ".concat(t.rank,"."))),d.hu(3===a,(()=>"Error in RGBToGrayscale: last dimension of an RGB image "+"should be size 3, but got size ".concat(a,".")));const r=t.dtype,s=(0,N.p)(t,"float32"),o=zn([.2989,.587,.114]);let i;switch(t.rank){case 2:i=ye("ij,j->i",s,o);break;case 3:i=ye("ijk,k->ij",s,o);break;case 4:i=ye("ijkl,l->ijk",s,o);break;case 5:i=ye("ijklm,m->ijkl",s,o);break;case 6:i=ye("ijklmn,n->ijklm",s,o);break;default:throw new Error("Not a valid tensor rank.")}return i=(0,Ne.d)(i,-1),(0,N.p)(i,r)}});const Da=(0,h.op)({rotateWithOffset_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.5;const r=(0,u._1)(e,"image","rotateWithOffset","float32");d.hu(4===r.rank,(()=>"Error in rotateWithOffset: image must be rank 4,"+"but got rank ".concat(r.rank,".")));const s={image:r},o={radians:t,fillValue:n,center:a},i=c.BV.runKernel(l.b9H,s,o);return i}});function Oa(e,t,n,a,r,s){null==a&&(a=.5),null==r&&(r=Number.NEGATIVE_INFINITY),null==s&&(s=0);const o=e.shape[0];return n=Math.min(n,o),d.hu(0<=a&&a<=1,(()=>"iouThreshold must be in [0, 1], but was '".concat(a,"'"))),d.hu(2===e.rank,(()=>"boxes must be a 2D tensor, but was of rank '".concat(e.rank,"'"))),d.hu(4===e.shape[1],(()=>"boxes must have 4 columns, but 2nd dimension was ".concat(e.shape[1]))),d.hu(1===t.rank,(()=>"scores must be a 1D tensor")),d.hu(t.shape[0]===o,(()=>"scores has incompatible shape with boxes. Expected ".concat(o,", ")+"but was ".concat(t.shape[0]))),d.hu(0<=s&&s<=1,(()=>"softNmsSigma must be in [0, 1], but was '".concat(s,"'"))),{maxOutputSize:n,iouThreshold:a,scoreThreshold:r,softNmsSigma:s}}const Ma=(0,h.op)({nonMaxSuppression_:function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.5,r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Number.NEGATIVE_INFINITY;const s=(0,u._1)(e,"boxes","nonMaxSuppression","float32"),o=(0,u._1)(t,"scores","nonMaxSuppression","float32"),i=Oa(s,o,n,a,r);n=i.maxOutputSize,a=i.iouThreshold,r=i.scoreThreshold;const d={maxOutputSize:n,iouThreshold:a,scoreThreshold:r};return c.BV.runKernel(l.uv1,{boxes:s,scores:o},d)}});var za=n(745);const La=async function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.5,r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Number.NEGATIVE_INFINITY;const s=(0,u._1)(e,"boxes","nonMaxSuppressionAsync"),o=(0,u._1)(t,"scores","nonMaxSuppressionAsync"),i=Oa(s,o,n,a,r);n=i.maxOutputSize,a=i.iouThreshold,r=i.scoreThreshold;const c=await Promise.all([s.data(),o.data()]),l=c[0],d=c[1],{selectedIndices:h}=(0,za.GP)(l,d,n,a,r);return s!==e&&s.dispose(),o!==t&&o.dispose(),zn(h,"int32")};const Ba=(0,h.op)({nonMaxSuppressionWithScore_:function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.5,r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Number.NEGATIVE_INFINITY,s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:0;const o=(0,u._1)(e,"boxes","nonMaxSuppression"),i=(0,u._1)(t,"scores","nonMaxSuppression"),d=Oa(o,i,n,a,r,s);n=d.maxOutputSize,a=d.iouThreshold,r=d.scoreThreshold,s=d.softNmsSigma;const h={boxes:o,scores:i},p={maxOutputSize:n,iouThreshold:a,scoreThreshold:r,softNmsSigma:s},f=c.BV.runKernel(l.W0H,h,p);return{selectedIndices:f[0],selectedScores:f[1]}}});const Pa=async function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.5,r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Number.NEGATIVE_INFINITY,s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:0;const o=(0,u._1)(e,"boxes","nonMaxSuppressionAsync"),i=(0,u._1)(t,"scores","nonMaxSuppressionAsync"),c=Oa(o,i,n,a,r,s);n=c.maxOutputSize,a=c.iouThreshold,r=c.scoreThreshold,s=c.softNmsSigma;const l=await Promise.all([o.data(),i.data()]),d=l[0],h=l[1],{selectedIndices:p,selectedScores:f}=(0,za.pA)(d,h,n,a,r,s);return o!==e&&o.dispose(),i!==t&&i.dispose(),{selectedIndices:zn(p,"int32"),selectedScores:zn(f)}};const Va=(0,h.op)({nonMaxSuppressionPadded_:function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.5,r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Number.NEGATIVE_INFINITY,s=arguments.length>5&&void 0!==arguments[5]&&arguments[5];const o=(0,u._1)(e,"boxes","nonMaxSuppression"),i=(0,u._1)(t,"scores","nonMaxSuppression"),d=Oa(o,i,n,a,r,null),h=d.maxOutputSize,p=d.iouThreshold,f=d.scoreThreshold,m={boxes:o,scores:i},g={maxOutputSize:h,iouThreshold:p,scoreThreshold:f,padToMaxOutputSize:s},y=c.BV.runKernel(l.cye,m,g);return{selectedIndices:y[0],validOutputs:y[1]}}});const Wa=async function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.5,r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Number.NEGATIVE_INFINITY,s=arguments.length>5&&void 0!==arguments[5]&&arguments[5];const o=(0,u._1)(e,"boxes","nonMaxSuppressionAsync"),i=(0,u._1)(t,"scores","nonMaxSuppressionAsync"),c=Oa(o,i,n,a,r,null),l=c.maxOutputSize,d=c.iouThreshold,h=c.scoreThreshold,[p,f]=await Promise.all([o.data(),i.data()]),{selectedIndices:m,validOutputs:g}=(0,za.qP)(p,f,l,d,h,s);return o!==e&&o.dispose(),i!==t&&i.dispose(),{selectedIndices:zn(m,"int32"),validOutputs:(0,on.i)(g,"int32")}};var Ua=n(464),Ga=n(8600);function Ha(e,t){let n,a,r,s,o,c,l=zn([-1]),u=zn([0]),d=zn([0]);for(let h=0;h<e.size-1;h++){n=(0,F.t)(e,0,h+1),a=(0,F.t)(e,h+1),o=(0,fe.h)((0,Fn.S)(n),t),c=(0,fe.h)((0,Fn.S)(a),t);const p=(0,Fn.S)((0,A.d)(n,Kt(0,n.size)));r=(0,fe.h)(p,(0,Fn.S)(n));const f=(0,Ee.h)(a.shape,n.size),m=(0,i.I)(Kt(0,a.size),f),g=(0,A.d)(a,m);s=(0,fe.h)((0,Fn.S)(g),(0,Fn.S)(a));const y=(0,gt.l)(r,s),b=(0,gt.l)(r,s),v=(0,A.d)(o,c);d=(0,A.d)((0,A.d)(v,y),b);const x=(0,Fe.p)(d,u);u=(0,Zn.a)(x,d,u),l=(0,Zn.a)(x,zn([h]),l)}return l}const ja=(0,h.op)({threshold_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"binary",n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.5;const r=(0,u._1)(e,"image","threshold"),s=.2989,o=.587,c=.114,l=r.shape[0]*r.shape[1];let h,p,f,m,g=(0,A.d)(zn([a]),255);if(d.hu(3===r.rank,(()=>"Error in threshold: image must be rank 3,"+"but got rank ".concat(r.rank,"."))),d.hu(3===r.shape[2]||1===r.shape[2],(()=>"Error in threshold: image color channel must be equal to 3 or 1"+"but got ".concat(r.shape[2],"."))),d.hu("int32"===r.dtype||"float32"===r.dtype,(()=>"Error in dtype: image dtype must be int32 or float32,"+"but got dtype ".concat(r.dtype,"."))),d.hu("otsu"===t||"binary"===t,(()=>"Method must be binary or otsu, but was ".concat(t))),3===r.shape[2]){[h,p,f]=(0,In.V)(r,[1,1,1],-1);const e=(0,A.d)(h,s),t=(0,A.d)(p,o),n=(0,A.d)(f,c);m=(0,i.I)((0,i.I)(e,t),n)}else m=e;if("otsu"===t){g=Ha(V((0,N.p)((0,rn.N)(m),"int32"),(0,On.X)([]),256),l)}const y=n?(0,Ve.z)(m,g):(0,Fe.p)(m,g),b=(0,N.p)((0,A.d)(y,255),"int32");return b}});const qa=(0,h.op)({transform_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"nearest",a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"constant",r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:0,s=arguments.length>5?arguments[5]:void 0;const o=(0,u._1)(e,"image","transform","float32"),i=(0,u._1)(t,"transforms","transform","float32");d.hu(4===o.rank,(()=>"Error in transform: image must be rank 4,"+"but got rank ".concat(o.rank,"."))),d.hu(2===i.rank&&(i.shape[0]===o.shape[0]||1===i.shape[0])&&8===i.shape[1],(()=>"Error in transform: Input transform should be batch x 8 or 1 x 8")),d.hu(null==s||2===s.length,(()=>"Error in transform: outputShape must be [height, width] or null, "+"but got ".concat(s,".")));const h={image:o,transforms:i},p={interpolation:n,fillMode:a,fillValue:r,outputShape:s};return c.BV.runKernel(l.wx7,h,p)}});const Xa=(0,h.op)({bandPart_:function(e,t,n){const a=(0,u._1)(e,"a","bandPart");(0,d.hu)(a.rank>=2,(()=>"bandPart(): Rank must be at least 2, got ".concat(a.rank,".")));const r=a.shape,[s,o]=a.shape.slice(-2);let i,c;"number"===typeof t?((0,d.hu)(t%1===0,(()=>"bandPart(): numLower must be an integer, got ".concat(t,"."))),(0,d.hu)(t<=s,(()=>"bandPart(): numLower (".concat(t,")")+" must not be greater than the number of rows (".concat(s,")."))),i=(0,u._1)(t<0?s:t,"numLower","bandPart")):((0,d.hu)("int32"===t.dtype,(()=>"bandPart(): numLower's dtype must be an int32.")),i=(0,Zn.a)((0,Pe.d)(t,0),s,(0,dt.L)(t,s))),"number"===typeof n?((0,d.hu)(n%1===0,(()=>"bandPart(): numUpper must be an integer, got ".concat(n,"."))),(0,d.hu)(n<=o,(()=>"bandPart(): numUpper (".concat(n,")")+" must not be greater than the number of columns (".concat(o,")."))),c=(0,u._1)(n<0?o:n,"numUpper","bandPart")):((0,d.hu)("int32"===n.dtype,(()=>"bandPart(): numUpper's dtype must be an int32.")),c=(0,Zn.a)((0,Pe.d)(n,0),o,(0,dt.L)(n,o)));const l=(0,T.X)(Kt(0,s,1,"int32"),[-1,1]),h=Kt(0,o,1,"int32"),p=(0,gt.l)(l,h),f=(0,Ke.H)((0,Ve.z)(p,i),(0,De.b)(p,(0,xt.W)(c))),m=(0,ea.l)([s,o],a.dtype);return(0,T.X)((0,_n.k)((0,Kn.H)((0,T.X)(a,[-1,s,o])).map((e=>(0,Zn.a)(f,e,m)))),r)}});const Ka=(0,h.op)({gramSchmidt_:function(e){let t;if(Array.isArray(e)){t=!1,(0,d.hu)(null!=e&&e.length>0,(()=>"Gram-Schmidt process: input must not be null, undefined, or empty"));const n=e[0].shape[0];for(let t=1;t<e.length;++t)(0,d.hu)(e[t].shape[0]===n,(()=>"Gram-Schmidt: Non-unique lengths found in the input vectors: "+"(".concat(e[t].shape[0]," vs. ").concat(n,")")))}else t=!0,e=(0,In.V)(e,e.shape[0],0).map((e=>(0,En.L)(e,[0])));(0,d.hu)(e.length<=e[0].shape[0],(()=>"Gram-Schmidt: Number of vectors (".concat(e.length,") exceeds ")+"number of dimensions (".concat(e[0].shape[0],").")));const n=[],a=e;for(let r=0;r<e.length;++r)n.push(c.BV.tidy((()=>{let e=a[r];if(r>0)for(let t=0;t<r;++t){const a=(0,A.d)((0,Fn.S)((0,A.d)(n[t],e)),n[t]);e=(0,gt.l)(e,a)}return(0,fe.h)(e,(0,ra.K)(e,"euclidean"))})));return t?(0,_n.k)(n,0):n}});var Qa=n(5875);function Ya(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];return c.BV.tidy((()=>{(0,d.hu)(2===e.shape.length,(()=>"qr2d() requires a 2D Tensor, but got a ".concat(e.shape.length,"D Tensor.")));const n=e.shape[0],a=e.shape[1];let r=Ce(n),s=(0,X.d)(e);const o=Ln([[1]],[1,1]);let i=(0,X.d)(o);const l=n>=a?a:n;for(let e=0;e<l;++e){const t=s,l=i,u=r;[i,s,r]=c.BV.tidy((()=>{const t=(0,F.t)(s,[e,e],[n-e,1]),c=(0,ra.K)(t),l=(0,F.t)(s,[e,e],[1,1]),u=(0,Zn.a)((0,Fe.p)(l,0),Ln([[-1]]),Ln([[1]])),d=(0,gt.l)(l,(0,A.d)(u,c)),h=(0,fe.h)(t,d);i=1===h.shape[0]?(0,X.d)(o):(0,E.z)([o,(0,F.t)(h,[1,0],[h.shape[0]-1,h.shape[1]])],0);const p=(0,xt.W)((0,fe.h)((0,_.O)(u,d),c)),f=(0,F.t)(s,[e,0],[n-e,a]),m=(0,A.d)(p,i),g=(0,aa.p)(i);if(0===e)s=(0,gt.l)(f,(0,_.O)(m,(0,_.O)(g,f)));else{const t=(0,gt.l)(f,(0,_.O)(m,(0,_.O)(g,f)));s=(0,E.z)([(0,F.t)(s,[0,0],[e,a]),t],0)}const y=(0,aa.p)(m),b=(0,F.t)(r,[0,e],[n,r.shape[1]-e]);if(0===e)r=(0,gt.l)(b,(0,_.O)((0,_.O)(b,i),y));else{const t=(0,gt.l)(b,(0,_.O)((0,_.O)(b,i),y));r=(0,E.z)([(0,F.t)(r,[0,0],[n,e]),t],1)}return[i,s,r]})),(0,Qa.B9)([t,l,u])}return!t&&n>a&&(r=(0,F.t)(r,[0,0],[n,a]),s=(0,F.t)(s,[0,0],[a,a])),[r,s]}))}const Za=(0,h.op)({qr_:function(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];if((0,d.hu)(e.rank>=2,(()=>"qr() requires input tensor to have a rank >= 2, but got rank ".concat(e.rank))),2===e.rank)return Ya(e,t);{const n=e.shape.slice(0,e.shape.length-2).reduce(((e,t)=>e*t)),a=(0,Kn.H)((0,T.X)(e,[n,e.shape[e.shape.length-2],e.shape[e.shape.length-1]]),0),r=[],s=[];a.forEach((e=>{const[n,a]=Ya(e,t);r.push(n),s.push(a)}));return[(0,T.X)((0,_n.k)(r,0),e.shape),(0,T.X)((0,_n.k)(s,0),e.shape)]}}});var Ja=n(7627);const $a=(0,h.op)({computeWeightedLoss_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:Ja.I.SUM_BY_NONZERO_WEIGHTS;const a=(0,u._1)(e,"losses","computeWeightedLoss");let r=null;null!=t&&(r=(0,u._1)(t,"weights","computeWeightedLoss"));const s=null==r?a:(0,A.d)(a,r);if(n===Ja.I.NONE)return s;if(n===Ja.I.SUM)return(0,Fn.S)(s);if(n===Ja.I.MEAN){if(null==r)return(0,ot.J)(s);{const e=a.size/r.size,t=(0,fe.h)((0,Fn.S)(s),(0,Fn.S)(r));return e>1?(0,fe.h)(t,(0,on.i)(e)):t}}if(n===Ja.I.SUM_BY_NONZERO_WEIGHTS){if(null==r)return(0,fe.h)((0,Fn.S)(s),(0,on.i)(a.size));{const e=(0,A.d)(r,(0,it.i)(a.shape)),t=(0,N.p)((0,Fn.S)((0,wt.Q)(e,(0,on.i)(0))),"float32");return(0,fe.h)((0,Fn.S)(s),t)}}throw Error("Unknown reduction: ".concat(n))}});const er=(0,h.op)({absoluteDifference_:function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:Ja.I.SUM_BY_NONZERO_WEIGHTS;const s=(0,u._1)(e,"labels","absoluteDifference"),o=(0,u._1)(t,"predictions","absoluteDifference");let i=null;null!=n&&(i=(0,u._1)(n,"weights","absoluteDifference")),(0,d.k5)(s.shape,o.shape,"Error in absoluteDifference: ");const c=(0,r.W)((0,gt.l)(s,o));return $a(c,i,a)}});const tr=(0,h.op)({cosineDistance_:function(e,t,n,a){let r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Ja.I.SUM_BY_NONZERO_WEIGHTS;const s=(0,u._1)(e,"labels","cosineDistance"),o=(0,u._1)(t,"predictions","cosineDistance");let i=null;null!=a&&(i=(0,u._1)(a,"weights","cosineDistance")),(0,d.k5)(s.shape,o.shape,"Error in cosineDistance: ");const c=(0,on.i)(1),l=(0,gt.l)(c,(0,Fn.S)((0,A.d)(s,o),n,!0));return $a(l,i,r)}});const nr=(0,h.op)({hingeLoss_:function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:Ja.I.SUM_BY_NONZERO_WEIGHTS,r=(0,u._1)(e,"labels","hingeLoss");const s=(0,u._1)(t,"predictions","hingeLoss");let o=null;null!=n&&(o=(0,u._1)(n,"weights","hingeLoss")),(0,d.k5)(r.shape,s.shape,"Error in hingeLoss: ");const i=(0,on.i)(1);r=(0,gt.l)((0,A.d)((0,on.i)(2),r),i);const c=(0,Zt.U)((0,gt.l)(i,(0,A.d)(r,s)));return $a(c,o,a)}});const ar=(0,h.op)({huberLoss_:function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1,s=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Ja.I.SUM_BY_NONZERO_WEIGHTS;const o=(0,u._1)(e,"labels","huberLoss"),c=(0,u._1)(t,"predictions","huberLoss");let l=null;null!=n&&(l=(0,u._1)(n,"weights","huberLoss")),(0,d.k5)(o.shape,c.shape,"Error in huberLoss: ");const h=(0,on.i)(a),p=(0,r.W)((0,gt.l)(c,o)),f=(0,dt.L)(p,h),m=(0,gt.l)(p,f),g=(0,i.I)((0,A.d)((0,on.i)(.5),(0,mt.h)(f)),(0,A.d)(h,m));return $a(g,l,s)}});const rr=(0,h.op)({logLoss_:function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1e-7,r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Ja.I.SUM_BY_NONZERO_WEIGHTS;const s=(0,u._1)(e,"labels","logLoss"),o=(0,u._1)(t,"predictions","logLoss");let c=null;null!=n&&(c=(0,u._1)(n,"weights","logLoss")),(0,d.k5)(s.shape,o.shape,"Error in logLoss: ");const l=(0,on.i)(1),h=(0,on.i)(a),p=(0,xt.W)((0,A.d)(s,(0,Ge.c)((0,i.I)(o,h)))),f=(0,A.d)((0,gt.l)(l,s),(0,Ge.c)((0,i.I)((0,gt.l)(l,o),h))),m=(0,gt.l)(p,f);return $a(m,c,r)}});const sr=(0,h.op)({meanSquaredError_:function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:Ja.I.SUM_BY_NONZERO_WEIGHTS;const r=(0,u._1)(e,"labels","meanSquaredError"),s=(0,u._1)(t,"predictions","meanSquaredError");let o=null;null!=n&&(o=(0,u._1)(n,"weights","meanSquaredError")),(0,d.k5)(r.shape,s.shape,"Error in meanSquaredError: ");const i=(0,Cn.$)(r,s);return $a(i,o,a)}});function or(e,t){const n=(0,u._1)(e,"labels","sigmoidCrossEntropyWithLogits"),a=(0,u._1)(t,"logits","sigmoidCrossEntropyWithLogits");(0,d.k5)(n.shape,a.shape,"Error in sigmoidCrossEntropyWithLogits: ");const s=(0,Zt.U)(a),o=(0,A.d)(a,n),c=(0,He.K)((0,Se.Q)((0,xt.W)((0,r.W)(a))));return(0,i.I)((0,gt.l)(s,o),c)}const ir=(0,h.op)({sigmoidCrossEntropy_:function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0,r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Ja.I.SUM_BY_NONZERO_WEIGHTS,s=(0,u._1)(e,"multiClassLabels","sigmoidCrossEntropy");const o=(0,u._1)(t,"logits","sigmoidCrossEntropy");let c=null;if(null!=n&&(c=(0,u._1)(n,"weights","sigmoidCrossEntropy")),(0,d.k5)(s.shape,o.shape,"Error in sigmoidCrossEntropy: "),a>0){const e=(0,on.i)(a),t=(0,on.i)(1),n=(0,on.i)(.5);s=(0,i.I)((0,A.d)(s,(0,gt.l)(t,e)),(0,A.d)(n,e))}const l=or(s,o);return $a(l,c,r)}});function cr(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:-1;if(-1===n&&(n=t.rank-1),n!==t.rank-1)throw Error("Softmax cross entropy along a non-last dimension is not yet "+"supported. Labels / logits was rank ".concat(t.rank," ")+"and dim was ".concat(n));const a=(0,ma.cb)(((e,t,a)=>{const r=(0,Xe.l)(t,[n],!0),s=(0,gt.l)((0,N.p)(t,"float32"),r);a([e,s]);const o=(0,xt.W)((0,A.d)(s,e));return{value:(0,Fn.S)(o,[n]),gradFunc:(e,t)=>{const[a,r]=t,s=(0,ft.rv)(e.shape,[n]);return[(0,A.d)((0,T.X)(e,s),(0,gt.l)((0,N.p)(a,"float32"),(0,Se.Q)(r))),(0,A.d)((0,T.X)(e,s),(0,gt.l)((0,Se.Q)(r),(0,N.p)(a,"float32")))]}}}));return a(e,t)}const lr=(0,h.op)({softmaxCrossEntropy_:function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0,r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:Ja.I.SUM_BY_NONZERO_WEIGHTS,s=(0,u._1)(e,"onehotLabels","softmaxCrossEntropy");const o=(0,u._1)(t,"logits","softmaxCrossEntropy");let c=null;if(null!=n&&(c=(0,u._1)(n,"weights","softmaxCrossEntropy")),(0,d.k5)(s.shape,o.shape,"Error in softmaxCrossEntropy: "),a>0){const e=(0,on.i)(a),t=(0,on.i)(1),n=(0,on.i)(s.shape[1]);s=(0,i.I)((0,A.d)(s,(0,gt.l)(t,e)),(0,fe.h)(e,n))}const l=cr(s,o);return $a(l,c,r)}});const ur=(0,h.op)({sparseFillEmptyRows_:function(e,t,n,a){const r=(0,u._1)(e,"indices","sparseFillEmptyRows","int32"),s=(0,u._1)(t,"values","sparseFillEmptyRows"),o=(0,u._1)(n,"denseShape","sparseFillEmptyRows","int32"),i=(0,u._1)(a,"defaultValue","sparseFillEmptyRows",s.dtype);if(2!==r.rank)throw new Error("Indices should be Tensor2D but received shape\n        ".concat(r.shape));if(1!==s.rank)throw new Error("Values should be Tensor1D but received shape ".concat(s.shape));if(1!==o.rank)throw new Error("Dense shape should be Tensor1D but received shape ".concat(o.shape));if(0!==i.rank)throw new Error("Default value should be a scalar but received shape ".concat(i.shape));const d={indices:r,values:s,denseShape:o,defaultValue:i},h=c.BV.runKernel(l.O3z,d);return{outputIndices:h[0],outputValues:h[1],emptyRowIndicator:h[2],reverseIndexMap:h[3]}}});const dr=(0,h.op)({sparseReshape_:function(e,t,n){const a=(0,u._1)(e,"inputIndices","sparseReshape","int32"),r=(0,u._1)(t,"inputShape","sparseReshape","int32"),s=(0,u._1)(n,"newShape","sparseReshape","int32");if(2!==a.rank)throw new Error("Input indices should be Tensor2D but received shape\n        ".concat(a.shape));if(1!==r.rank)throw new Error("Input shape should be Tensor1D but received shape ".concat(r.shape));if(1!==s.rank)throw new Error("New shape should be Tensor1D but received shape ".concat(s.shape));const o={inputIndices:a,inputShape:r,newShape:s},i=c.BV.runKernel(l.nhH,o);return{outputIndices:i[0],outputShape:i[1]}}});const hr=(0,h.op)({sparseSegmentMean_:function(e,t,n){const a=(0,u._1)(e,"data","sparseSegmentMean"),r=(0,u._1)(t,"indices","sparseSegmentMean","int32"),s=(0,u._1)(n,"segmentIds","sparseSegmentMean","int32");if(a.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==r.rank)throw new Error("Indices should be Tensor1D but received shape\n          ".concat(r.shape));if(1!==s.rank)throw new Error("Segment ids should be Tensor1D but received shape\n          ".concat(s.shape));const o={data:a,indices:r,segmentIds:s};return c.BV.runKernel(l.w3H,o)}});const pr=(0,h.op)({sparseSegmentSum_:function(e,t,n){const a=(0,u._1)(e,"data","sparseSegmentSum"),r=(0,u._1)(t,"indices","sparseSegmentSum","int32"),s=(0,u._1)(n,"segmentIds","sparseSegmentSum","int32");if(a.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==r.rank)throw new Error("Indices should be Tensor1D but received shape\n         ".concat(r.shape));if(1!==s.rank)throw new Error("Segment ids should be Tensor1D but received shape\n         ".concat(s.shape));const o={data:a,indices:r,segmentIds:s};return c.BV.runKernel(l.ZjV,o)}});const fr=(0,h.op)({stringNGrams_:function(e,t,n,a,r,s,o,i){const d=(0,u._1)(e,"data","stringNGrams","string");if("string"!==d.dtype)throw new Error("Data must be of datatype string");if(1!==d.shape.length)throw new Error("Data must be a vector, saw: ".concat(d.shape));const h=(0,u._1)(t,"dataSplits","stringNGrams");if("int32"!==h.dtype)throw new Error("Data splits must be of datatype int32");const p={separator:n,nGramWidths:a,leftPad:r,rightPad:s,padWidth:o,preserveShortSequences:i},f={data:d,dataSplits:h},m=c.BV.runKernel(l._JP,f,p);return{nGrams:m[0],nGramsSplits:m[1]}}});const mr=(0,h.op)({stringSplit_:function(e,t){let n=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];const a=(0,u._1)(e,"input","stringSplit","string"),r=(0,u._1)(t,"delimiter","stringSplit","string");if(1!==a.rank)throw new Error("Input should be Tensor1D but received shape ".concat(a.shape));if(0!==r.rank)throw new Error("Delimiter should be a scalar but received shape ".concat(r.shape));const s={skipEmpty:n},o={input:a,delimiter:r},i=c.BV.runKernel(l.s1s,o,s);return{indices:i[0],values:i[1],shape:i[2]}}});const gr=(0,h.op)({stringToHashBucketFast_:function(e,t){const n=(0,u._1)(e,"input","stringToHashBucketFast","string"),a={numBuckets:t};if(t<=0)throw new Error("Number of buckets must be at least 1");const r={input:n};return c.BV.runKernel(l.XkS,r,a)}});const yr=(0,h.op)({staticRegexReplace_:function(e,t,n){let a=!(arguments.length>3&&void 0!==arguments[3])||arguments[3];const r=(0,u._1)(e,"input","staticRegexReplace","string"),s={pattern:t,rewrite:n,replaceGlobal:a};return c.BV.runKernel(l.e0R,{x:r},s)}}),br={fft:wn.k,ifft:kn.S,rfft:Nn.Q,irfft:Sn.w},vr={hammingWindow:Ia,hannWindow:Ta,frame:Ca,stft:Ea},xr={flipLeftRight:Aa,grayscaleToRGB:Ra,resizeNearestNeighbor:Ga.j,resizeBilinear:Ua.I,rgbToGrayscale:Fa,rotateWithOffset:Da,cropAndResize:_a,nonMaxSuppression:Ma,nonMaxSuppressionAsync:La,nonMaxSuppressionWithScore:Ba,nonMaxSuppressionWithScoreAsync:Pa,nonMaxSuppressionPadded:Va,nonMaxSuppressionPaddedAsync:Wa,threshold:ja,transform:qa},wr={bandPart:Xa,gramSchmidt:Ka,qr:Za},kr={absoluteDifference:er,computeWeightedLoss:$a,cosineDistance:tr,hingeLoss:nr,huberLoss:ar,logLoss:rr,meanSquaredError:sr,sigmoidCrossEntropy:ir,softmaxCrossEntropy:lr},Sr={sparseFillEmptyRows:ur,sparseReshape:dr,sparseSegmentMean:hr,sparseSegmentSum:pr},Nr={stringNGrams:fr,stringSplit:mr,stringToHashBucketFast:gr,staticRegexReplace:yr}},1970:(e,t,n)=>{"use strict";n.d(t,{v:()=>o});var a=n(318),r=n(2145),s=n(8354);const o=(0,n(8640).op)({pad_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;const o=(0,s._1)(e,"x","pad");if(0===o.rank)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");const i={paddings:t,constantValue:n},c={x:o};return a.BV.runKernel(r.lyA,c,i)}})},7226:(e,t,n)=>{"use strict";n.d(t,{d:()=>h});var a=n(8354),r=n(6147),s=n(9204),o=n(6994),i=n(9151),c=n(5777),l=n(8640),u=n(5561),d=n(5696);const h=(0,l.op)({pool_:function(e,t,n,l,h,p,f){null==h&&(h=[1,1]),null==p&&(p=1),0===l&&(l="valid");const m=(0,a._1)(e,"x","maxPool");let g=m,y=!1;3===m.rank&&(y=!0,g=(0,u.X)(m,[1,m.shape[0],m.shape[1],m.shape[2]])),r.hu(i.jT(p,h),(()=>"Error in pool: Either strides or dilations must be 1. "+"Got strides ".concat(p," and dilations '").concat(h,"'")));const b=i.Xw(g.shape,t,p,h,l),v=[b.dilationHeight,b.dilationWidth];let x;x="same"===l?function(e,t){const n=e.map(((e,n)=>e+(e-1)*(t[n]-1))).map((e=>e-1)),a=n.map((e=>Math.floor(e/2))),r=n.map(((e,t)=>e-a[t]));return n.map(((e,t)=>[a[t],r[t]]))}([b.filterHeight,b.filterWidth],v):[[0,0],[0,0]];const w=1===v[0]&&1===v[1],[k,S]=function(e,t,n){const a=n.map((e=>e[0])),r=n.map((e=>e[1])),s=e.concat(a,r),o=t.map(((e,t)=>(e-s[t]%e)%e)),i=r.map(((e,t)=>e+o[t])),c=t.map(((e,t)=>[a[t],i[t]])),l=t.map(((e,t)=>[0,o[t]]));return[c,l]}([b.inHeight,b.inWidth],v,x),N=w?l:"valid",I=w?g:(0,d.f)(g,v,k),T=("avg"===n?()=>(0,s.w)(I,t,p,N,f):()=>(0,c._)(I,t,p,N,f))(),C=w?T:(0,o.E)(T,v,S);return y?(0,u.X)(C,[C.shape[1],C.shape[2],C.shape[3]]):C}})},4334:(e,t,n)=>{"use strict";n.d(t,{s:()=>i});var a=n(318),r=n(2145),s=n(9064),o=n(8354);const i=(0,n(8640).op)({pow_:function(e,t){let n=(0,o._1)(e,"base","pow"),i=(0,o._1)(t,"exp","pow");[n,i]=(0,s.makeTypesMatch)(n,i);const c={a:n,b:i};return a.BV.runKernel(r.pe_,c)}})},6859:(e,t,n)=>{"use strict";n.d(t,{A:()=>o});var a=n(318),r=n(2145),s=n(8354);const o=(0,n(8640).op)({prelu_:function(e,t){const n={x:(0,s._1)(e,"x","prelu"),alpha:(0,s._1)(t,"alpha","prelu")};return a.BV.runKernel(r.o0g,n)}})},4600:(e,t,n)=>{"use strict";function a(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];console.log(e.toString(t))}n.d(t,{S:()=>a})},7722:(e,t,n)=>{"use strict";n.d(t,{W:()=>i});var a=n(318),r=n(2145),s=n(8354),o=n(9118);const i=(0,n(8640).op)({prod_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],i=(0,s._1)(e,"x","prod");"bool"===i.dtype&&(i=(0,o.p)(i,"int32"));const c={x:i},l={axis:t,keepDims:n};return a.BV.runKernel(r.DlI,c,l)}})},6972:(e,t,n)=>{"use strict";n.d(t,{k:()=>o});var a=n(318),r=n(2145),s=n(8354);const o=(0,n(8640).op)({real_:function(e){const t={input:(0,s._1)(e,"input","real")};return a.BV.runKernel(r.xJR,t)}})},2209:(e,t,n)=>{"use strict";n.d(t,{M:()=>o});var a=n(318),r=n(2145),s=n(8354);const o=(0,n(8640).op)({reciprocal_:function(e){const t={x:(0,s._1)(e,"x","reciprocal")};return a.BV.runKernel(r.$HU,t)}})},7539:(e,t,n)=>{"use strict";n.d(t,{U:()=>o});var a=n(318),r=n(2145),s=n(8354);const o=(0,n(8640).op)({relu_:function(e){const t={x:(0,s._1)(e,"x","relu")};return a.BV.runKernel(r.qkr,t)}})},5900:(e,t,n)=>{"use strict";n.d(t,{b:()=>o});var a=n(318),r=n(2145),s=n(8354);const o=(0,n(8640).op)({relu6_:function(e){const t={x:(0,s._1)(e,"x","relu6")};return a.BV.runKernel(r.SbG,t)}})},5561:(e,t,n)=>{"use strict";n.d(t,{X:()=>o});var a=n(318),r=n(2145),s=n(8354);const o=(0,n(8640).op)({reshape_:function(e,t){const n={x:(0,s._1)(e,"x","reshape","string_or_numeric")},o={shape:t};return a.BV.runKernel(r.HZH,n,o)}})},4933:(e,t,n)=>{"use strict";n.d(t,{G:()=>o});var a=n(318),r=n(2145),s=n(8354);const o=(0,n(8640).op)({reverse_:function(e,t){const n={x:(0,s._1)(e,"x","reverse")},o={dims:t};return a.BV.runKernel(r.mKl,n,o)}})},766:(e,t,n)=>{"use strict";n.d(t,{N:()=>o});var a=n(318),r=n(2145),s=n(8354);const o=(0,n(8640).op)({round_:function(e){const t={x:(0,s._1)(e,"x","round")};return a.BV.runKernel(r.e07,t)}})},5115:(e,t,n)=>{"use strict";n.d(t,{b:()=>o});var a=n(318),r=n(2145),s=n(8354);const o=(0,n(8640).op)({rsqrt_:function(e){const t={x:(0,s._1)(e,"x","rsqrt","float32")};return a.BV.runKernel(r.bV0,t)}})},7067:(e,t,n)=>{"use strict";n.d(t,{i:()=>s});var a=n(115),r=n(7960);function s(e,t){if(((0,a.isTypedArray)(e)&&"string"!==t||Array.isArray(e))&&"complex64"!==t)throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if("string"===t&&(0,a.isTypedArray)(e)&&!(e instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return(0,r.H)(e,[],[],t)}},8604:(e,t,n)=>{"use strict";n.r(t),n.d(t,{calculateShapes:()=>o,validateInput:()=>s,validateUpdateShape:()=>r});var a=n(6147);function r(e,t,n){const a=t.rank>1?t.shape[t.rank-1]:1,r=t.rank>1?t.rank-1:1,s="Must have updates.shape = indices.shape[:batchDim] + "+"shape[sliceDim:], got updates.shape: ".concat(n.shape)+", indices.shape: ".concat(t.shape,", shape: ").concat(e)+", sliceDim: ".concat(a,", and batchDim: ").concat(r,".");if(n.rank<r)throw new Error(s+" update.rank < ".concat(r,". "));if(e.length<a+(n.rank-r))throw new Error(s+" Output shape length < ".concat(a+(n.rank-r)));if(n.rank!==r+e.length-a)throw new Error(s+" update.rank != ".concat(r+e.length-a));for(let o=0;o<r;++o)if(n.shape[o]!==t.shape[o])throw new Error(s+" updates.shape[".concat(o,"] (").concat(n.shape[o],") != indices.shape[").concat(o,"] (").concat(t.shape[o],")."));for(let o=0;o<n.rank-r;++o)if(n.shape[o+r]!==e[o+a])throw new Error(s+" updates.shape[".concat(o+r,"] (").concat(n.shape[o+r],") != shape[").concat(o+r,"] (").concat(e[o+r],")"))}function s(e,t,n){if(t.rank<1)throw new Error("tf.scatterND() expects the indices to be rank 1 or higher,"+" but the rank was ".concat(t.rank,"."));if(e.rank<1)throw new Error("tf.scatterND() expects the updates to be rank 1 or higher,"+" but the rank was ".concat(e.rank,"."));if("int32"!==t.dtype)throw new Error("The dtype of 'indices' should be int32, but got dtype: ".concat(t.dtype));if(n.length<1)throw new Error("Output rank must be greater or equal to 1, but got shape: ".concat(n));if(0===n.length){if(0===t.size)throw new Error("Indices specified for empty output. indices shape: ".concat(t.shape));if(0===e.size)throw new Error("Updates specified for empty output. updates shape: ".concat(e.shape))}r(n,t,e)}function o(e,t,n){const r=t.shape.length,s=r>1?t.shape[r-1]:1,o=n.length;let i=1;for(let a=s;a<o;++a)i*=n[a];const c=s<1?1:s;return{sliceRank:s,numUpdates:(0,a.NA)(t.shape)/c,sliceSize:i,strides:[...(0,a.e3)(n.slice(0,s)),1],outputSize:(0,a.NA)(n)}}},413:(e,t,n)=>{"use strict";n.d(t,{U:()=>o});var a=n(318),r=n(2145),s=n(8354);const o=(0,n(8640).op)({selu_:function(e){const t={x:(0,s._1)(e,"x","selu")};return a.BV.runKernel(r.oFR,t)}})},349:(e,t,n)=>{"use strict";n.d(t,{$:()=>r,y:()=>a});const a=1.7580993408473768,r=1.0507009873554805},119:(e,t,n)=>{"use strict";n.d(t,{U:()=>l});var a=n(8354),r=n(6147),s=n(3457),o=n(1147),i=n(8640),c=n(5561);const l=(0,i.op)({separableConv2d_:function(e,t,n,i,l){let u=arguments.length>5&&void 0!==arguments[5]?arguments[5]:[1,1],d=arguments.length>6&&void 0!==arguments[6]?arguments[6]:"NHWC";const h=(0,a._1)(e,"x","separableConv2d"),p=(0,a._1)(t,"depthwiseFilter","separableConv2d"),f=(0,a._1)(n,"pointwiseFilter","separableConv2d");let m=h,g=!1;if(3===h.rank&&(g=!0,m=(0,c.X)(h,[1,h.shape[0],h.shape[1],h.shape[2]])),"NCHW"===d)throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");r.hu(4===m.rank,(()=>"Error in separableConv2d: input must be rank 4, but got "+"rank ".concat(m.rank,"."))),r.hu(4===p.rank,(()=>"Error in separableConv2d: depthwise filter must be rank 4, but "+"got rank ".concat(p.rank,"."))),r.hu(4===f.rank,(()=>"Error in separableConv2d: pointwise filter must be rank 4, but "+"got rank ".concat(p.rank,"."))),r.hu(1===f.shape[0],(()=>"Error in separableConv2d: the first dimension of pointwise filter "+" must be 1, but got ".concat(f.shape[0],"."))),r.hu(1===f.shape[1],(()=>"Error in separableConv2d: the second dimension of pointwise "+"filter must be 1, but got ".concat(f.shape[1],".")));const y=p.shape[2],b=p.shape[3];r.hu(f.shape[2]===y*b,(()=>"Error in separableConv2d: the third dimension of pointwise filter "+"must be ".concat(y*b,", ")+"but got ".concat(f.shape[2],".")));const v=(0,o.B)(m,p,i,l,d,u),x=1,w=(0,s.T)(v,f,x,"valid",d);return g?(0,c.X)(w,[w.shape[1],w.shape[2],w.shape[3]]):w}})},7643:(e,t,n)=>{"use strict";n.d(t,{X:()=>o});var a=n(318),r=n(2145),s=n(8354);const o=(0,n(8640).op)({sigmoid_:function(e){const t={x:(0,s._1)(e,"x","sigmoid","float32")};return a.BV.runKernel(r.a5O,t)}})},2070:(e,t,n)=>{"use strict";n.d(t,{X:()=>o});var a=n(318),r=n(2145),s=n(8354);const o=(0,n(8640).op)({sign_:function(e){const t={x:(0,s._1)(e,"x","sign")};return a.BV.runKernel(r.i5y,t)}})},7254:(e,t,n)=>{"use strict";n.d(t,{O:()=>o});var a=n(318),r=n(2145),s=n(8354);const o=(0,n(8640).op)({sin_:function(e){const t={x:(0,s._1)(e,"x","sin","float32")};return a.BV.runKernel(r.RQH,t)}})},7657:(e,t,n)=>{"use strict";n.d(t,{R:()=>o});var a=n(318),r=n(2145),s=n(8354);const o=(0,n(8640).op)({sinh_:function(e){const t={x:(0,s._1)(e,"x","sinh")};return a.BV.runKernel(r.wYB,t)}})},9238:(e,t,n)=>{"use strict";n.d(t,{t:()=>o});var a=n(318),r=n(2145),s=n(8354);const o=(0,n(8640).op)({slice_:function(e,t,n){const o=(0,s._1)(e,"x","slice","string_or_numeric");if(0===o.rank)throw new Error("Slicing scalar is not possible");const i={x:o},c={begin:t,size:n};return a.BV.runKernel(r.p2w,i,c)}})},2875:(e,t,n)=>{"use strict";n.r(t),n.d(t,{assertParamsValid:()=>r,computeFlatOffset:()=>y,computeOutShape:()=>o,getNormalizedAxes:()=>u,isSliceContinous:()=>g,maskToAxes:()=>s,parseSliceParams:()=>b,sliceInfo:()=>v,startForAxis:()=>f,startIndicesWithElidedDims:()=>d,stopForAxis:()=>m,stopIndicesWithElidedDims:()=>h,stridesForAxis:()=>p,stridesWithElidedDims:()=>i});var a=n(6147);function r(e,t,n){const r=e.shape.length;a.hu(r===t.length,(()=>"Error in slice".concat(r,"D: Length of begin ").concat(t," must ")+"match the rank of the array (".concat(r,")."))),a.hu(r===n.length,(()=>"Error in slice".concat(r,"D: Length of size ").concat(n," must ")+"match the rank of the array (".concat(r,").")));for(let s=0;s<r;++s)a.hu(t[s]+n[s]<=e.shape[s],(()=>"Error in slice".concat(r,"D: begin[").concat(s,"] + size[").concat(s,"] ")+"(".concat(t[s]+n[s],") would overflow input.shape[").concat(s,"] (").concat(e.shape[s],")")))}function s(e){const t=[];let n=0;for(;e>0;)1&e&&t.push(n),e/=2,n++;return t}function o(e,t,n){const a=[];for(let r=0;r<e.length;r++)a[r]=Math.ceil((t[r]-e[r])/n[r]);return a}function i(e,t,n,a){const r=[...e];for(let s=r.length;s<a.length;s++)r.push(1);for(let s=0;s<n;s++)0===s?r[t]=1:(r.splice(t,0,1),r.pop());return r}function c(e,t,n){return n<=e?n:n-(t-1)}function l(e,t){const n=[];for(let a=0;a<e;a++)n.push(t+a);return n}function u(e,t,n,a,r,s,o,c,l){const u=e.length;let g=new Array(u),y=new Array(u),b=new Array(u);if(t.length&&n>0){const l=t[0],u=n+1;g=d(o,l,u,a,e),y=h(c,l,u,r,e),b=i(s,l,u,e)}else for(let i=0;i<u;i++)g[i]=f(o,a,s,e,i,l),y[i]=m(c,r,s,e,i,l),b[i]=p(s,i,l);return{begin:g,end:y,strides:b}}function d(e,t,n,a,r){const s=[...r],o=l(n,t);for(let i=0;i<s.length;i++)if(o.indexOf(i)>-1)s[i]=0;else{const r=c(t,n,i);let o=a[r];e&1<<r&&(o=0),s[i]=o}return s}function h(e,t,n,r,s){const o=[...s],i=l(n,t);for(let a=0;a<o.length;a++)if(i.indexOf(a)>-1)o[a]=Number.MAX_SAFE_INTEGER;else{const s=c(t,n,a);let i=r[s];e&1<<s&&(i=Number.MAX_SAFE_INTEGER),o[a]=i}for(let c=0;c<o.length;c++){const e=s[c];o[c]<0&&(o[c]+=e),o[c]=a.uZ(0,o[c],s[c])}return o}function p(e,t,n){let a=e[t];return(n&1<<t||null==a)&&(a=1),a}function f(e,t,n,r,s,o){let i=t[s];const c=n[s]||1;(e&1<<s||o&1<<s||null==i)&&(i=c>0?Number.MIN_SAFE_INTEGER:Number.MAX_SAFE_INTEGER);const l=r[s];return i<0&&(i+=l),i=a.uZ(0,i,l-1),i}function m(e,t,n,r,s,o){let i=t[s];const c=n[s]||1;(e&1<<s||o&1<<s||null==i)&&(i=c>0?Number.MAX_SAFE_INTEGER:Number.MIN_SAFE_INTEGER);const l=r[s];return i<0&&(i+=l),i=c>0?a.uZ(0,i,l):a.uZ(-1,i,l-1),i}function g(e,t,n){let a=n.length;for(let r=0;r<n.length;r++)if(n[r]>1){a=r;break}for(let r=a+1;r<n.length;r++)if(t[r]>0||n[r]!==e[r])return!1;return!0}function y(e,t){let n=e.length>0?e[e.length-1]:1;for(let a=0;a<e.length-1;a++)n+=e[a]*t[a];return n}function b(e,t,n){let r;const s=e.shape.length;let o;return r="number"===typeof t?[t,...new Array(s-1).fill(0)]:t.length<s?t.concat(new Array(s-t.length).fill(0)):t.slice(),r.forEach((e=>{a.hu(-1!==e,(()=>"slice() does not support negative begin indexing."))})),o=null==n?new Array(s).fill(-1):"number"===typeof n?[n,...new Array(s-1).fill(-1)]:n.length<s?n.concat(new Array(s-n.length).fill(-1)):n,o=o.map(((t,n)=>t>=0?t:(a.hu(-1===t,(()=>"Negative size values should be exactly -1 but got "+"".concat(t," for the slice() size at index ").concat(n,"."))),e.shape[n]-r[n]))),[r,o]}function v(e,t,n,a,r,s,o,i,c){let l;if(null==a?(l=new Array(t.length),l.fill(1)):l=a,null!=o&&0!==(o&o-1))throw new Error("Multiple ellipses in slice is not allowed.");let u=!1;const d={dims:l.length,numAddAxisAfterEllipsis:0,begin:t.slice(),end:n.slice(),strides:l.slice(),beginMask:r,endMask:s,ellipsisMask:o,newAxisMask:i,shrinkAxisMask:c};for(let b=0;b<d.dims;b++)u&&0!==(1<<b&i)&&d.numAddAxisAfterEllipsis++,1<<b&o&&(u=!0);u||(d.ellipsisMask|=1<<d.dims,d.dims++);const h={dims:e.length,beginMask:0,endMask:0,beginValid:!1,endValid:!1};!function(e,t){t.beginMask=0,t.endMask=0,t.shrinkAxisMask=0;let n=0;t.beginValid=null!=e.begin,t.endValid=null!=e.end,t.begin=new Array(t.dims),t.end=new Array(t.dims),t.strides=new Array(t.dims),t.finalShapeGatherIndices=[],t.finalShapeGatherIndicesSparse=[],t.inputShapeGatherIndicesSparse=new Array(t.dims);for(let a=0;a<e.dims;a++)if(1<<a&e.ellipsisMask){const r=Math.min(t.dims-(e.dims-a)+1+e.numAddAxisAfterEllipsis,t.dims);for(;n<r;n++)t.begin[n]=0,t.end[n]=0,t.strides[n]=1,t.beginMask|=1<<n,t.endMask|=1<<n,t.finalShapeGatherIndices.push(n),t.finalShapeGatherIndicesSparse.push(-1),t.inputShapeGatherIndicesSparse[n]=a}else if(1<<a&e.newAxisMask)t.finalShapeGatherIndices.push(-2),t.finalShapeGatherIndicesSparse.push(-1);else{if(n===t.begin.length)throw Error("Index out of range using input dim ".concat(n,"; input ")+"has only ".concat(t.dims," dims, ").concat(t.begin.length,"."));null!=e.begin&&(t.begin[n]=e.begin[a]),null!=e.end&&(t.end[n]=e.end[a]),t.strides[n]=e.strides[a],e.beginMask&1<<a&&(t.beginMask|=1<<n),e.endMask&1<<a&&(t.endMask|=1<<n),e.shrinkAxisMask&1<<a?(t.finalShapeGatherIndices.push(-1),t.finalShapeGatherIndicesSparse.push(-1),t.shrinkAxisMask|=1<<n):(t.finalShapeGatherIndices.push(n),t.finalShapeGatherIndicesSparse.push(a)),t.inputShapeGatherIndicesSparse[n]=a,n++}}(d,h);let p=!0,f=!0,m=!0;const g=[],y=[];for(let b=0;b<e.length;++b){if(0===h.strides[b])throw Error("strides[".concat(b,"] must be non-zero"));const t=!!(h.shrinkAxisMask&1<<b),n=e[b];if(-1===n){g.push(t?1:-1);continue}const a=[h.beginMask&1<<b,h.endMask&1<<b],r=[h.strides[b]>0?0:-1,h.strides[b]>0?n:n-1];if(t&&h.strides[b]<=0)throw Error("only stride 1 allowed on non-range indexing.");m=m&&1===h.strides[b];const s=!!(h.beginMask&1<<b&&h.endMask&1<<b);if(h.beginValid&&h.endValid){if(t){const e=h.begin[b]<0?n+h.begin[b]:h.begin[b];if(h.begin[b]=e,h.end[b]=h.begin[b]+1,e<0||e>=n)throw Error("slice index ".concat(h.begin[b]," of dimension ").concat(b," out of bounds."))}else h.begin[b]=x(h.begin[b],0,h.strides[b],n,a,r),h.end[b]=x(h.end[b],1,h.strides[b],n,a,r);const e=1===h.strides[b]&&0===h.begin[b]&&h.end[b]===n;p=p&&e,f=f&&(0===b&&1===h.strides[b]||e)}else p=p&&1===h.strides[b]&&s,f=f&&(0===b&&1===h.strides[b]||s);let o,i=!1;if(h.beginValid&&h.endValid?(o=h.end[b]-h.begin[b],i=!0):t?(o=1,i=!0):s&&n>=0&&(o=h.strides[b]<0?-n:n,i=!0),i){let e;e=0===o||o<0!==h.strides[b]<0?0:Math.trunc(o/h.strides[b])+(o%h.strides[b]!==0?1:0),g.push(e)}else g.push(-1)}for(let b=0;b<h.finalShapeGatherIndices.length;++b){const e=h.finalShapeGatherIndices[b];e>=0?y.push(g[e]):-2===e&&y.push(1)}return{finalShapeSparse:y.filter(((e,t)=>-2!==h.finalShapeGatherIndices[t])),finalShape:y,isIdentity:p,sliceDim0:f,isSimpleSlice:m,begin:h.begin,end:h.end,strides:h.strides}}function x(e,t,n,a,r,s){if(r[t])return n>0?s[t]:s[t+1&1];{const t=e<0?a+e:e;return t<s[0]?s[0]:t>s[1]?s[1]:t}}},4910:(e,t,n)=>{"use strict";n.d(t,{X:()=>o});var a=n(318),r=n(2145),s=n(8354);const o=(0,n(8640).op)({softmax_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:-1;const n=(0,s._1)(e,"logits","softmax","float32");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error("Softmax along a non-last dimension is not yet supported. "+"Logits was rank ".concat(n.rank," and dim was ").concat(t));const o={logits:n},i={dim:t};return a.BV.runKernel(r.Gcp,o,i)}})},4626:(e,t,n)=>{"use strict";n.d(t,{W:()=>o});var a=n(318),r=n(2145),s=n(8354);const o=(0,n(8640).op)({softplus_:function(e){const t={x:(0,s._1)(e,"x","softplus")};return a.BV.runKernel(r.MRv,t)}})},5696:(e,t,n)=>{"use strict";n.d(t,{f:()=>i});var a=n(318),r=n(2145),s=n(8354),o=n(6147);const i=(0,n(8640).op)({spaceToBatchND_:function(e,t,n){const i=(0,s._1)(e,"x","spaceToBatchND");o.hu(i.rank>=1+t.length,(()=>"input rank ".concat(i.rank," should be > than [blockShape] ").concat(t.length))),o.hu(n.length===t.length,(()=>"paddings.shape[0] ".concat(n.length," must be equal to [blockShape] ").concat(t.length))),o.hu(i.shape.reduce(((e,a,r)=>r>0&&r<=t.length?e&&(a+n[r-1][0]+n[r-1][1])%t[r-1]===0:e),!0),(()=>"input spatial dimensions ".concat(i.shape.slice(1)," with paddings ").concat(n.toString()," must be divisible by blockShapes ").concat(t.toString())));const c={x:i},l={blockShape:t,paddings:n};return a.BV.runKernel(r.TQc,c,l)}})},7635:(e,t,n)=>{"use strict";n.d(t,{k:()=>o});var a=n(318),r=n(2145),s=n(6147);const o=(0,n(8640).op)({fft_:function(e){(0,s.hu)("complex64"===e.dtype,(()=>"The dtype for tf.spectral.fft() must be complex64 "+"but got ".concat(e.dtype,".")));const t={input:e};return a.BV.runKernel(r.vwp,t)}})},530:(e,t,n)=>{"use strict";n.d(t,{S:()=>o});var a=n(318),r=n(2145),s=n(6147);const o=(0,n(8640).op)({ifft_:function(e){(0,s.hu)("complex64"===e.dtype,(()=>"The dtype for tf.spectral.ifft() must be complex64 "+"but got ".concat(e.dtype,".")));const t={input:e};return a.BV.runKernel(r.Qg5,t)}})},774:(e,t,n)=>{"use strict";n.d(t,{w:()=>f});var a=n(9253),r=n(4836),s=n(6996),o=n(651),i=n(8640),c=n(6972),l=n(5561),u=n(4933),d=n(7067),h=n(9238),p=n(530);const f=(0,i.op)({irfft_:function(e){const t=e.shape[e.shape.length-1],n=e.size/t;let i;if(t<=2){const a=(0,l.X)(e,[n,t]);i=(0,p.S)(a)}else{const f=[n,2*(t-1)],m=(0,l.X)((0,c.k)(e),[n,t]),g=(0,l.X)((0,s.a)(e),[n,t]),y=(0,u.G)((0,h.t)(m,[0,1],[n,t-2]),1),b=(0,o.d)((0,u.G)((0,h.t)(g,[0,1],[n,t-2]),1),(0,d.i)(-1)),v=(0,r.z)([m,y],1),x=(0,r.z)([g,b],1),w=(0,l.X)((0,a.P)(v,x),[f[0],f[1]]);i=(0,p.S)(w)}if(i=(0,c.k)(i),3===e.rank&&0!==e.shape[0]){const t=i,n=e.shape[0];i=(0,l.X)(i,[n,i.shape[0]/n,i.shape[1]]),t.dispose()}return i}})},4617:(e,t,n)=>{"use strict";n.d(t,{Q:()=>m});var a=n(6147),r=n(9253),s=n(4836),o=n(6996),i=n(8640),c=n(6972),l=n(5561),u=n(9238),d=n(2588),h=n(7742),p=n(7293),f=n(7635);const m=(0,i.op)({rfft_:function(e,t){(0,a.hu)("float32"===e.dtype,(()=>"The dtype for rfft() must be real value but got ".concat(e.dtype)));let n=e.shape[e.shape.length-1];const i=e.size/n;let m;if(null!=t&&t<n){const a=e.shape.map((e=>0)),r=e.shape.map((e=>e));r[e.shape.length-1]=t,m=(0,u.t)(e,a,r),n=t}else if(null!=t&&t>n){const a=e.shape.map((e=>e));a[e.shape.length-1]=t-n,m=(0,s.z)([e,(0,h.l)(a)],e.shape.length-1),n=t}else m=e;const g=(0,p.P)(m),y=(0,l.X)((0,r.P)(m,g),[i,n]),b=(0,f.k)(y),v=Math.floor(n/2)+1,x=(0,c.k)(b),w=(0,o.a)(b),k=(0,d.V)(x,[v,n-v],x.shape.length-1),S=(0,d.V)(w,[v,n-v],w.shape.length-1),N=m.shape.slice();return N[m.shape.length-1]=v,(0,l.X)((0,r.P)(k[0],S[0]),N)}})},2588:(e,t,n)=>{"use strict";n.d(t,{V:()=>o});var a=n(318),r=n(2145),s=n(8354);const o=(0,n(8640).op)({split_:function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;const o=(0,s._1)(e,"x","split"),i={x:o},c={numOrSizeSplits:t,axis:n};return a.BV.runKernel(r.L8s,i,c)}})},6902:(e,t,n)=>{"use strict";n.d(t,{_:()=>o});var a=n(318),r=n(2145),s=n(8354);const o=(0,n(8640).op)({sqrt_:function(e){const t={x:(0,s._1)(e,"x","sqrt","float32")};return a.BV.runKernel(r.FKq,t)}})},7391:(e,t,n)=>{"use strict";n.d(t,{h:()=>s});var a=n(318),r=n(8354);const s=(0,n(8640).op)({square_:function(e){const t=(0,r._1)(e,"x","square");return a.BV.runKernel("Square",{x:t},{})}})},7993:(e,t,n)=>{"use strict";n.d(t,{$:()=>c});var a=n(318),r=n(2145),s=n(9064),o=n(8354),i=n(5774);const c=(0,n(8640).op)({squaredDifference_:function(e,t){let n=(0,o._1)(e,"a","squaredDifference"),c=(0,o._1)(t,"b","squaredDifference");[n,c]=(0,s.makeTypesMatch)(n,c),(0,i.assertAndGetBroadcastShape)(n.shape,c.shape);const l={a:n,b:c};return a.BV.runKernel(r._tC,l,{})}})},3931:(e,t,n)=>{"use strict";n.d(t,{L:()=>i});var a=n(8354),r=n(6147),s=n(8640),o=n(5561);const i=(0,s.op)({squeeze_:function(e,t){const n=(0,a._1)(e,"x","squeeze","string_or_numeric");return(0,o.X)(n,(0,r.bp)(n.shape,t).newShape)}})},8306:(e,t,n)=>{"use strict";n.d(t,{k:()=>i});var a=n(318),r=n(2145),s=n(8354),o=n(6147);const i=(0,n(8640).op)({stack_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;const n=(0,s.sI)(e,"tensors","stack","string_or_numeric");o.hu(n.length>=1,(()=>"Pass at least one tensor to tf.stack")),n.length>0&&o.hu(t<=n[0].rank,(()=>"Axis must be <= rank of the tensor"));const i=n,c={axis:t};return a.BV.runKernel(r.QiL,i,c)}})},4031:(e,t,n)=>{"use strict";n.d(t,{N:()=>o});var a=n(318),r=n(2145),s=n(8354);const o=(0,n(8640).op)({step_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;const n=(0,s._1)(e,"x","step"),o={x:n},i={alpha:t};return a.BV.runKernel(r.h8e,o,i)}})},9017:(e,t,n)=>{"use strict";n.d(t,{N:()=>o});var a=n(318),r=n(2145),s=n(8354);const o=(0,n(8640).op)({stridedSlice_:function(e,t,n,o){let i=arguments.length>4&&void 0!==arguments[4]?arguments[4]:0,c=arguments.length>5&&void 0!==arguments[5]?arguments[5]:0,l=arguments.length>6&&void 0!==arguments[6]?arguments[6]:0,u=arguments.length>7&&void 0!==arguments[7]?arguments[7]:0,d=arguments.length>8&&void 0!==arguments[8]?arguments[8]:0;const h=(0,s._1)(e,"x","stridedSlice","string_or_numeric"),p={x:h},f={begin:t,end:n,strides:o,beginMask:i,endMask:c,ellipsisMask:l,newAxisMask:u,shrinkAxisMask:d};return a.BV.runKernel(r.jQk,p,f)}})},4774:(e,t,n)=>{"use strict";n.d(t,{l:()=>i});var a=n(318),r=n(2145),s=n(9064),o=n(8354);const i=(0,n(8640).op)({sub_:function(e,t){let n=(0,o._1)(e,"a","sub"),i=(0,o._1)(t,"b","sub");[n,i]=(0,s.makeTypesMatch)(n,i);const c={a:n,b:i};return a.BV.runKernel(r.Tr8,c)}})},227:(e,t,n)=>{"use strict";n.d(t,{S:()=>i});var a=n(318),r=n(2145),s=n(8354),o=n(9118);const i=(0,n(8640).op)({sum_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],i=(0,s._1)(e,"x","sum");"bool"===i.dtype&&(i=(0,o.p)(i,"int32"));const c={x:i},l={axis:t,keepDims:n};return a.BV.runKernel(r.GBy,c,l)}})},6999:(e,t,n)=>{"use strict";n.d(t,{O:()=>o});var a=n(318),r=n(2145),s=n(8354);const o=(0,n(8640).op)({tan_:function(e){const t={x:(0,s._1)(e,"x","tan","float32")};return a.BV.runKernel(r.sEM,t)}})},1744:(e,t,n)=>{"use strict";n.d(t,{A:()=>o});var a=n(318),r=n(2145),s=n(8354);const o=(0,n(8640).op)({tanh_:function(e){const t={x:(0,s._1)(e,"x","tanh","float32")};return a.BV.runKernel(r.MIZ,t)}})},2442:(e,t,n)=>{"use strict";n.d(t,{X:()=>s});var a=n(8354),r=n(7960);function s(e,t,n){const s=(0,a.C)(e,n);return(0,r.H)(e,t,s,n)}},3123:(e,t,n)=>{"use strict";n.d(t,{w:()=>o});var a=n(8354),r=n(6147),s=n(7960);function o(e,t,n){if((0,r.Cq)(e),null!=t&&3!==t.length)throw new Error("tensor3d() requires shape to have three numbers");const o=(0,a.C)(e,n);if(3!==o.length&&1!==o.length)throw new Error("tensor3d() requires values to be number[][][] or flat/TypedArray");if(1===o.length&&null==t)throw new Error("tensor3d() requires shape to be provided when `values` are a flat array");return(0,s.H)(e,t,o,n)}},7960:(e,t,n)=>{"use strict";n.d(t,{H:()=>i});var a=n(318),r=n(3525),s=n(6147),o=n(115);function i(e,t,n,i){if(null==i)i=(0,s.D2)(e);else if("complex64"===i)throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if((0,r.$F)(e)||(0,r.Oq)(e)){if("float32"!==i&&"int32"!==i)throw new Error("Creating tensor from GPU data only supports "+"'float32'|'int32' dtype, while the dtype is ".concat(i,"."));return a.BV.backend.createTensorFromGPUData(e,t||n,i)}if(!(0,o.isTypedArray)(e)&&!Array.isArray(e)&&"number"!==typeof e&&"boolean"!==typeof e&&"string"!==typeof e)throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(null!=t){(0,s.Mu)(t);const e=(0,s.NA)(t),a=(0,s.NA)(n);(0,s.hu)(e===a,(()=>"Based on the provided shape, [".concat(t,"], the tensor should have ")+"".concat(e," values but has ").concat(a)));for(let r=0;r<n.length;++r){const e=n[r],a=r!==n.length-1||e!==(0,s.NA)(t.slice(r));(0,s.hu)(n[r]===t[r]||!a,(()=>"Error creating a new Tensor. Inferred shape "+"(".concat(n,") does not match the provided ")+"shape (".concat(t,"). ")))}}return(0,o.isTypedArray)(e)||Array.isArray(e)||(e=[e]),t=t||n,e="string"!==i?(0,o.toTypedArray)(e,i):(0,o.flatten)(e,[],!0),a.BV.makeTensor(e,t,i)}},2343:(e,t,n)=>{"use strict";n.d(t,{G:()=>i});var a=n(318),r=n(2145),s=n(8354),o=n(6147);const i=(0,n(8640).op)({tile_:function(e,t){const n=(0,s._1)(e,"x","tile","string_or_numeric");o.hu(n.rank===t.length,(()=>"Error in transpose: rank of input ".concat(n.rank," ")+"must match length of reps ".concat(t,".")));const i={x:n},c={reps:t};return a.BV.runKernel(r.n9L,i,c)}})},9085:(e,t,n)=>{"use strict";n.d(t,{h:()=>o});var a=n(318),r=n(2145),s=n(8354);const o=(0,n(8640).op)({topk_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,n=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];const o=(0,s._1)(e,"x","topk");if(0===o.rank)throw new Error("topk() expects the input to be of rank 1 or higher");const i=o.shape[o.shape.length-1];if(t<0)throw new Error("'k' passed to topk() must be >= 0 but got ".concat(t));if(t>i)throw new Error("'k' passed to topk() must be <= the last dimension (".concat(i,") ")+"but got ".concat(t));const c={x:o},l={k:t,sorted:n},[u,d]=a.BV.runKernel(r.cWu,c,l);return{values:u,indices:d}}})},1240:(e,t,n)=>{"use strict";n.d(t,{p:()=>p});var a=n(318),r=n(5875),s=n(2145),o=n(8354),i=n(6147),c=n(9253),l=n(6996),u=n(4362),d=n(8640),h=n(6972);const p=(0,d.op)({transpose_:function(e,t,n){const d=(0,o._1)(e,"x","transpose");if(null==t&&(t=d.shape.map(((e,t)=>t)).reverse()),i.hu(d.rank===t.length,(()=>"Error in transpose: rank of input ".concat(d.rank," ")+"must match length of perm ".concat(t,"."))),t.forEach((e=>{i.hu(e>=0&&e<d.rank,(()=>"All entries in 'perm' must be between 0 and ".concat(d.rank-1)+" but got ".concat(t)))})),d.rank<=1)return d.clone();const p={x:d},f={perm:t};return"complex64"===d.dtype?(0,r.lu)((()=>{let e=(0,h.k)(d),t=(0,l.a)(d);return e=a.BV.runKernel(s.G3Y,{x:e},f),t=a.BV.runKernel(s.G3Y,{x:t},f),n&&(t=(0,u.W)(t)),(0,c.P)(e,t)})):a.BV.runKernel(s.G3Y,p,f)}})},4860:(e,t,n)=>{"use strict";n.d(t,{T:()=>i});var a=n(318),r=n(2145),s=n(8354),o=n(6147);const i=(0,n(8640).op)({unique_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;const n=(0,s._1)(e,"x","unique","string_or_numeric");(0,o.hu)(n.rank>0,(()=>"The input tensor must be at least 1D"));const i={x:n},c={axis:t},[l,u]=a.BV.runKernel(r.kpP,i,c);return{values:l,indices:u}}})},6918:(e,t,n)=>{"use strict";n.d(t,{p:()=>i});var a=n(318),r=n(2145),s=n(8354),o=n(6147);const i=(0,n(8640).op)({unsortedSegmentSum_:function(e,t,n){const i=(0,s._1)(e,"x","unsortedSegmentSum"),c=(0,s._1)(t,"segmentIds","unsortedSegmentSum","int32");(0,o.hu)((0,o.GN)(n),(()=>"numSegments must be of dtype int"));const l={x:i,segmentIds:c},u={numSegments:n};return a.BV.runKernel(r.Qvg,l,u)}})},4566:(e,t,n)=>{"use strict";n.d(t,{H:()=>i});var a=n(318),r=n(2145),s=n(8354),o=n(6147);const i=(0,n(8640).op)({unstack_:function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;const n=(0,s._1)(e,"x","unstack","string_or_numeric");o.hu(t>=-n.shape.length&&t<n.shape.length,(()=>"Axis = ".concat(t," is not in [-").concat(n.shape.length,", ").concat(n.shape.length,")")));const i={value:n},c={axis:t};return a.BV.runKernel(r.ToN,i,c)}})},329:(e,t,n)=>{"use strict";n.d(t,{a:()=>c});var a=n(318),r=n(2145),s=n(8354),o=n(9742),i=n(5774);const c=(0,n(8640).op)({where_:function(e,t,n){const c=(0,s._1)(t,"a","where"),l=(0,s._1)(n,"b","where"),u=(0,s._1)(e,"condition","where","bool"),d=(0,i.assertAndGetBroadcastShape)((0,i.assertAndGetBroadcastShape)(u.shape,c.shape),l.shape),h={condition:(0,o.U)(u,d),t:(0,o.U)(c,d),e:(0,o.U)(l,d)};return a.BV.runKernel(r.PhF,h)}})},7742:(e,t,n)=>{"use strict";n.d(t,{l:()=>o});var a=n(318),r=n(6147),s=n(9253);function o(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"float32";if((0,r.Mu)(e),"complex64"===t){const t=o(e,"float32"),n=o(e,"float32");return(0,s.P)(t,n)}const n=(0,r.wT)((0,r.NA)(e),t);return a.BV.makeTensor(n,e,t)}},7293:(e,t,n)=>{"use strict";n.d(t,{P:()=>o});var a=n(318),r=n(2145),s=n(8354);const o=(0,n(8640).op)({zerosLike_:function(e){const t={x:(0,s._1)(e,"x","zerosLike")};return a.BV.runKernel(r.RuY,t)}})},1539:(e,t,n)=>{"use strict";function a(e){return e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array||e instanceof Uint8ClampedArray}n.d(t,{j:()=>a})},4376:(e,t,n)=>{"use strict";n.d(t,{es:()=>b,YD:()=>d,_w:()=>x,t3:()=>v,FZ:()=>y,Vp:()=>g,Vi:()=>m});var a=n(6581),r=n(6147);function s(e,t,n,a){const s=(0,r.e3)(t),i=function(e,t,n,a){const s=(0,r.NA)(t),i=a[a.length-1],c=new Array(i).fill(0),u=t.length,d="complex64"===n?l(e):e;if(u>1)for(let r=0;r<s/i;r++){const e=r*i;for(let t=0;t<i;t++)c[t]=Math.max(c[t],o(d[e+t],0,n).length)}return c}(e,t,n,s),u=t.length,d=c(e,t,n,s,i),h=["Tensor"];return a&&(h.push("  dtype: ".concat(n)),h.push("  rank: ".concat(u)),h.push("  shape: [".concat(t,"]")),h.push("  values:")),h.push(d.map((e=>"    "+e)).join("\n")),h.join("\n")}function o(e,t,n){let a;return a=Array.isArray(e)?"".concat(parseFloat(e[0].toFixed(7))," + ")+"".concat(parseFloat(e[1].toFixed(7)),"j"):(0,r.HD)(e)?"'".concat(e,"'"):"bool"===n?i(e):parseFloat(e.toFixed(7)).toString(),(0,r.oj)(a,t)}function i(e){return 0===e?"false":"true"}function c(e,t,n,a,r){let s=!(arguments.length>5&&void 0!==arguments[5])||arguments[5];const u="complex64"===n?2:1,d=t[0],h=t.length;if(0===h){if("complex64"===n){return[o(l(e)[0],0,n)]}return"bool"===n?[i(e[0])]:[e[0].toString()]}if(1===h){if(d>20){const t=3*u;let a=Array.from(e.slice(0,t)),s=Array.from(e.slice((d-3)*u,d*u));return"complex64"===n&&(a=l(a),s=l(s)),["["+a.map(((e,t)=>o(e,r[t],n))).join(", ")+", ..., "+s.map(((e,t)=>o(e,r[d-3+t],n))).join(", ")+"]"]}return["["+("complex64"===n?l(e):Array.from(e)).map(((e,t)=>o(e,r[t],n))).join(", ")+"]"]}const p=t.slice(1),f=a.slice(1),m=a[0]*u,g=[];if(d>20){for(let t=0;t<3;t++){const a=t*m,s=a+m;g.push(...c(e.slice(a,s),p,n,f,r,!1))}g.push("...");for(let t=d-3;t<d;t++){const a=t*m,s=a+m;g.push(...c(e.slice(a,s),p,n,f,r,t===d-1))}}else for(let o=0;o<d;o++){const t=o*m,a=t+m;g.push(...c(e.slice(t,a),p,n,f,r,o===d-1))}const y=2===h?",":"";g[0]="["+(d>0?g[0]+y:"");for(let o=1;o<g.length-1;o++)g[o]=" "+g[o]+y;let b=",\n";for(let o=2;o<h;o++)b+="\n";return g[g.length-1]=" "+g[g.length-1]+"]"+(s?"":b),g}function l(e){const t=[];for(let n=0;n<e.length;n+=2)t.push([e[n],e[n+1]]);return t}var u=n(115);class d{constructor(e,t,n){if(this.dtype=t,this.shape=e.slice(),this.size=r.NA(e),null!=n){const e=n.length;r.hu(e===this.size,(()=>"Length of values '".concat(e,"' does not match the size ")+"inferred by the shape '".concat(this.size,"'.")))}if("complex64"===t)throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=n||r.rQ(t,this.size),this.strides=(0,r.e3)(e)}set(e){for(var t=arguments.length,n=new Array(t>1?t-1:0),a=1;a<t;a++)n[a-1]=arguments[a];0===n.length&&(n=[0]),r.hu(n.length===this.rank,(()=>"The number of provided coordinates (".concat(n.length,") must ")+"match the rank (".concat(this.rank,")")));const s=this.locToIndex(n);this.values[s]=e}get(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];0===t.length&&(t=[0]);let a=0;for(const s of t){if(s<0||s>=this.shape[a]){const e="Requested out of range element at ".concat(t,". ")+"  Buffer shape=".concat(this.shape);throw new Error(e)}a++}let r=t[t.length-1];for(let s=0;s<t.length-1;++s)r+=this.strides[s]*t[s];return this.values[r]}locToIndex(e){if(0===this.rank)return 0;if(1===this.rank)return e[0];let t=e[e.length-1];for(let n=0;n<e.length-1;++n)t+=this.strides[n]*e[n];return t}indexToLoc(e){if(0===this.rank)return[];if(1===this.rank)return[e];const t=new Array(this.shape.length);for(let n=0;n<t.length-1;++n)t[n]=Math.floor(e/this.strides[n]),e-=t[n]*this.strides[n];return t[t.length-1]=e,t}get rank(){return this.shape.length}toTensor(){return h().makeTensor(this.values,this.shape,this.dtype)}}let h=null,p=null,f=null;function m(e){h=e}function g(e){p=e}function y(e){f=e}class b{constructor(e,t,n,a){this.kept=!1,this.isDisposedInternal=!1,this.shape=e.slice(),this.dtype=t||"float32",this.size=r.NA(e),this.strides=(0,r.e3)(e),this.dataId=n,this.id=a,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){const e=await this.data();return p.buffer(this.shape,this.dtype,e)}bufferSync(){return p.buffer(this.shape,this.dtype,this.dataSync())}async array(){const e=await this.data();return(0,r.GX)(this.shape,e,"complex64"===this.dtype)}arraySync(){return(0,r.GX)(this.shape,this.dataSync(),"complex64"===this.dtype)}async data(){this.throwIfDisposed();const e=h().read(this.dataId);if("string"===this.dtype){const n=await e;try{return n.map((e=>u.decodeString(e)))}catch(t){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return e}dataToGPU(e){return this.throwIfDisposed(),h().readToGPU(this.dataId,e)}dataSync(){this.throwIfDisposed();const e=h().readSync(this.dataId);if("string"===this.dtype)try{return e.map((e=>u.decodeString(e)))}catch(t){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return e}async bytes(){this.throwIfDisposed();const e=await h().read(this.dataId);return"string"===this.dtype?e:new Uint8Array(e.buffer)}dispose(){this.isDisposed||(this.kerasMask&&this.kerasMask.dispose(),h().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(){let e=arguments.length>0&&void 0!==arguments[0]&&arguments[0];return p.print(this,e)}clone(){return this.throwIfDisposed(),p.clone(this)}toString(){let e=arguments.length>0&&void 0!==arguments[0]&&arguments[0];return s(this.dataSync(),this.shape,this.dtype,e)}cast(e){return this.throwIfDisposed(),p.cast(this,e)}variable(){let e=!(arguments.length>0&&void 0!==arguments[0])||arguments[0],t=arguments.length>1?arguments[1]:void 0,n=arguments.length>2?arguments[2]:void 0;return this.throwIfDisposed(),h().makeVariable(this,e,t,n)}}function v(){return(0,a.R)("Tensor",(()=>b))}Object.defineProperty(b,Symbol.hasInstance,{value:e=>!!e&&null!=e.data&&null!=e.dataSync&&null!=e.throwIfDisposed}),v();class x extends b{constructor(e,t,n,a){super(e.shape,e.dtype,e.dataId,a),this.trainable=t,this.name=n}assign(e){if(e.dtype!==this.dtype)throw new Error("dtype of the new value (".concat(e.dtype,") and ")+"previous value (".concat(this.dtype,") must match"));if(!r.cO(e.shape,this.shape))throw new Error("shape of the new value (".concat(e.shape,") and ")+"previous value (".concat(this.shape,") must match"));h().disposeTensor(this),this.dataId=e.dataId,h().incRef(this,null)}dispose(){h().disposeVariable(this),this.isDisposedInternal=!0}}Object.defineProperty(x,Symbol.hasInstance,{value:e=>e instanceof b&&null!=e.assign&&e.assign instanceof Function})},9064:(e,t,n)=>{"use strict";n.r(t),n.d(t,{assertTypesMatch:()=>i,getTensorsInContainer:()=>l,isTensorInList:()=>c,makeTypesMatch:()=>o});var a=n(4376),r=n(3525),s=n(6147);function o(e,t){if(e.dtype===t.dtype)return[e,t];const n=(0,r.x8)(e.dtype,t.dtype);return[e.cast(n),t.cast(n)]}function i(e,t){(0,s.hu)(e.dtype===t.dtype,(()=>"The dtypes of the first(".concat(e.dtype,") and")+" second(".concat(t.dtype,") input must match")))}function c(e,t){return t.some((t=>t.id===e.id))}function l(e){const t=[];return u(e,t,new Set),t}function u(e,t,n){if(null==e)return;if(e instanceof a.es)return void t.push(e);if(r=e,!Array.isArray(r)&&"object"!==typeof r)return;var r;const s=e;for(const a in s){const e=s[a];n.has(e)||(n.add(e),u(e,t,n))}}},8354:(e,t,n)=>{"use strict";n.d(t,{C:()=>l,_1:()=>h,sI:()=>p});var a=n(318),r=n(5050),s=n(4376),o=n(3525),i=n(115),c=n(6147);function l(e,t){let n=e;if((0,i.isTypedArray)(e))return"string"===t?[]:[e.length];if((0,o.Oq)(e)){const t=e.channels||"RGBA";return[e.height,e.width*t.length]}if((0,o.$F)(e))return[e.buffer.size/(null==t?4:(0,c.bT)(t))];if(!Array.isArray(e))return[];const a=[];for(;Array.isArray(n)||(0,i.isTypedArray)(n)&&"string"!==t;)a.push(n.length),n=n[0];return Array.isArray(e)&&(0,r.OB)().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&u(e,a,[]),a}function u(e,t,n){if(n=n||[],!Array.isArray(e)&&!(0,i.isTypedArray)(e))return void(0,c.hu)(0===t.length,(()=>"Element arr[".concat(n.join("]["),"] is a primitive, ")+"but should be an array/TypedArray of ".concat(t[0]," elements")));(0,c.hu)(t.length>0,(()=>"Element arr[".concat(n.join("]["),"] should be a primitive, ")+"but is an array of ".concat(e.length," elements"))),(0,c.hu)(e.length===t[0],(()=>"Element arr[".concat(n.join("]["),"] should have ").concat(t[0]," ")+"elements, but has ".concat(e.length," elements")));const a=t.slice(1);for(let r=0;r<e.length;++r)u(e[r],a,n.concat(r))}function d(e,t,n,a){if("string_or_numeric"!==e){if(null==e)throw new Error("Expected dtype cannot be null.");if("numeric"!==e&&e!==t||"numeric"===e&&"string"===t)throw new Error("Argument '".concat(n,"' passed to '").concat(a,"' must ")+"be ".concat(e," tensor, but got ").concat(t," tensor"))}}function h(e,t,n){let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"numeric";if(e instanceof(0,s.t3)())return d(r,e.dtype,t,n),e;let o=(0,c.D2)(e);if("string"!==o&&["bool","int32","float32"].indexOf(r)>=0&&(o=r),d(r,o,t,n),null==e||!(0,i.isTypedArray)(e)&&!Array.isArray(e)&&"number"!==typeof e&&"boolean"!==typeof e&&"string"!==typeof e){const a=null==e?"null":e.constructor.name;throw new Error("Argument '".concat(t,"' passed to '").concat(n,"' must be a ")+"Tensor or TensorLike, but got '".concat(a,"'"))}const u=l(e,o);(0,i.isTypedArray)(e)||Array.isArray(e)||(e=[e]);const h=!0,p="string"!==o?(0,i.toTypedArray)(e,o):(0,i.flatten)(e,[],h);return a.BV.makeTensor(p,u,o)}function p(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"numeric";if(!Array.isArray(e))throw new Error("Argument ".concat(t," passed to ").concat(n," must be a ")+"`Tensor[]` or `TensorLike[]`");const r=e;return r.map(((e,r)=>h(e,"".concat(t,"[").concat(r,"]"),n,a)))}},3525:(e,t,n)=>{"use strict";var a,r,s,o,i;n.d(t,{$F:()=>h,Oq:()=>d,x8:()=>l,yw:()=>a,z4:()=>u}),function(e){e.R0="R0",e.R1="R1",e.R2="R2",e.R3="R3",e.R4="R4",e.R5="R5",e.R6="R6"}(a||(a={})),function(e){e.float32="float32",e.int32="int32",e.bool="int32",e.complex64="complex64"}(r||(r={})),function(e){e.float32="float32",e.int32="int32",e.bool="bool",e.complex64="complex64"}(s||(s={})),function(e){e.float32="float32",e.int32="float32",e.bool="float32",e.complex64="complex64"}(o||(o={})),function(e){e.float32="complex64",e.int32="complex64",e.bool="complex64",e.complex64="complex64"}(i||(i={}));const c={float32:o,int32:r,bool:s,complex64:i};function l(e,t){if("string"===e||"string"===t){if("string"===e&&"string"===t)return"string";throw new Error("Can not upcast ".concat(e," with ").concat(t))}return c[e][t]}function u(e){return l(e,"int32")}function d(e){return null!=e&&"object"===typeof e&&"texture"in e&&e.texture instanceof WebGLTexture}function h(e){return"undefined"!==typeof GPUBuffer&&null!=e&&"object"===typeof e&&"buffer"in e&&e.buffer instanceof GPUBuffer}},115:(e,t,n)=>{"use strict";n.r(t),n.d(t,{arraysEqual:()=>s.cO,arraysEqualWithNull:()=>s.DK,assert:()=>s.hu,assertNonNegativeIntegerDimensions:()=>s.Mu,assertNonNull:()=>s.Cq,assertShapesMatch:()=>s.k5,bytesFromStringArray:()=>s.Ub,bytesPerElement:()=>s.bT,checkConversionForErrors:()=>s.D5,clamp:()=>s.uZ,computeStrides:()=>s.e3,convertBackendValuesAndArrayBuffer:()=>s.KS,createScalarValue:()=>S,createShuffledIndices:()=>s.U$,decodeString:()=>E,distSquared:()=>s.E7,encodeString:()=>C,fetch:()=>T,fingerPrint64:()=>k,flatten:()=>A,getArrayFromDType:()=>s.rQ,getTypedArrayFromDType:()=>s.WP,hasEncodingLoss:()=>s.QB,hexToLong:()=>c,indexToLoc:()=>s.NE,inferDtype:()=>s.D2,inferFromImplicitShape:()=>s.JZ,isBoolean:()=>s.jn,isFunction:()=>s.mf,isInt:()=>s.GN,isNumber:()=>s.hj,isPromise:()=>s.tI,isScalarShape:()=>s.xH,isString:()=>s.HD,isTypedArray:()=>_,isValidDtype:()=>s.LP,locToIndex:()=>s.qy,makeOnesTypedArray:()=>s.p8,makeZerosNestedTypedArray:()=>s.l6,makeZerosTypedArray:()=>s.wT,nearestDivisor:()=>s.jP,nearestLargerEven:()=>s.nY,now:()=>I,parseAxisParam:()=>s.EC,randUniform:()=>s.bj,repeatedTry:()=>s.WD,rightPad:()=>s.oj,shuffle:()=>s.TV,shuffleCombo:()=>s.d7,sizeFromShape:()=>s.NA,sizeToSquarishShape:()=>s.YP,squeezeShape:()=>s.bp,sum:()=>s.Sm,swap:()=>s.LF,tanh:()=>s.AE,toNestedArray:()=>s.GX,toTypedArray:()=>N});var a=n(5050),r=n(1539),s=n(6147),o=n(8987);const i=n.n(o)()||o;function c(e){return i.fromString(e,!0,16)}const l=c("c3a5c85c97cb3127"),u=c("b492b66fbe98f273"),d=c("9ae16a3b2f90404f");function h(e){return e.xor(e.shru(47))}function p(e,t,n){const a=e.slice(t,t+n);return i.fromBytes(Array.from(a),!0,!0)}function f(e,t){return p(e,t,8)}function m(e,t){return p(e,t,4)}function g(e,t){return 0===t?e:e.shru(t).or(e.shl(64-t))}function y(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:c("9ddfea08eb382d69"),a=e.xor(t).mul(n);a=a.xor(a.shru(47));let r=t.xor(a).mul(n);return r=r.xor(r.shru(47)),r=r.mul(n),r}function b(e,t,n,a){return function(e,t,n,a,r,s){r=r.add(e),s=g(s.add(r).add(a),21);const o=r;return r=(r=r.add(t)).add(n),s=s.add(g(r,44)),[r.add(a),s.add(o)]}(f(e,t),f(e,t+8),f(e,t+16),f(e,t+24),n,a)}function v(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:e.length;if(t>=8){const n=d.add(2*t),a=f(e,0).add(d),r=f(e,t-8);return y(g(r,37).mul(n).add(a),g(a,25).add(r).mul(n),n)}if(t>=4){const n=d.add(2*t);return y(m(e,0).shl(3).add(t),m(e,t-4),n)}if(t>0){const n=e[0]+(e[t>>1]<<8),a=t+(e[t-1]<<2);return h(d.mul(n).xor(l.mul(a))).mul(d)}return d}function x(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:e.length;const n=d.add(2*t),a=f(e,0).mul(u),r=f(e,8),s=f(e,t-8).mul(n),o=f(e,t-16).mul(d);return y(g(a.add(r),43).add(g(s,30)).add(o),a.add(g(r.add(d),18)).add(s),n)}function w(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:e.length;const n=d.add(2*t),a=f(e,0).mul(d),r=f(e,8),s=f(e,t-8).mul(n),o=f(e,t-16).mul(d),i=g(a.add(r),43).add(g(s,30)).add(o),c=y(i,a.add(g(r.add(d),18)).add(s),n),l=f(e,16).mul(n),u=f(e,24),h=i.add(f(e,t-32)).mul(n),p=c.add(f(e,t-24)).mul(n);return y(g(l.add(u),43).add(g(h,30)).add(p),l.add(g(u.add(a),18)).add(h),n)}function k(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:e.length;const n=i.fromNumber(81,!0);if(t<=32)return t<=16?v(e,t):x(e,t);if(t<=64)return w(e,t);let a=n,r=n.mul(u).add(113),s=h(r.mul(d).add(113)).mul(d),o=[i.UZERO,i.UZERO],c=[i.UZERO,i.UZERO];a=a.mul(d).add(f(e,0));let p=0;const m=64*(t-1>>6),k=m+(t-1&63)-63;do{a=g(a.add(r).add(o[0]).add(f(e,p+8)),37).mul(u),r=g(r.add(o[1]).add(f(e,p+48)),42).mul(u),a=a.xor(c[1]),r=r.add(o[0]).add(f(e,p+40)),s=g(s.add(c[0]),33).mul(u),o=b(e,p,o[1].mul(u),a.add(c[0])),c=b(e,p+32,s.add(c[1]),r.add(f(e,p+16))),[s,a]=[a,s],p+=64}while(p!==m);const S=u.add(s.and(255).shl(1));return p=k,c[0]=c[0].add(t-1&63),o[0]=o[0].add(c[0]),c[0]=c[0].add(o[0]),a=g(a.add(r).add(o[0]).add(f(e,p+8)),37).mul(S),r=g(r.add(o[1]).add(f(e,p+48)),42).mul(S),a=a.xor(c[1].mul(9)),r=r.add(o[0].mul(9).add(f(e,p+40))),s=g(s.add(c[0]),33).mul(S),o=b(e,p,o[1].mul(S),a.add(c[0])),c=b(e,p+32,s.add(c[1]),r.add(f(e,p+16))),[s,a]=[a,s],y(y(o[0],c[0],S).add(h(r).mul(l)).add(s),y(o[1],c[1],S).add(a),S)}function S(e,t){return"string"===t?C(e):N([e],t)}function N(e,t){if("string"===t)throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(e)&&(e=A(e)),(0,a.OB)().getBool("DEBUG")&&s.D5(e,t),function(e,t){return e instanceof Float32Array&&"float32"===t||e instanceof Int32Array&&"int32"===t||e instanceof Uint8Array&&"bool"===t}(e,t))return e;if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t){const t=new Uint8Array(e.length);for(let n=0;n<t.length;++n)0!==Math.round(e[n])&&(t[n]=1);return t}throw new Error("Unknown data type ".concat(t))}function I(){return(0,a.OB)().platform.now()}function T(e,t){return(0,a.OB)().platform.fetch(e,t)}function C(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"utf-8";return t=t||"utf-8",(0,a.OB)().platform.encode(e,t)}function E(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"utf-8";return t=t||"utf-8",(0,a.OB)().platform.decode(e,t)}function _(e){return null!=(0,a.OB)().platform.isTypedArray?(0,a.OB)().platform.isTypedArray(e):(0,r.j)(e)}function A(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:[],n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];if(null==t&&(t=[]),"boolean"===typeof e||"number"===typeof e||"string"===typeof e||s.tI(e)||null==e||_(e)&&n)t.push(e);else if(Array.isArray(e)||_(e))for(let a=0;a<e.length;++a)A(e[a],t,n);else{let a=-1;for(const t of Object.keys(e))/^([1-9]+[0-9]*|0)$/.test(t)&&(a=Math.max(a,Number(t)));for(let r=0;r<=a;r++)A(e[r],t,n)}return t}},6147:(e,t,n)=>{"use strict";function a(e){let t=e.length,n=0;for(;t>0;)n=Math.random()*t|0,t--,i(e,t,n)}function r(e,t){if(e.length!==t.length)throw new Error("Array sizes must match to be shuffled together "+"First array length was ".concat(e.length)+"Second array length was ".concat(t.length));let n=e.length,a=0;for(;n>0;)a=Math.random()*n|0,n--,i(e,n,a),i(t,n,a)}function s(e,t,n){return Math.max(e,Math.min(t,n))}function o(e){return e%2===0?e:e+1}function i(e,t,n){const a=e[t];e[t]=e[n],e[n]=a}function c(e){let t=0;for(let n=0;n<e.length;n++)t+=e[n];return t}function l(e,t){const n=Math.random();return t*n+(1-n)*e}function u(e,t){let n=0;for(let a=0;a<e.length;a++){const r=Number(e[a])-Number(t[a]);n+=r*r}return n}function d(e,t){if(!e)throw new Error("string"===typeof t?t:t())}function h(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"";d(y(e,t),(()=>n+" Shapes ".concat(e," and ").concat(t," must match")))}function p(e){d(null!=e,(()=>"The input to the tensor constructor must be a non-null value."))}function f(e){if(0===e.length)return 1;let t=e[0];for(let n=1;n<e.length;n++)t*=e[n];return t}function m(e){return 0===e.length}function g(e,t){if(e===t)return!0;if(null==e||null==t)return!1;if(e.length!==t.length)return!1;for(let n=0;n<e.length;n++)if(null!==e[n]&&null!==t[n]&&e[n]!==t[n])return!1;return!0}function y(e,t){if(e===t)return!0;if(null==e||null==t)return!1;if(e.length!==t.length)return!1;for(let n=0;n<e.length;n++)if(e[n]!==t[n])return!1;return!0}function b(e){return e%1===0}function v(e){if(null!=Math.tanh)return Math.tanh(e);if(e===1/0)return 1;if(e===-1/0)return-1;{const t=Math.exp(2*e);return(t-1)/(t+1)}}function x(e){const t=Math.ceil(Math.sqrt(e));return[t,Math.ceil(e/t)]}function w(e){const t=new Uint32Array(e);for(let n=0;n<e;++n)t[n]=n;return a(t),t}function k(e,t){return t<=e.length?e:e+" ".repeat(t-e.length)}function S(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:e=>0,n=arguments.length>2?arguments[2]:void 0,a=arguments.length>3?arguments[3]:void 0;return new Promise(((r,s)=>{let o=0;const i=()=>{if(e())return void r();o++;const c=t(o);null!=n&&o>=n?s():null!=a?a(i,c):setTimeout(i,c)};i()}))}function N(e,t){let n=1,a=-1;for(let s=0;s<e.length;++s)if(e[s]>=0)n*=e[s];else if(-1===e[s]){if(-1!==a)throw Error("Shapes can only have 1 implicit size. "+"Found -1 at dim ".concat(a," and dim ").concat(s));a=s}else if(e[s]<0)throw Error("Shapes can not be < 0. Found ".concat(e[s]," at dim ").concat(s));if(-1===a){if(t>0&&t!==n)throw Error("Size(".concat(t,") must match the product of shape ").concat(e));return e}if(0===n)throw Error("Cannot infer the missing size in [".concat(e,"] when ")+"there are 0 elements");if(t%n!==0)throw Error("The implicit shape can't be a fractional number. "+"Got ".concat(t," / ").concat(n));const r=e.slice();return r[a]=t/n,r}function I(e,t){const n=t.length;return d((e=null==e?t.map(((e,t)=>t)):[].concat(e)).every((e=>e>=-n&&e<n)),(()=>"All values in axis param must be in range [-".concat(n,", ").concat(n,") but ")+"got axis ".concat(e))),d(e.every((e=>b(e))),(()=>"All values in axis param must be integers but "+"got axis ".concat(e))),e.map((e=>e<0?n+e:e))}function T(e,t){const n=[],a=[],r=null!=t&&Array.isArray(t)&&0===t.length,s=null==t||r?null:I(t,e).sort();let o=0;for(let i=0;i<e.length;++i){if(null!=s){if(s[o]===i&&1!==e[i])throw new Error("Can't squeeze axis ".concat(i," since its dim '").concat(e[i],"' is not 1"));(null==s[o]||s[o]>i)&&1===e[i]&&(n.push(e[i]),a.push(i)),s[o]<=i&&o++}1!==e[i]&&(n.push(e[i]),a.push(i))}return{newShape:n,keptDims:a}}function C(e,t){return E(e,t)}function E(e,t){let n=null;if(null==e||"float32"===e)n=new Float32Array(t);else if("int32"===e)n=new Int32Array(t);else if("bool"===e)n=new Uint8Array(t);else{if("string"!==e)throw new Error("Unknown data type ".concat(e));n=new Array(t)}return n}function _(e,t){for(let n=0;n<e.length;n++){const a=e[n];if(isNaN(a)||!isFinite(a))throw Error("A tensor of type ".concat(t," being uploaded contains ").concat(a,"."))}}function A(e){return"bool"===e||"complex64"===e||"float32"===e||"int32"===e||"string"===e}function R(e,t){return"complex64"!==t&&(("float32"!==t||"complex64"===e)&&(("int32"!==t||"float32"===e||"complex64"===e)&&("bool"!==t||"bool"!==e)))}function F(e){if("float32"===e||"int32"===e)return 4;if("complex64"===e)return 8;if("bool"===e)return 1;throw new Error("Unknown dtype ".concat(e))}function D(e){if(null==e)return 0;let t=0;return e.forEach((e=>t+=e.length)),t}function O(e){return"string"===typeof e||e instanceof String}function M(e){return"boolean"===typeof e}function z(e){return"number"===typeof e}function L(e){return Array.isArray(e)?L(e[0]):e instanceof Float32Array?"float32":e instanceof Int32Array||e instanceof Uint8Array||e instanceof Uint8ClampedArray?"int32":z(e)?"float32":O(e)?"string":M(e)?"bool":"float32"}function B(e){return!!(e&&e.constructor&&e.call&&e.apply)}function P(e,t){for(let n=t;n<e;++n)if(e%n===0)return n;return e}function V(e){const t=e.length;if(t<2)return[];const n=new Array(t-1);n[t-2]=e[t-1];for(let a=t-3;a>=0;--a)n[a]=n[a+1]*e[a+1];return n}function W(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const r=new Array;if(1===t.length){const s=t[0]*(a?2:1);for(let t=0;t<s;t++)r[t]=n[e+t]}else{const s=t[0],o=t.slice(1),i=o.reduce(((e,t)=>e*t))*(a?2:1);for(let t=0;t<s;t++)r[t]=W(e+t*i,o,n,a)}return r}function U(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];if(0===e.length)return t[0];const a=e.reduce(((e,t)=>e*t))*(n?2:1);if(0===a)return[];if(a!==t.length)throw new Error("[".concat(e,"] does not match the input size ").concat(t.length).concat(n?" for a complex tensor":"","."));return W(0,e,t,n)}function G(e,t){if(Array.isArray(e))return e;if("float32"===t)return e instanceof Float32Array?e:new Float32Array(e);if("int32"===t)return e instanceof Int32Array?e:new Int32Array(e);if("bool"===t||"string"===t)return Uint8Array.from(new Int32Array(e));throw new Error("Unknown dtype ".concat(t))}function H(e,t){const n=j(e,t);for(let a=0;a<n.length;a++)n[a]=1;return n}function j(e,t){if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t)return new Uint8Array(e);throw new Error("Unknown data type ".concat(t))}function q(e,t){const n=e.reduce(((e,t)=>e*t),1);if(null==t||"float32"===t)return U(e,new Float32Array(n));if("int32"===t)return U(e,new Int32Array(n));if("bool"===t)return U(e,new Uint8Array(n));throw new Error("Unknown data type ".concat(t))}function X(e){e.forEach((t=>{d(Number.isInteger(t)&&t>=0,(()=>"Tensor must have a shape comprised of positive integers but got "+"shape [".concat(e,"].")))}))}function K(e,t,n){if(0===t)return 0;if(1===t)return e[0];let a=e[e.length-1];for(let r=0;r<e.length-1;++r)a+=n[r]*e[r];return a}function Q(e,t,n){if(0===t)return[];if(1===t)return[e];const a=new Array(t);for(let r=0;r<a.length-1;++r)a[r]=Math.floor(e/n[r]),e-=a[r]*n[r];return a[a.length-1]=e,a}function Y(e){return e&&e.then&&"function"===typeof e.then}n.d(t,{AE:()=>v,Cq:()=>p,D2:()=>L,D5:()=>_,DK:()=>g,E7:()=>u,EC:()=>I,GN:()=>b,GX:()=>U,HD:()=>O,JZ:()=>N,KS:()=>G,LF:()=>i,LP:()=>A,Mu:()=>X,NA:()=>f,NE:()=>Q,QB:()=>R,Sm:()=>c,TV:()=>a,U$:()=>w,Ub:()=>D,WD:()=>S,WP:()=>C,YP:()=>x,bT:()=>F,bj:()=>l,bp:()=>T,cO:()=>y,d7:()=>r,e3:()=>V,hj:()=>z,hu:()=>d,jP:()=>P,jn:()=>M,k5:()=>h,l6:()=>q,mf:()=>B,nY:()=>o,oj:()=>k,p8:()=>H,qy:()=>K,rQ:()=>E,tI:()=>Y,uZ:()=>s,wT:()=>j,xH:()=>m})},8987:e=>{e.exports=n;var t=null;try{t=new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0,97,115,109,1,0,0,0,1,13,2,96,0,1,127,96,4,127,127,127,127,1,127,3,7,6,0,1,1,1,1,1,6,6,1,127,1,65,0,11,7,50,6,3,109,117,108,0,1,5,100,105,118,95,115,0,2,5,100,105,118,95,117,0,3,5,114,101,109,95,115,0,4,5,114,101,109,95,117,0,5,8,103,101,116,95,104,105,103,104,0,0,10,191,1,6,4,0,35,0,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,126,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,127,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,128,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,129,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,130,34,4,66,32,135,167,36,0,32,4,167,11])),{}).exports}catch(I){}function n(e,t,n){this.low=0|e,this.high=0|t,this.unsigned=!!n}function a(e){return!0===(e&&e.__isLong__)}n.prototype.__isLong__,Object.defineProperty(n.prototype,"__isLong__",{value:!0}),n.isLong=a;var r={},s={};function o(e,t){var n,a,o;return t?(o=0<=(e>>>=0)&&e<256)&&(a=s[e])?a:(n=c(e,(0|e)<0?-1:0,!0),o&&(s[e]=n),n):(o=-128<=(e|=0)&&e<128)&&(a=r[e])?a:(n=c(e,e<0?-1:0,!1),o&&(r[e]=n),n)}function i(e,t){if(isNaN(e))return t?y:g;if(t){if(e<0)return y;if(e>=p)return k}else{if(e<=-f)return S;if(e+1>=f)return w}return e<0?i(-e,t).neg():c(e%h|0,e/h|0,t)}function c(e,t,a){return new n(e,t,a)}n.fromInt=o,n.fromNumber=i,n.fromBits=c;var l=Math.pow;function u(e,t,n){if(0===e.length)throw Error("empty string");if("NaN"===e||"Infinity"===e||"+Infinity"===e||"-Infinity"===e)return g;if("number"===typeof t?(n=t,t=!1):t=!!t,(n=n||10)<2||36<n)throw RangeError("radix");var a;if((a=e.indexOf("-"))>0)throw Error("interior hyphen");if(0===a)return u(e.substring(1),t,n).neg();for(var r=i(l(n,8)),s=g,o=0;o<e.length;o+=8){var c=Math.min(8,e.length-o),d=parseInt(e.substring(o,o+c),n);if(c<8){var h=i(l(n,c));s=s.mul(h).add(i(d))}else s=(s=s.mul(r)).add(i(d))}return s.unsigned=t,s}function d(e,t){return"number"===typeof e?i(e,t):"string"===typeof e?u(e,t):c(e.low,e.high,"boolean"===typeof t?t:e.unsigned)}n.fromString=u,n.fromValue=d;var h=4294967296,p=h*h,f=p/2,m=o(1<<24),g=o(0);n.ZERO=g;var y=o(0,!0);n.UZERO=y;var b=o(1);n.ONE=b;var v=o(1,!0);n.UONE=v;var x=o(-1);n.NEG_ONE=x;var w=c(-1,2147483647,!1);n.MAX_VALUE=w;var k=c(-1,-1,!0);n.MAX_UNSIGNED_VALUE=k;var S=c(0,-2147483648,!1);n.MIN_VALUE=S;var N=n.prototype;N.toInt=function(){return this.unsigned?this.low>>>0:this.low},N.toNumber=function(){return this.unsigned?(this.high>>>0)*h+(this.low>>>0):this.high*h+(this.low>>>0)},N.toString=function(e){if((e=e||10)<2||36<e)throw RangeError("radix");if(this.isZero())return"0";if(this.isNegative()){if(this.eq(S)){var t=i(e),n=this.div(t),a=n.mul(t).sub(this);return n.toString(e)+a.toInt().toString(e)}return"-"+this.neg().toString(e)}for(var r=i(l(e,6),this.unsigned),s=this,o="";;){var c=s.div(r),u=(s.sub(c.mul(r)).toInt()>>>0).toString(e);if((s=c).isZero())return u+o;for(;u.length<6;)u="0"+u;o=""+u+o}},N.getHighBits=function(){return this.high},N.getHighBitsUnsigned=function(){return this.high>>>0},N.getLowBits=function(){return this.low},N.getLowBitsUnsigned=function(){return this.low>>>0},N.getNumBitsAbs=function(){if(this.isNegative())return this.eq(S)?64:this.neg().getNumBitsAbs();for(var e=0!=this.high?this.high:this.low,t=31;t>0&&0==(e&1<<t);t--);return 0!=this.high?t+33:t+1},N.isZero=function(){return 0===this.high&&0===this.low},N.eqz=N.isZero,N.isNegative=function(){return!this.unsigned&&this.high<0},N.isPositive=function(){return this.unsigned||this.high>=0},N.isOdd=function(){return 1===(1&this.low)},N.isEven=function(){return 0===(1&this.low)},N.equals=function(e){return a(e)||(e=d(e)),(this.unsigned===e.unsigned||this.high>>>31!==1||e.high>>>31!==1)&&(this.high===e.high&&this.low===e.low)},N.eq=N.equals,N.notEquals=function(e){return!this.eq(e)},N.neq=N.notEquals,N.ne=N.notEquals,N.lessThan=function(e){return this.comp(e)<0},N.lt=N.lessThan,N.lessThanOrEqual=function(e){return this.comp(e)<=0},N.lte=N.lessThanOrEqual,N.le=N.lessThanOrEqual,N.greaterThan=function(e){return this.comp(e)>0},N.gt=N.greaterThan,N.greaterThanOrEqual=function(e){return this.comp(e)>=0},N.gte=N.greaterThanOrEqual,N.ge=N.greaterThanOrEqual,N.compare=function(e){if(a(e)||(e=d(e)),this.eq(e))return 0;var t=this.isNegative(),n=e.isNegative();return t&&!n?-1:!t&&n?1:this.unsigned?e.high>>>0>this.high>>>0||e.high===this.high&&e.low>>>0>this.low>>>0?-1:1:this.sub(e).isNegative()?-1:1},N.comp=N.compare,N.negate=function(){return!this.unsigned&&this.eq(S)?S:this.not().add(b)},N.neg=N.negate,N.add=function(e){a(e)||(e=d(e));var t=this.high>>>16,n=65535&this.high,r=this.low>>>16,s=65535&this.low,o=e.high>>>16,i=65535&e.high,l=e.low>>>16,u=0,h=0,p=0,f=0;return p+=(f+=s+(65535&e.low))>>>16,h+=(p+=r+l)>>>16,u+=(h+=n+i)>>>16,u+=t+o,c((p&=65535)<<16|(f&=65535),(u&=65535)<<16|(h&=65535),this.unsigned)},N.subtract=function(e){return a(e)||(e=d(e)),this.add(e.neg())},N.sub=N.subtract,N.multiply=function(e){if(this.isZero())return g;if(a(e)||(e=d(e)),t)return c(t.mul(this.low,this.high,e.low,e.high),t.get_high(),this.unsigned);if(e.isZero())return g;if(this.eq(S))return e.isOdd()?S:g;if(e.eq(S))return this.isOdd()?S:g;if(this.isNegative())return e.isNegative()?this.neg().mul(e.neg()):this.neg().mul(e).neg();if(e.isNegative())return this.mul(e.neg()).neg();if(this.lt(m)&&e.lt(m))return i(this.toNumber()*e.toNumber(),this.unsigned);var n=this.high>>>16,r=65535&this.high,s=this.low>>>16,o=65535&this.low,l=e.high>>>16,u=65535&e.high,h=e.low>>>16,p=65535&e.low,f=0,y=0,b=0,v=0;return b+=(v+=o*p)>>>16,y+=(b+=s*p)>>>16,b&=65535,y+=(b+=o*h)>>>16,f+=(y+=r*p)>>>16,y&=65535,f+=(y+=s*h)>>>16,y&=65535,f+=(y+=o*u)>>>16,f+=n*p+r*h+s*u+o*l,c((b&=65535)<<16|(v&=65535),(f&=65535)<<16|(y&=65535),this.unsigned)},N.mul=N.multiply,N.divide=function(e){if(a(e)||(e=d(e)),e.isZero())throw Error("division by zero");var n,r,s;if(t)return this.unsigned||-2147483648!==this.high||-1!==e.low||-1!==e.high?c((this.unsigned?t.div_u:t.div_s)(this.low,this.high,e.low,e.high),t.get_high(),this.unsigned):this;if(this.isZero())return this.unsigned?y:g;if(this.unsigned){if(e.unsigned||(e=e.toUnsigned()),e.gt(this))return y;if(e.gt(this.shru(1)))return v;s=y}else{if(this.eq(S))return e.eq(b)||e.eq(x)?S:e.eq(S)?b:(n=this.shr(1).div(e).shl(1)).eq(g)?e.isNegative()?b:x:(r=this.sub(e.mul(n)),s=n.add(r.div(e)));if(e.eq(S))return this.unsigned?y:g;if(this.isNegative())return e.isNegative()?this.neg().div(e.neg()):this.neg().div(e).neg();if(e.isNegative())return this.div(e.neg()).neg();s=g}for(r=this;r.gte(e);){n=Math.max(1,Math.floor(r.toNumber()/e.toNumber()));for(var o=Math.ceil(Math.log(n)/Math.LN2),u=o<=48?1:l(2,o-48),h=i(n),p=h.mul(e);p.isNegative()||p.gt(r);)p=(h=i(n-=u,this.unsigned)).mul(e);h.isZero()&&(h=b),s=s.add(h),r=r.sub(p)}return s},N.div=N.divide,N.modulo=function(e){return a(e)||(e=d(e)),t?c((this.unsigned?t.rem_u:t.rem_s)(this.low,this.high,e.low,e.high),t.get_high(),this.unsigned):this.sub(this.div(e).mul(e))},N.mod=N.modulo,N.rem=N.modulo,N.not=function(){return c(~this.low,~this.high,this.unsigned)},N.and=function(e){return a(e)||(e=d(e)),c(this.low&e.low,this.high&e.high,this.unsigned)},N.or=function(e){return a(e)||(e=d(e)),c(this.low|e.low,this.high|e.high,this.unsigned)},N.xor=function(e){return a(e)||(e=d(e)),c(this.low^e.low,this.high^e.high,this.unsigned)},N.shiftLeft=function(e){return a(e)&&(e=e.toInt()),0===(e&=63)?this:e<32?c(this.low<<e,this.high<<e|this.low>>>32-e,this.unsigned):c(0,this.low<<e-32,this.unsigned)},N.shl=N.shiftLeft,N.shiftRight=function(e){return a(e)&&(e=e.toInt()),0===(e&=63)?this:e<32?c(this.low>>>e|this.high<<32-e,this.high>>e,this.unsigned):c(this.high>>e-32,this.high>=0?0:-1,this.unsigned)},N.shr=N.shiftRight,N.shiftRightUnsigned=function(e){if(a(e)&&(e=e.toInt()),0===(e&=63))return this;var t=this.high;return e<32?c(this.low>>>e|t<<32-e,t>>>e,this.unsigned):c(32===e?t:t>>>e-32,0,this.unsigned)},N.shru=N.shiftRightUnsigned,N.shr_u=N.shiftRightUnsigned,N.toSigned=function(){return this.unsigned?c(this.low,this.high,!1):this},N.toUnsigned=function(){return this.unsigned?this:c(this.low,this.high,!0)},N.toBytes=function(e){return e?this.toBytesLE():this.toBytesBE()},N.toBytesLE=function(){var e=this.high,t=this.low;return[255&t,t>>>8&255,t>>>16&255,t>>>24,255&e,e>>>8&255,e>>>16&255,e>>>24]},N.toBytesBE=function(){var e=this.high,t=this.low;return[e>>>24,e>>>16&255,e>>>8&255,255&e,t>>>24,t>>>16&255,t>>>8&255,255&t]},n.fromBytes=function(e,t,a){return a?n.fromBytesLE(e,t):n.fromBytesBE(e,t)},n.fromBytesLE=function(e,t){return new n(e[0]|e[1]<<8|e[2]<<16|e[3]<<24,e[4]|e[5]<<8|e[6]<<16|e[7]<<24,t)},n.fromBytesBE=function(e,t){return new n(e[4]<<24|e[5]<<16|e[6]<<8|e[7],e[0]<<24|e[1]<<16|e[2]<<8|e[3],t)}},4463:(e,t,n)=>{"use strict";var a=n(2791),r=n(5296);function s(e){for(var t="https://reactjs.org/docs/error-decoder.html?invariant="+e,n=1;n<arguments.length;n++)t+="&args[]="+encodeURIComponent(arguments[n]);return"Minified React error #"+e+"; visit "+t+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}var o=new Set,i={};function c(e,t){l(e,t),l(e+"Capture",t)}function l(e,t){for(i[e]=t,e=0;e<t.length;e++)o.add(t[e])}var u=!("undefined"===typeof window||"undefined"===typeof window.document||"undefined"===typeof window.document.createElement),d=Object.prototype.hasOwnProperty,h=/^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/,p={},f={};function m(e,t,n,a,r,s,o){this.acceptsBooleans=2===t||3===t||4===t,this.attributeName=a,this.attributeNamespace=r,this.mustUseProperty=n,this.propertyName=e,this.type=t,this.sanitizeURL=s,this.removeEmptyString=o}var g={};"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach((function(e){g[e]=new m(e,0,!1,e,null,!1,!1)})),[["acceptCharset","accept-charset"],["className","class"],["htmlFor","for"],["httpEquiv","http-equiv"]].forEach((function(e){var t=e[0];g[t]=new m(t,1,!1,e[1],null,!1,!1)})),["contentEditable","draggable","spellCheck","value"].forEach((function(e){g[e]=new m(e,2,!1,e.toLowerCase(),null,!1,!1)})),["autoReverse","externalResourcesRequired","focusable","preserveAlpha"].forEach((function(e){g[e]=new m(e,2,!1,e,null,!1,!1)})),"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach((function(e){g[e]=new m(e,3,!1,e.toLowerCase(),null,!1,!1)})),["checked","multiple","muted","selected"].forEach((function(e){g[e]=new m(e,3,!0,e,null,!1,!1)})),["capture","download"].forEach((function(e){g[e]=new m(e,4,!1,e,null,!1,!1)})),["cols","rows","size","span"].forEach((function(e){g[e]=new m(e,6,!1,e,null,!1,!1)})),["rowSpan","start"].forEach((function(e){g[e]=new m(e,5,!1,e.toLowerCase(),null,!1,!1)}));var y=/[\-:]([a-z])/g;function b(e){return e[1].toUpperCase()}function v(e,t,n,a){var r=g.hasOwnProperty(t)?g[t]:null;(null!==r?0!==r.type:a||!(2<t.length)||"o"!==t[0]&&"O"!==t[0]||"n"!==t[1]&&"N"!==t[1])&&(function(e,t,n,a){if(null===t||"undefined"===typeof t||function(e,t,n,a){if(null!==n&&0===n.type)return!1;switch(typeof t){case"function":case"symbol":return!0;case"boolean":return!a&&(null!==n?!n.acceptsBooleans:"data-"!==(e=e.toLowerCase().slice(0,5))&&"aria-"!==e);default:return!1}}(e,t,n,a))return!0;if(a)return!1;if(null!==n)switch(n.type){case 3:return!t;case 4:return!1===t;case 5:return isNaN(t);case 6:return isNaN(t)||1>t}return!1}(t,n,r,a)&&(n=null),a||null===r?function(e){return!!d.call(f,e)||!d.call(p,e)&&(h.test(e)?f[e]=!0:(p[e]=!0,!1))}(t)&&(null===n?e.removeAttribute(t):e.setAttribute(t,""+n)):r.mustUseProperty?e[r.propertyName]=null===n?3!==r.type&&"":n:(t=r.attributeName,a=r.attributeNamespace,null===n?e.removeAttribute(t):(n=3===(r=r.type)||4===r&&!0===n?"":""+n,a?e.setAttributeNS(a,t,n):e.setAttribute(t,n))))}"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach((function(e){var t=e.replace(y,b);g[t]=new m(t,1,!1,e,null,!1,!1)})),"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type".split(" ").forEach((function(e){var t=e.replace(y,b);g[t]=new m(t,1,!1,e,"http://www.w3.org/1999/xlink",!1,!1)})),["xml:base","xml:lang","xml:space"].forEach((function(e){var t=e.replace(y,b);g[t]=new m(t,1,!1,e,"http://www.w3.org/XML/1998/namespace",!1,!1)})),["tabIndex","crossOrigin"].forEach((function(e){g[e]=new m(e,1,!1,e.toLowerCase(),null,!1,!1)})),g.xlinkHref=new m("xlinkHref",1,!1,"xlink:href","http://www.w3.org/1999/xlink",!0,!1),["src","href","action","formAction"].forEach((function(e){g[e]=new m(e,1,!1,e.toLowerCase(),null,!0,!0)}));var x=a.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,w=Symbol.for("react.element"),k=Symbol.for("react.portal"),S=Symbol.for("react.fragment"),N=Symbol.for("react.strict_mode"),I=Symbol.for("react.profiler"),T=Symbol.for("react.provider"),C=Symbol.for("react.context"),E=Symbol.for("react.forward_ref"),_=Symbol.for("react.suspense"),A=Symbol.for("react.suspense_list"),R=Symbol.for("react.memo"),F=Symbol.for("react.lazy");Symbol.for("react.scope"),Symbol.for("react.debug_trace_mode");var D=Symbol.for("react.offscreen");Symbol.for("react.legacy_hidden"),Symbol.for("react.cache"),Symbol.for("react.tracing_marker");var O=Symbol.iterator;function M(e){return null===e||"object"!==typeof e?null:"function"===typeof(e=O&&e[O]||e["@@iterator"])?e:null}var z,L=Object.assign;function B(e){if(void 0===z)try{throw Error()}catch(n){var t=n.stack.trim().match(/\n( *(at )?)/);z=t&&t[1]||""}return"\n"+z+e}var P=!1;function V(e,t){if(!e||P)return"";P=!0;var n=Error.prepareStackTrace;Error.prepareStackTrace=void 0;try{if(t)if(t=function(){throw Error()},Object.defineProperty(t.prototype,"props",{set:function(){throw Error()}}),"object"===typeof Reflect&&Reflect.construct){try{Reflect.construct(t,[])}catch(l){var a=l}Reflect.construct(e,[],t)}else{try{t.call()}catch(l){a=l}e.call(t.prototype)}else{try{throw Error()}catch(l){a=l}e()}}catch(l){if(l&&a&&"string"===typeof l.stack){for(var r=l.stack.split("\n"),s=a.stack.split("\n"),o=r.length-1,i=s.length-1;1<=o&&0<=i&&r[o]!==s[i];)i--;for(;1<=o&&0<=i;o--,i--)if(r[o]!==s[i]){if(1!==o||1!==i)do{if(o--,0>--i||r[o]!==s[i]){var c="\n"+r[o].replace(" at new "," at ");return e.displayName&&c.includes("<anonymous>")&&(c=c.replace("<anonymous>",e.displayName)),c}}while(1<=o&&0<=i);break}}}finally{P=!1,Error.prepareStackTrace=n}return(e=e?e.displayName||e.name:"")?B(e):""}function W(e){switch(e.tag){case 5:return B(e.type);case 16:return B("Lazy");case 13:return B("Suspense");case 19:return B("SuspenseList");case 0:case 2:case 15:return e=V(e.type,!1);case 11:return e=V(e.type.render,!1);case 1:return e=V(e.type,!0);default:return""}}function U(e){if(null==e)return null;if("function"===typeof e)return e.displayName||e.name||null;if("string"===typeof e)return e;switch(e){case S:return"Fragment";case k:return"Portal";case I:return"Profiler";case N:return"StrictMode";case _:return"Suspense";case A:return"SuspenseList"}if("object"===typeof e)switch(e.$$typeof){case C:return(e.displayName||"Context")+".Consumer";case T:return(e._context.displayName||"Context")+".Provider";case E:var t=e.render;return(e=e.displayName)||(e=""!==(e=t.displayName||t.name||"")?"ForwardRef("+e+")":"ForwardRef"),e;case R:return null!==(t=e.displayName||null)?t:U(e.type)||"Memo";case F:t=e._payload,e=e._init;try{return U(e(t))}catch(n){}}return null}function G(e){var t=e.type;switch(e.tag){case 24:return"Cache";case 9:return(t.displayName||"Context")+".Consumer";case 10:return(t._context.displayName||"Context")+".Provider";case 18:return"DehydratedFragment";case 11:return e=(e=t.render).displayName||e.name||"",t.displayName||(""!==e?"ForwardRef("+e+")":"ForwardRef");case 7:return"Fragment";case 5:return t;case 4:return"Portal";case 3:return"Root";case 6:return"Text";case 16:return U(t);case 8:return t===N?"StrictMode":"Mode";case 22:return"Offscreen";case 12:return"Profiler";case 21:return"Scope";case 13:return"Suspense";case 19:return"SuspenseList";case 25:return"TracingMarker";case 1:case 0:case 17:case 2:case 14:case 15:if("function"===typeof t)return t.displayName||t.name||null;if("string"===typeof t)return t}return null}function H(e){switch(typeof e){case"boolean":case"number":case"string":case"undefined":case"object":return e;default:return""}}function j(e){var t=e.type;return(e=e.nodeName)&&"input"===e.toLowerCase()&&("checkbox"===t||"radio"===t)}function q(e){e._valueTracker||(e._valueTracker=function(e){var t=j(e)?"checked":"value",n=Object.getOwnPropertyDescriptor(e.constructor.prototype,t),a=""+e[t];if(!e.hasOwnProperty(t)&&"undefined"!==typeof n&&"function"===typeof n.get&&"function"===typeof n.set){var r=n.get,s=n.set;return Object.defineProperty(e,t,{configurable:!0,get:function(){return r.call(this)},set:function(e){a=""+e,s.call(this,e)}}),Object.defineProperty(e,t,{enumerable:n.enumerable}),{getValue:function(){return a},setValue:function(e){a=""+e},stopTracking:function(){e._valueTracker=null,delete e[t]}}}}(e))}function X(e){if(!e)return!1;var t=e._valueTracker;if(!t)return!0;var n=t.getValue(),a="";return e&&(a=j(e)?e.checked?"true":"false":e.value),(e=a)!==n&&(t.setValue(e),!0)}function K(e){if("undefined"===typeof(e=e||("undefined"!==typeof document?document:void 0)))return null;try{return e.activeElement||e.body}catch(t){return e.body}}function Q(e,t){var n=t.checked;return L({},t,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=n?n:e._wrapperState.initialChecked})}function Y(e,t){var n=null==t.defaultValue?"":t.defaultValue,a=null!=t.checked?t.checked:t.defaultChecked;n=H(null!=t.value?t.value:n),e._wrapperState={initialChecked:a,initialValue:n,controlled:"checkbox"===t.type||"radio"===t.type?null!=t.checked:null!=t.value}}function Z(e,t){null!=(t=t.checked)&&v(e,"checked",t,!1)}function J(e,t){Z(e,t);var n=H(t.value),a=t.type;if(null!=n)"number"===a?(0===n&&""===e.value||e.value!=n)&&(e.value=""+n):e.value!==""+n&&(e.value=""+n);else if("submit"===a||"reset"===a)return void e.removeAttribute("value");t.hasOwnProperty("value")?ee(e,t.type,n):t.hasOwnProperty("defaultValue")&&ee(e,t.type,H(t.defaultValue)),null==t.checked&&null!=t.defaultChecked&&(e.defaultChecked=!!t.defaultChecked)}function $(e,t,n){if(t.hasOwnProperty("value")||t.hasOwnProperty("defaultValue")){var a=t.type;if(!("submit"!==a&&"reset"!==a||void 0!==t.value&&null!==t.value))return;t=""+e._wrapperState.initialValue,n||t===e.value||(e.value=t),e.defaultValue=t}""!==(n=e.name)&&(e.name=""),e.defaultChecked=!!e._wrapperState.initialChecked,""!==n&&(e.name=n)}function ee(e,t,n){"number"===t&&K(e.ownerDocument)===e||(null==n?e.defaultValue=""+e._wrapperState.initialValue:e.defaultValue!==""+n&&(e.defaultValue=""+n))}var te=Array.isArray;function ne(e,t,n,a){if(e=e.options,t){t={};for(var r=0;r<n.length;r++)t["$"+n[r]]=!0;for(n=0;n<e.length;n++)r=t.hasOwnProperty("$"+e[n].value),e[n].selected!==r&&(e[n].selected=r),r&&a&&(e[n].defaultSelected=!0)}else{for(n=""+H(n),t=null,r=0;r<e.length;r++){if(e[r].value===n)return e[r].selected=!0,void(a&&(e[r].defaultSelected=!0));null!==t||e[r].disabled||(t=e[r])}null!==t&&(t.selected=!0)}}function ae(e,t){if(null!=t.dangerouslySetInnerHTML)throw Error(s(91));return L({},t,{value:void 0,defaultValue:void 0,children:""+e._wrapperState.initialValue})}function re(e,t){var n=t.value;if(null==n){if(n=t.children,t=t.defaultValue,null!=n){if(null!=t)throw Error(s(92));if(te(n)){if(1<n.length)throw Error(s(93));n=n[0]}t=n}null==t&&(t=""),n=t}e._wrapperState={initialValue:H(n)}}function se(e,t){var n=H(t.value),a=H(t.defaultValue);null!=n&&((n=""+n)!==e.value&&(e.value=n),null==t.defaultValue&&e.defaultValue!==n&&(e.defaultValue=n)),null!=a&&(e.defaultValue=""+a)}function oe(e){var t=e.textContent;t===e._wrapperState.initialValue&&""!==t&&null!==t&&(e.value=t)}function ie(e){switch(e){case"svg":return"http://www.w3.org/2000/svg";case"math":return"http://www.w3.org/1998/Math/MathML";default:return"http://www.w3.org/1999/xhtml"}}function ce(e,t){return null==e||"http://www.w3.org/1999/xhtml"===e?ie(t):"http://www.w3.org/2000/svg"===e&&"foreignObject"===t?"http://www.w3.org/1999/xhtml":e}var le,ue,de=(ue=function(e,t){if("http://www.w3.org/2000/svg"!==e.namespaceURI||"innerHTML"in e)e.innerHTML=t;else{for((le=le||document.createElement("div")).innerHTML="<svg>"+t.valueOf().toString()+"</svg>",t=le.firstChild;e.firstChild;)e.removeChild(e.firstChild);for(;t.firstChild;)e.appendChild(t.firstChild)}},"undefined"!==typeof MSApp&&MSApp.execUnsafeLocalFunction?function(e,t,n,a){MSApp.execUnsafeLocalFunction((function(){return ue(e,t)}))}:ue);function he(e,t){if(t){var n=e.firstChild;if(n&&n===e.lastChild&&3===n.nodeType)return void(n.nodeValue=t)}e.textContent=t}var pe={animationIterationCount:!0,aspectRatio:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},fe=["Webkit","ms","Moz","O"];function me(e,t,n){return null==t||"boolean"===typeof t||""===t?"":n||"number"!==typeof t||0===t||pe.hasOwnProperty(e)&&pe[e]?(""+t).trim():t+"px"}function ge(e,t){for(var n in e=e.style,t)if(t.hasOwnProperty(n)){var a=0===n.indexOf("--"),r=me(n,t[n],a);"float"===n&&(n="cssFloat"),a?e.setProperty(n,r):e[n]=r}}Object.keys(pe).forEach((function(e){fe.forEach((function(t){t=t+e.charAt(0).toUpperCase()+e.substring(1),pe[t]=pe[e]}))}));var ye=L({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});function be(e,t){if(t){if(ye[e]&&(null!=t.children||null!=t.dangerouslySetInnerHTML))throw Error(s(137,e));if(null!=t.dangerouslySetInnerHTML){if(null!=t.children)throw Error(s(60));if("object"!==typeof t.dangerouslySetInnerHTML||!("__html"in t.dangerouslySetInnerHTML))throw Error(s(61))}if(null!=t.style&&"object"!==typeof t.style)throw Error(s(62))}}function ve(e,t){if(-1===e.indexOf("-"))return"string"===typeof t.is;switch(e){case"annotation-xml":case"color-profile":case"font-face":case"font-face-src":case"font-face-uri":case"font-face-format":case"font-face-name":case"missing-glyph":return!1;default:return!0}}var xe=null;function we(e){return(e=e.target||e.srcElement||window).correspondingUseElement&&(e=e.correspondingUseElement),3===e.nodeType?e.parentNode:e}var ke=null,Se=null,Ne=null;function Ie(e){if(e=vr(e)){if("function"!==typeof ke)throw Error(s(280));var t=e.stateNode;t&&(t=wr(t),ke(e.stateNode,e.type,t))}}function Te(e){Se?Ne?Ne.push(e):Ne=[e]:Se=e}function Ce(){if(Se){var e=Se,t=Ne;if(Ne=Se=null,Ie(e),t)for(e=0;e<t.length;e++)Ie(t[e])}}function Ee(e,t){return e(t)}function _e(){}var Ae=!1;function Re(e,t,n){if(Ae)return e(t,n);Ae=!0;try{return Ee(e,t,n)}finally{Ae=!1,(null!==Se||null!==Ne)&&(_e(),Ce())}}function Fe(e,t){var n=e.stateNode;if(null===n)return null;var a=wr(n);if(null===a)return null;n=a[t];e:switch(t){case"onClick":case"onClickCapture":case"onDoubleClick":case"onDoubleClickCapture":case"onMouseDown":case"onMouseDownCapture":case"onMouseMove":case"onMouseMoveCapture":case"onMouseUp":case"onMouseUpCapture":case"onMouseEnter":(a=!a.disabled)||(a=!("button"===(e=e.type)||"input"===e||"select"===e||"textarea"===e)),e=!a;break e;default:e=!1}if(e)return null;if(n&&"function"!==typeof n)throw Error(s(231,t,typeof n));return n}var De=!1;if(u)try{var Oe={};Object.defineProperty(Oe,"passive",{get:function(){De=!0}}),window.addEventListener("test",Oe,Oe),window.removeEventListener("test",Oe,Oe)}catch(ue){De=!1}function Me(e,t,n,a,r,s,o,i,c){var l=Array.prototype.slice.call(arguments,3);try{t.apply(n,l)}catch(u){this.onError(u)}}var ze=!1,Le=null,Be=!1,Pe=null,Ve={onError:function(e){ze=!0,Le=e}};function We(e,t,n,a,r,s,o,i,c){ze=!1,Le=null,Me.apply(Ve,arguments)}function Ue(e){var t=e,n=e;if(e.alternate)for(;t.return;)t=t.return;else{e=t;do{0!==(4098&(t=e).flags)&&(n=t.return),e=t.return}while(e)}return 3===t.tag?n:null}function Ge(e){if(13===e.tag){var t=e.memoizedState;if(null===t&&(null!==(e=e.alternate)&&(t=e.memoizedState)),null!==t)return t.dehydrated}return null}function He(e){if(Ue(e)!==e)throw Error(s(188))}function je(e){return null!==(e=function(e){var t=e.alternate;if(!t){if(null===(t=Ue(e)))throw Error(s(188));return t!==e?null:e}for(var n=e,a=t;;){var r=n.return;if(null===r)break;var o=r.alternate;if(null===o){if(null!==(a=r.return)){n=a;continue}break}if(r.child===o.child){for(o=r.child;o;){if(o===n)return He(r),e;if(o===a)return He(r),t;o=o.sibling}throw Error(s(188))}if(n.return!==a.return)n=r,a=o;else{for(var i=!1,c=r.child;c;){if(c===n){i=!0,n=r,a=o;break}if(c===a){i=!0,a=r,n=o;break}c=c.sibling}if(!i){for(c=o.child;c;){if(c===n){i=!0,n=o,a=r;break}if(c===a){i=!0,a=o,n=r;break}c=c.sibling}if(!i)throw Error(s(189))}}if(n.alternate!==a)throw Error(s(190))}if(3!==n.tag)throw Error(s(188));return n.stateNode.current===n?e:t}(e))?qe(e):null}function qe(e){if(5===e.tag||6===e.tag)return e;for(e=e.child;null!==e;){var t=qe(e);if(null!==t)return t;e=e.sibling}return null}var Xe=r.unstable_scheduleCallback,Ke=r.unstable_cancelCallback,Qe=r.unstable_shouldYield,Ye=r.unstable_requestPaint,Ze=r.unstable_now,Je=r.unstable_getCurrentPriorityLevel,$e=r.unstable_ImmediatePriority,et=r.unstable_UserBlockingPriority,tt=r.unstable_NormalPriority,nt=r.unstable_LowPriority,at=r.unstable_IdlePriority,rt=null,st=null;var ot=Math.clz32?Math.clz32:function(e){return 0===(e>>>=0)?32:31-(it(e)/ct|0)|0},it=Math.log,ct=Math.LN2;var lt=64,ut=4194304;function dt(e){switch(e&-e){case 1:return 1;case 2:return 2;case 4:return 4;case 8:return 8;case 16:return 16;case 32:return 32;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return 4194240&e;case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:return 130023424&e;case 134217728:return 134217728;case 268435456:return 268435456;case 536870912:return 536870912;case 1073741824:return 1073741824;default:return e}}function ht(e,t){var n=e.pendingLanes;if(0===n)return 0;var a=0,r=e.suspendedLanes,s=e.pingedLanes,o=268435455&n;if(0!==o){var i=o&~r;0!==i?a=dt(i):0!==(s&=o)&&(a=dt(s))}else 0!==(o=n&~r)?a=dt(o):0!==s&&(a=dt(s));if(0===a)return 0;if(0!==t&&t!==a&&0===(t&r)&&((r=a&-a)>=(s=t&-t)||16===r&&0!==(4194240&s)))return t;if(0!==(4&a)&&(a|=16&n),0!==(t=e.entangledLanes))for(e=e.entanglements,t&=a;0<t;)r=1<<(n=31-ot(t)),a|=e[n],t&=~r;return a}function pt(e,t){switch(e){case 1:case 2:case 4:return t+250;case 8:case 16:case 32:case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return t+5e3;default:return-1}}function ft(e){return 0!==(e=-1073741825&e.pendingLanes)?e:1073741824&e?1073741824:0}function mt(){var e=lt;return 0===(4194240&(lt<<=1))&&(lt=64),e}function gt(e){for(var t=[],n=0;31>n;n++)t.push(e);return t}function yt(e,t,n){e.pendingLanes|=t,536870912!==t&&(e.suspendedLanes=0,e.pingedLanes=0),(e=e.eventTimes)[t=31-ot(t)]=n}function bt(e,t){var n=e.entangledLanes|=t;for(e=e.entanglements;n;){var a=31-ot(n),r=1<<a;r&t|e[a]&t&&(e[a]|=t),n&=~r}}var vt=0;function xt(e){return 1<(e&=-e)?4<e?0!==(268435455&e)?16:536870912:4:1}var wt,kt,St,Nt,It,Tt=!1,Ct=[],Et=null,_t=null,At=null,Rt=new Map,Ft=new Map,Dt=[],Ot="mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset submit".split(" ");function Mt(e,t){switch(e){case"focusin":case"focusout":Et=null;break;case"dragenter":case"dragleave":_t=null;break;case"mouseover":case"mouseout":At=null;break;case"pointerover":case"pointerout":Rt.delete(t.pointerId);break;case"gotpointercapture":case"lostpointercapture":Ft.delete(t.pointerId)}}function zt(e,t,n,a,r,s){return null===e||e.nativeEvent!==s?(e={blockedOn:t,domEventName:n,eventSystemFlags:a,nativeEvent:s,targetContainers:[r]},null!==t&&(null!==(t=vr(t))&&kt(t)),e):(e.eventSystemFlags|=a,t=e.targetContainers,null!==r&&-1===t.indexOf(r)&&t.push(r),e)}function Lt(e){var t=br(e.target);if(null!==t){var n=Ue(t);if(null!==n)if(13===(t=n.tag)){if(null!==(t=Ge(n)))return e.blockedOn=t,void It(e.priority,(function(){St(n)}))}else if(3===t&&n.stateNode.current.memoizedState.isDehydrated)return void(e.blockedOn=3===n.tag?n.stateNode.containerInfo:null)}e.blockedOn=null}function Bt(e){if(null!==e.blockedOn)return!1;for(var t=e.targetContainers;0<t.length;){var n=Qt(e.domEventName,e.eventSystemFlags,t[0],e.nativeEvent);if(null!==n)return null!==(t=vr(n))&&kt(t),e.blockedOn=n,!1;var a=new(n=e.nativeEvent).constructor(n.type,n);xe=a,n.target.dispatchEvent(a),xe=null,t.shift()}return!0}function Pt(e,t,n){Bt(e)&&n.delete(t)}function Vt(){Tt=!1,null!==Et&&Bt(Et)&&(Et=null),null!==_t&&Bt(_t)&&(_t=null),null!==At&&Bt(At)&&(At=null),Rt.forEach(Pt),Ft.forEach(Pt)}function Wt(e,t){e.blockedOn===t&&(e.blockedOn=null,Tt||(Tt=!0,r.unstable_scheduleCallback(r.unstable_NormalPriority,Vt)))}function Ut(e){function t(t){return Wt(t,e)}if(0<Ct.length){Wt(Ct[0],e);for(var n=1;n<Ct.length;n++){var a=Ct[n];a.blockedOn===e&&(a.blockedOn=null)}}for(null!==Et&&Wt(Et,e),null!==_t&&Wt(_t,e),null!==At&&Wt(At,e),Rt.forEach(t),Ft.forEach(t),n=0;n<Dt.length;n++)(a=Dt[n]).blockedOn===e&&(a.blockedOn=null);for(;0<Dt.length&&null===(n=Dt[0]).blockedOn;)Lt(n),null===n.blockedOn&&Dt.shift()}var Gt=x.ReactCurrentBatchConfig,Ht=!0;function jt(e,t,n,a){var r=vt,s=Gt.transition;Gt.transition=null;try{vt=1,Xt(e,t,n,a)}finally{vt=r,Gt.transition=s}}function qt(e,t,n,a){var r=vt,s=Gt.transition;Gt.transition=null;try{vt=4,Xt(e,t,n,a)}finally{vt=r,Gt.transition=s}}function Xt(e,t,n,a){if(Ht){var r=Qt(e,t,n,a);if(null===r)Ha(e,t,a,Kt,n),Mt(e,a);else if(function(e,t,n,a,r){switch(t){case"focusin":return Et=zt(Et,e,t,n,a,r),!0;case"dragenter":return _t=zt(_t,e,t,n,a,r),!0;case"mouseover":return At=zt(At,e,t,n,a,r),!0;case"pointerover":var s=r.pointerId;return Rt.set(s,zt(Rt.get(s)||null,e,t,n,a,r)),!0;case"gotpointercapture":return s=r.pointerId,Ft.set(s,zt(Ft.get(s)||null,e,t,n,a,r)),!0}return!1}(r,e,t,n,a))a.stopPropagation();else if(Mt(e,a),4&t&&-1<Ot.indexOf(e)){for(;null!==r;){var s=vr(r);if(null!==s&&wt(s),null===(s=Qt(e,t,n,a))&&Ha(e,t,a,Kt,n),s===r)break;r=s}null!==r&&a.stopPropagation()}else Ha(e,t,a,null,n)}}var Kt=null;function Qt(e,t,n,a){if(Kt=null,null!==(e=br(e=we(a))))if(null===(t=Ue(e)))e=null;else if(13===(n=t.tag)){if(null!==(e=Ge(t)))return e;e=null}else if(3===n){if(t.stateNode.current.memoizedState.isDehydrated)return 3===t.tag?t.stateNode.containerInfo:null;e=null}else t!==e&&(e=null);return Kt=e,null}function Yt(e){switch(e){case"cancel":case"click":case"close":case"contextmenu":case"copy":case"cut":case"auxclick":case"dblclick":case"dragend":case"dragstart":case"drop":case"focusin":case"focusout":case"input":case"invalid":case"keydown":case"keypress":case"keyup":case"mousedown":case"mouseup":case"paste":case"pause":case"play":case"pointercancel":case"pointerdown":case"pointerup":case"ratechange":case"reset":case"resize":case"seeked":case"submit":case"touchcancel":case"touchend":case"touchstart":case"volumechange":case"change":case"selectionchange":case"textInput":case"compositionstart":case"compositionend":case"compositionupdate":case"beforeblur":case"afterblur":case"beforeinput":case"blur":case"fullscreenchange":case"focus":case"hashchange":case"popstate":case"select":case"selectstart":return 1;case"drag":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"mousemove":case"mouseout":case"mouseover":case"pointermove":case"pointerout":case"pointerover":case"scroll":case"toggle":case"touchmove":case"wheel":case"mouseenter":case"mouseleave":case"pointerenter":case"pointerleave":return 4;case"message":switch(Je()){case $e:return 1;case et:return 4;case tt:case nt:return 16;case at:return 536870912;default:return 16}default:return 16}}var Zt=null,Jt=null,$t=null;function en(){if($t)return $t;var e,t,n=Jt,a=n.length,r="value"in Zt?Zt.value:Zt.textContent,s=r.length;for(e=0;e<a&&n[e]===r[e];e++);var o=a-e;for(t=1;t<=o&&n[a-t]===r[s-t];t++);return $t=r.slice(e,1<t?1-t:void 0)}function tn(e){var t=e.keyCode;return"charCode"in e?0===(e=e.charCode)&&13===t&&(e=13):e=t,10===e&&(e=13),32<=e||13===e?e:0}function nn(){return!0}function an(){return!1}function rn(e){function t(t,n,a,r,s){for(var o in this._reactName=t,this._targetInst=a,this.type=n,this.nativeEvent=r,this.target=s,this.currentTarget=null,e)e.hasOwnProperty(o)&&(t=e[o],this[o]=t?t(r):r[o]);return this.isDefaultPrevented=(null!=r.defaultPrevented?r.defaultPrevented:!1===r.returnValue)?nn:an,this.isPropagationStopped=an,this}return L(t.prototype,{preventDefault:function(){this.defaultPrevented=!0;var e=this.nativeEvent;e&&(e.preventDefault?e.preventDefault():"unknown"!==typeof e.returnValue&&(e.returnValue=!1),this.isDefaultPrevented=nn)},stopPropagation:function(){var e=this.nativeEvent;e&&(e.stopPropagation?e.stopPropagation():"unknown"!==typeof e.cancelBubble&&(e.cancelBubble=!0),this.isPropagationStopped=nn)},persist:function(){},isPersistent:nn}),t}var sn,on,cn,ln={eventPhase:0,bubbles:0,cancelable:0,timeStamp:function(e){return e.timeStamp||Date.now()},defaultPrevented:0,isTrusted:0},un=rn(ln),dn=L({},ln,{view:0,detail:0}),hn=rn(dn),pn=L({},dn,{screenX:0,screenY:0,clientX:0,clientY:0,pageX:0,pageY:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,getModifierState:In,button:0,buttons:0,relatedTarget:function(e){return void 0===e.relatedTarget?e.fromElement===e.srcElement?e.toElement:e.fromElement:e.relatedTarget},movementX:function(e){return"movementX"in e?e.movementX:(e!==cn&&(cn&&"mousemove"===e.type?(sn=e.screenX-cn.screenX,on=e.screenY-cn.screenY):on=sn=0,cn=e),sn)},movementY:function(e){return"movementY"in e?e.movementY:on}}),fn=rn(pn),mn=rn(L({},pn,{dataTransfer:0})),gn=rn(L({},dn,{relatedTarget:0})),yn=rn(L({},ln,{animationName:0,elapsedTime:0,pseudoElement:0})),bn=L({},ln,{clipboardData:function(e){return"clipboardData"in e?e.clipboardData:window.clipboardData}}),vn=rn(bn),xn=rn(L({},ln,{data:0})),wn={Esc:"Escape",Spacebar:" ",Left:"ArrowLeft",Up:"ArrowUp",Right:"ArrowRight",Down:"ArrowDown",Del:"Delete",Win:"OS",Menu:"ContextMenu",Apps:"ContextMenu",Scroll:"ScrollLock",MozPrintableKey:"Unidentified"},kn={8:"Backspace",9:"Tab",12:"Clear",13:"Enter",16:"Shift",17:"Control",18:"Alt",19:"Pause",20:"CapsLock",27:"Escape",32:" ",33:"PageUp",34:"PageDown",35:"End",36:"Home",37:"ArrowLeft",38:"ArrowUp",39:"ArrowRight",40:"ArrowDown",45:"Insert",46:"Delete",112:"F1",113:"F2",114:"F3",115:"F4",116:"F5",117:"F6",118:"F7",119:"F8",120:"F9",121:"F10",122:"F11",123:"F12",144:"NumLock",145:"ScrollLock",224:"Meta"},Sn={Alt:"altKey",Control:"ctrlKey",Meta:"metaKey",Shift:"shiftKey"};function Nn(e){var t=this.nativeEvent;return t.getModifierState?t.getModifierState(e):!!(e=Sn[e])&&!!t[e]}function In(){return Nn}var Tn=L({},dn,{key:function(e){if(e.key){var t=wn[e.key]||e.key;if("Unidentified"!==t)return t}return"keypress"===e.type?13===(e=tn(e))?"Enter":String.fromCharCode(e):"keydown"===e.type||"keyup"===e.type?kn[e.keyCode]||"Unidentified":""},code:0,location:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,repeat:0,locale:0,getModifierState:In,charCode:function(e){return"keypress"===e.type?tn(e):0},keyCode:function(e){return"keydown"===e.type||"keyup"===e.type?e.keyCode:0},which:function(e){return"keypress"===e.type?tn(e):"keydown"===e.type||"keyup"===e.type?e.keyCode:0}}),Cn=rn(Tn),En=rn(L({},pn,{pointerId:0,width:0,height:0,pressure:0,tangentialPressure:0,tiltX:0,tiltY:0,twist:0,pointerType:0,isPrimary:0})),_n=rn(L({},dn,{touches:0,targetTouches:0,changedTouches:0,altKey:0,metaKey:0,ctrlKey:0,shiftKey:0,getModifierState:In})),An=rn(L({},ln,{propertyName:0,elapsedTime:0,pseudoElement:0})),Rn=L({},pn,{deltaX:function(e){return"deltaX"in e?e.deltaX:"wheelDeltaX"in e?-e.wheelDeltaX:0},deltaY:function(e){return"deltaY"in e?e.deltaY:"wheelDeltaY"in e?-e.wheelDeltaY:"wheelDelta"in e?-e.wheelDelta:0},deltaZ:0,deltaMode:0}),Fn=rn(Rn),Dn=[9,13,27,32],On=u&&"CompositionEvent"in window,Mn=null;u&&"documentMode"in document&&(Mn=document.documentMode);var zn=u&&"TextEvent"in window&&!Mn,Ln=u&&(!On||Mn&&8<Mn&&11>=Mn),Bn=String.fromCharCode(32),Pn=!1;function Vn(e,t){switch(e){case"keyup":return-1!==Dn.indexOf(t.keyCode);case"keydown":return 229!==t.keyCode;case"keypress":case"mousedown":case"focusout":return!0;default:return!1}}function Wn(e){return"object"===typeof(e=e.detail)&&"data"in e?e.data:null}var Un=!1;var Gn={color:!0,date:!0,datetime:!0,"datetime-local":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function Hn(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return"input"===t?!!Gn[e.type]:"textarea"===t}function jn(e,t,n,a){Te(a),0<(t=qa(t,"onChange")).length&&(n=new un("onChange","change",null,n,a),e.push({event:n,listeners:t}))}var qn=null,Xn=null;function Kn(e){Ba(e,0)}function Qn(e){if(X(xr(e)))return e}function Yn(e,t){if("change"===e)return t}var Zn=!1;if(u){var Jn;if(u){var $n="oninput"in document;if(!$n){var ea=document.createElement("div");ea.setAttribute("oninput","return;"),$n="function"===typeof ea.oninput}Jn=$n}else Jn=!1;Zn=Jn&&(!document.documentMode||9<document.documentMode)}function ta(){qn&&(qn.detachEvent("onpropertychange",na),Xn=qn=null)}function na(e){if("value"===e.propertyName&&Qn(Xn)){var t=[];jn(t,Xn,e,we(e)),Re(Kn,t)}}function aa(e,t,n){"focusin"===e?(ta(),Xn=n,(qn=t).attachEvent("onpropertychange",na)):"focusout"===e&&ta()}function ra(e){if("selectionchange"===e||"keyup"===e||"keydown"===e)return Qn(Xn)}function sa(e,t){if("click"===e)return Qn(t)}function oa(e,t){if("input"===e||"change"===e)return Qn(t)}var ia="function"===typeof Object.is?Object.is:function(e,t){return e===t&&(0!==e||1/e===1/t)||e!==e&&t!==t};function ca(e,t){if(ia(e,t))return!0;if("object"!==typeof e||null===e||"object"!==typeof t||null===t)return!1;var n=Object.keys(e),a=Object.keys(t);if(n.length!==a.length)return!1;for(a=0;a<n.length;a++){var r=n[a];if(!d.call(t,r)||!ia(e[r],t[r]))return!1}return!0}function la(e){for(;e&&e.firstChild;)e=e.firstChild;return e}function ua(e,t){var n,a=la(e);for(e=0;a;){if(3===a.nodeType){if(n=e+a.textContent.length,e<=t&&n>=t)return{node:a,offset:t-e};e=n}e:{for(;a;){if(a.nextSibling){a=a.nextSibling;break e}a=a.parentNode}a=void 0}a=la(a)}}function da(e,t){return!(!e||!t)&&(e===t||(!e||3!==e.nodeType)&&(t&&3===t.nodeType?da(e,t.parentNode):"contains"in e?e.contains(t):!!e.compareDocumentPosition&&!!(16&e.compareDocumentPosition(t))))}function ha(){for(var e=window,t=K();t instanceof e.HTMLIFrameElement;){try{var n="string"===typeof t.contentWindow.location.href}catch(a){n=!1}if(!n)break;t=K((e=t.contentWindow).document)}return t}function pa(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return t&&("input"===t&&("text"===e.type||"search"===e.type||"tel"===e.type||"url"===e.type||"password"===e.type)||"textarea"===t||"true"===e.contentEditable)}function fa(e){var t=ha(),n=e.focusedElem,a=e.selectionRange;if(t!==n&&n&&n.ownerDocument&&da(n.ownerDocument.documentElement,n)){if(null!==a&&pa(n))if(t=a.start,void 0===(e=a.end)&&(e=t),"selectionStart"in n)n.selectionStart=t,n.selectionEnd=Math.min(e,n.value.length);else if((e=(t=n.ownerDocument||document)&&t.defaultView||window).getSelection){e=e.getSelection();var r=n.textContent.length,s=Math.min(a.start,r);a=void 0===a.end?s:Math.min(a.end,r),!e.extend&&s>a&&(r=a,a=s,s=r),r=ua(n,s);var o=ua(n,a);r&&o&&(1!==e.rangeCount||e.anchorNode!==r.node||e.anchorOffset!==r.offset||e.focusNode!==o.node||e.focusOffset!==o.offset)&&((t=t.createRange()).setStart(r.node,r.offset),e.removeAllRanges(),s>a?(e.addRange(t),e.extend(o.node,o.offset)):(t.setEnd(o.node,o.offset),e.addRange(t)))}for(t=[],e=n;e=e.parentNode;)1===e.nodeType&&t.push({element:e,left:e.scrollLeft,top:e.scrollTop});for("function"===typeof n.focus&&n.focus(),n=0;n<t.length;n++)(e=t[n]).element.scrollLeft=e.left,e.element.scrollTop=e.top}}var ma=u&&"documentMode"in document&&11>=document.documentMode,ga=null,ya=null,ba=null,va=!1;function xa(e,t,n){var a=n.window===n?n.document:9===n.nodeType?n:n.ownerDocument;va||null==ga||ga!==K(a)||("selectionStart"in(a=ga)&&pa(a)?a={start:a.selectionStart,end:a.selectionEnd}:a={anchorNode:(a=(a.ownerDocument&&a.ownerDocument.defaultView||window).getSelection()).anchorNode,anchorOffset:a.anchorOffset,focusNode:a.focusNode,focusOffset:a.focusOffset},ba&&ca(ba,a)||(ba=a,0<(a=qa(ya,"onSelect")).length&&(t=new un("onSelect","select",null,t,n),e.push({event:t,listeners:a}),t.target=ga)))}function wa(e,t){var n={};return n[e.toLowerCase()]=t.toLowerCase(),n["Webkit"+e]="webkit"+t,n["Moz"+e]="moz"+t,n}var ka={animationend:wa("Animation","AnimationEnd"),animationiteration:wa("Animation","AnimationIteration"),animationstart:wa("Animation","AnimationStart"),transitionend:wa("Transition","TransitionEnd")},Sa={},Na={};function Ia(e){if(Sa[e])return Sa[e];if(!ka[e])return e;var t,n=ka[e];for(t in n)if(n.hasOwnProperty(t)&&t in Na)return Sa[e]=n[t];return e}u&&(Na=document.createElement("div").style,"AnimationEvent"in window||(delete ka.animationend.animation,delete ka.animationiteration.animation,delete ka.animationstart.animation),"TransitionEvent"in window||delete ka.transitionend.transition);var Ta=Ia("animationend"),Ca=Ia("animationiteration"),Ea=Ia("animationstart"),_a=Ia("transitionend"),Aa=new Map,Ra="abort auxClick cancel canPlay canPlayThrough click close contextMenu copy cut drag dragEnd dragEnter dragExit dragLeave dragOver dragStart drop durationChange emptied encrypted ended error gotPointerCapture input invalid keyDown keyPress keyUp load loadedData loadedMetadata loadStart lostPointerCapture mouseDown mouseMove mouseOut mouseOver mouseUp paste pause play playing pointerCancel pointerDown pointerMove pointerOut pointerOver pointerUp progress rateChange reset resize seeked seeking stalled submit suspend timeUpdate touchCancel touchEnd touchStart volumeChange scroll toggle touchMove waiting wheel".split(" ");function Fa(e,t){Aa.set(e,t),c(t,[e])}for(var Da=0;Da<Ra.length;Da++){var Oa=Ra[Da];Fa(Oa.toLowerCase(),"on"+(Oa[0].toUpperCase()+Oa.slice(1)))}Fa(Ta,"onAnimationEnd"),Fa(Ca,"onAnimationIteration"),Fa(Ea,"onAnimationStart"),Fa("dblclick","onDoubleClick"),Fa("focusin","onFocus"),Fa("focusout","onBlur"),Fa(_a,"onTransitionEnd"),l("onMouseEnter",["mouseout","mouseover"]),l("onMouseLeave",["mouseout","mouseover"]),l("onPointerEnter",["pointerout","pointerover"]),l("onPointerLeave",["pointerout","pointerover"]),c("onChange","change click focusin focusout input keydown keyup selectionchange".split(" ")),c("onSelect","focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange".split(" ")),c("onBeforeInput",["compositionend","keypress","textInput","paste"]),c("onCompositionEnd","compositionend focusout keydown keypress keyup mousedown".split(" ")),c("onCompositionStart","compositionstart focusout keydown keypress keyup mousedown".split(" ")),c("onCompositionUpdate","compositionupdate focusout keydown keypress keyup mousedown".split(" "));var Ma="abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange resize seeked seeking stalled suspend timeupdate volumechange waiting".split(" "),za=new Set("cancel close invalid load scroll toggle".split(" ").concat(Ma));function La(e,t,n){var a=e.type||"unknown-event";e.currentTarget=n,function(e,t,n,a,r,o,i,c,l){if(We.apply(this,arguments),ze){if(!ze)throw Error(s(198));var u=Le;ze=!1,Le=null,Be||(Be=!0,Pe=u)}}(a,t,void 0,e),e.currentTarget=null}function Ba(e,t){t=0!==(4&t);for(var n=0;n<e.length;n++){var a=e[n],r=a.event;a=a.listeners;e:{var s=void 0;if(t)for(var o=a.length-1;0<=o;o--){var i=a[o],c=i.instance,l=i.currentTarget;if(i=i.listener,c!==s&&r.isPropagationStopped())break e;La(r,i,l),s=c}else for(o=0;o<a.length;o++){if(c=(i=a[o]).instance,l=i.currentTarget,i=i.listener,c!==s&&r.isPropagationStopped())break e;La(r,i,l),s=c}}}if(Be)throw e=Pe,Be=!1,Pe=null,e}function Pa(e,t){var n=t[mr];void 0===n&&(n=t[mr]=new Set);var a=e+"__bubble";n.has(a)||(Ga(t,e,2,!1),n.add(a))}function Va(e,t,n){var a=0;t&&(a|=4),Ga(n,e,a,t)}var Wa="_reactListening"+Math.random().toString(36).slice(2);function Ua(e){if(!e[Wa]){e[Wa]=!0,o.forEach((function(t){"selectionchange"!==t&&(za.has(t)||Va(t,!1,e),Va(t,!0,e))}));var t=9===e.nodeType?e:e.ownerDocument;null===t||t[Wa]||(t[Wa]=!0,Va("selectionchange",!1,t))}}function Ga(e,t,n,a){switch(Yt(t)){case 1:var r=jt;break;case 4:r=qt;break;default:r=Xt}n=r.bind(null,t,n,e),r=void 0,!De||"touchstart"!==t&&"touchmove"!==t&&"wheel"!==t||(r=!0),a?void 0!==r?e.addEventListener(t,n,{capture:!0,passive:r}):e.addEventListener(t,n,!0):void 0!==r?e.addEventListener(t,n,{passive:r}):e.addEventListener(t,n,!1)}function Ha(e,t,n,a,r){var s=a;if(0===(1&t)&&0===(2&t)&&null!==a)e:for(;;){if(null===a)return;var o=a.tag;if(3===o||4===o){var i=a.stateNode.containerInfo;if(i===r||8===i.nodeType&&i.parentNode===r)break;if(4===o)for(o=a.return;null!==o;){var c=o.tag;if((3===c||4===c)&&((c=o.stateNode.containerInfo)===r||8===c.nodeType&&c.parentNode===r))return;o=o.return}for(;null!==i;){if(null===(o=br(i)))return;if(5===(c=o.tag)||6===c){a=s=o;continue e}i=i.parentNode}}a=a.return}Re((function(){var a=s,r=we(n),o=[];e:{var i=Aa.get(e);if(void 0!==i){var c=un,l=e;switch(e){case"keypress":if(0===tn(n))break e;case"keydown":case"keyup":c=Cn;break;case"focusin":l="focus",c=gn;break;case"focusout":l="blur",c=gn;break;case"beforeblur":case"afterblur":c=gn;break;case"click":if(2===n.button)break e;case"auxclick":case"dblclick":case"mousedown":case"mousemove":case"mouseup":case"mouseout":case"mouseover":case"contextmenu":c=fn;break;case"drag":case"dragend":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"dragstart":case"drop":c=mn;break;case"touchcancel":case"touchend":case"touchmove":case"touchstart":c=_n;break;case Ta:case Ca:case Ea:c=yn;break;case _a:c=An;break;case"scroll":c=hn;break;case"wheel":c=Fn;break;case"copy":case"cut":case"paste":c=vn;break;case"gotpointercapture":case"lostpointercapture":case"pointercancel":case"pointerdown":case"pointermove":case"pointerout":case"pointerover":case"pointerup":c=En}var u=0!==(4&t),d=!u&&"scroll"===e,h=u?null!==i?i+"Capture":null:i;u=[];for(var p,f=a;null!==f;){var m=(p=f).stateNode;if(5===p.tag&&null!==m&&(p=m,null!==h&&(null!=(m=Fe(f,h))&&u.push(ja(f,m,p)))),d)break;f=f.return}0<u.length&&(i=new c(i,l,null,n,r),o.push({event:i,listeners:u}))}}if(0===(7&t)){if(c="mouseout"===e||"pointerout"===e,(!(i="mouseover"===e||"pointerover"===e)||n===xe||!(l=n.relatedTarget||n.fromElement)||!br(l)&&!l[fr])&&(c||i)&&(i=r.window===r?r:(i=r.ownerDocument)?i.defaultView||i.parentWindow:window,c?(c=a,null!==(l=(l=n.relatedTarget||n.toElement)?br(l):null)&&(l!==(d=Ue(l))||5!==l.tag&&6!==l.tag)&&(l=null)):(c=null,l=a),c!==l)){if(u=fn,m="onMouseLeave",h="onMouseEnter",f="mouse","pointerout"!==e&&"pointerover"!==e||(u=En,m="onPointerLeave",h="onPointerEnter",f="pointer"),d=null==c?i:xr(c),p=null==l?i:xr(l),(i=new u(m,f+"leave",c,n,r)).target=d,i.relatedTarget=p,m=null,br(r)===a&&((u=new u(h,f+"enter",l,n,r)).target=p,u.relatedTarget=d,m=u),d=m,c&&l)e:{for(h=l,f=0,p=u=c;p;p=Xa(p))f++;for(p=0,m=h;m;m=Xa(m))p++;for(;0<f-p;)u=Xa(u),f--;for(;0<p-f;)h=Xa(h),p--;for(;f--;){if(u===h||null!==h&&u===h.alternate)break e;u=Xa(u),h=Xa(h)}u=null}else u=null;null!==c&&Ka(o,i,c,u,!1),null!==l&&null!==d&&Ka(o,d,l,u,!0)}if("select"===(c=(i=a?xr(a):window).nodeName&&i.nodeName.toLowerCase())||"input"===c&&"file"===i.type)var g=Yn;else if(Hn(i))if(Zn)g=oa;else{g=ra;var y=aa}else(c=i.nodeName)&&"input"===c.toLowerCase()&&("checkbox"===i.type||"radio"===i.type)&&(g=sa);switch(g&&(g=g(e,a))?jn(o,g,n,r):(y&&y(e,i,a),"focusout"===e&&(y=i._wrapperState)&&y.controlled&&"number"===i.type&&ee(i,"number",i.value)),y=a?xr(a):window,e){case"focusin":(Hn(y)||"true"===y.contentEditable)&&(ga=y,ya=a,ba=null);break;case"focusout":ba=ya=ga=null;break;case"mousedown":va=!0;break;case"contextmenu":case"mouseup":case"dragend":va=!1,xa(o,n,r);break;case"selectionchange":if(ma)break;case"keydown":case"keyup":xa(o,n,r)}var b;if(On)e:{switch(e){case"compositionstart":var v="onCompositionStart";break e;case"compositionend":v="onCompositionEnd";break e;case"compositionupdate":v="onCompositionUpdate";break e}v=void 0}else Un?Vn(e,n)&&(v="onCompositionEnd"):"keydown"===e&&229===n.keyCode&&(v="onCompositionStart");v&&(Ln&&"ko"!==n.locale&&(Un||"onCompositionStart"!==v?"onCompositionEnd"===v&&Un&&(b=en()):(Jt="value"in(Zt=r)?Zt.value:Zt.textContent,Un=!0)),0<(y=qa(a,v)).length&&(v=new xn(v,e,null,n,r),o.push({event:v,listeners:y}),b?v.data=b:null!==(b=Wn(n))&&(v.data=b))),(b=zn?function(e,t){switch(e){case"compositionend":return Wn(t);case"keypress":return 32!==t.which?null:(Pn=!0,Bn);case"textInput":return(e=t.data)===Bn&&Pn?null:e;default:return null}}(e,n):function(e,t){if(Un)return"compositionend"===e||!On&&Vn(e,t)?(e=en(),$t=Jt=Zt=null,Un=!1,e):null;switch(e){case"paste":default:return null;case"keypress":if(!(t.ctrlKey||t.altKey||t.metaKey)||t.ctrlKey&&t.altKey){if(t.char&&1<t.char.length)return t.char;if(t.which)return String.fromCharCode(t.which)}return null;case"compositionend":return Ln&&"ko"!==t.locale?null:t.data}}(e,n))&&(0<(a=qa(a,"onBeforeInput")).length&&(r=new xn("onBeforeInput","beforeinput",null,n,r),o.push({event:r,listeners:a}),r.data=b))}Ba(o,t)}))}function ja(e,t,n){return{instance:e,listener:t,currentTarget:n}}function qa(e,t){for(var n=t+"Capture",a=[];null!==e;){var r=e,s=r.stateNode;5===r.tag&&null!==s&&(r=s,null!=(s=Fe(e,n))&&a.unshift(ja(e,s,r)),null!=(s=Fe(e,t))&&a.push(ja(e,s,r))),e=e.return}return a}function Xa(e){if(null===e)return null;do{e=e.return}while(e&&5!==e.tag);return e||null}function Ka(e,t,n,a,r){for(var s=t._reactName,o=[];null!==n&&n!==a;){var i=n,c=i.alternate,l=i.stateNode;if(null!==c&&c===a)break;5===i.tag&&null!==l&&(i=l,r?null!=(c=Fe(n,s))&&o.unshift(ja(n,c,i)):r||null!=(c=Fe(n,s))&&o.push(ja(n,c,i))),n=n.return}0!==o.length&&e.push({event:t,listeners:o})}var Qa=/\r\n?/g,Ya=/\u0000|\uFFFD/g;function Za(e){return("string"===typeof e?e:""+e).replace(Qa,"\n").replace(Ya,"")}function Ja(e,t,n){if(t=Za(t),Za(e)!==t&&n)throw Error(s(425))}function $a(){}var er=null,tr=null;function nr(e,t){return"textarea"===e||"noscript"===e||"string"===typeof t.children||"number"===typeof t.children||"object"===typeof t.dangerouslySetInnerHTML&&null!==t.dangerouslySetInnerHTML&&null!=t.dangerouslySetInnerHTML.__html}var ar="function"===typeof setTimeout?setTimeout:void 0,rr="function"===typeof clearTimeout?clearTimeout:void 0,sr="function"===typeof Promise?Promise:void 0,or="function"===typeof queueMicrotask?queueMicrotask:"undefined"!==typeof sr?function(e){return sr.resolve(null).then(e).catch(ir)}:ar;function ir(e){setTimeout((function(){throw e}))}function cr(e,t){var n=t,a=0;do{var r=n.nextSibling;if(e.removeChild(n),r&&8===r.nodeType)if("/$"===(n=r.data)){if(0===a)return e.removeChild(r),void Ut(t);a--}else"$"!==n&&"$?"!==n&&"$!"!==n||a++;n=r}while(n);Ut(t)}function lr(e){for(;null!=e;e=e.nextSibling){var t=e.nodeType;if(1===t||3===t)break;if(8===t){if("$"===(t=e.data)||"$!"===t||"$?"===t)break;if("/$"===t)return null}}return e}function ur(e){e=e.previousSibling;for(var t=0;e;){if(8===e.nodeType){var n=e.data;if("$"===n||"$!"===n||"$?"===n){if(0===t)return e;t--}else"/$"===n&&t++}e=e.previousSibling}return null}var dr=Math.random().toString(36).slice(2),hr="__reactFiber$"+dr,pr="__reactProps$"+dr,fr="__reactContainer$"+dr,mr="__reactEvents$"+dr,gr="__reactListeners$"+dr,yr="__reactHandles$"+dr;function br(e){var t=e[hr];if(t)return t;for(var n=e.parentNode;n;){if(t=n[fr]||n[hr]){if(n=t.alternate,null!==t.child||null!==n&&null!==n.child)for(e=ur(e);null!==e;){if(n=e[hr])return n;e=ur(e)}return t}n=(e=n).parentNode}return null}function vr(e){return!(e=e[hr]||e[fr])||5!==e.tag&&6!==e.tag&&13!==e.tag&&3!==e.tag?null:e}function xr(e){if(5===e.tag||6===e.tag)return e.stateNode;throw Error(s(33))}function wr(e){return e[pr]||null}var kr=[],Sr=-1;function Nr(e){return{current:e}}function Ir(e){0>Sr||(e.current=kr[Sr],kr[Sr]=null,Sr--)}function Tr(e,t){Sr++,kr[Sr]=e.current,e.current=t}var Cr={},Er=Nr(Cr),_r=Nr(!1),Ar=Cr;function Rr(e,t){var n=e.type.contextTypes;if(!n)return Cr;var a=e.stateNode;if(a&&a.__reactInternalMemoizedUnmaskedChildContext===t)return a.__reactInternalMemoizedMaskedChildContext;var r,s={};for(r in n)s[r]=t[r];return a&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=t,e.__reactInternalMemoizedMaskedChildContext=s),s}function Fr(e){return null!==(e=e.childContextTypes)&&void 0!==e}function Dr(){Ir(_r),Ir(Er)}function Or(e,t,n){if(Er.current!==Cr)throw Error(s(168));Tr(Er,t),Tr(_r,n)}function Mr(e,t,n){var a=e.stateNode;if(t=t.childContextTypes,"function"!==typeof a.getChildContext)return n;for(var r in a=a.getChildContext())if(!(r in t))throw Error(s(108,G(e)||"Unknown",r));return L({},n,a)}function zr(e){return e=(e=e.stateNode)&&e.__reactInternalMemoizedMergedChildContext||Cr,Ar=Er.current,Tr(Er,e),Tr(_r,_r.current),!0}function Lr(e,t,n){var a=e.stateNode;if(!a)throw Error(s(169));n?(e=Mr(e,t,Ar),a.__reactInternalMemoizedMergedChildContext=e,Ir(_r),Ir(Er),Tr(Er,e)):Ir(_r),Tr(_r,n)}var Br=null,Pr=!1,Vr=!1;function Wr(e){null===Br?Br=[e]:Br.push(e)}function Ur(){if(!Vr&&null!==Br){Vr=!0;var e=0,t=vt;try{var n=Br;for(vt=1;e<n.length;e++){var a=n[e];do{a=a(!0)}while(null!==a)}Br=null,Pr=!1}catch(r){throw null!==Br&&(Br=Br.slice(e+1)),Xe($e,Ur),r}finally{vt=t,Vr=!1}}return null}var Gr=[],Hr=0,jr=null,qr=0,Xr=[],Kr=0,Qr=null,Yr=1,Zr="";function Jr(e,t){Gr[Hr++]=qr,Gr[Hr++]=jr,jr=e,qr=t}function $r(e,t,n){Xr[Kr++]=Yr,Xr[Kr++]=Zr,Xr[Kr++]=Qr,Qr=e;var a=Yr;e=Zr;var r=32-ot(a)-1;a&=~(1<<r),n+=1;var s=32-ot(t)+r;if(30<s){var o=r-r%5;s=(a&(1<<o)-1).toString(32),a>>=o,r-=o,Yr=1<<32-ot(t)+r|n<<r|a,Zr=s+e}else Yr=1<<s|n<<r|a,Zr=e}function es(e){null!==e.return&&(Jr(e,1),$r(e,1,0))}function ts(e){for(;e===jr;)jr=Gr[--Hr],Gr[Hr]=null,qr=Gr[--Hr],Gr[Hr]=null;for(;e===Qr;)Qr=Xr[--Kr],Xr[Kr]=null,Zr=Xr[--Kr],Xr[Kr]=null,Yr=Xr[--Kr],Xr[Kr]=null}var ns=null,as=null,rs=!1,ss=null;function os(e,t){var n=Rl(5,null,null,0);n.elementType="DELETED",n.stateNode=t,n.return=e,null===(t=e.deletions)?(e.deletions=[n],e.flags|=16):t.push(n)}function is(e,t){switch(e.tag){case 5:var n=e.type;return null!==(t=1!==t.nodeType||n.toLowerCase()!==t.nodeName.toLowerCase()?null:t)&&(e.stateNode=t,ns=e,as=lr(t.firstChild),!0);case 6:return null!==(t=""===e.pendingProps||3!==t.nodeType?null:t)&&(e.stateNode=t,ns=e,as=null,!0);case 13:return null!==(t=8!==t.nodeType?null:t)&&(n=null!==Qr?{id:Yr,overflow:Zr}:null,e.memoizedState={dehydrated:t,treeContext:n,retryLane:1073741824},(n=Rl(18,null,null,0)).stateNode=t,n.return=e,e.child=n,ns=e,as=null,!0);default:return!1}}function cs(e){return 0!==(1&e.mode)&&0===(128&e.flags)}function ls(e){if(rs){var t=as;if(t){var n=t;if(!is(e,t)){if(cs(e))throw Error(s(418));t=lr(n.nextSibling);var a=ns;t&&is(e,t)?os(a,n):(e.flags=-4097&e.flags|2,rs=!1,ns=e)}}else{if(cs(e))throw Error(s(418));e.flags=-4097&e.flags|2,rs=!1,ns=e}}}function us(e){for(e=e.return;null!==e&&5!==e.tag&&3!==e.tag&&13!==e.tag;)e=e.return;ns=e}function ds(e){if(e!==ns)return!1;if(!rs)return us(e),rs=!0,!1;var t;if((t=3!==e.tag)&&!(t=5!==e.tag)&&(t="head"!==(t=e.type)&&"body"!==t&&!nr(e.type,e.memoizedProps)),t&&(t=as)){if(cs(e))throw hs(),Error(s(418));for(;t;)os(e,t),t=lr(t.nextSibling)}if(us(e),13===e.tag){if(!(e=null!==(e=e.memoizedState)?e.dehydrated:null))throw Error(s(317));e:{for(e=e.nextSibling,t=0;e;){if(8===e.nodeType){var n=e.data;if("/$"===n){if(0===t){as=lr(e.nextSibling);break e}t--}else"$"!==n&&"$!"!==n&&"$?"!==n||t++}e=e.nextSibling}as=null}}else as=ns?lr(e.stateNode.nextSibling):null;return!0}function hs(){for(var e=as;e;)e=lr(e.nextSibling)}function ps(){as=ns=null,rs=!1}function fs(e){null===ss?ss=[e]:ss.push(e)}var ms=x.ReactCurrentBatchConfig;function gs(e,t){if(e&&e.defaultProps){for(var n in t=L({},t),e=e.defaultProps)void 0===t[n]&&(t[n]=e[n]);return t}return t}var ys=Nr(null),bs=null,vs=null,xs=null;function ws(){xs=vs=bs=null}function ks(e){var t=ys.current;Ir(ys),e._currentValue=t}function Ss(e,t,n){for(;null!==e;){var a=e.alternate;if((e.childLanes&t)!==t?(e.childLanes|=t,null!==a&&(a.childLanes|=t)):null!==a&&(a.childLanes&t)!==t&&(a.childLanes|=t),e===n)break;e=e.return}}function Ns(e,t){bs=e,xs=vs=null,null!==(e=e.dependencies)&&null!==e.firstContext&&(0!==(e.lanes&t)&&(xi=!0),e.firstContext=null)}function Is(e){var t=e._currentValue;if(xs!==e)if(e={context:e,memoizedValue:t,next:null},null===vs){if(null===bs)throw Error(s(308));vs=e,bs.dependencies={lanes:0,firstContext:e}}else vs=vs.next=e;return t}var Ts=null;function Cs(e){null===Ts?Ts=[e]:Ts.push(e)}function Es(e,t,n,a){var r=t.interleaved;return null===r?(n.next=n,Cs(t)):(n.next=r.next,r.next=n),t.interleaved=n,_s(e,a)}function _s(e,t){e.lanes|=t;var n=e.alternate;for(null!==n&&(n.lanes|=t),n=e,e=e.return;null!==e;)e.childLanes|=t,null!==(n=e.alternate)&&(n.childLanes|=t),n=e,e=e.return;return 3===n.tag?n.stateNode:null}var As=!1;function Rs(e){e.updateQueue={baseState:e.memoizedState,firstBaseUpdate:null,lastBaseUpdate:null,shared:{pending:null,interleaved:null,lanes:0},effects:null}}function Fs(e,t){e=e.updateQueue,t.updateQueue===e&&(t.updateQueue={baseState:e.baseState,firstBaseUpdate:e.firstBaseUpdate,lastBaseUpdate:e.lastBaseUpdate,shared:e.shared,effects:e.effects})}function Ds(e,t){return{eventTime:e,lane:t,tag:0,payload:null,callback:null,next:null}}function Os(e,t,n){var a=e.updateQueue;if(null===a)return null;if(a=a.shared,0!==(2&Ec)){var r=a.pending;return null===r?t.next=t:(t.next=r.next,r.next=t),a.pending=t,_s(e,n)}return null===(r=a.interleaved)?(t.next=t,Cs(a)):(t.next=r.next,r.next=t),a.interleaved=t,_s(e,n)}function Ms(e,t,n){if(null!==(t=t.updateQueue)&&(t=t.shared,0!==(4194240&n))){var a=t.lanes;n|=a&=e.pendingLanes,t.lanes=n,bt(e,n)}}function zs(e,t){var n=e.updateQueue,a=e.alternate;if(null!==a&&n===(a=a.updateQueue)){var r=null,s=null;if(null!==(n=n.firstBaseUpdate)){do{var o={eventTime:n.eventTime,lane:n.lane,tag:n.tag,payload:n.payload,callback:n.callback,next:null};null===s?r=s=o:s=s.next=o,n=n.next}while(null!==n);null===s?r=s=t:s=s.next=t}else r=s=t;return n={baseState:a.baseState,firstBaseUpdate:r,lastBaseUpdate:s,shared:a.shared,effects:a.effects},void(e.updateQueue=n)}null===(e=n.lastBaseUpdate)?n.firstBaseUpdate=t:e.next=t,n.lastBaseUpdate=t}function Ls(e,t,n,a){var r=e.updateQueue;As=!1;var s=r.firstBaseUpdate,o=r.lastBaseUpdate,i=r.shared.pending;if(null!==i){r.shared.pending=null;var c=i,l=c.next;c.next=null,null===o?s=l:o.next=l,o=c;var u=e.alternate;null!==u&&((i=(u=u.updateQueue).lastBaseUpdate)!==o&&(null===i?u.firstBaseUpdate=l:i.next=l,u.lastBaseUpdate=c))}if(null!==s){var d=r.baseState;for(o=0,u=l=c=null,i=s;;){var h=i.lane,p=i.eventTime;if((a&h)===h){null!==u&&(u=u.next={eventTime:p,lane:0,tag:i.tag,payload:i.payload,callback:i.callback,next:null});e:{var f=e,m=i;switch(h=t,p=n,m.tag){case 1:if("function"===typeof(f=m.payload)){d=f.call(p,d,h);break e}d=f;break e;case 3:f.flags=-65537&f.flags|128;case 0:if(null===(h="function"===typeof(f=m.payload)?f.call(p,d,h):f)||void 0===h)break e;d=L({},d,h);break e;case 2:As=!0}}null!==i.callback&&0!==i.lane&&(e.flags|=64,null===(h=r.effects)?r.effects=[i]:h.push(i))}else p={eventTime:p,lane:h,tag:i.tag,payload:i.payload,callback:i.callback,next:null},null===u?(l=u=p,c=d):u=u.next=p,o|=h;if(null===(i=i.next)){if(null===(i=r.shared.pending))break;i=(h=i).next,h.next=null,r.lastBaseUpdate=h,r.shared.pending=null}}if(null===u&&(c=d),r.baseState=c,r.firstBaseUpdate=l,r.lastBaseUpdate=u,null!==(t=r.shared.interleaved)){r=t;do{o|=r.lane,r=r.next}while(r!==t)}else null===s&&(r.shared.lanes=0);zc|=o,e.lanes=o,e.memoizedState=d}}function Bs(e,t,n){if(e=t.effects,t.effects=null,null!==e)for(t=0;t<e.length;t++){var a=e[t],r=a.callback;if(null!==r){if(a.callback=null,a=n,"function"!==typeof r)throw Error(s(191,r));r.call(a)}}}var Ps=(new a.Component).refs;function Vs(e,t,n,a){n=null===(n=n(a,t=e.memoizedState))||void 0===n?t:L({},t,n),e.memoizedState=n,0===e.lanes&&(e.updateQueue.baseState=n)}var Ws={isMounted:function(e){return!!(e=e._reactInternals)&&Ue(e)===e},enqueueSetState:function(e,t,n){e=e._reactInternals;var a=el(),r=tl(e),s=Ds(a,r);s.payload=t,void 0!==n&&null!==n&&(s.callback=n),null!==(t=Os(e,s,r))&&(nl(t,e,r,a),Ms(t,e,r))},enqueueReplaceState:function(e,t,n){e=e._reactInternals;var a=el(),r=tl(e),s=Ds(a,r);s.tag=1,s.payload=t,void 0!==n&&null!==n&&(s.callback=n),null!==(t=Os(e,s,r))&&(nl(t,e,r,a),Ms(t,e,r))},enqueueForceUpdate:function(e,t){e=e._reactInternals;var n=el(),a=tl(e),r=Ds(n,a);r.tag=2,void 0!==t&&null!==t&&(r.callback=t),null!==(t=Os(e,r,a))&&(nl(t,e,a,n),Ms(t,e,a))}};function Us(e,t,n,a,r,s,o){return"function"===typeof(e=e.stateNode).shouldComponentUpdate?e.shouldComponentUpdate(a,s,o):!t.prototype||!t.prototype.isPureReactComponent||(!ca(n,a)||!ca(r,s))}function Gs(e,t,n){var a=!1,r=Cr,s=t.contextType;return"object"===typeof s&&null!==s?s=Is(s):(r=Fr(t)?Ar:Er.current,s=(a=null!==(a=t.contextTypes)&&void 0!==a)?Rr(e,r):Cr),t=new t(n,s),e.memoizedState=null!==t.state&&void 0!==t.state?t.state:null,t.updater=Ws,e.stateNode=t,t._reactInternals=e,a&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=r,e.__reactInternalMemoizedMaskedChildContext=s),t}function Hs(e,t,n,a){e=t.state,"function"===typeof t.componentWillReceiveProps&&t.componentWillReceiveProps(n,a),"function"===typeof t.UNSAFE_componentWillReceiveProps&&t.UNSAFE_componentWillReceiveProps(n,a),t.state!==e&&Ws.enqueueReplaceState(t,t.state,null)}function js(e,t,n,a){var r=e.stateNode;r.props=n,r.state=e.memoizedState,r.refs=Ps,Rs(e);var s=t.contextType;"object"===typeof s&&null!==s?r.context=Is(s):(s=Fr(t)?Ar:Er.current,r.context=Rr(e,s)),r.state=e.memoizedState,"function"===typeof(s=t.getDerivedStateFromProps)&&(Vs(e,t,s,n),r.state=e.memoizedState),"function"===typeof t.getDerivedStateFromProps||"function"===typeof r.getSnapshotBeforeUpdate||"function"!==typeof r.UNSAFE_componentWillMount&&"function"!==typeof r.componentWillMount||(t=r.state,"function"===typeof r.componentWillMount&&r.componentWillMount(),"function"===typeof r.UNSAFE_componentWillMount&&r.UNSAFE_componentWillMount(),t!==r.state&&Ws.enqueueReplaceState(r,r.state,null),Ls(e,n,r,a),r.state=e.memoizedState),"function"===typeof r.componentDidMount&&(e.flags|=4194308)}function qs(e,t,n){if(null!==(e=n.ref)&&"function"!==typeof e&&"object"!==typeof e){if(n._owner){if(n=n._owner){if(1!==n.tag)throw Error(s(309));var a=n.stateNode}if(!a)throw Error(s(147,e));var r=a,o=""+e;return null!==t&&null!==t.ref&&"function"===typeof t.ref&&t.ref._stringRef===o?t.ref:(t=function(e){var t=r.refs;t===Ps&&(t=r.refs={}),null===e?delete t[o]:t[o]=e},t._stringRef=o,t)}if("string"!==typeof e)throw Error(s(284));if(!n._owner)throw Error(s(290,e))}return e}function Xs(e,t){throw e=Object.prototype.toString.call(t),Error(s(31,"[object Object]"===e?"object with keys {"+Object.keys(t).join(", ")+"}":e))}function Ks(e){return(0,e._init)(e._payload)}function Qs(e){function t(t,n){if(e){var a=t.deletions;null===a?(t.deletions=[n],t.flags|=16):a.push(n)}}function n(n,a){if(!e)return null;for(;null!==a;)t(n,a),a=a.sibling;return null}function a(e,t){for(e=new Map;null!==t;)null!==t.key?e.set(t.key,t):e.set(t.index,t),t=t.sibling;return e}function r(e,t){return(e=Dl(e,t)).index=0,e.sibling=null,e}function o(t,n,a){return t.index=a,e?null!==(a=t.alternate)?(a=a.index)<n?(t.flags|=2,n):a:(t.flags|=2,n):(t.flags|=1048576,n)}function i(t){return e&&null===t.alternate&&(t.flags|=2),t}function c(e,t,n,a){return null===t||6!==t.tag?((t=Ll(n,e.mode,a)).return=e,t):((t=r(t,n)).return=e,t)}function l(e,t,n,a){var s=n.type;return s===S?d(e,t,n.props.children,a,n.key):null!==t&&(t.elementType===s||"object"===typeof s&&null!==s&&s.$$typeof===F&&Ks(s)===t.type)?((a=r(t,n.props)).ref=qs(e,t,n),a.return=e,a):((a=Ol(n.type,n.key,n.props,null,e.mode,a)).ref=qs(e,t,n),a.return=e,a)}function u(e,t,n,a){return null===t||4!==t.tag||t.stateNode.containerInfo!==n.containerInfo||t.stateNode.implementation!==n.implementation?((t=Bl(n,e.mode,a)).return=e,t):((t=r(t,n.children||[])).return=e,t)}function d(e,t,n,a,s){return null===t||7!==t.tag?((t=Ml(n,e.mode,a,s)).return=e,t):((t=r(t,n)).return=e,t)}function h(e,t,n){if("string"===typeof t&&""!==t||"number"===typeof t)return(t=Ll(""+t,e.mode,n)).return=e,t;if("object"===typeof t&&null!==t){switch(t.$$typeof){case w:return(n=Ol(t.type,t.key,t.props,null,e.mode,n)).ref=qs(e,null,t),n.return=e,n;case k:return(t=Bl(t,e.mode,n)).return=e,t;case F:return h(e,(0,t._init)(t._payload),n)}if(te(t)||M(t))return(t=Ml(t,e.mode,n,null)).return=e,t;Xs(e,t)}return null}function p(e,t,n,a){var r=null!==t?t.key:null;if("string"===typeof n&&""!==n||"number"===typeof n)return null!==r?null:c(e,t,""+n,a);if("object"===typeof n&&null!==n){switch(n.$$typeof){case w:return n.key===r?l(e,t,n,a):null;case k:return n.key===r?u(e,t,n,a):null;case F:return p(e,t,(r=n._init)(n._payload),a)}if(te(n)||M(n))return null!==r?null:d(e,t,n,a,null);Xs(e,n)}return null}function f(e,t,n,a,r){if("string"===typeof a&&""!==a||"number"===typeof a)return c(t,e=e.get(n)||null,""+a,r);if("object"===typeof a&&null!==a){switch(a.$$typeof){case w:return l(t,e=e.get(null===a.key?n:a.key)||null,a,r);case k:return u(t,e=e.get(null===a.key?n:a.key)||null,a,r);case F:return f(e,t,n,(0,a._init)(a._payload),r)}if(te(a)||M(a))return d(t,e=e.get(n)||null,a,r,null);Xs(t,a)}return null}function m(r,s,i,c){for(var l=null,u=null,d=s,m=s=0,g=null;null!==d&&m<i.length;m++){d.index>m?(g=d,d=null):g=d.sibling;var y=p(r,d,i[m],c);if(null===y){null===d&&(d=g);break}e&&d&&null===y.alternate&&t(r,d),s=o(y,s,m),null===u?l=y:u.sibling=y,u=y,d=g}if(m===i.length)return n(r,d),rs&&Jr(r,m),l;if(null===d){for(;m<i.length;m++)null!==(d=h(r,i[m],c))&&(s=o(d,s,m),null===u?l=d:u.sibling=d,u=d);return rs&&Jr(r,m),l}for(d=a(r,d);m<i.length;m++)null!==(g=f(d,r,m,i[m],c))&&(e&&null!==g.alternate&&d.delete(null===g.key?m:g.key),s=o(g,s,m),null===u?l=g:u.sibling=g,u=g);return e&&d.forEach((function(e){return t(r,e)})),rs&&Jr(r,m),l}function g(r,i,c,l){var u=M(c);if("function"!==typeof u)throw Error(s(150));if(null==(c=u.call(c)))throw Error(s(151));for(var d=u=null,m=i,g=i=0,y=null,b=c.next();null!==m&&!b.done;g++,b=c.next()){m.index>g?(y=m,m=null):y=m.sibling;var v=p(r,m,b.value,l);if(null===v){null===m&&(m=y);break}e&&m&&null===v.alternate&&t(r,m),i=o(v,i,g),null===d?u=v:d.sibling=v,d=v,m=y}if(b.done)return n(r,m),rs&&Jr(r,g),u;if(null===m){for(;!b.done;g++,b=c.next())null!==(b=h(r,b.value,l))&&(i=o(b,i,g),null===d?u=b:d.sibling=b,d=b);return rs&&Jr(r,g),u}for(m=a(r,m);!b.done;g++,b=c.next())null!==(b=f(m,r,g,b.value,l))&&(e&&null!==b.alternate&&m.delete(null===b.key?g:b.key),i=o(b,i,g),null===d?u=b:d.sibling=b,d=b);return e&&m.forEach((function(e){return t(r,e)})),rs&&Jr(r,g),u}return function e(a,s,o,c){if("object"===typeof o&&null!==o&&o.type===S&&null===o.key&&(o=o.props.children),"object"===typeof o&&null!==o){switch(o.$$typeof){case w:e:{for(var l=o.key,u=s;null!==u;){if(u.key===l){if((l=o.type)===S){if(7===u.tag){n(a,u.sibling),(s=r(u,o.props.children)).return=a,a=s;break e}}else if(u.elementType===l||"object"===typeof l&&null!==l&&l.$$typeof===F&&Ks(l)===u.type){n(a,u.sibling),(s=r(u,o.props)).ref=qs(a,u,o),s.return=a,a=s;break e}n(a,u);break}t(a,u),u=u.sibling}o.type===S?((s=Ml(o.props.children,a.mode,c,o.key)).return=a,a=s):((c=Ol(o.type,o.key,o.props,null,a.mode,c)).ref=qs(a,s,o),c.return=a,a=c)}return i(a);case k:e:{for(u=o.key;null!==s;){if(s.key===u){if(4===s.tag&&s.stateNode.containerInfo===o.containerInfo&&s.stateNode.implementation===o.implementation){n(a,s.sibling),(s=r(s,o.children||[])).return=a,a=s;break e}n(a,s);break}t(a,s),s=s.sibling}(s=Bl(o,a.mode,c)).return=a,a=s}return i(a);case F:return e(a,s,(u=o._init)(o._payload),c)}if(te(o))return m(a,s,o,c);if(M(o))return g(a,s,o,c);Xs(a,o)}return"string"===typeof o&&""!==o||"number"===typeof o?(o=""+o,null!==s&&6===s.tag?(n(a,s.sibling),(s=r(s,o)).return=a,a=s):(n(a,s),(s=Ll(o,a.mode,c)).return=a,a=s),i(a)):n(a,s)}}var Ys=Qs(!0),Zs=Qs(!1),Js={},$s=Nr(Js),eo=Nr(Js),to=Nr(Js);function no(e){if(e===Js)throw Error(s(174));return e}function ao(e,t){switch(Tr(to,t),Tr(eo,e),Tr($s,Js),e=t.nodeType){case 9:case 11:t=(t=t.documentElement)?t.namespaceURI:ce(null,"");break;default:t=ce(t=(e=8===e?t.parentNode:t).namespaceURI||null,e=e.tagName)}Ir($s),Tr($s,t)}function ro(){Ir($s),Ir(eo),Ir(to)}function so(e){no(to.current);var t=no($s.current),n=ce(t,e.type);t!==n&&(Tr(eo,e),Tr($s,n))}function oo(e){eo.current===e&&(Ir($s),Ir(eo))}var io=Nr(0);function co(e){for(var t=e;null!==t;){if(13===t.tag){var n=t.memoizedState;if(null!==n&&(null===(n=n.dehydrated)||"$?"===n.data||"$!"===n.data))return t}else if(19===t.tag&&void 0!==t.memoizedProps.revealOrder){if(0!==(128&t.flags))return t}else if(null!==t.child){t.child.return=t,t=t.child;continue}if(t===e)break;for(;null===t.sibling;){if(null===t.return||t.return===e)return null;t=t.return}t.sibling.return=t.return,t=t.sibling}return null}var lo=[];function uo(){for(var e=0;e<lo.length;e++)lo[e]._workInProgressVersionPrimary=null;lo.length=0}var ho=x.ReactCurrentDispatcher,po=x.ReactCurrentBatchConfig,fo=0,mo=null,go=null,yo=null,bo=!1,vo=!1,xo=0,wo=0;function ko(){throw Error(s(321))}function So(e,t){if(null===t)return!1;for(var n=0;n<t.length&&n<e.length;n++)if(!ia(e[n],t[n]))return!1;return!0}function No(e,t,n,a,r,o){if(fo=o,mo=t,t.memoizedState=null,t.updateQueue=null,t.lanes=0,ho.current=null===e||null===e.memoizedState?ii:ci,e=n(a,r),vo){o=0;do{if(vo=!1,xo=0,25<=o)throw Error(s(301));o+=1,yo=go=null,t.updateQueue=null,ho.current=li,e=n(a,r)}while(vo)}if(ho.current=oi,t=null!==go&&null!==go.next,fo=0,yo=go=mo=null,bo=!1,t)throw Error(s(300));return e}function Io(){var e=0!==xo;return xo=0,e}function To(){var e={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};return null===yo?mo.memoizedState=yo=e:yo=yo.next=e,yo}function Co(){if(null===go){var e=mo.alternate;e=null!==e?e.memoizedState:null}else e=go.next;var t=null===yo?mo.memoizedState:yo.next;if(null!==t)yo=t,go=e;else{if(null===e)throw Error(s(310));e={memoizedState:(go=e).memoizedState,baseState:go.baseState,baseQueue:go.baseQueue,queue:go.queue,next:null},null===yo?mo.memoizedState=yo=e:yo=yo.next=e}return yo}function Eo(e,t){return"function"===typeof t?t(e):t}function _o(e){var t=Co(),n=t.queue;if(null===n)throw Error(s(311));n.lastRenderedReducer=e;var a=go,r=a.baseQueue,o=n.pending;if(null!==o){if(null!==r){var i=r.next;r.next=o.next,o.next=i}a.baseQueue=r=o,n.pending=null}if(null!==r){o=r.next,a=a.baseState;var c=i=null,l=null,u=o;do{var d=u.lane;if((fo&d)===d)null!==l&&(l=l.next={lane:0,action:u.action,hasEagerState:u.hasEagerState,eagerState:u.eagerState,next:null}),a=u.hasEagerState?u.eagerState:e(a,u.action);else{var h={lane:d,action:u.action,hasEagerState:u.hasEagerState,eagerState:u.eagerState,next:null};null===l?(c=l=h,i=a):l=l.next=h,mo.lanes|=d,zc|=d}u=u.next}while(null!==u&&u!==o);null===l?i=a:l.next=c,ia(a,t.memoizedState)||(xi=!0),t.memoizedState=a,t.baseState=i,t.baseQueue=l,n.lastRenderedState=a}if(null!==(e=n.interleaved)){r=e;do{o=r.lane,mo.lanes|=o,zc|=o,r=r.next}while(r!==e)}else null===r&&(n.lanes=0);return[t.memoizedState,n.dispatch]}function Ao(e){var t=Co(),n=t.queue;if(null===n)throw Error(s(311));n.lastRenderedReducer=e;var a=n.dispatch,r=n.pending,o=t.memoizedState;if(null!==r){n.pending=null;var i=r=r.next;do{o=e(o,i.action),i=i.next}while(i!==r);ia(o,t.memoizedState)||(xi=!0),t.memoizedState=o,null===t.baseQueue&&(t.baseState=o),n.lastRenderedState=o}return[o,a]}function Ro(){}function Fo(e,t){var n=mo,a=Co(),r=t(),o=!ia(a.memoizedState,r);if(o&&(a.memoizedState=r,xi=!0),a=a.queue,Ho(Mo.bind(null,n,a,e),[e]),a.getSnapshot!==t||o||null!==yo&&1&yo.memoizedState.tag){if(n.flags|=2048,Po(9,Oo.bind(null,n,a,r,t),void 0,null),null===_c)throw Error(s(349));0!==(30&fo)||Do(n,t,r)}return r}function Do(e,t,n){e.flags|=16384,e={getSnapshot:t,value:n},null===(t=mo.updateQueue)?(t={lastEffect:null,stores:null},mo.updateQueue=t,t.stores=[e]):null===(n=t.stores)?t.stores=[e]:n.push(e)}function Oo(e,t,n,a){t.value=n,t.getSnapshot=a,zo(t)&&Lo(e)}function Mo(e,t,n){return n((function(){zo(t)&&Lo(e)}))}function zo(e){var t=e.getSnapshot;e=e.value;try{var n=t();return!ia(e,n)}catch(a){return!0}}function Lo(e){var t=_s(e,1);null!==t&&nl(t,e,1,-1)}function Bo(e){var t=To();return"function"===typeof e&&(e=e()),t.memoizedState=t.baseState=e,e={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:Eo,lastRenderedState:e},t.queue=e,e=e.dispatch=ni.bind(null,mo,e),[t.memoizedState,e]}function Po(e,t,n,a){return e={tag:e,create:t,destroy:n,deps:a,next:null},null===(t=mo.updateQueue)?(t={lastEffect:null,stores:null},mo.updateQueue=t,t.lastEffect=e.next=e):null===(n=t.lastEffect)?t.lastEffect=e.next=e:(a=n.next,n.next=e,e.next=a,t.lastEffect=e),e}function Vo(){return Co().memoizedState}function Wo(e,t,n,a){var r=To();mo.flags|=e,r.memoizedState=Po(1|t,n,void 0,void 0===a?null:a)}function Uo(e,t,n,a){var r=Co();a=void 0===a?null:a;var s=void 0;if(null!==go){var o=go.memoizedState;if(s=o.destroy,null!==a&&So(a,o.deps))return void(r.memoizedState=Po(t,n,s,a))}mo.flags|=e,r.memoizedState=Po(1|t,n,s,a)}function Go(e,t){return Wo(8390656,8,e,t)}function Ho(e,t){return Uo(2048,8,e,t)}function jo(e,t){return Uo(4,2,e,t)}function qo(e,t){return Uo(4,4,e,t)}function Xo(e,t){return"function"===typeof t?(e=e(),t(e),function(){t(null)}):null!==t&&void 0!==t?(e=e(),t.current=e,function(){t.current=null}):void 0}function Ko(e,t,n){return n=null!==n&&void 0!==n?n.concat([e]):null,Uo(4,4,Xo.bind(null,t,e),n)}function Qo(){}function Yo(e,t){var n=Co();t=void 0===t?null:t;var a=n.memoizedState;return null!==a&&null!==t&&So(t,a[1])?a[0]:(n.memoizedState=[e,t],e)}function Zo(e,t){var n=Co();t=void 0===t?null:t;var a=n.memoizedState;return null!==a&&null!==t&&So(t,a[1])?a[0]:(e=e(),n.memoizedState=[e,t],e)}function Jo(e,t,n){return 0===(21&fo)?(e.baseState&&(e.baseState=!1,xi=!0),e.memoizedState=n):(ia(n,t)||(n=mt(),mo.lanes|=n,zc|=n,e.baseState=!0),t)}function $o(e,t){var n=vt;vt=0!==n&&4>n?n:4,e(!0);var a=po.transition;po.transition={};try{e(!1),t()}finally{vt=n,po.transition=a}}function ei(){return Co().memoizedState}function ti(e,t,n){var a=tl(e);if(n={lane:a,action:n,hasEagerState:!1,eagerState:null,next:null},ai(e))ri(t,n);else if(null!==(n=Es(e,t,n,a))){nl(n,e,a,el()),si(n,t,a)}}function ni(e,t,n){var a=tl(e),r={lane:a,action:n,hasEagerState:!1,eagerState:null,next:null};if(ai(e))ri(t,r);else{var s=e.alternate;if(0===e.lanes&&(null===s||0===s.lanes)&&null!==(s=t.lastRenderedReducer))try{var o=t.lastRenderedState,i=s(o,n);if(r.hasEagerState=!0,r.eagerState=i,ia(i,o)){var c=t.interleaved;return null===c?(r.next=r,Cs(t)):(r.next=c.next,c.next=r),void(t.interleaved=r)}}catch(l){}null!==(n=Es(e,t,r,a))&&(nl(n,e,a,r=el()),si(n,t,a))}}function ai(e){var t=e.alternate;return e===mo||null!==t&&t===mo}function ri(e,t){vo=bo=!0;var n=e.pending;null===n?t.next=t:(t.next=n.next,n.next=t),e.pending=t}function si(e,t,n){if(0!==(4194240&n)){var a=t.lanes;n|=a&=e.pendingLanes,t.lanes=n,bt(e,n)}}var oi={readContext:Is,useCallback:ko,useContext:ko,useEffect:ko,useImperativeHandle:ko,useInsertionEffect:ko,useLayoutEffect:ko,useMemo:ko,useReducer:ko,useRef:ko,useState:ko,useDebugValue:ko,useDeferredValue:ko,useTransition:ko,useMutableSource:ko,useSyncExternalStore:ko,useId:ko,unstable_isNewReconciler:!1},ii={readContext:Is,useCallback:function(e,t){return To().memoizedState=[e,void 0===t?null:t],e},useContext:Is,useEffect:Go,useImperativeHandle:function(e,t,n){return n=null!==n&&void 0!==n?n.concat([e]):null,Wo(4194308,4,Xo.bind(null,t,e),n)},useLayoutEffect:function(e,t){return Wo(4194308,4,e,t)},useInsertionEffect:function(e,t){return Wo(4,2,e,t)},useMemo:function(e,t){var n=To();return t=void 0===t?null:t,e=e(),n.memoizedState=[e,t],e},useReducer:function(e,t,n){var a=To();return t=void 0!==n?n(t):t,a.memoizedState=a.baseState=t,e={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:e,lastRenderedState:t},a.queue=e,e=e.dispatch=ti.bind(null,mo,e),[a.memoizedState,e]},useRef:function(e){return e={current:e},To().memoizedState=e},useState:Bo,useDebugValue:Qo,useDeferredValue:function(e){return To().memoizedState=e},useTransition:function(){var e=Bo(!1),t=e[0];return e=$o.bind(null,e[1]),To().memoizedState=e,[t,e]},useMutableSource:function(){},useSyncExternalStore:function(e,t,n){var a=mo,r=To();if(rs){if(void 0===n)throw Error(s(407));n=n()}else{if(n=t(),null===_c)throw Error(s(349));0!==(30&fo)||Do(a,t,n)}r.memoizedState=n;var o={value:n,getSnapshot:t};return r.queue=o,Go(Mo.bind(null,a,o,e),[e]),a.flags|=2048,Po(9,Oo.bind(null,a,o,n,t),void 0,null),n},useId:function(){var e=To(),t=_c.identifierPrefix;if(rs){var n=Zr;t=":"+t+"R"+(n=(Yr&~(1<<32-ot(Yr)-1)).toString(32)+n),0<(n=xo++)&&(t+="H"+n.toString(32)),t+=":"}else t=":"+t+"r"+(n=wo++).toString(32)+":";return e.memoizedState=t},unstable_isNewReconciler:!1},ci={readContext:Is,useCallback:Yo,useContext:Is,useEffect:Ho,useImperativeHandle:Ko,useInsertionEffect:jo,useLayoutEffect:qo,useMemo:Zo,useReducer:_o,useRef:Vo,useState:function(){return _o(Eo)},useDebugValue:Qo,useDeferredValue:function(e){return Jo(Co(),go.memoizedState,e)},useTransition:function(){return[_o(Eo)[0],Co().memoizedState]},useMutableSource:Ro,useSyncExternalStore:Fo,useId:ei,unstable_isNewReconciler:!1},li={readContext:Is,useCallback:Yo,useContext:Is,useEffect:Ho,useImperativeHandle:Ko,useInsertionEffect:jo,useLayoutEffect:qo,useMemo:Zo,useReducer:Ao,useRef:Vo,useState:function(){return Ao(Eo)},useDebugValue:Qo,useDeferredValue:function(e){var t=Co();return null===go?t.memoizedState=e:Jo(t,go.memoizedState,e)},useTransition:function(){return[Ao(Eo)[0],Co().memoizedState]},useMutableSource:Ro,useSyncExternalStore:Fo,useId:ei,unstable_isNewReconciler:!1};function ui(e,t){try{var n="",a=t;do{n+=W(a),a=a.return}while(a);var r=n}catch(s){r="\nError generating stack: "+s.message+"\n"+s.stack}return{value:e,source:t,stack:r,digest:null}}function di(e,t,n){return{value:e,source:null,stack:null!=n?n:null,digest:null!=t?t:null}}function hi(e,t){try{console.error(t.value)}catch(n){setTimeout((function(){throw n}))}}var pi="function"===typeof WeakMap?WeakMap:Map;function fi(e,t,n){(n=Ds(-1,n)).tag=3,n.payload={element:null};var a=t.value;return n.callback=function(){Hc||(Hc=!0,jc=a),hi(0,t)},n}function mi(e,t,n){(n=Ds(-1,n)).tag=3;var a=e.type.getDerivedStateFromError;if("function"===typeof a){var r=t.value;n.payload=function(){return a(r)},n.callback=function(){hi(0,t)}}var s=e.stateNode;return null!==s&&"function"===typeof s.componentDidCatch&&(n.callback=function(){hi(0,t),"function"!==typeof a&&(null===qc?qc=new Set([this]):qc.add(this));var e=t.stack;this.componentDidCatch(t.value,{componentStack:null!==e?e:""})}),n}function gi(e,t,n){var a=e.pingCache;if(null===a){a=e.pingCache=new pi;var r=new Set;a.set(t,r)}else void 0===(r=a.get(t))&&(r=new Set,a.set(t,r));r.has(n)||(r.add(n),e=Il.bind(null,e,t,n),t.then(e,e))}function yi(e){do{var t;if((t=13===e.tag)&&(t=null===(t=e.memoizedState)||null!==t.dehydrated),t)return e;e=e.return}while(null!==e);return null}function bi(e,t,n,a,r){return 0===(1&e.mode)?(e===t?e.flags|=65536:(e.flags|=128,n.flags|=131072,n.flags&=-52805,1===n.tag&&(null===n.alternate?n.tag=17:((t=Ds(-1,1)).tag=2,Os(n,t,1))),n.lanes|=1),e):(e.flags|=65536,e.lanes=r,e)}var vi=x.ReactCurrentOwner,xi=!1;function wi(e,t,n,a){t.child=null===e?Zs(t,null,n,a):Ys(t,e.child,n,a)}function ki(e,t,n,a,r){n=n.render;var s=t.ref;return Ns(t,r),a=No(e,t,n,a,s,r),n=Io(),null===e||xi?(rs&&n&&es(t),t.flags|=1,wi(e,t,a,r),t.child):(t.updateQueue=e.updateQueue,t.flags&=-2053,e.lanes&=~r,Hi(e,t,r))}function Si(e,t,n,a,r){if(null===e){var s=n.type;return"function"!==typeof s||Fl(s)||void 0!==s.defaultProps||null!==n.compare||void 0!==n.defaultProps?((e=Ol(n.type,null,a,t,t.mode,r)).ref=t.ref,e.return=t,t.child=e):(t.tag=15,t.type=s,Ni(e,t,s,a,r))}if(s=e.child,0===(e.lanes&r)){var o=s.memoizedProps;if((n=null!==(n=n.compare)?n:ca)(o,a)&&e.ref===t.ref)return Hi(e,t,r)}return t.flags|=1,(e=Dl(s,a)).ref=t.ref,e.return=t,t.child=e}function Ni(e,t,n,a,r){if(null!==e){var s=e.memoizedProps;if(ca(s,a)&&e.ref===t.ref){if(xi=!1,t.pendingProps=a=s,0===(e.lanes&r))return t.lanes=e.lanes,Hi(e,t,r);0!==(131072&e.flags)&&(xi=!0)}}return Ci(e,t,n,a,r)}function Ii(e,t,n){var a=t.pendingProps,r=a.children,s=null!==e?e.memoizedState:null;if("hidden"===a.mode)if(0===(1&t.mode))t.memoizedState={baseLanes:0,cachePool:null,transitions:null},Tr(Dc,Fc),Fc|=n;else{if(0===(1073741824&n))return e=null!==s?s.baseLanes|n:n,t.lanes=t.childLanes=1073741824,t.memoizedState={baseLanes:e,cachePool:null,transitions:null},t.updateQueue=null,Tr(Dc,Fc),Fc|=e,null;t.memoizedState={baseLanes:0,cachePool:null,transitions:null},a=null!==s?s.baseLanes:n,Tr(Dc,Fc),Fc|=a}else null!==s?(a=s.baseLanes|n,t.memoizedState=null):a=n,Tr(Dc,Fc),Fc|=a;return wi(e,t,r,n),t.child}function Ti(e,t){var n=t.ref;(null===e&&null!==n||null!==e&&e.ref!==n)&&(t.flags|=512,t.flags|=2097152)}function Ci(e,t,n,a,r){var s=Fr(n)?Ar:Er.current;return s=Rr(t,s),Ns(t,r),n=No(e,t,n,a,s,r),a=Io(),null===e||xi?(rs&&a&&es(t),t.flags|=1,wi(e,t,n,r),t.child):(t.updateQueue=e.updateQueue,t.flags&=-2053,e.lanes&=~r,Hi(e,t,r))}function Ei(e,t,n,a,r){if(Fr(n)){var s=!0;zr(t)}else s=!1;if(Ns(t,r),null===t.stateNode)Gi(e,t),Gs(t,n,a),js(t,n,a,r),a=!0;else if(null===e){var o=t.stateNode,i=t.memoizedProps;o.props=i;var c=o.context,l=n.contextType;"object"===typeof l&&null!==l?l=Is(l):l=Rr(t,l=Fr(n)?Ar:Er.current);var u=n.getDerivedStateFromProps,d="function"===typeof u||"function"===typeof o.getSnapshotBeforeUpdate;d||"function"!==typeof o.UNSAFE_componentWillReceiveProps&&"function"!==typeof o.componentWillReceiveProps||(i!==a||c!==l)&&Hs(t,o,a,l),As=!1;var h=t.memoizedState;o.state=h,Ls(t,a,o,r),c=t.memoizedState,i!==a||h!==c||_r.current||As?("function"===typeof u&&(Vs(t,n,u,a),c=t.memoizedState),(i=As||Us(t,n,i,a,h,c,l))?(d||"function"!==typeof o.UNSAFE_componentWillMount&&"function"!==typeof o.componentWillMount||("function"===typeof o.componentWillMount&&o.componentWillMount(),"function"===typeof o.UNSAFE_componentWillMount&&o.UNSAFE_componentWillMount()),"function"===typeof o.componentDidMount&&(t.flags|=4194308)):("function"===typeof o.componentDidMount&&(t.flags|=4194308),t.memoizedProps=a,t.memoizedState=c),o.props=a,o.state=c,o.context=l,a=i):("function"===typeof o.componentDidMount&&(t.flags|=4194308),a=!1)}else{o=t.stateNode,Fs(e,t),i=t.memoizedProps,l=t.type===t.elementType?i:gs(t.type,i),o.props=l,d=t.pendingProps,h=o.context,"object"===typeof(c=n.contextType)&&null!==c?c=Is(c):c=Rr(t,c=Fr(n)?Ar:Er.current);var p=n.getDerivedStateFromProps;(u="function"===typeof p||"function"===typeof o.getSnapshotBeforeUpdate)||"function"!==typeof o.UNSAFE_componentWillReceiveProps&&"function"!==typeof o.componentWillReceiveProps||(i!==d||h!==c)&&Hs(t,o,a,c),As=!1,h=t.memoizedState,o.state=h,Ls(t,a,o,r);var f=t.memoizedState;i!==d||h!==f||_r.current||As?("function"===typeof p&&(Vs(t,n,p,a),f=t.memoizedState),(l=As||Us(t,n,l,a,h,f,c)||!1)?(u||"function"!==typeof o.UNSAFE_componentWillUpdate&&"function"!==typeof o.componentWillUpdate||("function"===typeof o.componentWillUpdate&&o.componentWillUpdate(a,f,c),"function"===typeof o.UNSAFE_componentWillUpdate&&o.UNSAFE_componentWillUpdate(a,f,c)),"function"===typeof o.componentDidUpdate&&(t.flags|=4),"function"===typeof o.getSnapshotBeforeUpdate&&(t.flags|=1024)):("function"!==typeof o.componentDidUpdate||i===e.memoizedProps&&h===e.memoizedState||(t.flags|=4),"function"!==typeof o.getSnapshotBeforeUpdate||i===e.memoizedProps&&h===e.memoizedState||(t.flags|=1024),t.memoizedProps=a,t.memoizedState=f),o.props=a,o.state=f,o.context=c,a=l):("function"!==typeof o.componentDidUpdate||i===e.memoizedProps&&h===e.memoizedState||(t.flags|=4),"function"!==typeof o.getSnapshotBeforeUpdate||i===e.memoizedProps&&h===e.memoizedState||(t.flags|=1024),a=!1)}return _i(e,t,n,a,s,r)}function _i(e,t,n,a,r,s){Ti(e,t);var o=0!==(128&t.flags);if(!a&&!o)return r&&Lr(t,n,!1),Hi(e,t,s);a=t.stateNode,vi.current=t;var i=o&&"function"!==typeof n.getDerivedStateFromError?null:a.render();return t.flags|=1,null!==e&&o?(t.child=Ys(t,e.child,null,s),t.child=Ys(t,null,i,s)):wi(e,t,i,s),t.memoizedState=a.state,r&&Lr(t,n,!0),t.child}function Ai(e){var t=e.stateNode;t.pendingContext?Or(0,t.pendingContext,t.pendingContext!==t.context):t.context&&Or(0,t.context,!1),ao(e,t.containerInfo)}function Ri(e,t,n,a,r){return ps(),fs(r),t.flags|=256,wi(e,t,n,a),t.child}var Fi,Di,Oi,Mi={dehydrated:null,treeContext:null,retryLane:0};function zi(e){return{baseLanes:e,cachePool:null,transitions:null}}function Li(e,t,n){var a,r=t.pendingProps,o=io.current,i=!1,c=0!==(128&t.flags);if((a=c)||(a=(null===e||null!==e.memoizedState)&&0!==(2&o)),a?(i=!0,t.flags&=-129):null!==e&&null===e.memoizedState||(o|=1),Tr(io,1&o),null===e)return ls(t),null!==(e=t.memoizedState)&&null!==(e=e.dehydrated)?(0===(1&t.mode)?t.lanes=1:"$!"===e.data?t.lanes=8:t.lanes=1073741824,null):(c=r.children,e=r.fallback,i?(r=t.mode,i=t.child,c={mode:"hidden",children:c},0===(1&r)&&null!==i?(i.childLanes=0,i.pendingProps=c):i=zl(c,r,0,null),e=Ml(e,r,n,null),i.return=t,e.return=t,i.sibling=e,t.child=i,t.child.memoizedState=zi(n),t.memoizedState=Mi,e):Bi(t,c));if(null!==(o=e.memoizedState)&&null!==(a=o.dehydrated))return function(e,t,n,a,r,o,i){if(n)return 256&t.flags?(t.flags&=-257,Pi(e,t,i,a=di(Error(s(422))))):null!==t.memoizedState?(t.child=e.child,t.flags|=128,null):(o=a.fallback,r=t.mode,a=zl({mode:"visible",children:a.children},r,0,null),(o=Ml(o,r,i,null)).flags|=2,a.return=t,o.return=t,a.sibling=o,t.child=a,0!==(1&t.mode)&&Ys(t,e.child,null,i),t.child.memoizedState=zi(i),t.memoizedState=Mi,o);if(0===(1&t.mode))return Pi(e,t,i,null);if("$!"===r.data){if(a=r.nextSibling&&r.nextSibling.dataset)var c=a.dgst;return a=c,Pi(e,t,i,a=di(o=Error(s(419)),a,void 0))}if(c=0!==(i&e.childLanes),xi||c){if(null!==(a=_c)){switch(i&-i){case 4:r=2;break;case 16:r=8;break;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:r=32;break;case 536870912:r=268435456;break;default:r=0}0!==(r=0!==(r&(a.suspendedLanes|i))?0:r)&&r!==o.retryLane&&(o.retryLane=r,_s(e,r),nl(a,e,r,-1))}return ml(),Pi(e,t,i,a=di(Error(s(421))))}return"$?"===r.data?(t.flags|=128,t.child=e.child,t=Cl.bind(null,e),r._reactRetry=t,null):(e=o.treeContext,as=lr(r.nextSibling),ns=t,rs=!0,ss=null,null!==e&&(Xr[Kr++]=Yr,Xr[Kr++]=Zr,Xr[Kr++]=Qr,Yr=e.id,Zr=e.overflow,Qr=t),(t=Bi(t,a.children)).flags|=4096,t)}(e,t,c,r,a,o,n);if(i){i=r.fallback,c=t.mode,a=(o=e.child).sibling;var l={mode:"hidden",children:r.children};return 0===(1&c)&&t.child!==o?((r=t.child).childLanes=0,r.pendingProps=l,t.deletions=null):(r=Dl(o,l)).subtreeFlags=14680064&o.subtreeFlags,null!==a?i=Dl(a,i):(i=Ml(i,c,n,null)).flags|=2,i.return=t,r.return=t,r.sibling=i,t.child=r,r=i,i=t.child,c=null===(c=e.child.memoizedState)?zi(n):{baseLanes:c.baseLanes|n,cachePool:null,transitions:c.transitions},i.memoizedState=c,i.childLanes=e.childLanes&~n,t.memoizedState=Mi,r}return e=(i=e.child).sibling,r=Dl(i,{mode:"visible",children:r.children}),0===(1&t.mode)&&(r.lanes=n),r.return=t,r.sibling=null,null!==e&&(null===(n=t.deletions)?(t.deletions=[e],t.flags|=16):n.push(e)),t.child=r,t.memoizedState=null,r}function Bi(e,t){return(t=zl({mode:"visible",children:t},e.mode,0,null)).return=e,e.child=t}function Pi(e,t,n,a){return null!==a&&fs(a),Ys(t,e.child,null,n),(e=Bi(t,t.pendingProps.children)).flags|=2,t.memoizedState=null,e}function Vi(e,t,n){e.lanes|=t;var a=e.alternate;null!==a&&(a.lanes|=t),Ss(e.return,t,n)}function Wi(e,t,n,a,r){var s=e.memoizedState;null===s?e.memoizedState={isBackwards:t,rendering:null,renderingStartTime:0,last:a,tail:n,tailMode:r}:(s.isBackwards=t,s.rendering=null,s.renderingStartTime=0,s.last=a,s.tail=n,s.tailMode=r)}function Ui(e,t,n){var a=t.pendingProps,r=a.revealOrder,s=a.tail;if(wi(e,t,a.children,n),0!==(2&(a=io.current)))a=1&a|2,t.flags|=128;else{if(null!==e&&0!==(128&e.flags))e:for(e=t.child;null!==e;){if(13===e.tag)null!==e.memoizedState&&Vi(e,n,t);else if(19===e.tag)Vi(e,n,t);else if(null!==e.child){e.child.return=e,e=e.child;continue}if(e===t)break e;for(;null===e.sibling;){if(null===e.return||e.return===t)break e;e=e.return}e.sibling.return=e.return,e=e.sibling}a&=1}if(Tr(io,a),0===(1&t.mode))t.memoizedState=null;else switch(r){case"forwards":for(n=t.child,r=null;null!==n;)null!==(e=n.alternate)&&null===co(e)&&(r=n),n=n.sibling;null===(n=r)?(r=t.child,t.child=null):(r=n.sibling,n.sibling=null),Wi(t,!1,r,n,s);break;case"backwards":for(n=null,r=t.child,t.child=null;null!==r;){if(null!==(e=r.alternate)&&null===co(e)){t.child=r;break}e=r.sibling,r.sibling=n,n=r,r=e}Wi(t,!0,n,null,s);break;case"together":Wi(t,!1,null,null,void 0);break;default:t.memoizedState=null}return t.child}function Gi(e,t){0===(1&t.mode)&&null!==e&&(e.alternate=null,t.alternate=null,t.flags|=2)}function Hi(e,t,n){if(null!==e&&(t.dependencies=e.dependencies),zc|=t.lanes,0===(n&t.childLanes))return null;if(null!==e&&t.child!==e.child)throw Error(s(153));if(null!==t.child){for(n=Dl(e=t.child,e.pendingProps),t.child=n,n.return=t;null!==e.sibling;)e=e.sibling,(n=n.sibling=Dl(e,e.pendingProps)).return=t;n.sibling=null}return t.child}function ji(e,t){if(!rs)switch(e.tailMode){case"hidden":t=e.tail;for(var n=null;null!==t;)null!==t.alternate&&(n=t),t=t.sibling;null===n?e.tail=null:n.sibling=null;break;case"collapsed":n=e.tail;for(var a=null;null!==n;)null!==n.alternate&&(a=n),n=n.sibling;null===a?t||null===e.tail?e.tail=null:e.tail.sibling=null:a.sibling=null}}function qi(e){var t=null!==e.alternate&&e.alternate.child===e.child,n=0,a=0;if(t)for(var r=e.child;null!==r;)n|=r.lanes|r.childLanes,a|=14680064&r.subtreeFlags,a|=14680064&r.flags,r.return=e,r=r.sibling;else for(r=e.child;null!==r;)n|=r.lanes|r.childLanes,a|=r.subtreeFlags,a|=r.flags,r.return=e,r=r.sibling;return e.subtreeFlags|=a,e.childLanes=n,t}function Xi(e,t,n){var a=t.pendingProps;switch(ts(t),t.tag){case 2:case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return qi(t),null;case 1:case 17:return Fr(t.type)&&Dr(),qi(t),null;case 3:return a=t.stateNode,ro(),Ir(_r),Ir(Er),uo(),a.pendingContext&&(a.context=a.pendingContext,a.pendingContext=null),null!==e&&null!==e.child||(ds(t)?t.flags|=4:null===e||e.memoizedState.isDehydrated&&0===(256&t.flags)||(t.flags|=1024,null!==ss&&(ol(ss),ss=null))),qi(t),null;case 5:oo(t);var r=no(to.current);if(n=t.type,null!==e&&null!=t.stateNode)Di(e,t,n,a),e.ref!==t.ref&&(t.flags|=512,t.flags|=2097152);else{if(!a){if(null===t.stateNode)throw Error(s(166));return qi(t),null}if(e=no($s.current),ds(t)){a=t.stateNode,n=t.type;var o=t.memoizedProps;switch(a[hr]=t,a[pr]=o,e=0!==(1&t.mode),n){case"dialog":Pa("cancel",a),Pa("close",a);break;case"iframe":case"object":case"embed":Pa("load",a);break;case"video":case"audio":for(r=0;r<Ma.length;r++)Pa(Ma[r],a);break;case"source":Pa("error",a);break;case"img":case"image":case"link":Pa("error",a),Pa("load",a);break;case"details":Pa("toggle",a);break;case"input":Y(a,o),Pa("invalid",a);break;case"select":a._wrapperState={wasMultiple:!!o.multiple},Pa("invalid",a);break;case"textarea":re(a,o),Pa("invalid",a)}for(var c in be(n,o),r=null,o)if(o.hasOwnProperty(c)){var l=o[c];"children"===c?"string"===typeof l?a.textContent!==l&&(!0!==o.suppressHydrationWarning&&Ja(a.textContent,l,e),r=["children",l]):"number"===typeof l&&a.textContent!==""+l&&(!0!==o.suppressHydrationWarning&&Ja(a.textContent,l,e),r=["children",""+l]):i.hasOwnProperty(c)&&null!=l&&"onScroll"===c&&Pa("scroll",a)}switch(n){case"input":q(a),$(a,o,!0);break;case"textarea":q(a),oe(a);break;case"select":case"option":break;default:"function"===typeof o.onClick&&(a.onclick=$a)}a=r,t.updateQueue=a,null!==a&&(t.flags|=4)}else{c=9===r.nodeType?r:r.ownerDocument,"http://www.w3.org/1999/xhtml"===e&&(e=ie(n)),"http://www.w3.org/1999/xhtml"===e?"script"===n?((e=c.createElement("div")).innerHTML="<script><\/script>",e=e.removeChild(e.firstChild)):"string"===typeof a.is?e=c.createElement(n,{is:a.is}):(e=c.createElement(n),"select"===n&&(c=e,a.multiple?c.multiple=!0:a.size&&(c.size=a.size))):e=c.createElementNS(e,n),e[hr]=t,e[pr]=a,Fi(e,t),t.stateNode=e;e:{switch(c=ve(n,a),n){case"dialog":Pa("cancel",e),Pa("close",e),r=a;break;case"iframe":case"object":case"embed":Pa("load",e),r=a;break;case"video":case"audio":for(r=0;r<Ma.length;r++)Pa(Ma[r],e);r=a;break;case"source":Pa("error",e),r=a;break;case"img":case"image":case"link":Pa("error",e),Pa("load",e),r=a;break;case"details":Pa("toggle",e),r=a;break;case"input":Y(e,a),r=Q(e,a),Pa("invalid",e);break;case"option":default:r=a;break;case"select":e._wrapperState={wasMultiple:!!a.multiple},r=L({},a,{value:void 0}),Pa("invalid",e);break;case"textarea":re(e,a),r=ae(e,a),Pa("invalid",e)}for(o in be(n,r),l=r)if(l.hasOwnProperty(o)){var u=l[o];"style"===o?ge(e,u):"dangerouslySetInnerHTML"===o?null!=(u=u?u.__html:void 0)&&de(e,u):"children"===o?"string"===typeof u?("textarea"!==n||""!==u)&&he(e,u):"number"===typeof u&&he(e,""+u):"suppressContentEditableWarning"!==o&&"suppressHydrationWarning"!==o&&"autoFocus"!==o&&(i.hasOwnProperty(o)?null!=u&&"onScroll"===o&&Pa("scroll",e):null!=u&&v(e,o,u,c))}switch(n){case"input":q(e),$(e,a,!1);break;case"textarea":q(e),oe(e);break;case"option":null!=a.value&&e.setAttribute("value",""+H(a.value));break;case"select":e.multiple=!!a.multiple,null!=(o=a.value)?ne(e,!!a.multiple,o,!1):null!=a.defaultValue&&ne(e,!!a.multiple,a.defaultValue,!0);break;default:"function"===typeof r.onClick&&(e.onclick=$a)}switch(n){case"button":case"input":case"select":case"textarea":a=!!a.autoFocus;break e;case"img":a=!0;break e;default:a=!1}}a&&(t.flags|=4)}null!==t.ref&&(t.flags|=512,t.flags|=2097152)}return qi(t),null;case 6:if(e&&null!=t.stateNode)Oi(0,t,e.memoizedProps,a);else{if("string"!==typeof a&&null===t.stateNode)throw Error(s(166));if(n=no(to.current),no($s.current),ds(t)){if(a=t.stateNode,n=t.memoizedProps,a[hr]=t,(o=a.nodeValue!==n)&&null!==(e=ns))switch(e.tag){case 3:Ja(a.nodeValue,n,0!==(1&e.mode));break;case 5:!0!==e.memoizedProps.suppressHydrationWarning&&Ja(a.nodeValue,n,0!==(1&e.mode))}o&&(t.flags|=4)}else(a=(9===n.nodeType?n:n.ownerDocument).createTextNode(a))[hr]=t,t.stateNode=a}return qi(t),null;case 13:if(Ir(io),a=t.memoizedState,null===e||null!==e.memoizedState&&null!==e.memoizedState.dehydrated){if(rs&&null!==as&&0!==(1&t.mode)&&0===(128&t.flags))hs(),ps(),t.flags|=98560,o=!1;else if(o=ds(t),null!==a&&null!==a.dehydrated){if(null===e){if(!o)throw Error(s(318));if(!(o=null!==(o=t.memoizedState)?o.dehydrated:null))throw Error(s(317));o[hr]=t}else ps(),0===(128&t.flags)&&(t.memoizedState=null),t.flags|=4;qi(t),o=!1}else null!==ss&&(ol(ss),ss=null),o=!0;if(!o)return 65536&t.flags?t:null}return 0!==(128&t.flags)?(t.lanes=n,t):((a=null!==a)!==(null!==e&&null!==e.memoizedState)&&a&&(t.child.flags|=8192,0!==(1&t.mode)&&(null===e||0!==(1&io.current)?0===Oc&&(Oc=3):ml())),null!==t.updateQueue&&(t.flags|=4),qi(t),null);case 4:return ro(),null===e&&Ua(t.stateNode.containerInfo),qi(t),null;case 10:return ks(t.type._context),qi(t),null;case 19:if(Ir(io),null===(o=t.memoizedState))return qi(t),null;if(a=0!==(128&t.flags),null===(c=o.rendering))if(a)ji(o,!1);else{if(0!==Oc||null!==e&&0!==(128&e.flags))for(e=t.child;null!==e;){if(null!==(c=co(e))){for(t.flags|=128,ji(o,!1),null!==(a=c.updateQueue)&&(t.updateQueue=a,t.flags|=4),t.subtreeFlags=0,a=n,n=t.child;null!==n;)e=a,(o=n).flags&=14680066,null===(c=o.alternate)?(o.childLanes=0,o.lanes=e,o.child=null,o.subtreeFlags=0,o.memoizedProps=null,o.memoizedState=null,o.updateQueue=null,o.dependencies=null,o.stateNode=null):(o.childLanes=c.childLanes,o.lanes=c.lanes,o.child=c.child,o.subtreeFlags=0,o.deletions=null,o.memoizedProps=c.memoizedProps,o.memoizedState=c.memoizedState,o.updateQueue=c.updateQueue,o.type=c.type,e=c.dependencies,o.dependencies=null===e?null:{lanes:e.lanes,firstContext:e.firstContext}),n=n.sibling;return Tr(io,1&io.current|2),t.child}e=e.sibling}null!==o.tail&&Ze()>Uc&&(t.flags|=128,a=!0,ji(o,!1),t.lanes=4194304)}else{if(!a)if(null!==(e=co(c))){if(t.flags|=128,a=!0,null!==(n=e.updateQueue)&&(t.updateQueue=n,t.flags|=4),ji(o,!0),null===o.tail&&"hidden"===o.tailMode&&!c.alternate&&!rs)return qi(t),null}else 2*Ze()-o.renderingStartTime>Uc&&1073741824!==n&&(t.flags|=128,a=!0,ji(o,!1),t.lanes=4194304);o.isBackwards?(c.sibling=t.child,t.child=c):(null!==(n=o.last)?n.sibling=c:t.child=c,o.last=c)}return null!==o.tail?(t=o.tail,o.rendering=t,o.tail=t.sibling,o.renderingStartTime=Ze(),t.sibling=null,n=io.current,Tr(io,a?1&n|2:1&n),t):(qi(t),null);case 22:case 23:return dl(),a=null!==t.memoizedState,null!==e&&null!==e.memoizedState!==a&&(t.flags|=8192),a&&0!==(1&t.mode)?0!==(1073741824&Fc)&&(qi(t),6&t.subtreeFlags&&(t.flags|=8192)):qi(t),null;case 24:case 25:return null}throw Error(s(156,t.tag))}function Ki(e,t){switch(ts(t),t.tag){case 1:return Fr(t.type)&&Dr(),65536&(e=t.flags)?(t.flags=-65537&e|128,t):null;case 3:return ro(),Ir(_r),Ir(Er),uo(),0!==(65536&(e=t.flags))&&0===(128&e)?(t.flags=-65537&e|128,t):null;case 5:return oo(t),null;case 13:if(Ir(io),null!==(e=t.memoizedState)&&null!==e.dehydrated){if(null===t.alternate)throw Error(s(340));ps()}return 65536&(e=t.flags)?(t.flags=-65537&e|128,t):null;case 19:return Ir(io),null;case 4:return ro(),null;case 10:return ks(t.type._context),null;case 22:case 23:return dl(),null;default:return null}}Fi=function(e,t){for(var n=t.child;null!==n;){if(5===n.tag||6===n.tag)e.appendChild(n.stateNode);else if(4!==n.tag&&null!==n.child){n.child.return=n,n=n.child;continue}if(n===t)break;for(;null===n.sibling;){if(null===n.return||n.return===t)return;n=n.return}n.sibling.return=n.return,n=n.sibling}},Di=function(e,t,n,a){var r=e.memoizedProps;if(r!==a){e=t.stateNode,no($s.current);var s,o=null;switch(n){case"input":r=Q(e,r),a=Q(e,a),o=[];break;case"select":r=L({},r,{value:void 0}),a=L({},a,{value:void 0}),o=[];break;case"textarea":r=ae(e,r),a=ae(e,a),o=[];break;default:"function"!==typeof r.onClick&&"function"===typeof a.onClick&&(e.onclick=$a)}for(u in be(n,a),n=null,r)if(!a.hasOwnProperty(u)&&r.hasOwnProperty(u)&&null!=r[u])if("style"===u){var c=r[u];for(s in c)c.hasOwnProperty(s)&&(n||(n={}),n[s]="")}else"dangerouslySetInnerHTML"!==u&&"children"!==u&&"suppressContentEditableWarning"!==u&&"suppressHydrationWarning"!==u&&"autoFocus"!==u&&(i.hasOwnProperty(u)?o||(o=[]):(o=o||[]).push(u,null));for(u in a){var l=a[u];if(c=null!=r?r[u]:void 0,a.hasOwnProperty(u)&&l!==c&&(null!=l||null!=c))if("style"===u)if(c){for(s in c)!c.hasOwnProperty(s)||l&&l.hasOwnProperty(s)||(n||(n={}),n[s]="");for(s in l)l.hasOwnProperty(s)&&c[s]!==l[s]&&(n||(n={}),n[s]=l[s])}else n||(o||(o=[]),o.push(u,n)),n=l;else"dangerouslySetInnerHTML"===u?(l=l?l.__html:void 0,c=c?c.__html:void 0,null!=l&&c!==l&&(o=o||[]).push(u,l)):"children"===u?"string"!==typeof l&&"number"!==typeof l||(o=o||[]).push(u,""+l):"suppressContentEditableWarning"!==u&&"suppressHydrationWarning"!==u&&(i.hasOwnProperty(u)?(null!=l&&"onScroll"===u&&Pa("scroll",e),o||c===l||(o=[])):(o=o||[]).push(u,l))}n&&(o=o||[]).push("style",n);var u=o;(t.updateQueue=u)&&(t.flags|=4)}},Oi=function(e,t,n,a){n!==a&&(t.flags|=4)};var Qi=!1,Yi=!1,Zi="function"===typeof WeakSet?WeakSet:Set,Ji=null;function $i(e,t){var n=e.ref;if(null!==n)if("function"===typeof n)try{n(null)}catch(a){Nl(e,t,a)}else n.current=null}function ec(e,t,n){try{n()}catch(a){Nl(e,t,a)}}var tc=!1;function nc(e,t,n){var a=t.updateQueue;if(null!==(a=null!==a?a.lastEffect:null)){var r=a=a.next;do{if((r.tag&e)===e){var s=r.destroy;r.destroy=void 0,void 0!==s&&ec(t,n,s)}r=r.next}while(r!==a)}}function ac(e,t){if(null!==(t=null!==(t=t.updateQueue)?t.lastEffect:null)){var n=t=t.next;do{if((n.tag&e)===e){var a=n.create;n.destroy=a()}n=n.next}while(n!==t)}}function rc(e){var t=e.ref;if(null!==t){var n=e.stateNode;e.tag,e=n,"function"===typeof t?t(e):t.current=e}}function sc(e){var t=e.alternate;null!==t&&(e.alternate=null,sc(t)),e.child=null,e.deletions=null,e.sibling=null,5===e.tag&&(null!==(t=e.stateNode)&&(delete t[hr],delete t[pr],delete t[mr],delete t[gr],delete t[yr])),e.stateNode=null,e.return=null,e.dependencies=null,e.memoizedProps=null,e.memoizedState=null,e.pendingProps=null,e.stateNode=null,e.updateQueue=null}function oc(e){return 5===e.tag||3===e.tag||4===e.tag}function ic(e){e:for(;;){for(;null===e.sibling;){if(null===e.return||oc(e.return))return null;e=e.return}for(e.sibling.return=e.return,e=e.sibling;5!==e.tag&&6!==e.tag&&18!==e.tag;){if(2&e.flags)continue e;if(null===e.child||4===e.tag)continue e;e.child.return=e,e=e.child}if(!(2&e.flags))return e.stateNode}}function cc(e,t,n){var a=e.tag;if(5===a||6===a)e=e.stateNode,t?8===n.nodeType?n.parentNode.insertBefore(e,t):n.insertBefore(e,t):(8===n.nodeType?(t=n.parentNode).insertBefore(e,n):(t=n).appendChild(e),null!==(n=n._reactRootContainer)&&void 0!==n||null!==t.onclick||(t.onclick=$a));else if(4!==a&&null!==(e=e.child))for(cc(e,t,n),e=e.sibling;null!==e;)cc(e,t,n),e=e.sibling}function lc(e,t,n){var a=e.tag;if(5===a||6===a)e=e.stateNode,t?n.insertBefore(e,t):n.appendChild(e);else if(4!==a&&null!==(e=e.child))for(lc(e,t,n),e=e.sibling;null!==e;)lc(e,t,n),e=e.sibling}var uc=null,dc=!1;function hc(e,t,n){for(n=n.child;null!==n;)pc(e,t,n),n=n.sibling}function pc(e,t,n){if(st&&"function"===typeof st.onCommitFiberUnmount)try{st.onCommitFiberUnmount(rt,n)}catch(i){}switch(n.tag){case 5:Yi||$i(n,t);case 6:var a=uc,r=dc;uc=null,hc(e,t,n),dc=r,null!==(uc=a)&&(dc?(e=uc,n=n.stateNode,8===e.nodeType?e.parentNode.removeChild(n):e.removeChild(n)):uc.removeChild(n.stateNode));break;case 18:null!==uc&&(dc?(e=uc,n=n.stateNode,8===e.nodeType?cr(e.parentNode,n):1===e.nodeType&&cr(e,n),Ut(e)):cr(uc,n.stateNode));break;case 4:a=uc,r=dc,uc=n.stateNode.containerInfo,dc=!0,hc(e,t,n),uc=a,dc=r;break;case 0:case 11:case 14:case 15:if(!Yi&&(null!==(a=n.updateQueue)&&null!==(a=a.lastEffect))){r=a=a.next;do{var s=r,o=s.destroy;s=s.tag,void 0!==o&&(0!==(2&s)||0!==(4&s))&&ec(n,t,o),r=r.next}while(r!==a)}hc(e,t,n);break;case 1:if(!Yi&&($i(n,t),"function"===typeof(a=n.stateNode).componentWillUnmount))try{a.props=n.memoizedProps,a.state=n.memoizedState,a.componentWillUnmount()}catch(i){Nl(n,t,i)}hc(e,t,n);break;case 21:hc(e,t,n);break;case 22:1&n.mode?(Yi=(a=Yi)||null!==n.memoizedState,hc(e,t,n),Yi=a):hc(e,t,n);break;default:hc(e,t,n)}}function fc(e){var t=e.updateQueue;if(null!==t){e.updateQueue=null;var n=e.stateNode;null===n&&(n=e.stateNode=new Zi),t.forEach((function(t){var a=El.bind(null,e,t);n.has(t)||(n.add(t),t.then(a,a))}))}}function mc(e,t){var n=t.deletions;if(null!==n)for(var a=0;a<n.length;a++){var r=n[a];try{var o=e,i=t,c=i;e:for(;null!==c;){switch(c.tag){case 5:uc=c.stateNode,dc=!1;break e;case 3:case 4:uc=c.stateNode.containerInfo,dc=!0;break e}c=c.return}if(null===uc)throw Error(s(160));pc(o,i,r),uc=null,dc=!1;var l=r.alternate;null!==l&&(l.return=null),r.return=null}catch(u){Nl(r,t,u)}}if(12854&t.subtreeFlags)for(t=t.child;null!==t;)gc(t,e),t=t.sibling}function gc(e,t){var n=e.alternate,a=e.flags;switch(e.tag){case 0:case 11:case 14:case 15:if(mc(t,e),yc(e),4&a){try{nc(3,e,e.return),ac(3,e)}catch(g){Nl(e,e.return,g)}try{nc(5,e,e.return)}catch(g){Nl(e,e.return,g)}}break;case 1:mc(t,e),yc(e),512&a&&null!==n&&$i(n,n.return);break;case 5:if(mc(t,e),yc(e),512&a&&null!==n&&$i(n,n.return),32&e.flags){var r=e.stateNode;try{he(r,"")}catch(g){Nl(e,e.return,g)}}if(4&a&&null!=(r=e.stateNode)){var o=e.memoizedProps,i=null!==n?n.memoizedProps:o,c=e.type,l=e.updateQueue;if(e.updateQueue=null,null!==l)try{"input"===c&&"radio"===o.type&&null!=o.name&&Z(r,o),ve(c,i);var u=ve(c,o);for(i=0;i<l.length;i+=2){var d=l[i],h=l[i+1];"style"===d?ge(r,h):"dangerouslySetInnerHTML"===d?de(r,h):"children"===d?he(r,h):v(r,d,h,u)}switch(c){case"input":J(r,o);break;case"textarea":se(r,o);break;case"select":var p=r._wrapperState.wasMultiple;r._wrapperState.wasMultiple=!!o.multiple;var f=o.value;null!=f?ne(r,!!o.multiple,f,!1):p!==!!o.multiple&&(null!=o.defaultValue?ne(r,!!o.multiple,o.defaultValue,!0):ne(r,!!o.multiple,o.multiple?[]:"",!1))}r[pr]=o}catch(g){Nl(e,e.return,g)}}break;case 6:if(mc(t,e),yc(e),4&a){if(null===e.stateNode)throw Error(s(162));r=e.stateNode,o=e.memoizedProps;try{r.nodeValue=o}catch(g){Nl(e,e.return,g)}}break;case 3:if(mc(t,e),yc(e),4&a&&null!==n&&n.memoizedState.isDehydrated)try{Ut(t.containerInfo)}catch(g){Nl(e,e.return,g)}break;case 4:default:mc(t,e),yc(e);break;case 13:mc(t,e),yc(e),8192&(r=e.child).flags&&(o=null!==r.memoizedState,r.stateNode.isHidden=o,!o||null!==r.alternate&&null!==r.alternate.memoizedState||(Wc=Ze())),4&a&&fc(e);break;case 22:if(d=null!==n&&null!==n.memoizedState,1&e.mode?(Yi=(u=Yi)||d,mc(t,e),Yi=u):mc(t,e),yc(e),8192&a){if(u=null!==e.memoizedState,(e.stateNode.isHidden=u)&&!d&&0!==(1&e.mode))for(Ji=e,d=e.child;null!==d;){for(h=Ji=d;null!==Ji;){switch(f=(p=Ji).child,p.tag){case 0:case 11:case 14:case 15:nc(4,p,p.return);break;case 1:$i(p,p.return);var m=p.stateNode;if("function"===typeof m.componentWillUnmount){a=p,n=p.return;try{t=a,m.props=t.memoizedProps,m.state=t.memoizedState,m.componentWillUnmount()}catch(g){Nl(a,n,g)}}break;case 5:$i(p,p.return);break;case 22:if(null!==p.memoizedState){wc(h);continue}}null!==f?(f.return=p,Ji=f):wc(h)}d=d.sibling}e:for(d=null,h=e;;){if(5===h.tag){if(null===d){d=h;try{r=h.stateNode,u?"function"===typeof(o=r.style).setProperty?o.setProperty("display","none","important"):o.display="none":(c=h.stateNode,i=void 0!==(l=h.memoizedProps.style)&&null!==l&&l.hasOwnProperty("display")?l.display:null,c.style.display=me("display",i))}catch(g){Nl(e,e.return,g)}}}else if(6===h.tag){if(null===d)try{h.stateNode.nodeValue=u?"":h.memoizedProps}catch(g){Nl(e,e.return,g)}}else if((22!==h.tag&&23!==h.tag||null===h.memoizedState||h===e)&&null!==h.child){h.child.return=h,h=h.child;continue}if(h===e)break e;for(;null===h.sibling;){if(null===h.return||h.return===e)break e;d===h&&(d=null),h=h.return}d===h&&(d=null),h.sibling.return=h.return,h=h.sibling}}break;case 19:mc(t,e),yc(e),4&a&&fc(e);case 21:}}function yc(e){var t=e.flags;if(2&t){try{e:{for(var n=e.return;null!==n;){if(oc(n)){var a=n;break e}n=n.return}throw Error(s(160))}switch(a.tag){case 5:var r=a.stateNode;32&a.flags&&(he(r,""),a.flags&=-33),lc(e,ic(e),r);break;case 3:case 4:var o=a.stateNode.containerInfo;cc(e,ic(e),o);break;default:throw Error(s(161))}}catch(i){Nl(e,e.return,i)}e.flags&=-3}4096&t&&(e.flags&=-4097)}function bc(e,t,n){Ji=e,vc(e,t,n)}function vc(e,t,n){for(var a=0!==(1&e.mode);null!==Ji;){var r=Ji,s=r.child;if(22===r.tag&&a){var o=null!==r.memoizedState||Qi;if(!o){var i=r.alternate,c=null!==i&&null!==i.memoizedState||Yi;i=Qi;var l=Yi;if(Qi=o,(Yi=c)&&!l)for(Ji=r;null!==Ji;)c=(o=Ji).child,22===o.tag&&null!==o.memoizedState?kc(r):null!==c?(c.return=o,Ji=c):kc(r);for(;null!==s;)Ji=s,vc(s,t,n),s=s.sibling;Ji=r,Qi=i,Yi=l}xc(e)}else 0!==(8772&r.subtreeFlags)&&null!==s?(s.return=r,Ji=s):xc(e)}}function xc(e){for(;null!==Ji;){var t=Ji;if(0!==(8772&t.flags)){var n=t.alternate;try{if(0!==(8772&t.flags))switch(t.tag){case 0:case 11:case 15:Yi||ac(5,t);break;case 1:var a=t.stateNode;if(4&t.flags&&!Yi)if(null===n)a.componentDidMount();else{var r=t.elementType===t.type?n.memoizedProps:gs(t.type,n.memoizedProps);a.componentDidUpdate(r,n.memoizedState,a.__reactInternalSnapshotBeforeUpdate)}var o=t.updateQueue;null!==o&&Bs(t,o,a);break;case 3:var i=t.updateQueue;if(null!==i){if(n=null,null!==t.child)switch(t.child.tag){case 5:case 1:n=t.child.stateNode}Bs(t,i,n)}break;case 5:var c=t.stateNode;if(null===n&&4&t.flags){n=c;var l=t.memoizedProps;switch(t.type){case"button":case"input":case"select":case"textarea":l.autoFocus&&n.focus();break;case"img":l.src&&(n.src=l.src)}}break;case 6:case 4:case 12:case 19:case 17:case 21:case 22:case 23:case 25:break;case 13:if(null===t.memoizedState){var u=t.alternate;if(null!==u){var d=u.memoizedState;if(null!==d){var h=d.dehydrated;null!==h&&Ut(h)}}}break;default:throw Error(s(163))}Yi||512&t.flags&&rc(t)}catch(p){Nl(t,t.return,p)}}if(t===e){Ji=null;break}if(null!==(n=t.sibling)){n.return=t.return,Ji=n;break}Ji=t.return}}function wc(e){for(;null!==Ji;){var t=Ji;if(t===e){Ji=null;break}var n=t.sibling;if(null!==n){n.return=t.return,Ji=n;break}Ji=t.return}}function kc(e){for(;null!==Ji;){var t=Ji;try{switch(t.tag){case 0:case 11:case 15:var n=t.return;try{ac(4,t)}catch(c){Nl(t,n,c)}break;case 1:var a=t.stateNode;if("function"===typeof a.componentDidMount){var r=t.return;try{a.componentDidMount()}catch(c){Nl(t,r,c)}}var s=t.return;try{rc(t)}catch(c){Nl(t,s,c)}break;case 5:var o=t.return;try{rc(t)}catch(c){Nl(t,o,c)}}}catch(c){Nl(t,t.return,c)}if(t===e){Ji=null;break}var i=t.sibling;if(null!==i){i.return=t.return,Ji=i;break}Ji=t.return}}var Sc,Nc=Math.ceil,Ic=x.ReactCurrentDispatcher,Tc=x.ReactCurrentOwner,Cc=x.ReactCurrentBatchConfig,Ec=0,_c=null,Ac=null,Rc=0,Fc=0,Dc=Nr(0),Oc=0,Mc=null,zc=0,Lc=0,Bc=0,Pc=null,Vc=null,Wc=0,Uc=1/0,Gc=null,Hc=!1,jc=null,qc=null,Xc=!1,Kc=null,Qc=0,Yc=0,Zc=null,Jc=-1,$c=0;function el(){return 0!==(6&Ec)?Ze():-1!==Jc?Jc:Jc=Ze()}function tl(e){return 0===(1&e.mode)?1:0!==(2&Ec)&&0!==Rc?Rc&-Rc:null!==ms.transition?(0===$c&&($c=mt()),$c):0!==(e=vt)?e:e=void 0===(e=window.event)?16:Yt(e.type)}function nl(e,t,n,a){if(50<Yc)throw Yc=0,Zc=null,Error(s(185));yt(e,n,a),0!==(2&Ec)&&e===_c||(e===_c&&(0===(2&Ec)&&(Lc|=n),4===Oc&&il(e,Rc)),al(e,a),1===n&&0===Ec&&0===(1&t.mode)&&(Uc=Ze()+500,Pr&&Ur()))}function al(e,t){var n=e.callbackNode;!function(e,t){for(var n=e.suspendedLanes,a=e.pingedLanes,r=e.expirationTimes,s=e.pendingLanes;0<s;){var o=31-ot(s),i=1<<o,c=r[o];-1===c?0!==(i&n)&&0===(i&a)||(r[o]=pt(i,t)):c<=t&&(e.expiredLanes|=i),s&=~i}}(e,t);var a=ht(e,e===_c?Rc:0);if(0===a)null!==n&&Ke(n),e.callbackNode=null,e.callbackPriority=0;else if(t=a&-a,e.callbackPriority!==t){if(null!=n&&Ke(n),1===t)0===e.tag?function(e){Pr=!0,Wr(e)}(cl.bind(null,e)):Wr(cl.bind(null,e)),or((function(){0===(6&Ec)&&Ur()})),n=null;else{switch(xt(a)){case 1:n=$e;break;case 4:n=et;break;case 16:default:n=tt;break;case 536870912:n=at}n=_l(n,rl.bind(null,e))}e.callbackPriority=t,e.callbackNode=n}}function rl(e,t){if(Jc=-1,$c=0,0!==(6&Ec))throw Error(s(327));var n=e.callbackNode;if(kl()&&e.callbackNode!==n)return null;var a=ht(e,e===_c?Rc:0);if(0===a)return null;if(0!==(30&a)||0!==(a&e.expiredLanes)||t)t=gl(e,a);else{t=a;var r=Ec;Ec|=2;var o=fl();for(_c===e&&Rc===t||(Gc=null,Uc=Ze()+500,hl(e,t));;)try{bl();break}catch(c){pl(e,c)}ws(),Ic.current=o,Ec=r,null!==Ac?t=0:(_c=null,Rc=0,t=Oc)}if(0!==t){if(2===t&&(0!==(r=ft(e))&&(a=r,t=sl(e,r))),1===t)throw n=Mc,hl(e,0),il(e,a),al(e,Ze()),n;if(6===t)il(e,a);else{if(r=e.current.alternate,0===(30&a)&&!function(e){for(var t=e;;){if(16384&t.flags){var n=t.updateQueue;if(null!==n&&null!==(n=n.stores))for(var a=0;a<n.length;a++){var r=n[a],s=r.getSnapshot;r=r.value;try{if(!ia(s(),r))return!1}catch(i){return!1}}}if(n=t.child,16384&t.subtreeFlags&&null!==n)n.return=t,t=n;else{if(t===e)break;for(;null===t.sibling;){if(null===t.return||t.return===e)return!0;t=t.return}t.sibling.return=t.return,t=t.sibling}}return!0}(r)&&(2===(t=gl(e,a))&&(0!==(o=ft(e))&&(a=o,t=sl(e,o))),1===t))throw n=Mc,hl(e,0),il(e,a),al(e,Ze()),n;switch(e.finishedWork=r,e.finishedLanes=a,t){case 0:case 1:throw Error(s(345));case 2:case 5:wl(e,Vc,Gc);break;case 3:if(il(e,a),(130023424&a)===a&&10<(t=Wc+500-Ze())){if(0!==ht(e,0))break;if(((r=e.suspendedLanes)&a)!==a){el(),e.pingedLanes|=e.suspendedLanes&r;break}e.timeoutHandle=ar(wl.bind(null,e,Vc,Gc),t);break}wl(e,Vc,Gc);break;case 4:if(il(e,a),(4194240&a)===a)break;for(t=e.eventTimes,r=-1;0<a;){var i=31-ot(a);o=1<<i,(i=t[i])>r&&(r=i),a&=~o}if(a=r,10<(a=(120>(a=Ze()-a)?120:480>a?480:1080>a?1080:1920>a?1920:3e3>a?3e3:4320>a?4320:1960*Nc(a/1960))-a)){e.timeoutHandle=ar(wl.bind(null,e,Vc,Gc),a);break}wl(e,Vc,Gc);break;default:throw Error(s(329))}}}return al(e,Ze()),e.callbackNode===n?rl.bind(null,e):null}function sl(e,t){var n=Pc;return e.current.memoizedState.isDehydrated&&(hl(e,t).flags|=256),2!==(e=gl(e,t))&&(t=Vc,Vc=n,null!==t&&ol(t)),e}function ol(e){null===Vc?Vc=e:Vc.push.apply(Vc,e)}function il(e,t){for(t&=~Bc,t&=~Lc,e.suspendedLanes|=t,e.pingedLanes&=~t,e=e.expirationTimes;0<t;){var n=31-ot(t),a=1<<n;e[n]=-1,t&=~a}}function cl(e){if(0!==(6&Ec))throw Error(s(327));kl();var t=ht(e,0);if(0===(1&t))return al(e,Ze()),null;var n=gl(e,t);if(0!==e.tag&&2===n){var a=ft(e);0!==a&&(t=a,n=sl(e,a))}if(1===n)throw n=Mc,hl(e,0),il(e,t),al(e,Ze()),n;if(6===n)throw Error(s(345));return e.finishedWork=e.current.alternate,e.finishedLanes=t,wl(e,Vc,Gc),al(e,Ze()),null}function ll(e,t){var n=Ec;Ec|=1;try{return e(t)}finally{0===(Ec=n)&&(Uc=Ze()+500,Pr&&Ur())}}function ul(e){null!==Kc&&0===Kc.tag&&0===(6&Ec)&&kl();var t=Ec;Ec|=1;var n=Cc.transition,a=vt;try{if(Cc.transition=null,vt=1,e)return e()}finally{vt=a,Cc.transition=n,0===(6&(Ec=t))&&Ur()}}function dl(){Fc=Dc.current,Ir(Dc)}function hl(e,t){e.finishedWork=null,e.finishedLanes=0;var n=e.timeoutHandle;if(-1!==n&&(e.timeoutHandle=-1,rr(n)),null!==Ac)for(n=Ac.return;null!==n;){var a=n;switch(ts(a),a.tag){case 1:null!==(a=a.type.childContextTypes)&&void 0!==a&&Dr();break;case 3:ro(),Ir(_r),Ir(Er),uo();break;case 5:oo(a);break;case 4:ro();break;case 13:case 19:Ir(io);break;case 10:ks(a.type._context);break;case 22:case 23:dl()}n=n.return}if(_c=e,Ac=e=Dl(e.current,null),Rc=Fc=t,Oc=0,Mc=null,Bc=Lc=zc=0,Vc=Pc=null,null!==Ts){for(t=0;t<Ts.length;t++)if(null!==(a=(n=Ts[t]).interleaved)){n.interleaved=null;var r=a.next,s=n.pending;if(null!==s){var o=s.next;s.next=r,a.next=o}n.pending=a}Ts=null}return e}function pl(e,t){for(;;){var n=Ac;try{if(ws(),ho.current=oi,bo){for(var a=mo.memoizedState;null!==a;){var r=a.queue;null!==r&&(r.pending=null),a=a.next}bo=!1}if(fo=0,yo=go=mo=null,vo=!1,xo=0,Tc.current=null,null===n||null===n.return){Oc=1,Mc=t,Ac=null;break}e:{var o=e,i=n.return,c=n,l=t;if(t=Rc,c.flags|=32768,null!==l&&"object"===typeof l&&"function"===typeof l.then){var u=l,d=c,h=d.tag;if(0===(1&d.mode)&&(0===h||11===h||15===h)){var p=d.alternate;p?(d.updateQueue=p.updateQueue,d.memoizedState=p.memoizedState,d.lanes=p.lanes):(d.updateQueue=null,d.memoizedState=null)}var f=yi(i);if(null!==f){f.flags&=-257,bi(f,i,c,0,t),1&f.mode&&gi(o,u,t),l=u;var m=(t=f).updateQueue;if(null===m){var g=new Set;g.add(l),t.updateQueue=g}else m.add(l);break e}if(0===(1&t)){gi(o,u,t),ml();break e}l=Error(s(426))}else if(rs&&1&c.mode){var y=yi(i);if(null!==y){0===(65536&y.flags)&&(y.flags|=256),bi(y,i,c,0,t),fs(ui(l,c));break e}}o=l=ui(l,c),4!==Oc&&(Oc=2),null===Pc?Pc=[o]:Pc.push(o),o=i;do{switch(o.tag){case 3:o.flags|=65536,t&=-t,o.lanes|=t,zs(o,fi(0,l,t));break e;case 1:c=l;var b=o.type,v=o.stateNode;if(0===(128&o.flags)&&("function"===typeof b.getDerivedStateFromError||null!==v&&"function"===typeof v.componentDidCatch&&(null===qc||!qc.has(v)))){o.flags|=65536,t&=-t,o.lanes|=t,zs(o,mi(o,c,t));break e}}o=o.return}while(null!==o)}xl(n)}catch(x){t=x,Ac===n&&null!==n&&(Ac=n=n.return);continue}break}}function fl(){var e=Ic.current;return Ic.current=oi,null===e?oi:e}function ml(){0!==Oc&&3!==Oc&&2!==Oc||(Oc=4),null===_c||0===(268435455&zc)&&0===(268435455&Lc)||il(_c,Rc)}function gl(e,t){var n=Ec;Ec|=2;var a=fl();for(_c===e&&Rc===t||(Gc=null,hl(e,t));;)try{yl();break}catch(r){pl(e,r)}if(ws(),Ec=n,Ic.current=a,null!==Ac)throw Error(s(261));return _c=null,Rc=0,Oc}function yl(){for(;null!==Ac;)vl(Ac)}function bl(){for(;null!==Ac&&!Qe();)vl(Ac)}function vl(e){var t=Sc(e.alternate,e,Fc);e.memoizedProps=e.pendingProps,null===t?xl(e):Ac=t,Tc.current=null}function xl(e){var t=e;do{var n=t.alternate;if(e=t.return,0===(32768&t.flags)){if(null!==(n=Xi(n,t,Fc)))return void(Ac=n)}else{if(null!==(n=Ki(n,t)))return n.flags&=32767,void(Ac=n);if(null===e)return Oc=6,void(Ac=null);e.flags|=32768,e.subtreeFlags=0,e.deletions=null}if(null!==(t=t.sibling))return void(Ac=t);Ac=t=e}while(null!==t);0===Oc&&(Oc=5)}function wl(e,t,n){var a=vt,r=Cc.transition;try{Cc.transition=null,vt=1,function(e,t,n,a){do{kl()}while(null!==Kc);if(0!==(6&Ec))throw Error(s(327));n=e.finishedWork;var r=e.finishedLanes;if(null===n)return null;if(e.finishedWork=null,e.finishedLanes=0,n===e.current)throw Error(s(177));e.callbackNode=null,e.callbackPriority=0;var o=n.lanes|n.childLanes;if(function(e,t){var n=e.pendingLanes&~t;e.pendingLanes=t,e.suspendedLanes=0,e.pingedLanes=0,e.expiredLanes&=t,e.mutableReadLanes&=t,e.entangledLanes&=t,t=e.entanglements;var a=e.eventTimes;for(e=e.expirationTimes;0<n;){var r=31-ot(n),s=1<<r;t[r]=0,a[r]=-1,e[r]=-1,n&=~s}}(e,o),e===_c&&(Ac=_c=null,Rc=0),0===(2064&n.subtreeFlags)&&0===(2064&n.flags)||Xc||(Xc=!0,_l(tt,(function(){return kl(),null}))),o=0!==(15990&n.flags),0!==(15990&n.subtreeFlags)||o){o=Cc.transition,Cc.transition=null;var i=vt;vt=1;var c=Ec;Ec|=4,Tc.current=null,function(e,t){if(er=Ht,pa(e=ha())){if("selectionStart"in e)var n={start:e.selectionStart,end:e.selectionEnd};else e:{var a=(n=(n=e.ownerDocument)&&n.defaultView||window).getSelection&&n.getSelection();if(a&&0!==a.rangeCount){n=a.anchorNode;var r=a.anchorOffset,o=a.focusNode;a=a.focusOffset;try{n.nodeType,o.nodeType}catch(w){n=null;break e}var i=0,c=-1,l=-1,u=0,d=0,h=e,p=null;t:for(;;){for(var f;h!==n||0!==r&&3!==h.nodeType||(c=i+r),h!==o||0!==a&&3!==h.nodeType||(l=i+a),3===h.nodeType&&(i+=h.nodeValue.length),null!==(f=h.firstChild);)p=h,h=f;for(;;){if(h===e)break t;if(p===n&&++u===r&&(c=i),p===o&&++d===a&&(l=i),null!==(f=h.nextSibling))break;p=(h=p).parentNode}h=f}n=-1===c||-1===l?null:{start:c,end:l}}else n=null}n=n||{start:0,end:0}}else n=null;for(tr={focusedElem:e,selectionRange:n},Ht=!1,Ji=t;null!==Ji;)if(e=(t=Ji).child,0!==(1028&t.subtreeFlags)&&null!==e)e.return=t,Ji=e;else for(;null!==Ji;){t=Ji;try{var m=t.alternate;if(0!==(1024&t.flags))switch(t.tag){case 0:case 11:case 15:case 5:case 6:case 4:case 17:break;case 1:if(null!==m){var g=m.memoizedProps,y=m.memoizedState,b=t.stateNode,v=b.getSnapshotBeforeUpdate(t.elementType===t.type?g:gs(t.type,g),y);b.__reactInternalSnapshotBeforeUpdate=v}break;case 3:var x=t.stateNode.containerInfo;1===x.nodeType?x.textContent="":9===x.nodeType&&x.documentElement&&x.removeChild(x.documentElement);break;default:throw Error(s(163))}}catch(w){Nl(t,t.return,w)}if(null!==(e=t.sibling)){e.return=t.return,Ji=e;break}Ji=t.return}m=tc,tc=!1}(e,n),gc(n,e),fa(tr),Ht=!!er,tr=er=null,e.current=n,bc(n,e,r),Ye(),Ec=c,vt=i,Cc.transition=o}else e.current=n;if(Xc&&(Xc=!1,Kc=e,Qc=r),0===(o=e.pendingLanes)&&(qc=null),function(e){if(st&&"function"===typeof st.onCommitFiberRoot)try{st.onCommitFiberRoot(rt,e,void 0,128===(128&e.current.flags))}catch(t){}}(n.stateNode),al(e,Ze()),null!==t)for(a=e.onRecoverableError,n=0;n<t.length;n++)r=t[n],a(r.value,{componentStack:r.stack,digest:r.digest});if(Hc)throw Hc=!1,e=jc,jc=null,e;0!==(1&Qc)&&0!==e.tag&&kl(),0!==(1&(o=e.pendingLanes))?e===Zc?Yc++:(Yc=0,Zc=e):Yc=0,Ur()}(e,t,n,a)}finally{Cc.transition=r,vt=a}return null}function kl(){if(null!==Kc){var e=xt(Qc),t=Cc.transition,n=vt;try{if(Cc.transition=null,vt=16>e?16:e,null===Kc)var a=!1;else{if(e=Kc,Kc=null,Qc=0,0!==(6&Ec))throw Error(s(331));var r=Ec;for(Ec|=4,Ji=e.current;null!==Ji;){var o=Ji,i=o.child;if(0!==(16&Ji.flags)){var c=o.deletions;if(null!==c){for(var l=0;l<c.length;l++){var u=c[l];for(Ji=u;null!==Ji;){var d=Ji;switch(d.tag){case 0:case 11:case 15:nc(8,d,o)}var h=d.child;if(null!==h)h.return=d,Ji=h;else for(;null!==Ji;){var p=(d=Ji).sibling,f=d.return;if(sc(d),d===u){Ji=null;break}if(null!==p){p.return=f,Ji=p;break}Ji=f}}}var m=o.alternate;if(null!==m){var g=m.child;if(null!==g){m.child=null;do{var y=g.sibling;g.sibling=null,g=y}while(null!==g)}}Ji=o}}if(0!==(2064&o.subtreeFlags)&&null!==i)i.return=o,Ji=i;else e:for(;null!==Ji;){if(0!==(2048&(o=Ji).flags))switch(o.tag){case 0:case 11:case 15:nc(9,o,o.return)}var b=o.sibling;if(null!==b){b.return=o.return,Ji=b;break e}Ji=o.return}}var v=e.current;for(Ji=v;null!==Ji;){var x=(i=Ji).child;if(0!==(2064&i.subtreeFlags)&&null!==x)x.return=i,Ji=x;else e:for(i=v;null!==Ji;){if(0!==(2048&(c=Ji).flags))try{switch(c.tag){case 0:case 11:case 15:ac(9,c)}}catch(k){Nl(c,c.return,k)}if(c===i){Ji=null;break e}var w=c.sibling;if(null!==w){w.return=c.return,Ji=w;break e}Ji=c.return}}if(Ec=r,Ur(),st&&"function"===typeof st.onPostCommitFiberRoot)try{st.onPostCommitFiberRoot(rt,e)}catch(k){}a=!0}return a}finally{vt=n,Cc.transition=t}}return!1}function Sl(e,t,n){e=Os(e,t=fi(0,t=ui(n,t),1),1),t=el(),null!==e&&(yt(e,1,t),al(e,t))}function Nl(e,t,n){if(3===e.tag)Sl(e,e,n);else for(;null!==t;){if(3===t.tag){Sl(t,e,n);break}if(1===t.tag){var a=t.stateNode;if("function"===typeof t.type.getDerivedStateFromError||"function"===typeof a.componentDidCatch&&(null===qc||!qc.has(a))){t=Os(t,e=mi(t,e=ui(n,e),1),1),e=el(),null!==t&&(yt(t,1,e),al(t,e));break}}t=t.return}}function Il(e,t,n){var a=e.pingCache;null!==a&&a.delete(t),t=el(),e.pingedLanes|=e.suspendedLanes&n,_c===e&&(Rc&n)===n&&(4===Oc||3===Oc&&(130023424&Rc)===Rc&&500>Ze()-Wc?hl(e,0):Bc|=n),al(e,t)}function Tl(e,t){0===t&&(0===(1&e.mode)?t=1:(t=ut,0===(130023424&(ut<<=1))&&(ut=4194304)));var n=el();null!==(e=_s(e,t))&&(yt(e,t,n),al(e,n))}function Cl(e){var t=e.memoizedState,n=0;null!==t&&(n=t.retryLane),Tl(e,n)}function El(e,t){var n=0;switch(e.tag){case 13:var a=e.stateNode,r=e.memoizedState;null!==r&&(n=r.retryLane);break;case 19:a=e.stateNode;break;default:throw Error(s(314))}null!==a&&a.delete(t),Tl(e,n)}function _l(e,t){return Xe(e,t)}function Al(e,t,n,a){this.tag=e,this.key=n,this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null,this.index=0,this.ref=null,this.pendingProps=t,this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null,this.mode=a,this.subtreeFlags=this.flags=0,this.deletions=null,this.childLanes=this.lanes=0,this.alternate=null}function Rl(e,t,n,a){return new Al(e,t,n,a)}function Fl(e){return!(!(e=e.prototype)||!e.isReactComponent)}function Dl(e,t){var n=e.alternate;return null===n?((n=Rl(e.tag,t,e.key,e.mode)).elementType=e.elementType,n.type=e.type,n.stateNode=e.stateNode,n.alternate=e,e.alternate=n):(n.pendingProps=t,n.type=e.type,n.flags=0,n.subtreeFlags=0,n.deletions=null),n.flags=14680064&e.flags,n.childLanes=e.childLanes,n.lanes=e.lanes,n.child=e.child,n.memoizedProps=e.memoizedProps,n.memoizedState=e.memoizedState,n.updateQueue=e.updateQueue,t=e.dependencies,n.dependencies=null===t?null:{lanes:t.lanes,firstContext:t.firstContext},n.sibling=e.sibling,n.index=e.index,n.ref=e.ref,n}function Ol(e,t,n,a,r,o){var i=2;if(a=e,"function"===typeof e)Fl(e)&&(i=1);else if("string"===typeof e)i=5;else e:switch(e){case S:return Ml(n.children,r,o,t);case N:i=8,r|=8;break;case I:return(e=Rl(12,n,t,2|r)).elementType=I,e.lanes=o,e;case _:return(e=Rl(13,n,t,r)).elementType=_,e.lanes=o,e;case A:return(e=Rl(19,n,t,r)).elementType=A,e.lanes=o,e;case D:return zl(n,r,o,t);default:if("object"===typeof e&&null!==e)switch(e.$$typeof){case T:i=10;break e;case C:i=9;break e;case E:i=11;break e;case R:i=14;break e;case F:i=16,a=null;break e}throw Error(s(130,null==e?e:typeof e,""))}return(t=Rl(i,n,t,r)).elementType=e,t.type=a,t.lanes=o,t}function Ml(e,t,n,a){return(e=Rl(7,e,a,t)).lanes=n,e}function zl(e,t,n,a){return(e=Rl(22,e,a,t)).elementType=D,e.lanes=n,e.stateNode={isHidden:!1},e}function Ll(e,t,n){return(e=Rl(6,e,null,t)).lanes=n,e}function Bl(e,t,n){return(t=Rl(4,null!==e.children?e.children:[],e.key,t)).lanes=n,t.stateNode={containerInfo:e.containerInfo,pendingChildren:null,implementation:e.implementation},t}function Pl(e,t,n,a,r){this.tag=t,this.containerInfo=e,this.finishedWork=this.pingCache=this.current=this.pendingChildren=null,this.timeoutHandle=-1,this.callbackNode=this.pendingContext=this.context=null,this.callbackPriority=0,this.eventTimes=gt(0),this.expirationTimes=gt(-1),this.entangledLanes=this.finishedLanes=this.mutableReadLanes=this.expiredLanes=this.pingedLanes=this.suspendedLanes=this.pendingLanes=0,this.entanglements=gt(0),this.identifierPrefix=a,this.onRecoverableError=r,this.mutableSourceEagerHydrationData=null}function Vl(e,t,n,a,r,s,o,i,c){return e=new Pl(e,t,n,i,c),1===t?(t=1,!0===s&&(t|=8)):t=0,s=Rl(3,null,null,t),e.current=s,s.stateNode=e,s.memoizedState={element:a,isDehydrated:n,cache:null,transitions:null,pendingSuspenseBoundaries:null},Rs(s),e}function Wl(e,t,n){var a=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:k,key:null==a?null:""+a,children:e,containerInfo:t,implementation:n}}function Ul(e){if(!e)return Cr;e:{if(Ue(e=e._reactInternals)!==e||1!==e.tag)throw Error(s(170));var t=e;do{switch(t.tag){case 3:t=t.stateNode.context;break e;case 1:if(Fr(t.type)){t=t.stateNode.__reactInternalMemoizedMergedChildContext;break e}}t=t.return}while(null!==t);throw Error(s(171))}if(1===e.tag){var n=e.type;if(Fr(n))return Mr(e,n,t)}return t}function Gl(e,t,n,a,r,s,o,i,c){return(e=Vl(n,a,!0,e,0,s,0,i,c)).context=Ul(null),n=e.current,(s=Ds(a=el(),r=tl(n))).callback=void 0!==t&&null!==t?t:null,Os(n,s,r),e.current.lanes=r,yt(e,r,a),al(e,a),e}function Hl(e,t,n,a){var r=t.current,s=el(),o=tl(r);return n=Ul(n),null===t.context?t.context=n:t.pendingContext=n,(t=Ds(s,o)).payload={element:e},null!==(a=void 0===a?null:a)&&(t.callback=a),null!==(e=Os(r,t,o))&&(nl(e,r,o,s),Ms(e,r,o)),o}function jl(e){return(e=e.current).child?(e.child.tag,e.child.stateNode):null}function ql(e,t){if(null!==(e=e.memoizedState)&&null!==e.dehydrated){var n=e.retryLane;e.retryLane=0!==n&&n<t?n:t}}function Xl(e,t){ql(e,t),(e=e.alternate)&&ql(e,t)}Sc=function(e,t,n){if(null!==e)if(e.memoizedProps!==t.pendingProps||_r.current)xi=!0;else{if(0===(e.lanes&n)&&0===(128&t.flags))return xi=!1,function(e,t,n){switch(t.tag){case 3:Ai(t),ps();break;case 5:so(t);break;case 1:Fr(t.type)&&zr(t);break;case 4:ao(t,t.stateNode.containerInfo);break;case 10:var a=t.type._context,r=t.memoizedProps.value;Tr(ys,a._currentValue),a._currentValue=r;break;case 13:if(null!==(a=t.memoizedState))return null!==a.dehydrated?(Tr(io,1&io.current),t.flags|=128,null):0!==(n&t.child.childLanes)?Li(e,t,n):(Tr(io,1&io.current),null!==(e=Hi(e,t,n))?e.sibling:null);Tr(io,1&io.current);break;case 19:if(a=0!==(n&t.childLanes),0!==(128&e.flags)){if(a)return Ui(e,t,n);t.flags|=128}if(null!==(r=t.memoizedState)&&(r.rendering=null,r.tail=null,r.lastEffect=null),Tr(io,io.current),a)break;return null;case 22:case 23:return t.lanes=0,Ii(e,t,n)}return Hi(e,t,n)}(e,t,n);xi=0!==(131072&e.flags)}else xi=!1,rs&&0!==(1048576&t.flags)&&$r(t,qr,t.index);switch(t.lanes=0,t.tag){case 2:var a=t.type;Gi(e,t),e=t.pendingProps;var r=Rr(t,Er.current);Ns(t,n),r=No(null,t,a,e,r,n);var o=Io();return t.flags|=1,"object"===typeof r&&null!==r&&"function"===typeof r.render&&void 0===r.$$typeof?(t.tag=1,t.memoizedState=null,t.updateQueue=null,Fr(a)?(o=!0,zr(t)):o=!1,t.memoizedState=null!==r.state&&void 0!==r.state?r.state:null,Rs(t),r.updater=Ws,t.stateNode=r,r._reactInternals=t,js(t,a,e,n),t=_i(null,t,a,!0,o,n)):(t.tag=0,rs&&o&&es(t),wi(null,t,r,n),t=t.child),t;case 16:a=t.elementType;e:{switch(Gi(e,t),e=t.pendingProps,a=(r=a._init)(a._payload),t.type=a,r=t.tag=function(e){if("function"===typeof e)return Fl(e)?1:0;if(void 0!==e&&null!==e){if((e=e.$$typeof)===E)return 11;if(e===R)return 14}return 2}(a),e=gs(a,e),r){case 0:t=Ci(null,t,a,e,n);break e;case 1:t=Ei(null,t,a,e,n);break e;case 11:t=ki(null,t,a,e,n);break e;case 14:t=Si(null,t,a,gs(a.type,e),n);break e}throw Error(s(306,a,""))}return t;case 0:return a=t.type,r=t.pendingProps,Ci(e,t,a,r=t.elementType===a?r:gs(a,r),n);case 1:return a=t.type,r=t.pendingProps,Ei(e,t,a,r=t.elementType===a?r:gs(a,r),n);case 3:e:{if(Ai(t),null===e)throw Error(s(387));a=t.pendingProps,r=(o=t.memoizedState).element,Fs(e,t),Ls(t,a,null,n);var i=t.memoizedState;if(a=i.element,o.isDehydrated){if(o={element:a,isDehydrated:!1,cache:i.cache,pendingSuspenseBoundaries:i.pendingSuspenseBoundaries,transitions:i.transitions},t.updateQueue.baseState=o,t.memoizedState=o,256&t.flags){t=Ri(e,t,a,n,r=ui(Error(s(423)),t));break e}if(a!==r){t=Ri(e,t,a,n,r=ui(Error(s(424)),t));break e}for(as=lr(t.stateNode.containerInfo.firstChild),ns=t,rs=!0,ss=null,n=Zs(t,null,a,n),t.child=n;n;)n.flags=-3&n.flags|4096,n=n.sibling}else{if(ps(),a===r){t=Hi(e,t,n);break e}wi(e,t,a,n)}t=t.child}return t;case 5:return so(t),null===e&&ls(t),a=t.type,r=t.pendingProps,o=null!==e?e.memoizedProps:null,i=r.children,nr(a,r)?i=null:null!==o&&nr(a,o)&&(t.flags|=32),Ti(e,t),wi(e,t,i,n),t.child;case 6:return null===e&&ls(t),null;case 13:return Li(e,t,n);case 4:return ao(t,t.stateNode.containerInfo),a=t.pendingProps,null===e?t.child=Ys(t,null,a,n):wi(e,t,a,n),t.child;case 11:return a=t.type,r=t.pendingProps,ki(e,t,a,r=t.elementType===a?r:gs(a,r),n);case 7:return wi(e,t,t.pendingProps,n),t.child;case 8:case 12:return wi(e,t,t.pendingProps.children,n),t.child;case 10:e:{if(a=t.type._context,r=t.pendingProps,o=t.memoizedProps,i=r.value,Tr(ys,a._currentValue),a._currentValue=i,null!==o)if(ia(o.value,i)){if(o.children===r.children&&!_r.current){t=Hi(e,t,n);break e}}else for(null!==(o=t.child)&&(o.return=t);null!==o;){var c=o.dependencies;if(null!==c){i=o.child;for(var l=c.firstContext;null!==l;){if(l.context===a){if(1===o.tag){(l=Ds(-1,n&-n)).tag=2;var u=o.updateQueue;if(null!==u){var d=(u=u.shared).pending;null===d?l.next=l:(l.next=d.next,d.next=l),u.pending=l}}o.lanes|=n,null!==(l=o.alternate)&&(l.lanes|=n),Ss(o.return,n,t),c.lanes|=n;break}l=l.next}}else if(10===o.tag)i=o.type===t.type?null:o.child;else if(18===o.tag){if(null===(i=o.return))throw Error(s(341));i.lanes|=n,null!==(c=i.alternate)&&(c.lanes|=n),Ss(i,n,t),i=o.sibling}else i=o.child;if(null!==i)i.return=o;else for(i=o;null!==i;){if(i===t){i=null;break}if(null!==(o=i.sibling)){o.return=i.return,i=o;break}i=i.return}o=i}wi(e,t,r.children,n),t=t.child}return t;case 9:return r=t.type,a=t.pendingProps.children,Ns(t,n),a=a(r=Is(r)),t.flags|=1,wi(e,t,a,n),t.child;case 14:return r=gs(a=t.type,t.pendingProps),Si(e,t,a,r=gs(a.type,r),n);case 15:return Ni(e,t,t.type,t.pendingProps,n);case 17:return a=t.type,r=t.pendingProps,r=t.elementType===a?r:gs(a,r),Gi(e,t),t.tag=1,Fr(a)?(e=!0,zr(t)):e=!1,Ns(t,n),Gs(t,a,r),js(t,a,r,n),_i(null,t,a,!0,e,n);case 19:return Ui(e,t,n);case 22:return Ii(e,t,n)}throw Error(s(156,t.tag))};var Kl="function"===typeof reportError?reportError:function(e){console.error(e)};function Ql(e){this._internalRoot=e}function Yl(e){this._internalRoot=e}function Zl(e){return!(!e||1!==e.nodeType&&9!==e.nodeType&&11!==e.nodeType)}function Jl(e){return!(!e||1!==e.nodeType&&9!==e.nodeType&&11!==e.nodeType&&(8!==e.nodeType||" react-mount-point-unstable "!==e.nodeValue))}function $l(){}function eu(e,t,n,a,r){var s=n._reactRootContainer;if(s){var o=s;if("function"===typeof r){var i=r;r=function(){var e=jl(o);i.call(e)}}Hl(t,o,e,r)}else o=function(e,t,n,a,r){if(r){if("function"===typeof a){var s=a;a=function(){var e=jl(o);s.call(e)}}var o=Gl(t,a,e,0,null,!1,0,"",$l);return e._reactRootContainer=o,e[fr]=o.current,Ua(8===e.nodeType?e.parentNode:e),ul(),o}for(;r=e.lastChild;)e.removeChild(r);if("function"===typeof a){var i=a;a=function(){var e=jl(c);i.call(e)}}var c=Vl(e,0,!1,null,0,!1,0,"",$l);return e._reactRootContainer=c,e[fr]=c.current,Ua(8===e.nodeType?e.parentNode:e),ul((function(){Hl(t,c,n,a)})),c}(n,t,e,r,a);return jl(o)}Yl.prototype.render=Ql.prototype.render=function(e){var t=this._internalRoot;if(null===t)throw Error(s(409));Hl(e,t,null,null)},Yl.prototype.unmount=Ql.prototype.unmount=function(){var e=this._internalRoot;if(null!==e){this._internalRoot=null;var t=e.containerInfo;ul((function(){Hl(null,e,null,null)})),t[fr]=null}},Yl.prototype.unstable_scheduleHydration=function(e){if(e){var t=Nt();e={blockedOn:null,target:e,priority:t};for(var n=0;n<Dt.length&&0!==t&&t<Dt[n].priority;n++);Dt.splice(n,0,e),0===n&&Lt(e)}},wt=function(e){switch(e.tag){case 3:var t=e.stateNode;if(t.current.memoizedState.isDehydrated){var n=dt(t.pendingLanes);0!==n&&(bt(t,1|n),al(t,Ze()),0===(6&Ec)&&(Uc=Ze()+500,Ur()))}break;case 13:ul((function(){var t=_s(e,1);if(null!==t){var n=el();nl(t,e,1,n)}})),Xl(e,1)}},kt=function(e){if(13===e.tag){var t=_s(e,134217728);if(null!==t)nl(t,e,134217728,el());Xl(e,134217728)}},St=function(e){if(13===e.tag){var t=tl(e),n=_s(e,t);if(null!==n)nl(n,e,t,el());Xl(e,t)}},Nt=function(){return vt},It=function(e,t){var n=vt;try{return vt=e,t()}finally{vt=n}},ke=function(e,t,n){switch(t){case"input":if(J(e,n),t=n.name,"radio"===n.type&&null!=t){for(n=e;n.parentNode;)n=n.parentNode;for(n=n.querySelectorAll("input[name="+JSON.stringify(""+t)+'][type="radio"]'),t=0;t<n.length;t++){var a=n[t];if(a!==e&&a.form===e.form){var r=wr(a);if(!r)throw Error(s(90));X(a),J(a,r)}}}break;case"textarea":se(e,n);break;case"select":null!=(t=n.value)&&ne(e,!!n.multiple,t,!1)}},Ee=ll,_e=ul;var tu={usingClientEntryPoint:!1,Events:[vr,xr,wr,Te,Ce,ll]},nu={findFiberByHostInstance:br,bundleType:0,version:"18.2.0",rendererPackageName:"react-dom"},au={bundleType:nu.bundleType,version:nu.version,rendererPackageName:nu.rendererPackageName,rendererConfig:nu.rendererConfig,overrideHookState:null,overrideHookStateDeletePath:null,overrideHookStateRenamePath:null,overrideProps:null,overridePropsDeletePath:null,overridePropsRenamePath:null,setErrorHandler:null,setSuspenseHandler:null,scheduleUpdate:null,currentDispatcherRef:x.ReactCurrentDispatcher,findHostInstanceByFiber:function(e){return null===(e=je(e))?null:e.stateNode},findFiberByHostInstance:nu.findFiberByHostInstance||function(){return null},findHostInstancesForRefresh:null,scheduleRefresh:null,scheduleRoot:null,setRefreshHandler:null,getCurrentFiber:null,reconcilerVersion:"18.2.0-next-9e3b772b8-20220608"};if("undefined"!==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__){var ru=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(!ru.isDisabled&&ru.supportsFiber)try{rt=ru.inject(au),st=ru}catch(ue){}}t.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=tu,t.createPortal=function(e,t){var n=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;if(!Zl(t))throw Error(s(200));return Wl(e,t,null,n)},t.createRoot=function(e,t){if(!Zl(e))throw Error(s(299));var n=!1,a="",r=Kl;return null!==t&&void 0!==t&&(!0===t.unstable_strictMode&&(n=!0),void 0!==t.identifierPrefix&&(a=t.identifierPrefix),void 0!==t.onRecoverableError&&(r=t.onRecoverableError)),t=Vl(e,1,!1,null,0,n,0,a,r),e[fr]=t.current,Ua(8===e.nodeType?e.parentNode:e),new Ql(t)},t.findDOMNode=function(e){if(null==e)return null;if(1===e.nodeType)return e;var t=e._reactInternals;if(void 0===t){if("function"===typeof e.render)throw Error(s(188));throw e=Object.keys(e).join(","),Error(s(268,e))}return e=null===(e=je(t))?null:e.stateNode},t.flushSync=function(e){return ul(e)},t.hydrate=function(e,t,n){if(!Jl(t))throw Error(s(200));return eu(null,e,t,!0,n)},t.hydrateRoot=function(e,t,n){if(!Zl(e))throw Error(s(405));var a=null!=n&&n.hydratedSources||null,r=!1,o="",i=Kl;if(null!==n&&void 0!==n&&(!0===n.unstable_strictMode&&(r=!0),void 0!==n.identifierPrefix&&(o=n.identifierPrefix),void 0!==n.onRecoverableError&&(i=n.onRecoverableError)),t=Gl(t,null,e,1,null!=n?n:null,r,0,o,i),e[fr]=t.current,Ua(e),a)for(e=0;e<a.length;e++)r=(r=(n=a[e])._getVersion)(n._source),null==t.mutableSourceEagerHydrationData?t.mutableSourceEagerHydrationData=[n,r]:t.mutableSourceEagerHydrationData.push(n,r);return new Yl(t)},t.render=function(e,t,n){if(!Jl(t))throw Error(s(200));return eu(null,e,t,!1,n)},t.unmountComponentAtNode=function(e){if(!Jl(e))throw Error(s(40));return!!e._reactRootContainer&&(ul((function(){eu(null,null,e,!1,(function(){e._reactRootContainer=null,e[fr]=null}))})),!0)},t.unstable_batchedUpdates=ll,t.unstable_renderSubtreeIntoContainer=function(e,t,n,a){if(!Jl(n))throw Error(s(200));if(null==e||void 0===e._reactInternals)throw Error(s(38));return eu(e,t,n,!1,a)},t.version="18.2.0-next-9e3b772b8-20220608"},1250:(e,t,n)=>{"use strict";var a=n(4164);t.createRoot=a.createRoot,t.hydrateRoot=a.hydrateRoot},4164:(e,t,n)=>{"use strict";!function e(){if("undefined"!==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__&&"function"===typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE)try{__REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(e)}catch(t){console.error(t)}}(),e.exports=n(4463)},6374:(e,t,n)=>{"use strict";var a=n(2791),r=Symbol.for("react.element"),s=Symbol.for("react.fragment"),o=Object.prototype.hasOwnProperty,i=a.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,c={key:!0,ref:!0,__self:!0,__source:!0};function l(e,t,n){var a,s={},l=null,u=null;for(a in void 0!==n&&(l=""+n),void 0!==t.key&&(l=""+t.key),void 0!==t.ref&&(u=t.ref),t)o.call(t,a)&&!c.hasOwnProperty(a)&&(s[a]=t[a]);if(e&&e.defaultProps)for(a in t=e.defaultProps)void 0===s[a]&&(s[a]=t[a]);return{$$typeof:r,type:e,key:l,ref:u,props:s,_owner:i.current}}t.jsx=l,t.jsxs=l},9117:(e,t)=>{"use strict";var n=Symbol.for("react.element"),a=Symbol.for("react.portal"),r=Symbol.for("react.fragment"),s=Symbol.for("react.strict_mode"),o=Symbol.for("react.profiler"),i=Symbol.for("react.provider"),c=Symbol.for("react.context"),l=Symbol.for("react.forward_ref"),u=Symbol.for("react.suspense"),d=Symbol.for("react.memo"),h=Symbol.for("react.lazy"),p=Symbol.iterator;var f={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},m=Object.assign,g={};function y(e,t,n){this.props=e,this.context=t,this.refs=g,this.updater=n||f}function b(){}function v(e,t,n){this.props=e,this.context=t,this.refs=g,this.updater=n||f}y.prototype.isReactComponent={},y.prototype.setState=function(e,t){if("object"!==typeof e&&"function"!==typeof e&&null!=e)throw Error("setState(...): takes an object of state variables to update or a function which returns an object of state variables.");this.updater.enqueueSetState(this,e,t,"setState")},y.prototype.forceUpdate=function(e){this.updater.enqueueForceUpdate(this,e,"forceUpdate")},b.prototype=y.prototype;var x=v.prototype=new b;x.constructor=v,m(x,y.prototype),x.isPureReactComponent=!0;var w=Array.isArray,k=Object.prototype.hasOwnProperty,S={current:null},N={key:!0,ref:!0,__self:!0,__source:!0};function I(e,t,a){var r,s={},o=null,i=null;if(null!=t)for(r in void 0!==t.ref&&(i=t.ref),void 0!==t.key&&(o=""+t.key),t)k.call(t,r)&&!N.hasOwnProperty(r)&&(s[r]=t[r]);var c=arguments.length-2;if(1===c)s.children=a;else if(1<c){for(var l=Array(c),u=0;u<c;u++)l[u]=arguments[u+2];s.children=l}if(e&&e.defaultProps)for(r in c=e.defaultProps)void 0===s[r]&&(s[r]=c[r]);return{$$typeof:n,type:e,key:o,ref:i,props:s,_owner:S.current}}function T(e){return"object"===typeof e&&null!==e&&e.$$typeof===n}var C=/\/+/g;function E(e,t){return"object"===typeof e&&null!==e&&null!=e.key?function(e){var t={"=":"=0",":":"=2"};return"$"+e.replace(/[=:]/g,(function(e){return t[e]}))}(""+e.key):t.toString(36)}function _(e,t,r,s,o){var i=typeof e;"undefined"!==i&&"boolean"!==i||(e=null);var c=!1;if(null===e)c=!0;else switch(i){case"string":case"number":c=!0;break;case"object":switch(e.$$typeof){case n:case a:c=!0}}if(c)return o=o(c=e),e=""===s?"."+E(c,0):s,w(o)?(r="",null!=e&&(r=e.replace(C,"$&/")+"/"),_(o,t,r,"",(function(e){return e}))):null!=o&&(T(o)&&(o=function(e,t){return{$$typeof:n,type:e.type,key:t,ref:e.ref,props:e.props,_owner:e._owner}}(o,r+(!o.key||c&&c.key===o.key?"":(""+o.key).replace(C,"$&/")+"/")+e)),t.push(o)),1;if(c=0,s=""===s?".":s+":",w(e))for(var l=0;l<e.length;l++){var u=s+E(i=e[l],l);c+=_(i,t,r,u,o)}else if(u=function(e){return null===e||"object"!==typeof e?null:"function"===typeof(e=p&&e[p]||e["@@iterator"])?e:null}(e),"function"===typeof u)for(e=u.call(e),l=0;!(i=e.next()).done;)c+=_(i=i.value,t,r,u=s+E(i,l++),o);else if("object"===i)throw t=String(e),Error("Objects are not valid as a React child (found: "+("[object Object]"===t?"object with keys {"+Object.keys(e).join(", ")+"}":t)+"). If you meant to render a collection of children, use an array instead.");return c}function A(e,t,n){if(null==e)return e;var a=[],r=0;return _(e,a,"","",(function(e){return t.call(n,e,r++)})),a}function R(e){if(-1===e._status){var t=e._result;(t=t()).then((function(t){0!==e._status&&-1!==e._status||(e._status=1,e._result=t)}),(function(t){0!==e._status&&-1!==e._status||(e._status=2,e._result=t)})),-1===e._status&&(e._status=0,e._result=t)}if(1===e._status)return e._result.default;throw e._result}var F={current:null},D={transition:null},O={ReactCurrentDispatcher:F,ReactCurrentBatchConfig:D,ReactCurrentOwner:S};t.Children={map:A,forEach:function(e,t,n){A(e,(function(){t.apply(this,arguments)}),n)},count:function(e){var t=0;return A(e,(function(){t++})),t},toArray:function(e){return A(e,(function(e){return e}))||[]},only:function(e){if(!T(e))throw Error("React.Children.only expected to receive a single React element child.");return e}},t.Component=y,t.Fragment=r,t.Profiler=o,t.PureComponent=v,t.StrictMode=s,t.Suspense=u,t.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=O,t.cloneElement=function(e,t,a){if(null===e||void 0===e)throw Error("React.cloneElement(...): The argument must be a React element, but you passed "+e+".");var r=m({},e.props),s=e.key,o=e.ref,i=e._owner;if(null!=t){if(void 0!==t.ref&&(o=t.ref,i=S.current),void 0!==t.key&&(s=""+t.key),e.type&&e.type.defaultProps)var c=e.type.defaultProps;for(l in t)k.call(t,l)&&!N.hasOwnProperty(l)&&(r[l]=void 0===t[l]&&void 0!==c?c[l]:t[l])}var l=arguments.length-2;if(1===l)r.children=a;else if(1<l){c=Array(l);for(var u=0;u<l;u++)c[u]=arguments[u+2];r.children=c}return{$$typeof:n,type:e.type,key:s,ref:o,props:r,_owner:i}},t.createContext=function(e){return(e={$$typeof:c,_currentValue:e,_currentValue2:e,_threadCount:0,Provider:null,Consumer:null,_defaultValue:null,_globalName:null}).Provider={$$typeof:i,_context:e},e.Consumer=e},t.createElement=I,t.createFactory=function(e){var t=I.bind(null,e);return t.type=e,t},t.createRef=function(){return{current:null}},t.forwardRef=function(e){return{$$typeof:l,render:e}},t.isValidElement=T,t.lazy=function(e){return{$$typeof:h,_payload:{_status:-1,_result:e},_init:R}},t.memo=function(e,t){return{$$typeof:d,type:e,compare:void 0===t?null:t}},t.startTransition=function(e){var t=D.transition;D.transition={};try{e()}finally{D.transition=t}},t.unstable_act=function(){throw Error("act(...) is not supported in production builds of React.")},t.useCallback=function(e,t){return F.current.useCallback(e,t)},t.useContext=function(e){return F.current.useContext(e)},t.useDebugValue=function(){},t.useDeferredValue=function(e){return F.current.useDeferredValue(e)},t.useEffect=function(e,t){return F.current.useEffect(e,t)},t.useId=function(){return F.current.useId()},t.useImperativeHandle=function(e,t,n){return F.current.useImperativeHandle(e,t,n)},t.useInsertionEffect=function(e,t){return F.current.useInsertionEffect(e,t)},t.useLayoutEffect=function(e,t){return F.current.useLayoutEffect(e,t)},t.useMemo=function(e,t){return F.current.useMemo(e,t)},t.useReducer=function(e,t,n){return F.current.useReducer(e,t,n)},t.useRef=function(e){return F.current.useRef(e)},t.useState=function(e){return F.current.useState(e)},t.useSyncExternalStore=function(e,t,n){return F.current.useSyncExternalStore(e,t,n)},t.useTransition=function(){return F.current.useTransition()},t.version="18.2.0"},2791:(e,t,n)=>{"use strict";e.exports=n(9117)},184:(e,t,n)=>{"use strict";e.exports=n(6374)},6813:(e,t)=>{"use strict";function n(e,t){var n=e.length;e.push(t);e:for(;0<n;){var a=n-1>>>1,r=e[a];if(!(0<s(r,t)))break e;e[a]=t,e[n]=r,n=a}}function a(e){return 0===e.length?null:e[0]}function r(e){if(0===e.length)return null;var t=e[0],n=e.pop();if(n!==t){e[0]=n;e:for(var a=0,r=e.length,o=r>>>1;a<o;){var i=2*(a+1)-1,c=e[i],l=i+1,u=e[l];if(0>s(c,n))l<r&&0>s(u,c)?(e[a]=u,e[l]=n,a=l):(e[a]=c,e[i]=n,a=i);else{if(!(l<r&&0>s(u,n)))break e;e[a]=u,e[l]=n,a=l}}}return t}function s(e,t){var n=e.sortIndex-t.sortIndex;return 0!==n?n:e.id-t.id}if("object"===typeof performance&&"function"===typeof performance.now){var o=performance;t.unstable_now=function(){return o.now()}}else{var i=Date,c=i.now();t.unstable_now=function(){return i.now()-c}}var l=[],u=[],d=1,h=null,p=3,f=!1,m=!1,g=!1,y="function"===typeof setTimeout?setTimeout:null,b="function"===typeof clearTimeout?clearTimeout:null,v="undefined"!==typeof setImmediate?setImmediate:null;function x(e){for(var t=a(u);null!==t;){if(null===t.callback)r(u);else{if(!(t.startTime<=e))break;r(u),t.sortIndex=t.expirationTime,n(l,t)}t=a(u)}}function w(e){if(g=!1,x(e),!m)if(null!==a(l))m=!0,D(k);else{var t=a(u);null!==t&&O(w,t.startTime-e)}}function k(e,n){m=!1,g&&(g=!1,b(T),T=-1),f=!0;var s=p;try{for(x(n),h=a(l);null!==h&&(!(h.expirationTime>n)||e&&!_());){var o=h.callback;if("function"===typeof o){h.callback=null,p=h.priorityLevel;var i=o(h.expirationTime<=n);n=t.unstable_now(),"function"===typeof i?h.callback=i:h===a(l)&&r(l),x(n)}else r(l);h=a(l)}if(null!==h)var c=!0;else{var d=a(u);null!==d&&O(w,d.startTime-n),c=!1}return c}finally{h=null,p=s,f=!1}}"undefined"!==typeof navigator&&void 0!==navigator.scheduling&&void 0!==navigator.scheduling.isInputPending&&navigator.scheduling.isInputPending.bind(navigator.scheduling);var S,N=!1,I=null,T=-1,C=5,E=-1;function _(){return!(t.unstable_now()-E<C)}function A(){if(null!==I){var e=t.unstable_now();E=e;var n=!0;try{n=I(!0,e)}finally{n?S():(N=!1,I=null)}}else N=!1}if("function"===typeof v)S=function(){v(A)};else if("undefined"!==typeof MessageChannel){var R=new MessageChannel,F=R.port2;R.port1.onmessage=A,S=function(){F.postMessage(null)}}else S=function(){y(A,0)};function D(e){I=e,N||(N=!0,S())}function O(e,n){T=y((function(){e(t.unstable_now())}),n)}t.unstable_IdlePriority=5,t.unstable_ImmediatePriority=1,t.unstable_LowPriority=4,t.unstable_NormalPriority=3,t.unstable_Profiling=null,t.unstable_UserBlockingPriority=2,t.unstable_cancelCallback=function(e){e.callback=null},t.unstable_continueExecution=function(){m||f||(m=!0,D(k))},t.unstable_forceFrameRate=function(e){0>e||125<e?console.error("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported"):C=0<e?Math.floor(1e3/e):5},t.unstable_getCurrentPriorityLevel=function(){return p},t.unstable_getFirstCallbackNode=function(){return a(l)},t.unstable_next=function(e){switch(p){case 1:case 2:case 3:var t=3;break;default:t=p}var n=p;p=t;try{return e()}finally{p=n}},t.unstable_pauseExecution=function(){},t.unstable_requestPaint=function(){},t.unstable_runWithPriority=function(e,t){switch(e){case 1:case 2:case 3:case 4:case 5:break;default:e=3}var n=p;p=e;try{return t()}finally{p=n}},t.unstable_scheduleCallback=function(e,r,s){var o=t.unstable_now();switch("object"===typeof s&&null!==s?s="number"===typeof(s=s.delay)&&0<s?o+s:o:s=o,e){case 1:var i=-1;break;case 2:i=250;break;case 5:i=1073741823;break;case 4:i=1e4;break;default:i=5e3}return e={id:d++,callback:r,priorityLevel:e,startTime:s,expirationTime:i=s+i,sortIndex:-1},s>o?(e.sortIndex=s,n(u,e),null===a(l)&&e===a(u)&&(g?(b(T),T=-1):g=!0,O(w,s-o))):(e.sortIndex=i,n(l,e),m||f||(m=!0,D(k))),e},t.unstable_shouldYield=_,t.unstable_wrapCallback=function(e){var t=p;return function(){var n=p;p=t;try{return e.apply(this,arguments)}finally{p=n}}}},5296:(e,t,n)=>{"use strict";e.exports=n(6813)},6699:(e,t,n)=>{var a=n(2501),r=n(9112),s=n(2132),o=n(890),i=n(4113),c=n(1725),l=n(3411);l.alea=a,l.xor128=r,l.xorwow=s,l.xorshift7=o,l.xor4096=i,l.tychei=c,e.exports=l},2501:function(e,t,n){var a;!function(e,r,s){function o(e){var t=this,n=function(){var e=4022871197;return function(t){t=String(t);for(var n=0;n<t.length;n++){var a=.02519603282416938*(e+=t.charCodeAt(n));a-=e=a>>>0,e=(a*=e)>>>0,e+=4294967296*(a-=e)}return 2.3283064365386963e-10*(e>>>0)}}();t.next=function(){var e=2091639*t.s0+2.3283064365386963e-10*t.c;return t.s0=t.s1,t.s1=t.s2,t.s2=e-(t.c=0|e)},t.c=1,t.s0=n(" "),t.s1=n(" "),t.s2=n(" "),t.s0-=n(e),t.s0<0&&(t.s0+=1),t.s1-=n(e),t.s1<0&&(t.s1+=1),t.s2-=n(e),t.s2<0&&(t.s2+=1),n=null}function i(e,t){return t.c=e.c,t.s0=e.s0,t.s1=e.s1,t.s2=e.s2,t}function c(e,t){var n=new o(e),a=t&&t.state,r=n.next;return r.int32=function(){return 4294967296*n.next()|0},r.double=function(){return r()+11102230246251565e-32*(2097152*r()|0)},r.quick=r,a&&("object"==typeof a&&i(a,n),r.state=function(){return i(n,{})}),r}r&&r.exports?r.exports=c:n.amdD&&n.amdO?void 0===(a=function(){return c}.call(t,n,t,r))||(r.exports=a):this.alea=c}(0,e=n.nmd(e),n.amdD)},1725:function(e,t,n){var a;!function(e,r,s){function o(e){var t=this,n="";t.next=function(){var e=t.b,n=t.c,a=t.d,r=t.a;return e=e<<25^e>>>7^n,n=n-a|0,a=a<<24^a>>>8^r,r=r-e|0,t.b=e=e<<20^e>>>12^n,t.c=n=n-a|0,t.d=a<<16^n>>>16^r,t.a=r-e|0},t.a=0,t.b=0,t.c=-1640531527,t.d=1367130551,e===Math.floor(e)?(t.a=e/4294967296|0,t.b=0|e):n+=e;for(var a=0;a<n.length+20;a++)t.b^=0|n.charCodeAt(a),t.next()}function i(e,t){return t.a=e.a,t.b=e.b,t.c=e.c,t.d=e.d,t}function c(e,t){var n=new o(e),a=t&&t.state,r=function(){return(n.next()>>>0)/4294967296};return r.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},r.int32=n.next,r.quick=r,a&&("object"==typeof a&&i(a,n),r.state=function(){return i(n,{})}),r}r&&r.exports?r.exports=c:n.amdD&&n.amdO?void 0===(a=function(){return c}.call(t,n,t,r))||(r.exports=a):this.tychei=c}(0,e=n.nmd(e),n.amdD)},9112:function(e,t,n){var a;!function(e,r,s){function o(e){var t=this,n="";t.x=0,t.y=0,t.z=0,t.w=0,t.next=function(){var e=t.x^t.x<<11;return t.x=t.y,t.y=t.z,t.z=t.w,t.w^=t.w>>>19^e^e>>>8},e===(0|e)?t.x=e:n+=e;for(var a=0;a<n.length+64;a++)t.x^=0|n.charCodeAt(a),t.next()}function i(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t}function c(e,t){var n=new o(e),a=t&&t.state,r=function(){return(n.next()>>>0)/4294967296};return r.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},r.int32=n.next,r.quick=r,a&&("object"==typeof a&&i(a,n),r.state=function(){return i(n,{})}),r}r&&r.exports?r.exports=c:n.amdD&&n.amdO?void 0===(a=function(){return c}.call(t,n,t,r))||(r.exports=a):this.xor128=c}(0,e=n.nmd(e),n.amdD)},4113:function(e,t,n){var a;!function(e,r,s){function o(e){var t=this;t.next=function(){var e,n,a=t.w,r=t.X,s=t.i;return t.w=a=a+1640531527|0,n=r[s+34&127],e=r[s=s+1&127],n^=n<<13,e^=e<<17,n^=n>>>15,e^=e>>>12,n=r[s]=n^e,t.i=s,n+(a^a>>>16)|0},function(e,t){var n,a,r,s,o,i=[],c=128;for(t===(0|t)?(a=t,t=null):(t+="\0",a=0,c=Math.max(c,t.length)),r=0,s=-32;s<c;++s)t&&(a^=t.charCodeAt((s+32)%t.length)),0===s&&(o=a),a^=a<<10,a^=a>>>15,a^=a<<4,a^=a>>>13,s>=0&&(o=o+1640531527|0,r=0==(n=i[127&s]^=a+o)?r+1:0);for(r>=128&&(i[127&(t&&t.length||0)]=-1),r=127,s=512;s>0;--s)a=i[r+34&127],n=i[r=r+1&127],a^=a<<13,n^=n<<17,a^=a>>>15,n^=n>>>12,i[r]=a^n;e.w=o,e.X=i,e.i=r}(t,e)}function i(e,t){return t.i=e.i,t.w=e.w,t.X=e.X.slice(),t}function c(e,t){null==e&&(e=+new Date);var n=new o(e),a=t&&t.state,r=function(){return(n.next()>>>0)/4294967296};return r.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},r.int32=n.next,r.quick=r,a&&(a.X&&i(a,n),r.state=function(){return i(n,{})}),r}r&&r.exports?r.exports=c:n.amdD&&n.amdO?void 0===(a=function(){return c}.call(t,n,t,r))||(r.exports=a):this.xor4096=c}(0,e=n.nmd(e),n.amdD)},890:function(e,t,n){var a;!function(e,r,s){function o(e){var t=this;t.next=function(){var e,n,a=t.x,r=t.i;return e=a[r],n=(e^=e>>>7)^e<<24,n^=(e=a[r+1&7])^e>>>10,n^=(e=a[r+3&7])^e>>>3,n^=(e=a[r+4&7])^e<<7,e=a[r+7&7],n^=(e^=e<<13)^e<<9,a[r]=n,t.i=r+1&7,n},function(e,t){var n,a=[];if(t===(0|t))a[0]=t;else for(t=""+t,n=0;n<t.length;++n)a[7&n]=a[7&n]<<15^t.charCodeAt(n)+a[n+1&7]<<13;for(;a.length<8;)a.push(0);for(n=0;n<8&&0===a[n];++n);for(8==n?a[7]=-1:a[n],e.x=a,e.i=0,n=256;n>0;--n)e.next()}(t,e)}function i(e,t){return t.x=e.x.slice(),t.i=e.i,t}function c(e,t){null==e&&(e=+new Date);var n=new o(e),a=t&&t.state,r=function(){return(n.next()>>>0)/4294967296};return r.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},r.int32=n.next,r.quick=r,a&&(a.x&&i(a,n),r.state=function(){return i(n,{})}),r}r&&r.exports?r.exports=c:n.amdD&&n.amdO?void 0===(a=function(){return c}.call(t,n,t,r))||(r.exports=a):this.xorshift7=c}(0,e=n.nmd(e),n.amdD)},2132:function(e,t,n){var a;!function(e,r,s){function o(e){var t=this,n="";t.next=function(){var e=t.x^t.x>>>2;return t.x=t.y,t.y=t.z,t.z=t.w,t.w=t.v,(t.d=t.d+362437|0)+(t.v=t.v^t.v<<4^e^e<<1)|0},t.x=0,t.y=0,t.z=0,t.w=0,t.v=0,e===(0|e)?t.x=e:n+=e;for(var a=0;a<n.length+64;a++)t.x^=0|n.charCodeAt(a),a==n.length&&(t.d=t.x<<10^t.x>>>4),t.next()}function i(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t.v=e.v,t.d=e.d,t}function c(e,t){var n=new o(e),a=t&&t.state,r=function(){return(n.next()>>>0)/4294967296};return r.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},r.int32=n.next,r.quick=r,a&&("object"==typeof a&&i(a,n),r.state=function(){return i(n,{})}),r}r&&r.exports?r.exports=c:n.amdD&&n.amdO?void 0===(a=function(){return c}.call(t,n,t,r))||(r.exports=a):this.xorwow=c}(0,e=n.nmd(e),n.amdD)},3411:function(e,t,n){var a;!function(r,s,o){var i,c=256,l=o.pow(c,6),u=o.pow(2,52),d=2*u,h=255;function p(e,t,n){var a=[],h=y(g((t=1==t?{entropy:!0}:t||{}).entropy?[e,b(s)]:null==e?function(){try{var e;return i&&(e=i.randomBytes)?e=e(c):(e=new Uint8Array(c),(r.crypto||r.msCrypto).getRandomValues(e)),b(e)}catch(a){var t=r.navigator,n=t&&t.plugins;return[+new Date,r,n,r.screen,b(s)]}}():e,3),a),p=new f(a),v=function(){for(var e=p.g(6),t=l,n=0;e<u;)e=(e+n)*c,t*=c,n=p.g(1);for(;e>=d;)e/=2,t/=2,n>>>=1;return(e+n)/t};return v.int32=function(){return 0|p.g(4)},v.quick=function(){return p.g(4)/4294967296},v.double=v,y(b(p.S),s),(t.pass||n||function(e,t,n,a){return a&&(a.S&&m(a,p),e.state=function(){return m(p,{})}),n?(o.random=e,t):e})(v,h,"global"in t?t.global:this==o,t.state)}function f(e){var t,n=e.length,a=this,r=0,s=a.i=a.j=0,o=a.S=[];for(n||(e=[n++]);r<c;)o[r]=r++;for(r=0;r<c;r++)o[r]=o[s=h&s+e[r%n]+(t=o[r])],o[s]=t;(a.g=function(e){for(var t,n=0,r=a.i,s=a.j,o=a.S;e--;)t=o[r=h&r+1],n=n*c+o[h&(o[r]=o[s=h&s+t])+(o[s]=t)];return a.i=r,a.j=s,n})(c)}function m(e,t){return t.i=e.i,t.j=e.j,t.S=e.S.slice(),t}function g(e,t){var n,a=[],r=typeof e;if(t&&"object"==r)for(n in e)try{a.push(g(e[n],t-1))}catch(s){}return a.length?a:"string"==r?e:e+"\0"}function y(e,t){for(var n,a=e+"",r=0;r<a.length;)t[h&r]=h&(n^=19*t[h&r])+a.charCodeAt(r++);return b(t)}function b(e){return String.fromCharCode.apply(0,e)}if(y(o.random(),s),e.exports){e.exports=p;try{i=n(5042)}catch(v){}}else void 0===(a=function(){return p}.call(t,n,t,e))||(e.exports=a)}("undefined"!==typeof self?self:this,[],Math)},5410:()=>{},8628:()=>{},1601:()=>{},7792:()=>{},4977:()=>{},5042:()=>{}},t={};function n(a){var r=t[a];if(void 0!==r)return r.exports;var s=t[a]={id:a,loaded:!1,exports:{}};return e[a].call(s.exports,s,s.exports,n),s.loaded=!0,s.exports}n.amdD=function(){throw new Error("define cannot be used indirect")},n.amdO={},n.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return n.d(t,{a:t}),t},n.d=(e,t)=>{for(var a in t)n.o(t,a)&&!n.o(e,a)&&Object.defineProperty(e,a,{enumerable:!0,get:t[a]})},n.g=function(){if("object"===typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"===typeof window)return window}}(),n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),n.r=e=>{"undefined"!==typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.nmd=e=>(e.paths=[],e.children||(e.children=[]),e),n.p="/smart-mask/",(()=>{"use strict";var e={};n.r(e),n.d(e,{addImpl:()=>wd,bincountImpl:()=>ph,bincountReduceImpl:()=>fh,bitwiseAndImpl:()=>gh,castImpl:()=>gd,ceilImpl:()=>xh,concatImpl:()=>Th,equalImpl:()=>up,expImpl:()=>wp,expm1Impl:()=>Tp,floorDivImpl:()=>qp,floorImpl:()=>Gp,gatherNdImpl:()=>Zp,gatherV2Impl:()=>$p,greaterEqualImpl:()=>rf,greaterImpl:()=>tf,lessEqualImpl:()=>bf,lessImpl:()=>mf,linSpaceImpl:()=>wf,logImpl:()=>Sf,maxImpl:()=>Bf,maximumImpl:()=>Wf,minimumImpl:()=>Zf,multiplyImpl:()=>np,negImpl:()=>im,notEqualImpl:()=>mm,prodImpl:()=>Em,raggedGatherImpl:()=>Dm,raggedRangeImpl:()=>zm,raggedTensorToTensorImpl:()=>Um,rangeImpl:()=>Hm,rsqrtImpl:()=>ng,scatterImpl:()=>sg,sigmoidImpl:()=>id,simpleAbsImpl:()=>Ad,sliceImpl:()=>lh,sparseFillEmptyRowsImpl:()=>Ig,sparseReshapeImpl:()=>Cg,sparseSegmentReductionImpl:()=>_g,sqrtImpl:()=>Og,squaredDifferenceImpl:()=>Bg,staticRegexReplaceImpl:()=>Wg,stridedSliceImpl:()=>qg,stringNGramsImpl:()=>Qg,stringSplitImpl:()=>Jg,stringToHashBucketFastImpl:()=>ey,subImpl:()=>Fp,tileImpl:()=>iy,topKImpl:()=>dy,transposeImpl:()=>Ld,uniqueImpl:()=>by});var t=n(2791),a=n(1250);const r=n.p+"static/media/9eb2a282cb49206a404ced6913006692.9177a15b30e445337ccc.png",s="ButtonNewFlow_container__button__pr9Gz",o="ButtonNewFlow_disabled__8FZy6";var i=n(184);const c=e=>{let{title:t,onClick:n,disabled:a}=e;return(0,i.jsx)("button",{className:"".concat(s," ").concat(a?o:""),onClick:n,disabled:a,children:t})},l="IntroductionSmartMask_container__flexbox__y1QJD",u="IntroductionSmartMask_container__header__Rt0cJ",d="IntroductionSmartMask_container__description__vzq+d",h="IntroductionSmartMask_container__image__5cDAK",p="IntroductionSmartMask_container__imageOverlay__DXVQO",f=e=>{let{handleButtonClick:t}=e;return(0,i.jsxs)("div",{className:l,children:[(0,i.jsxs)("div",{children:[(0,i.jsx)("h1",{className:u,children:"Welcome to SmartMask"}),(0,i.jsx)("p",{className:d,children:"SmartMask helps you take photos of your vehicle! We\u2019ll guide you to ensure you get the right angles and positioning for each shot."}),(0,i.jsxs)("div",{style:{position:"relative"},children:[(0,i.jsx)("img",{className:h,src:r,alt:""}),(0,i.jsx)("div",{className:p})]})]}),(0,i.jsx)(c,{title:"Get started",onClick:t,disabled:!1})]})},m=e=>{let{className:t}=e;return(0,i.jsxs)("svg",{className:t,width:"138",height:"325",viewBox:"0 0 138 325",fill:"none",xmlns:"http://www.w3.org/2000/svg",children:[(0,i.jsxs)("g",{clipPath:"url(#clip0_23_7969)",children:[(0,i.jsx)("path",{d:"M128.712 182.21C128.659 168.366 128.605 156.367 128.605 142.069C128.605 113.661 129.087 101.234 129.087 79.4529C129.087 58.2868 127.08 16.4626 126.303 2.16482C126.277 1.57687 125.688 1.176 125.126 1.3898C123.279 2.00447 121.111 2.51224 117.444 2.59241C113.001 2.67259 80.8834 2.77949 71.1677 2.85966H66.9388C57.2499 2.77949 25.132 2.67259 20.6623 2.59241C16.9687 2.51224 14.8275 2.00447 12.9807 1.3898C12.4187 1.20273 11.8298 1.57687 11.8031 2.16482C11.0269 16.4626 9.01953 58.2868 9.01953 79.4529C9.01953 100.619 9.5013 113.661 9.5013 142.069C9.5013 156.287 9.44777 168.206 9.39424 181.942",stroke:"#241F20",strokeMiterlimit:"10",strokeLinecap:"round"}),(0,i.jsx)("path",{d:"M9.31467 193.113C9.26114 204.177 9.23438 216.791 9.23438 232.639C9.23438 275.479 9.8232 302.017 10.0641 305.544C10.305 309.072 10.6529 310.622 14.3197 311.103C21.1983 311.985 28.3981 312.466 32.4931 318.105C32.9749 318.773 33.644 319.254 34.4469 319.388C40.4958 320.377 63.3531 323.343 66.2704 323.664H71.8108C74.7282 323.343 97.5854 320.377 103.634 319.388C104.437 319.254 105.106 318.773 105.588 318.105C109.656 312.466 116.856 312.012 123.762 311.103C127.455 310.622 127.803 309.099 128.017 305.544C128.231 301.99 128.847 275.479 128.847 232.639C128.847 216.898 128.82 204.338 128.767 193.327",stroke:"#241F20",strokeMiterlimit:"10",strokeLinecap:"round"}),(0,i.jsx)("path",{d:"M23.5806 35.2231C21.8141 44.2828 16.4076 86.7485 16.1667 103.264C15.8723 123.067 15.5779 155.324 15.5779 162.46C15.5779 169.595 15.2567 196.454 14.2129 202.574",stroke:"#241F20",strokeMiterlimit:"10",strokeLinecap:"round"}),(0,i.jsx)("path",{d:"M114.688 35.2231C116.454 44.2828 121.861 86.7485 122.101 103.264C122.396 123.067 122.69 155.324 122.69 162.46C122.69 169.595 123.011 196.454 124.055 202.574",stroke:"#241F20",strokeMiterlimit:"10",strokeLinecap:"round"}),(0,i.jsx)("path",{d:"M24.6777 216.524C25.106 240.176 25.213 267.168 26.6851 298.489C27.033 305.705 27.381 313.348 28.3713 314.337",stroke:"#241F20",strokeWidth:"0.99",strokeMiterlimit:"10",strokeLinecap:"round"}),(0,i.jsx)("path",{d:"M71.6757 38.1631C81.0167 38.5105 96.8348 39.4191 104.57 44.4434C108.397 46.9288 110.083 49.1737 111.1 57.592C112.118 66.0103 113.991 86.7755 114.58 93.8843C107.487 91.9333 83.4791 90.5971 71.649 90.5971H66.3763C54.5462 90.5971 30.538 91.9333 23.4453 93.8843C24.0341 86.7755 25.9345 66.0103 26.9248 57.592C27.9151 49.1737 29.628 46.9288 33.4554 44.4434C41.1905 39.4191 57.0085 38.5372 66.3495 38.1631H71.6222H71.6757Z",fill:"#241F20"}),(0,i.jsx)("path",{d:"M71.7041 212.462C92.099 212.462 112.28 211.847 119.319 204.124C118.971 196.267 117.954 177.853 117.606 172.241C111.37 177.105 99.1382 179.083 71.6774 179.083H66.3779C38.9439 179.083 26.6855 177.078 20.4493 172.241C20.1013 177.853 19.0843 196.294 18.7363 204.124C25.7755 211.847 45.9563 212.462 66.3511 212.462H71.6506H71.7041Z",fill:"#241F20"}),(0,i.jsx)("path",{d:"M113.43 216.524C113.002 240.176 112.895 267.168 111.423 298.489C111.075 305.705 110.727 313.348 109.736 314.337",stroke:"#241F20",strokeWidth:"0.99",strokeMiterlimit:"10",strokeLinecap:"round"}),(0,i.jsx)("path",{d:"M79.8668 243.356C80.9374 255.328 81.2585 282.962 79.5724 284.539C78.2609 285.795 73.9785 286.302 71.8373 286.302H66.297C64.1558 286.302 59.8734 285.768 58.5619 284.539C56.8757 282.935 57.1969 255.328 58.2675 243.356",stroke:"#241F20",strokeMiterlimit:"10",strokeLinecap:"round"}),(0,i.jsx)("path",{d:"M10.6521 193.648C6.66411 192.311 2.94379 188.944 1.68583 185.229C1.1773 183.706 1.31113 182.103 1.55201 182.103L11.455 182.263",stroke:"#241F20",strokeMiterlimit:"10",strokeLinecap:"round"}),(0,i.jsx)("path",{d:"M127.348 193.648C131.336 192.311 135.056 188.944 136.314 185.229C136.823 183.706 136.689 182.103 136.448 182.103L126.545 182.263",stroke:"#241F20",strokeMiterlimit:"10",strokeLinecap:"round"})]}),(0,i.jsx)("defs",{children:(0,i.jsx)("clipPath",{id:"clip0_23_7969",children:(0,i.jsx)("rect",{width:"138",height:"325",fill:"white"})})})]})},g=e=>{let{className:t}=e;return(0,i.jsx)("svg",{className:t,width:"56",height:"56",viewBox:"0 0 56 56",fill:"none",xmlns:"http://www.w3.org/2000/svg",children:(0,i.jsx)("g",{id:"arrow-up",children:(0,i.jsx)("path",{id:"Vector (Stroke)",fillRule:"evenodd",clipRule:"evenodd",d:"M26.7619 10.4293C27.4453 9.74589 28.5534 9.74589 29.2368 10.4293L45.5701 26.7626C46.2535 27.4461 46.2535 28.5541 45.5701 29.2375C44.8867 29.9209 43.7787 29.9209 43.0952 29.2375L29.7493 15.8916V44.3334C29.7493 45.2999 28.9658 46.0834 27.9993 46.0834C27.0329 46.0834 26.2493 45.2999 26.2493 44.3334V15.8916L12.9035 29.2375C12.22 29.9209 11.112 29.9209 10.4286 29.2375C9.74516 28.5541 9.74516 27.4461 10.4286 26.7626L26.7619 10.4293Z",fill:"#00BB8E"})})})},y="StartPosition_container__flexBox__LcZny",b="StartPosition_container__title__8KG9-",v="StartPosition_container__iconsBox__BED5Z",x="StartPosition_container__arrowIcon__t1C4+",w=e=>{let{handleButtonClick:t}=e;return(0,i.jsxs)("div",{className:y,children:[(0,i.jsxs)("div",{className:v,children:[(0,i.jsx)(m,{}),(0,i.jsx)("div",{className:x,children:(0,i.jsx)(g,{})})]}),(0,i.jsx)("div",{className:b,children:"Start by standing at the front of your vehicle"}),(0,i.jsx)(c,{title:"Next",onClick:t,disabled:!1})]})};var k=n(8377),S=n(3613),N=n(2145),I=n(9118),T=n(651),C=n(4031);const E={kernelName:N.SYM,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,T.d)(e,(0,C.N)((0,I.p)(n,"float32"),-1))}}};var _=n(5750),A=n(4362),R=n(7067),F=n(6902),D=n(7391),O=n(4774);const M={kernelName:N.VGw,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=(0,D.h)((0,I.p)(n,"float32")),a=(0,F._)((0,O.l)((0,R.i)(1),t));return(0,A.W)((0,_.h)(e,a))}}}},z={kernelName:N.SpW,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=(0,F._)((0,O.l)((0,D.h)((0,I.p)(n,"float32")),1));return(0,_.h)(e,t)}}}};var L=n(5774),B=n(5561),P=n(227);const V={kernelName:N.mm_,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,a]=t,r=L.assertAndGetBroadcastShape(n.shape,a.shape);return{a:()=>{let t=e;const a=L.getReductionAxes(n.shape,r);return a.length>0&&(t=(0,P.S)(t,a)),(0,B.X)(t,n.shape)},b:()=>{let t=e;const n=L.getReductionAxes(a.shape,r);return n.length>0&&(t=(0,P.S)(t,n)),(0,B.X)(t,a.shape)}}}},W={kernelName:N.Xze,saveAllInputs:!0,gradFunc:(e,t)=>{const n={};return t.forEach(((t,a)=>{n[a]=()=>e.clone()})),n}};var U=n(7293);const G={kernelName:N.sJF,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,U.P)(n)}}},H={kernelName:N.aJk,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,U.P)(n)}}},j={kernelName:N.M2y,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,_.h)(e,(0,F._)((0,O.l)((0,R.i)(1),(0,D.h)((0,I.p)(n,"float32")))))}}};var q=n(3312);const X={kernelName:N.qw7,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=(0,F._)((0,q.I)((0,R.i)(1),(0,D.h)((0,I.p)(n,"float32"))));return(0,_.h)(e,t)}}}},K={kernelName:N.QCc,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,a]=t,r=(0,L.assertAndGetBroadcastShape)(n.shape,a.shape);return{a:()=>{const t=(0,q.I)((0,D.h)(n),(0,D.h)(a));let s=(0,T.d)(e,(0,_.h)(a,t));const o=(0,L.getReductionAxes)(n.shape,r);return o.length>0&&(s=(0,P.S)(s,o)),(0,B.X)(s,n.shape)},b:()=>{const t=(0,q.I)((0,D.h)(n),(0,D.h)(a));let s=(0,A.W)((0,T.d)(e,(0,_.h)(n,t)));const o=(0,L.getReductionAxes)(a.shape,r);return o.length>0&&(s=(0,P.S)(s,o)),(0,B.X)(s,a.shape)}}}},Q={kernelName:N.jMg,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,_.h)(e,(0,q.I)((0,D.h)((0,I.p)(n,"float32")),1))}}},Y={kernelName:N.Oyi,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,_.h)(e,(0,O.l)((0,R.i)(1),(0,D.h)((0,I.p)(n,"float32"))))}}};var Z=n(318),J=n(8354),$=n(6147),ee=n(9151),te=n(8640);const ne=(0,te.op)({avgPool3dGrad_:function(e,t,n,a,r,s){const o=(0,J._1)(e,"dy","avgPool3dGrad"),i=(0,J._1)(t,"input","avgPool3dGrad");let c=o,l=i,u=!1;4===i.rank&&(u=!0,c=(0,B.X)(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]]),l=(0,B.X)(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),$.hu(5===c.rank,(()=>"Error in avgPool3dGrad: dy must be rank 5 but got rank "+"".concat(c.rank,"."))),$.hu(5===l.rank,(()=>"Error in avgPool3dGrad: input must be rank 5 but got rank "+"".concat(l.rank,"."))),(0,ee.m)("avgPool3dGrad",r,s);const d={dy:c,input:l},h={filterSize:n,strides:a,pad:r,dimRoundingMode:s},p=Z.BV.runKernel(N.IMb,d,h);return u?(0,B.X)(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}}),ae={kernelName:N._k9,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[a]=t,{filterSize:r,strides:s,pad:o,dimRoundingMode:i}=n;return{x:()=>ne(e,a,r,s,o,i)}}};const re=(0,te.op)({avgPoolGrad_:function(e,t,n,a,r){const s=(0,J._1)(e,"dy","avgPoolGrad"),o=(0,J._1)(t,"input","avgPoolGrad");$.hu(o.rank===s.rank,(()=>"Rank of input (".concat(o.rank,") does not match rank of dy (").concat(s.rank,")")));let i=o,c=s,l=!1;3===o.rank&&(l=!0,i=(0,B.X)(o,[1,o.shape[0],o.shape[1],o.shape[2]]),c=(0,B.X)(s,[1,s.shape[0],s.shape[1],s.shape[2]])),$.hu(4===c.rank,(()=>"Error in avgPoolGrad: dy must be rank 4 but got rank "+"".concat(c.rank,"."))),$.hu(4===i.rank,(()=>"Error in avgPoolGrad: input must be rank 4 but got rank "+"".concat(i.rank,".")));const u={dy:c,input:i},d={filterSize:n,strides:a,pad:r},h=Z.BV.runKernel(N.ROF,u,d);return l?(0,B.X)(h,[h.shape[1],h.shape[2],h.shape[3]]):h}}),se={kernelName:N.JhU,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[a]=t,{filterSize:r,strides:s,pad:o}=n;return{x:()=>re(e,a,r,s,o)}}};var oe=n(7221);const ie={kernelName:N.XLW,inputsToSave:["a","b"],gradFunc:(e,t,n)=>{const[a,r]=t,{transposeA:s,transposeB:o}=n;return s||o?!s&&o?{a:()=>(0,oe.O)(e,r,!1,!1),b:()=>(0,oe.O)(e,a,!0,!1)}:s&&!o?{a:()=>(0,oe.O)(r,e,!1,!0),b:()=>(0,oe.O)(a,e,!1,!1)}:{a:()=>(0,oe.O)(r,e,!0,!0),b:()=>(0,oe.O)(e,a,!0,!0)}:{a:()=>(0,oe.O)(e,r,!1,!0),b:()=>(0,oe.O)(a,e,!0,!1)}}};var ce=n(5696);const le={kernelName:N.zws,gradFunc:(e,t,n)=>{const{blockShape:a,crops:r}=n;return{x:()=>(0,ce.f)(e,a,r)}}},ue={kernelName:N.Ly9,gradFunc:(e,t,n)=>{const a=n,r=a.inputShape,s=a.shape,o=Array.from(s);for(let c=r.length-1;c>=0;c--)if(r[c]===s[c])o[c]=1;else if(1!==r[c])throw new Error("broadcastTo(): [".concat(r,"] cannot be broadcast to [").concat(s,"]."));const i=[];for(let c=0;c<o.length;c++)o[c]>1&&i.push(c);return{x:()=>(0,P.S)(e,i,!0)}}},de={kernelName:N.RFZ,gradFunc:e=>({x:()=>e.clone()})},he={kernelName:N.gJX,gradFunc:e=>({x:()=>(0,U.P)(e)})};var pe=n(8327),fe=n(2642),me=n(2177),ge=n(329);const ye={kernelName:N.xnO,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[a]=t,{clipValueMin:r,clipValueMax:s}=n;return{x:()=>(0,ge.a)((0,me.H)((0,pe.b)(a,r),(0,fe.z)(a,s)),e,(0,U.P)(e))}}},be={kernelName:N.yj2,inputsToSave:["x"],gradFunc:E.gradFunc};var ve=n(2588);const xe={kernelName:N.Eh3,saveAllInputs:!0,gradFunc:(e,t,n)=>{const a=t.map((e=>e.shape)),{axis:r}=n,s=(0,$.EC)(r,t[0].shape)[0],o=a.map((e=>e[s]));return(0,ve.V)(e,o,s).map((e=>()=>e))}};var we=n(8744),ke=n(1045);const Se={kernelName:N.mhS,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const[a,r]=t,{dilations:s,strides:o,pad:i,dataFormat:c}=n;return $.hu(ee.I0(s),(()=>"Error in gradient of conv2D: dilation rates greater than 1 "+"are not yet supported in gradients. Got dilations '".concat(s,"'"))),{x:()=>(0,ke._)(a.shape,e,r,o,i,c),filter:()=>(0,we.p)(a,e,r.shape,o,i,c)}}};var Ne=n(3457);const Ie={kernelName:N.wm,inputsToSave:["dy","filter"],gradFunc:(e,t,n)=>{const[a,r]=t,{strides:s,pad:o,dataFormat:i,dimRoundingMode:c}=n;return{dy:()=>(0,Ne.T)(e,r,s,o,i,1,c),filter:()=>(0,we.p)(e,a,r.shape,s,o,i,c)}}};const Te=(0,te.op)({conv3DBackpropFilter_:function(e,t,n,a,r){let s=e;4===e.rank&&(s=(0,B.X)(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]]));let o=t;4===o.rank&&(o=(0,B.X)(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]])),$.hu(5===s.rank,(()=>"Error in conv3dDerFilter: input must be rank 5, but got shape "+"".concat(s.shape,"."))),$.hu(5===o.rank,(()=>"Error in conv3dDerFilter: dy must be rank 5, but got shape "+"".concat(o.shape,"."))),$.hu(5===n.length,(()=>"Error in conv3dDerFilter: filterShape must be length 5, but got "+"".concat(n,"."))),$.hu(s.shape[4]===n[3],(()=>"Error in conv3dDerFilter: depth of input ".concat(s.shape[4],") must ")+"match input depth in filter (".concat(n[3],"."))),$.hu(o.shape[4]===n[4],(()=>"Error in conv3dDerFilter: depth of dy (".concat(o.shape[4],") must ")+"match output depth for filter (".concat(n[4],").")));const i={x:s,dy:o},c={strides:a,pad:r,filterShape:n};return Z.BV.runKernel(N.o2y,i,c)}});var Ce=n(1873);const Ee={kernelName:N.x12,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const{dilations:a,strides:r,pad:s}=n;$.hu((0,ee.I0)(a),(()=>"Error in gradient of conv3D: dilation rates greater than 1 are "+"not yet supported in gradients. Got dilations '".concat(a,"'")));const[o,i]=t;return{x:()=>(0,Ce._)(o.shape,e,i,r,s),filter:()=>Te(o,e,i.shape,r,s)}}};var _e=n(7254);const Ae={kernelName:N.mc4,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,T.d)((0,A.W)((0,_e.O)((0,I.p)(n,"float32"))),e)}}};var Re=n(7657);const Fe={kernelName:N.TR1,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,T.d)((0,Re.R)((0,I.p)(n,"float32")),e)}}};var De=n(8473),Oe=n(8862),Me=n(1240);const ze={kernelName:N.iHb,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[a]=t,{axis:r,exclusive:s,reverse:o}=n;return{x:()=>{const t=(0,De.Q3)([r],a.rank);let n=(0,Oe.z)(e,r,s,!o);return null!=t&&(n=(0,Me.p)(n,t)),n}}}};var Le=n(288),Be=n(6939);const Pe={kernelName:N.cie,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const{dilations:a,strides:r,pad:s,dimRoundingMode:o}=n,i=null==a?[1,1]:a;$.hu(ee.I0(i),(()=>"Error in gradient of depthwiseConv2dNative: dilation rates greater than 1 are not yet supported. Got dilations "+"'".concat(i,"'")));const[c,l]=t;return $.hu(4===c.rank,(()=>"Error in gradient of depthwiseConv2dNative: input must be "+"rank 4, but got rank ".concat(c.rank,"."))),$.hu(4===l.rank,(()=>"Error in gradient of depthwiseConv2dNative: filter must be "+"rank 4, but got rank ".concat(l.rank,"."))),$.hu(c.shape[3]===l.shape[2],(()=>"Error in gradient of depthwiseConv2d: number of input "+"channels (".concat(c.shape[3],") must match the inChannels dimension ")+"in filter ".concat(l.shape[2],"."))),$.hu(ee.jT(r,i),(()=>"Error in gradient of depthwiseConv2d: Either strides or "+"dilations must be  1. Got strides ".concat(r," and dilations ")+"'".concat(i,"'."))),ee.m("depthwiseConv2d",s,o),{x:()=>(0,Be.v)(c.shape,e,l,r,s,i,o),filter:()=>(0,Le.z)(c,e,l.shape,r,s,i,o)}}},Ve={kernelName:N.p4S,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const[a,r]=t,s={x:a,filter:r,dy:e},o={x:a,filter:r,dy:e};return{x:()=>Z.BV.runKernel(N.ekb,s,n),filter:()=>Z.BV.runKernel(N.Vn9,o,n)}}},We={kernelName:N.SX0,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t,a={dy:e,y:n};return{x:()=>Z.BV.runKernel(N.HEU,a)}}};var Ue=n(411);const Ge={kernelName:N.Omj,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t,a=(0,T.d)((0,Ue.Q)((0,A.W)((0,D.h)(n))),2/Math.sqrt(Math.PI));return{x:()=>(0,T.d)(e,a)}}},He={kernelName:N.NEP,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,T.d)(e,n)}}},je={kernelName:N.YFo,inputsToSave:["input"],gradFunc:(e,t)=>{const[n]=t;return{input:()=>(0,B.X)(e,n.shape)}}},qe={kernelName:N.Y0y,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,T.d)(e,(0,Ue.Q)(n))}}},Xe={kernelName:N.OR,gradFunc:e=>({x:()=>(0,U.P)(e)})},Ke={kernelName:N.jeX,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,a]=t,r=(0,L.assertAndGetBroadcastShape)(n.shape,a.shape);return{a:()=>{const t=(0,_.h)(e,(0,I.p)(a,"float32")),s=(0,L.getReductionAxes)(n.shape,r);return s.length>0?(0,B.X)((0,P.S)(t,s),n.shape):t},b:()=>{let t=(0,T.d)(e,(0,I.p)(n,"float32"));const s=(0,L.getReductionAxes)(a.shape,r);s.length>0&&(t=(0,B.X)((0,P.S)(t,s),a.shape));const o=(0,D.h)(a);return(0,A.W)((0,_.h)(t,(0,I.p)(o,"float32")))}}}};var Qe=n(5115),Ye=n(2343);const Ze={kernelName:N.sHE,inputsToSave:["x","mean","variance","scale"],gradFunc:(e,t,n)=>{const{varianceEpsilon:a}=n,[r,s,o,i]=t,c=null==i?(0,R.i)(1):i,l=(0,L.getReductionAxes)(s.shape,r.shape),u=[];if(1===s.rank){for(let e=0;e<r.shape.length-1;++e)u.push(r.shape[e]);u.push(1)}const d=(0,O.l)(r,s),h=(0,T.d)(e,c),p=(0,Qe.b)((0,q.I)(o,(0,R.i)(a))),f=(0,T.d)((0,T.d)((0,T.d)(p,p),p),(0,R.i)(-.5));return{x:()=>1===s.rank?(0,B.X)((0,T.d)((0,T.d)(e,(0,Ye.G)((0,B.X)(p,[1,1,1,s.shape[0]]),u)),c),r.shape):(0,B.X)((0,T.d)((0,T.d)(e,p),c),r.shape),mean:()=>{let e=(0,T.d)((0,T.d)(p,(0,R.i)(-1)),h);return 1===s.rank&&(e=(0,P.S)(e,l)),(0,B.X)(e,s.shape)},variance:()=>{let e=(0,T.d)((0,T.d)(f,d),h);return 1===s.rank&&(e=(0,P.S)(e,l)),(0,B.X)(e,s.shape)},scale:()=>{const t=(0,T.d)(d,p);let n=(0,T.d)(e,t);return 1===s.rank&&(n=(0,P.S)(n,l)),(0,B.X)(n,s.shape)},offset:()=>{let t=e;return 1===s.rank&&(t=(0,P.S)(t,l)),(0,B.X)(t,s.shape)}}}};var Je=n(8306),$e=n(6918);const et={kernelName:N.qi_,inputsToSave:["x","indices"],gradFunc:(e,t,n)=>{const[a,r]=t,{axis:s,batchDims:o}=n,i=(0,$.EC)(s,a.shape)[0],c=(e,t,n)=>()=>{const a=e.shape,r=t.size,o=a.slice(0,i),c=o.length,l=a.slice(s,a.length).slice(1),u=l.length,d=tt(0,c),h=tt(c+1,c+1+u),p=nt([o,[r],l]),f=(0,B.X)(n,p),m=(0,B.X)(t,[r]),g=nt([[c],d,h]),y=(0,Me.p)(f,g);let b=(0,$e.p)(y,m,e.shape[i]);const v=(0,De.LJ)(g);return b=(0,Me.p)(b,v),b};if(1===o){const t=a.shape[0],n=a.split(t,0);return{x:()=>{const t=(0,Je.k)(n.map(((t,n)=>c(t,r.slice(n,1),e.slice(n,1))())));return t.reshape(a.shape)},indices:()=>r}}return{x:c(a,r,e),indices:()=>r}}};function tt(e,t){const n=[];for(let a=e;a<t;++a)n.push(a);return n}function nt(e){const t=[];for(let n=0;n<e.length;++n)for(let a=0;a<e[n].length;++a)t.push(e[n][a]);return t}const at={kernelName:N.Acj,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,a]=t;return{a:()=>(0,U.P)(n),b:()=>(0,U.P)(a)}}},rt={kernelName:N.iJz,gradFunc:e=>({x:()=>(0,I.p)(e,"float32")})},st={kernelName:N.avt,gradFunc:e=>({x:()=>(0,U.P)(e)})},ot={kernelName:N.iWB,gradFunc:e=>({x:()=>(0,U.P)(e)})},it={kernelName:N.r7n,gradFunc:e=>({x:()=>(0,U.P)(e)})};var ct=n(5014);const lt={kernelName:N.J$2,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[a]=t,{alpha:r}=n,s=(0,ct.p)(a,0);return{x:()=>(0,ge.a)(s,e,(0,T.d)(e,r))}}},ut={kernelName:N.kU,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,_.h)(e,(0,q.I)(n,1))}}},dt={kernelName:N.ZbH,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,_.h)(e,(0,I.p)(n,"float32"))}}},ht={kernelName:N.qCd,inputsToSave:[],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[a]=t,{axis:r}=n;return{logits:()=>{const t=(0,Ue.Q)(a);return(0,O.l)(e,(0,T.d)((0,P.S)(e,r,!0),t))}}}};const pt=(0,te.op)({localResponseNormalizationBackprop_:function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:5,r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:1,s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:1,o=arguments.length>6&&void 0!==arguments[6]?arguments[6]:.5;const i={x:e,y:t,dy:n},c={depthRadius:a,bias:r,alpha:s,beta:o};return Z.BV.runKernel(N.Hhh,i,c)}}),ft={kernelName:N.eZ0,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[a,r]=t,{depthRadius:s,bias:o,alpha:i,beta:c}=n;return{x:()=>pt(a,r,e,s,o,i,c)}}};var mt=n(3254);function gt(e,t,n,a){return t.rank<n.rank&&(t=(0,B.X)(t,De.rv(t.shape,a))),e.rank<n.rank&&(e=(0,B.X)(e,De.rv(e.shape,a))),{x:()=>(0,T.d)(e,(0,I.p)((0,mt.D)(n,t),e.dtype))}}const yt={kernelName:N.YoZ,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const a=n,{reductionIndices:r}=a,s=t[0],o=gt(e,t[1],s,$.EC(r,s.shape));return{x:()=>o.x()}}};var bt=n(4920);const vt={kernelName:N.BMI,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,a]=t;return{a:()=>(0,T.d)(e,(0,I.p)((0,pe.b)(n,a),"float32")),b:()=>(0,T.d)(e,(0,I.p)((0,bt.d)(n,a),"float32"))}}};const xt=(0,te.op)({maxPool3dGrad_:function(e,t,n,a,r,s,o){const i=(0,J._1)(e,"dy","maxPool3dGrad"),c=(0,J._1)(t,"input","maxPool3dGrad"),l=(0,J._1)(n,"output","maxPool3dGrad");let u=i,d=c,h=l,p=!1;4===c.rank&&(p=!0,u=(0,B.X)(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]]),d=(0,B.X)(c,[1,c.shape[0],c.shape[1],c.shape[2],c.shape[3]]),h=(0,B.X)(l,[1,l.shape[0],l.shape[1],l.shape[2],l.shape[3]])),$.hu(5===u.rank,(()=>"Error in maxPool3dGrad: dy must be rank 5 but got rank "+"".concat(u.rank,"."))),$.hu(5===d.rank,(()=>"Error in maxPool3dGrad: input must be rank 5 but got rank "+"".concat(d.rank,"."))),$.hu(5===h.rank,(()=>"Error in maxPool3dGrad: output must be rank 5 but got rank "+"".concat(h.rank,"."))),(0,ee.m)("maxPool3dGrad",s,o);const f={dy:u,input:d,output:h},m={filterSize:a,strides:r,pad:s,dimRoundingMode:o},g=Z.BV.runKernel(N.OU7,f,m);return p?(0,B.X)(g,[g.shape[1],g.shape[2],g.shape[3],g.shape[4]]):g}}),wt={kernelName:N.OAf,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[a,r]=t,{filterSize:s,strides:o,pad:i,dimRoundingMode:c}=n;return{x:()=>xt(e,a,r,s,o,i,c)}}};const kt=(0,te.op)({maxPoolGrad_:function(e,t,n,a,r,s,o){const i=(0,J._1)(e,"dy","maxPoolGrad"),c=(0,J._1)(t,"input","maxPoolGrad"),l=(0,J._1)(n,"output","maxPoolGrad");$.hu(c.rank===i.rank,(()=>"Rank of input (".concat(c.rank,") does not match rank of dy ")+"(".concat(i.rank,")"))),$.hu(4===i.rank,(()=>"Error in maxPoolGrad: dy must be rank 4 but got rank "+"".concat(i.rank,"."))),$.hu(4===c.rank,(()=>"Error in maxPoolGrad: input must be rank 4 but got rank "+"".concat(c.rank,"."))),ee.m("maxPoolGrad",s,o);const u={dy:i,input:c,output:l},d={filterSize:a,strides:r,pad:s,dimRoundingMode:o};return Z.BV.runKernel(N.OV7,u,d)}}),St={kernelName:N.mTV,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[a,r]=t,{filterSize:s,strides:o,pad:i}=n;return{x:()=>kt(e,a,r,s,o,i)}}};var Nt=n(6100);const It={kernelName:N.q2K,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[a]=t,{axis:r}=n,s=$.EC(r,a.shape),o=(0,De.kz)(a.shape,s)[1],i=$.NA(o);return{x:()=>{const t=a.shape.slice();s.forEach((e=>{t[e]=1}));const n=(0,B.X)(e,t);return(0,_.h)((0,T.d)(n,(0,Nt.i)(a.shape,"float32")),i)}}}},Tt={kernelName:N.c17,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const a=n,{axis:r}=a,[s,o]=t,i=gt(e,o,s,$.EC(r,s.shape));return{x:()=>i.x()}}},Ct={kernelName:N.q8u,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,a]=t;return{a:()=>(0,T.d)(e,(0,I.p)((0,fe.z)(n,a),"float32")),b:()=>(0,T.d)(e,(0,I.p)((0,ct.p)(n,a),"float32"))}}};var Et=n(9238);const _t={kernelName:N.jQs,inputsToSave:["x"],gradFunc:(e,t,n)=>{const a=t[0],{paddings:r}=n,s=r.map((e=>e[0]));return{x:()=>(0,Et.t)(e,s,a.shape)}}};var At=n(2628);const Rt={kernelName:N.Vbg,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,a]=t,r=(0,L.assertAndGetBroadcastShape)(n.shape,a.shape);return{a:()=>{const t=(0,L.getReductionAxes)(n.shape,r);return t.length>0?(0,B.X)((0,P.S)(e,t),n.shape):e},b:()=>{const t=(0,T.d)(e,(0,A.W)((0,At.G)((0,_.h)(n,a)))),s=(0,L.getReductionAxes)(a.shape,r);return s.length>0?(0,B.X)((0,P.S)(t,s),a.shape):t}}}},Ft={kernelName:N.wYn,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,a]=t,r=(0,L.assertAndGetBroadcastShape)(n.shape,a.shape);return{a:()=>{const t=(0,T.d)(e,(0,I.p)(a,"float32")),s=(0,L.getReductionAxes)(n.shape,r);return s.length>0?(0,B.X)((0,P.S)(t,s),n.shape):t},b:()=>{const t=(0,T.d)(e,(0,I.p)(n,"float32")),s=(0,L.getReductionAxes)(a.shape,r);return s.length>0?(0,B.X)((0,P.S)(t,s),a.shape):t}}}},Dt={kernelName:N.kuV,gradFunc:e=>({x:()=>(0,A.W)(e)})};var Ot=n(7742);const Mt={kernelName:N.we_,inputsToSave:["indices"],gradFunc:(e,t)=>{const n=t[0];return{indices:()=>(0,Ot.l)(n.shape,"float32")}}},zt={kernelName:N.qWM,gradFunc:e=>({x:()=>(0,U.P)(e)})};var Lt=n(4566);const Bt={kernelName:N.QiL,saveAllInputs:!0,gradFunc:(e,t,n)=>{const{axis:a}=n;return(0,Lt.H)(e,a).map((e=>()=>e))}},Pt={kernelName:N.lyA,inputsToSave:["x"],gradFunc:(e,t,n)=>{const a=t[0],{paddings:r}=n,s=r.map((e=>e[0]));return{x:()=>(0,Et.t)(e,s,a.shape)}}};var Vt=n(378),Wt=n(4334);const Ut={kernelName:N.pe_,inputsToSave:["a","b"],outputsToSave:[!0],gradFunc:(e,t)=>{const[n,a,r]=t,s=n,o=a,i=L.assertAndGetBroadcastShape(s.shape,o.shape);return{a:()=>{const t=(0,I.p)(o,"float32");let n=(0,T.d)(e,(0,T.d)(t,(0,Wt.s)(s,(0,O.l)(t,(0,R.i)(1)))));const a=L.getReductionAxes(s.shape,i);return a.length>0&&(n=(0,P.S)(n,a)),(0,B.X)(n,s.shape)},b:()=>{const t=(0,ct.p)(s,0),n=(0,ge.a)(t,(0,Vt.c)(s),(0,U.P)(s));let a=(0,T.d)(e,(0,T.d)(r,n));const c=L.getReductionAxes(o.shape,i);return c.length>0&&(a=(0,P.S)(a,c)),(0,B.X)(a,o.shape)}}}},Gt={kernelName:N.o0g,inputsToSave:["x","alpha"],gradFunc:(e,t)=>{const[n,a]=t,r=(0,ct.p)(n,0);return{x:()=>(0,ge.a)(r,e,(0,T.d)(e,a)),alpha:()=>{let t=(0,ge.a)(r,(0,U.P)(e),(0,T.d)(e,n));const s=(0,L.getReductionAxes)(a.shape,e.shape);return s.length>0&&(t=(0,P.S)(t,s)),(0,B.X)(t,a.shape)}}}};var Ht=n(9457);function jt(e,t,n){const a=e.shape.length,r=a-n.length,s=De.Q3(n,a);let o=e;null!=s&&(o=(0,Me.p)(e,s));const i=o.shape.slice(),c=i.splice(a-n.length,n.length).reduce(((e,t)=>e*t),1);i.push(c);let l=function(e,t,n){const a=e.shape.slice();a[n]=1;const r=(0,B.X)(t,a),s=(0,Ht.$)(e,n,!0,!1),o=(0,Ht.$)(e,n,!0,!0),i=(0,T.d)(s,o);return(0,T.d)(r,i)}(o.reshape(i),t,r);if(l=l.reshape(o.shape),null!=s){const e=De.LJ(s);l=(0,Me.p)(l,e)}return l}const qt={kernelName:N.DlI,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[a]=t,{axis:r}=n;let s=[];return s=void 0===r||null===r?a.shape.map(((e,t)=>t)):"number"===typeof r?[r]:r,{x:()=>jt(a,e,s)}}},Xt={kernelName:N.oHH,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,a]=t,r=L.assertAndGetBroadcastShape(n.shape,a.shape);return{a:()=>{const t=(0,_.h)(e,(0,I.p)(a,"float32")),s=L.getReductionAxes(n.shape,r);return s.length>0?(0,B.X)((0,P.S)(t,s),n.shape):t},b:()=>{let t=(0,T.d)(e,(0,I.p)(n,"float32"));const s=L.getReductionAxes(a.shape,r);s.length>0&&(t=(0,B.X)((0,P.S)(t,s),a.shape));const o=(0,D.h)(a);return(0,A.W)((0,_.h)(t,(0,I.p)(o,"float32")))}}}},Kt={kernelName:N.$HU,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,_.h)(e,(0,A.W)((0,D.h)(n)))}}},Qt={kernelName:N.SbG,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t,a=(0,T.d)((0,fe.z)(n,6),(0,C.N)(n));return{x:()=>(0,T.d)(e,(0,I.p)(a,"float32"))}}},Yt={kernelName:N.qkr,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,T.d)(e,(0,I.p)((0,C.N)(n),"float32"))}}},Zt={kernelName:N.HZH,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,B.X)(e,n.shape)}}},Jt={kernelName:N._Yw,inputsToSave:["images"],gradFunc:(e,t,n)=>{const[a]=t,r={dy:e,images:a};return{images:()=>Z.BV.runKernel(N.zbQ,r,n)}}},$t={kernelName:N.dpD,inputsToSave:["images"],gradFunc:(e,t,n)=>{const[a]=t,r={dy:e,images:a};return{images:()=>Z.BV.runKernel(N.Hmb,r,n)}}};var en=n(4933);const tn={kernelName:N.mKl,gradFunc:(e,t,n)=>{const{dims:a}=n,r=(0,$.EC)(a,e.shape);return{x:()=>(0,en.G)(e,r)}}},nn={kernelName:N.e07,gradFunc:e=>({x:()=>(0,U.P)(e)})},an={kernelName:N.bV0,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,A.W)((0,_.h)(e,(0,T.d)((0,Wt.s)(n,1.5),2)))}}};var rn=n(875);const sn={kernelName:N.PhF,inputsToSave:["condition"],gradFunc:(e,t)=>{const[n]=t;return{condition:()=>(0,I.p)((0,U.P)(n),"float32"),t:()=>(0,T.d)(e,(0,I.p)(n,e.dtype)),e:()=>(0,T.d)(e,(0,I.p)((0,rn.h)(n),e.dtype))}}};var on=n(349);const cn={kernelName:N.oFR,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=(0,ct.p)(n,(0,R.i)(0)),a=(0,R.i)(on.y),r=(0,R.i)(on.$),s=(0,T.d)(e,r),o=(0,T.d)((0,T.d)(e,a),(0,Ue.Q)((0,I.p)(n,"float32")));return(0,ge.a)(t,s,o)}}}},ln={kernelName:N.a5O,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,T.d)(e,(0,T.d)(n,(0,O.l)((0,R.i)(1),n)))}}},un={kernelName:N.i5y,gradFunc:e=>({x:()=>(0,U.P)(e)})};var dn=n(1227);const hn={kernelName:N.RQH,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,T.d)((0,dn.m)((0,I.p)(n,"float32")),e)}}};var pn=n(6679);const fn={kernelName:N.wYB,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,T.d)((0,pn.f)((0,I.p)(n,"float32")),e)}}};var mn=n(1970),gn=n(2875);const yn={kernelName:N.p2w,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[a]=t,{begin:r,size:s}=n,o=a.shape,[i,c]=(0,gn.parseSliceParams)(a,r,s),l=[];for(let u=0;u<e.rank;u++)l.push([i[u],o[u]-i[u]-c[u]]);return{x:()=>(0,mn.v)(e,l)}}},bn={kernelName:N.Gcp,outputsToSave:[!0],gradFunc:(e,t,n)=>{const[a]=t,{dim:r}=n,s=(0,T.d)(e,a);return{logits:()=>(0,O.l)(s,(0,T.d)((0,P.S)(s,[r],true),a))}}};var vn=n(7643);const xn={kernelName:N.MRv,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,T.d)(e,(0,vn.X)(n))}}};var wn=n(6994);const kn={kernelName:N.TQc,gradFunc:(e,t,n)=>{const{blockShape:a,paddings:r}=n;return{x:()=>(0,wn.E)(e,a,r)}}};var Sn=n(4836);const Nn={kernelName:N.L8s,gradFunc:(e,t,n)=>{const{axis:a}=n;return{x:()=>(0,Sn.z)(e,a)}}},In={kernelName:N.FKq,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,_.h)(e,(0,T.d)((0,F._)((0,I.p)(n,"float32")),2))}}},Tn={kernelName:N.bK0,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,T.d)(e,(0,T.d)((0,I.p)(n,"float32"),2))}}},Cn={kernelName:N._tC,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,a]=t,r=(0,R.i)(2);return{a:()=>(0,T.d)(e,(0,T.d)(r,(0,O.l)(n,a))),b:()=>(0,T.d)(e,(0,T.d)(r,(0,O.l)(a,n)))}}},En={kernelName:N.h8e,gradFunc:e=>({x:()=>(0,U.P)(e)})},_n={kernelName:N.Tr8,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,a]=t,r=L.assertAndGetBroadcastShape(n.shape,a.shape);return{a:()=>{let t=e;const a=L.getReductionAxes(n.shape,r);return a.length>0&&(t=(0,P.S)(t,a)),(0,B.X)(t,n.shape)},b:()=>{let t=e;const n=L.getReductionAxes(a.shape,r);return n.length>0&&(t=(0,P.S)(t,n)),(0,B.X)((0,A.W)(t),a.shape)}}}},An={kernelName:N.GBy,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[a]=t,r=a.shape.slice(),{axis:s}=n;(0,$.EC)(s,a.shape).forEach((e=>{r[e]=1}));const o=(0,B.X)(e,r),i=(0,T.d)(o,(0,Nt.i)(a.shape,"float32"));return{x:()=>i}}},Rn={kernelName:N.sEM,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,_.h)(e,(0,D.h)((0,dn.m)(n)))}}},Fn={kernelName:N.MIZ,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,T.d)((0,O.l)((0,R.i)(1),(0,D.h)(n)),e)}}},Dn={kernelName:N.n9L,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[a]=t,{reps:r}=n;return{x:()=>{let t=(0,U.P)(a);if(1===a.rank)for(let n=0;n<r[0];++n)t=(0,q.I)(t,(0,Et.t)(e,[n*a.shape[0]],[a.shape[0]]));else if(2===a.rank)for(let n=0;n<r[0];++n)for(let s=0;s<r[1];++s)t=(0,q.I)(t,(0,Et.t)(e,[n*a.shape[0],s*a.shape[1]],[a.shape[0],a.shape[1]]));else if(3===a.rank)for(let n=0;n<r[0];++n)for(let s=0;s<r[1];++s)for(let o=0;o<r[2];++o)t=(0,q.I)(t,(0,Et.t)(e,[n*a.shape[0],s*a.shape[1],o*a.shape[2]],[a.shape[0],a.shape[1],a.shape[2]]));else{if(4!==a.rank)throw new Error("Gradient for tile operation is not implemented for rank-"+"".concat(a.rank," tensors yet."));for(let n=0;n<r[0];++n)for(let s=0;s<r[1];++s)for(let o=0;o<r[2];++o)for(let i=0;i<r[3];++i)t=(0,q.I)(t,(0,Et.t)(e,[n*a.shape[0],s*a.shape[1],o*a.shape[2],i*a.shape[3]],[a.shape[0],a.shape[1],a.shape[2],a.shape[3]]))}return t}}}},On={kernelName:N.G3Y,gradFunc:(e,t,n)=>{const a=n,{perm:r}=a,s=De.LJ(r);return{x:()=>(0,Me.p)(e,s)}}},Mn={kernelName:N.ToN,gradFunc:(e,t,n)=>{const a=n,{axis:r}=a;return{value:()=>(0,Je.k)(e,r)}}};var zn=n(2975),Ln=n(9498),Bn=n(705);const Pn={kernelName:N.Qvg,inputsToSave:["segmentIds"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>function(e,t){const n=(0,Bn.g)(t,(0,U.P)(t)),a=(0,Ln.I)(e,n);let r=(0,pe.b)(t,(0,R.i)(0,"int32"));const s=a.rank-r.rank;for(let i=0;i<s;++i)r=(0,zn.d)(r,i+1);r=(0,me.H)(r,(0,Nt.i)(a.shape,"bool"));const o=(0,U.P)(a);return(0,ge.a)(r,a,o)}(e,n)}}};const Vn={kernelName:N.RuY,gradFunc:e=>({x:()=>(0,U.P)(e)})};var Wn=n(8864);const Un=[E,M,z,V,W,G,H,j,X,K,Q,Y,ae,se,ie,le,ue,de,he,ye,be,xe,Ie,Se,Ee,Ae,Fe,ze,Pe,Ve,Xt,We,Ge,He,je,qe,Ke,Xe,Ze,et,at,rt,st,ot,it,lt,ut,dt,ht,ft,yt,yt,vt,wt,St,It,Tt,Ct,_t,Rt,Ft,Dt,Mt,zt,Bt,Pt,Pt,Ut,Gt,qt,Kt,Qt,Yt,Zt,Jt,$t,tn,nn,an,sn,cn,ln,un,hn,fn,yn,bn,xn,kn,kn,Nn,Nn,In,Cn,Tn,En,_n,An,Rn,Fn,Dn,On,Mn,Pn,Vn];for(const n of Un)(0,Wn.Li)(n);var Gn=n(7613),Hn=n(4376);(0,Hn.t3)().prototype.abs=function(){return this.throwIfDisposed(),(0,Gn.W)(this)};var jn=n(1719);(0,Hn.t3)().prototype.acos=function(){return this.throwIfDisposed(),(0,jn.K)(this)};var qn=n(4502);(0,Hn.t3)().prototype.acosh=function(){return this.throwIfDisposed(),(0,qn._)(this)},(0,Hn.t3)().prototype.add=function(e){return this.throwIfDisposed(),(0,q.I)(this,e)};var Xn=n(4108);(0,Hn.t3)().prototype.all=function(e,t){return this.throwIfDisposed(),(0,Xn.$)(this,e,t)};var Kn=n(8543);(0,Hn.t3)().prototype.any=function(e,t){return this.throwIfDisposed(),(0,Kn.Y)(this,e,t)};var Qn=n(9995);(0,Hn.t3)().prototype.argMax=function(e){return this.throwIfDisposed(),(0,Qn.N)(this,e)};var Yn=n(5157);(0,Hn.t3)().prototype.argMin=function(e){return this.throwIfDisposed(),(0,Yn.v)(this,e)},(0,Hn.t3)().prototype.asScalar=function(){return this.throwIfDisposed(),(0,$.hu)(1===this.size,(()=>"The array must have only 1 element.")),(0,B.X)(this,[])},(0,Hn.t3)().prototype.asType=function(e){return this.throwIfDisposed(),(0,I.p)(this,e)},(0,Hn.t3)().prototype.as1D=function(){return this.throwIfDisposed(),(0,B.X)(this,[this.size])},(0,Hn.t3)().prototype.as2D=function(e,t){return this.throwIfDisposed(),(0,B.X)(this,[e,t])},(0,Hn.t3)().prototype.as3D=function(e,t,n){return this.throwIfDisposed(),(0,B.X)(this,[e,t,n])},(0,Hn.t3)().prototype.as4D=function(e,t,n,a){return this.throwIfDisposed(),(0,B.X)(this,[e,t,n,a])},(0,Hn.t3)().prototype.as5D=function(e,t,n,a,r){return this.throwIfDisposed(),(0,B.X)(this,[e,t,n,a,r])};var Zn=n(3053);(0,Hn.t3)().prototype.asin=function(){return this.throwIfDisposed(),(0,Zn.Z)(this)};var Jn=n(54);(0,Hn.t3)().prototype.asinh=function(){return this.throwIfDisposed(),(0,Jn.V)(this)};var $n=n(4778);(0,Hn.t3)().prototype.atan=function(){return this.throwIfDisposed(),(0,$n.z)(this)};var ea=n(2227);(0,Hn.t3)().prototype.atan2=function(e){return this.throwIfDisposed(),(0,ea.f)(this,e)};var ta=n(7897);(0,Hn.t3)().prototype.atanh=function(){return this.throwIfDisposed(),(0,ta.C)(this)};var na=n(9204);(0,Hn.t3)().prototype.avgPool=function(e,t,n,a){return this.throwIfDisposed(),(0,na.w)(this,e,t,n,a)},(0,Hn.t3)().prototype.batchToSpaceND=function(e,t){return this.throwIfDisposed(),(0,wn.E)(this,e,t)};var aa=n(3700);(0,Hn.t3)().prototype.batchNorm=function(e,t,n,a,r){return this.throwIfDisposed(),(0,aa.t)(this,e,t,n,a,r)};var ra=n(9742);(0,Hn.t3)().prototype.broadcastTo=function(e){return this.throwIfDisposed(),(0,ra.U)(this,e)},(0,Hn.t3)().prototype.cast=function(e){return this.throwIfDisposed(),(0,I.p)(this,e)};var sa=n(1396);(0,Hn.t3)().prototype.ceil=function(){return this.throwIfDisposed(),(0,sa.m)(this)};var oa=n(9836);(0,Hn.t3)().prototype.clipByValue=function(e,t){return this.throwIfDisposed(),(0,oa.i)(this,e,t)},(0,Hn.t3)().prototype.concat=function(e,t){return this.throwIfDisposed(),e instanceof Hn.es&&(e=[e]),(0,Sn.z)([this,...e],t)};var ia=n(4918);(0,Hn.t3)().prototype.conv1d=function(e,t,n,a,r,s){return this.throwIfDisposed(),(0,ia.P)(this,e,t,n,a,r,s)};var ca=n(1732);(0,Hn.t3)().prototype.conv2dTranspose=function(e,t,n,a,r){return this.throwIfDisposed(),(0,ca.b)(this,e,t,n,a,r)},(0,Hn.t3)().prototype.conv2d=function(e,t,n,a,r,s){return this.throwIfDisposed(),(0,Ne.T)(this,e,t,n,a,r,s)},(0,Hn.t3)().prototype.cos=function(){return this.throwIfDisposed(),(0,dn.m)(this)},(0,Hn.t3)().prototype.cosh=function(){return this.throwIfDisposed(),(0,pn.f)(this)},(0,Hn.t3)().prototype.cumprod=function(e,t,n){return this.throwIfDisposed(),(0,Ht.$)(this,e,t,n)},(0,Hn.t3)().prototype.cumsum=function(e,t,n){return this.throwIfDisposed(),(0,Oe.z)(this,e,t,n)};var la=n(1878);(0,Hn.t3)().prototype.depthToSpace=function(e,t){return this.throwIfDisposed(),(0,la.n)(this,e,t)};var ua=n(1147);(0,Hn.t3)().prototype.depthwiseConv2d=function(e,t,n,a,r,s){return this.throwIfDisposed(),(0,ua.B)(this,e,t,n,a,r,s)};var da=n(7580);(0,Hn.t3)().prototype.dilation2d=function(e,t,n,a,r){return this.throwIfDisposed(),(0,da.W)(this,e,t,n,a,r)};var ha=n(5923);(0,Hn.t3)().prototype.divNoNan=function(e){return this.throwIfDisposed(),(0,ha.N)(this,e)},(0,Hn.t3)().prototype.div=function(e){return this.throwIfDisposed(),(0,_.h)(this,e)};var pa=n(5043);(0,Hn.t3)().prototype.dot=function(e){return this.throwIfDisposed(),(0,pa.A)(this,e)};var fa=n(2353);(0,Hn.t3)().prototype.elu=function(){return this.throwIfDisposed(),(0,fa.p)(this)},(0,Hn.t3)().prototype.equal=function(e){return this.throwIfDisposed(),(0,mt.D)(this,e)};var ma=n(3891);(0,Hn.t3)().prototype.erf=function(){return this.throwIfDisposed(),(0,ma.q)(this)};var ga=n(3313);(0,Hn.t3)().prototype.euclideanNorm=function(e,t){return this.throwIfDisposed(),(0,ga.d)(this,e,t)},(0,Hn.t3)().prototype.exp=function(){return this.throwIfDisposed(),(0,Ue.Q)(this)},(0,Hn.t3)().prototype.expandDims=function(e){return this.throwIfDisposed(),(0,zn.d)(this,e)};var ya=n(5682);(0,Hn.t3)().prototype.expm1=function(){return this.throwIfDisposed(),(0,ya.t)(this)};var ba=n(7635);(0,Hn.t3)().prototype.fft=function(){return this.throwIfDisposed(),(0,ba.k)(this)},(0,Hn.t3)().prototype.flatten=function(){return this.throwIfDisposed(),(0,B.X)(this,[this.size])},(0,Hn.t3)().prototype.floor=function(){return this.throwIfDisposed(),(0,At.G)(this)};var va=n(7145);(0,Hn.t3)().prototype.floorDiv=function(e){return this.throwIfDisposed(),(0,va.q)(this,e)},(0,Hn.t3)().prototype.gather=function(e,t,n){return this.throwIfDisposed(),(0,Ln.I)(this,e,t,n)},(0,Hn.t3)().prototype.greaterEqual=function(e){return this.throwIfDisposed(),(0,pe.b)(this,e)},(0,Hn.t3)().prototype.greater=function(e){return this.throwIfDisposed(),(0,ct.p)(this,e)};var xa=n(530);(0,Hn.t3)().prototype.ifft=function(){return this.throwIfDisposed(),(0,xa.S)(this)};var wa=n(774);(0,Hn.t3)().prototype.irfft=function(){return this.throwIfDisposed(),(0,wa.w)(this)};var ka=n(300);(0,Hn.t3)().prototype.isFinite=function(){return this.throwIfDisposed(),(0,ka.x)(this)};var Sa=n(4652);(0,Hn.t3)().prototype.isInf=function(){return this.throwIfDisposed(),(0,Sa.U)(this)};var Na=n(7005);(0,Hn.t3)().prototype.isNaN=function(){return this.throwIfDisposed(),(0,Na.i)(this)};var Ia=n(4419);(0,Hn.t3)().prototype.leakyRelu=function(e){return this.throwIfDisposed(),(0,Ia.h)(this,e)},(0,Hn.t3)().prototype.lessEqual=function(e){return this.throwIfDisposed(),(0,fe.z)(this,e)},(0,Hn.t3)().prototype.less=function(e){return this.throwIfDisposed(),(0,bt.d)(this,e)};var Ta=n(936);(0,Hn.t3)().prototype.localResponseNormalization=function(e,t,n,a){return this.throwIfDisposed(),(0,Ta.G)(this,e,t,n,a)};var Ca=n(5113);(0,Hn.t3)().prototype.logSigmoid=function(){return this.throwIfDisposed(),(0,Ca.e)(this)};var Ea=n(4561);(0,Hn.t3)().prototype.logSoftmax=function(e){return this.throwIfDisposed(),(0,Ea.C)(this,e)};var _a=n(5530);(0,Hn.t3)().prototype.logSumExp=function(e,t){return this.throwIfDisposed(),(0,_a.l)(this,e,t)},(0,Hn.t3)().prototype.log=function(){return this.throwIfDisposed(),(0,Vt.c)(this)};var Aa=n(5341);(0,Hn.t3)().prototype.log1p=function(){return this.throwIfDisposed(),(0,Aa.K)(this)},(0,Hn.t3)().prototype.logicalAnd=function(e){return this.throwIfDisposed(),(0,me.H)(this,e)},(0,Hn.t3)().prototype.logicalNot=function(){return this.throwIfDisposed(),(0,rn.h)(this)};var Ra=n(5117);(0,Hn.t3)().prototype.logicalOr=function(e){return this.throwIfDisposed(),(0,Ra.K)(this,e)};var Fa=n(1712);(0,Hn.t3)().prototype.logicalXor=function(e){return this.throwIfDisposed(),(0,Fa.e)(this,e)},(0,Hn.t3)().prototype.matMul=function(e,t,n){return this.throwIfDisposed(),(0,oe.O)(this,e,t,n)};var Da=n(5777);(0,Hn.t3)().prototype.maxPool=function(e,t,n,a){return this.throwIfDisposed(),(0,Da._)(this,e,t,n,a)};var Oa=n(6176);(0,Hn.t3)().prototype.max=function(e,t){return this.throwIfDisposed(),(0,Oa.F)(this,e,t)},(0,Hn.t3)().prototype.maximum=function(e){return this.throwIfDisposed(),(0,Bn.g)(this,e)};var Ma=n(6568);(0,Hn.t3)().prototype.mean=function(e,t){return this.throwIfDisposed(),(0,Ma.J)(this,e,t)};var za=n(7891);(0,Hn.t3)().prototype.min=function(e,t){return this.throwIfDisposed(),(0,za.V)(this,e,t)};var La=n(2273);(0,Hn.t3)().prototype.minimum=function(e){return this.throwIfDisposed(),(0,La.L)(this,e)};var Ba=n(9719);(0,Hn.t3)().prototype.mirrorPad=function(e,t){return this.throwIfDisposed(),(0,Ba.V)(this,e,t)};var Pa=n(4645);(0,Hn.t3)().prototype.mod=function(e){return this.throwIfDisposed(),(0,Pa.w)(this,e)},(0,Hn.t3)().prototype.mul=function(e){return this.throwIfDisposed(),(0,T.d)(this,e)},(0,Hn.t3)().prototype.neg=function(){return this.throwIfDisposed(),(0,A.W)(this)};var Va=n(6662);(0,Hn.t3)().prototype.norm=function(e,t,n){return this.throwIfDisposed(),(0,Va.K)(this,e,t,n)};var Wa=n(5549);(0,Hn.t3)().prototype.notEqual=function(e){return this.throwIfDisposed(),(0,Wa.Q)(this,e)};var Ua=n(4326);(0,Hn.t3)().prototype.oneHot=function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;return this.throwIfDisposed(),(0,Ua.l)(this,e,t,n)};var Ga=n(773);(0,Hn.t3)().prototype.onesLike=function(){return this.throwIfDisposed(),(0,Ga.J)(this)},(0,Hn.t3)().prototype.pad=function(e,t){return this.throwIfDisposed(),(0,mn.v)(this,e,t)};var Ha=n(7226);(0,Hn.t3)().prototype.pool=function(e,t,n,a,r,s){return this.throwIfDisposed(),(0,Ha.d)(this,e,t,n,a,r,s)},(0,Hn.t3)().prototype.pow=function(e){return this.throwIfDisposed(),(0,Wt.s)(this,e)};var ja=n(6859);(0,Hn.t3)().prototype.prelu=function(e){return this.throwIfDisposed(),(0,ja.A)(this,e)};var qa=n(7722);(0,Hn.t3)().prototype.prod=function(e,t){return this.throwIfDisposed(),(0,qa.W)(this,e,t)};var Xa=n(2209);(0,Hn.t3)().prototype.reciprocal=function(){return this.throwIfDisposed(),(0,Xa.M)(this)};var Ka=n(7539);(0,Hn.t3)().prototype.relu=function(){return this.throwIfDisposed(),(0,Ka.U)(this)};var Qa=n(5900);(0,Hn.t3)().prototype.relu6=function(){return this.throwIfDisposed(),(0,Qa.b)(this)},(0,Hn.t3)().prototype.reshapeAs=function(e){return this.throwIfDisposed(),(0,B.X)(this,e.shape)},(0,Hn.t3)().prototype.reshape=function(e){return this.throwIfDisposed(),(0,B.X)(this,e)};var Ya=n(464);(0,Hn.t3)().prototype.resizeBilinear=function(e,t,n){return this.throwIfDisposed(),(0,Ya.I)(this,e,t,n)};var Za=n(8600);(0,Hn.t3)().prototype.resizeNearestNeighbor=function(e,t,n){return this.throwIfDisposed(),(0,Za.j)(this,e,t,n)},(0,Hn.t3)().prototype.reverse=function(e){return this.throwIfDisposed(),(0,en.G)(this,e)};var Ja=n(4617);(0,Hn.t3)().prototype.rfft=function(){return this.throwIfDisposed(),(0,Ja.Q)(this)};var $a=n(766);(0,Hn.t3)().prototype.round=function(){return this.throwIfDisposed(),(0,$a.N)(this)},(0,Hn.t3)().prototype.rsqrt=function(){return this.throwIfDisposed(),(0,Qe.b)(this)};var er=n(413);(0,Hn.t3)().prototype.selu=function(){return this.throwIfDisposed(),(0,er.U)(this)};var tr=n(119);(0,Hn.t3)().prototype.separableConv2d=function(e,t,n,a,r,s){return this.throwIfDisposed(),(0,tr.U)(this,e,t,n,a,r,s)},(0,Hn.t3)().prototype.sigmoid=function(){return this.throwIfDisposed(),(0,vn.X)(this)};var nr=n(2070);(0,Hn.t3)().prototype.sign=function(){return this.throwIfDisposed(),(0,nr.X)(this)},(0,Hn.t3)().prototype.sin=function(){return this.throwIfDisposed(),(0,_e.O)(this)},(0,Hn.t3)().prototype.sinh=function(){return this.throwIfDisposed(),(0,Re.R)(this)},(0,Hn.t3)().prototype.slice=function(e,t){return this.throwIfDisposed(),(0,Et.t)(this,e,t)};var ar=n(4910);(0,Hn.t3)().prototype.softmax=function(e){return this.throwIfDisposed(),(0,ar.X)(this,e)};var rr=n(4626);(0,Hn.t3)().prototype.softplus=function(){return this.throwIfDisposed(),(0,rr.W)(this)},(0,Hn.t3)().prototype.spaceToBatchND=function(e,t){return this.throwIfDisposed(),(0,ce.f)(this,e,t)},(0,Hn.t3)().prototype.split=function(e,t){return this.throwIfDisposed(),(0,ve.V)(this,e,t)},(0,Hn.t3)().prototype.sqrt=function(){return this.throwIfDisposed(),(0,F._)(this)},(0,Hn.t3)().prototype.square=function(){return this.throwIfDisposed(),(0,D.h)(this)};var sr=n(7993);(0,Hn.t3)().prototype.squaredDifference=function(e){return this.throwIfDisposed(),(0,sr.$)(this,e)};var or=n(3931);(0,Hn.t3)().prototype.squeeze=function(e){return this.throwIfDisposed(),(0,or.L)(this,e)},(0,Hn.t3)().prototype.stack=function(e,t){this.throwIfDisposed();const n=e instanceof Hn.es?[this,e]:[this,...e];return(0,Je.k)(n,t)},(0,Hn.t3)().prototype.step=function(e){return this.throwIfDisposed(),(0,C.N)(this,e)};var ir=n(9017);(0,Hn.t3)().prototype.stridedSlice=function(e,t,n,a,r,s,o,i){return this.throwIfDisposed(),(0,ir.N)(this,e,t,n,a,r,s,o,i)},(0,Hn.t3)().prototype.sub=function(e){return this.throwIfDisposed(),(0,O.l)(this,e)},(0,Hn.t3)().prototype.sum=function(e,t){return this.throwIfDisposed(),(0,P.S)(this,e,t)};var cr=n(6999);(0,Hn.t3)().prototype.tan=function(){return this.throwIfDisposed(),(0,cr.O)(this)};var lr=n(1744);(0,Hn.t3)().prototype.tanh=function(){return this.throwIfDisposed(),(0,lr.A)(this)},(0,Hn.t3)().prototype.tile=function(e){return this.throwIfDisposed(),(0,Ye.G)(this,e)},(0,Hn.t3)().prototype.toBool=function(){return this.throwIfDisposed(),(0,I.p)(this,"bool")},(0,Hn.t3)().prototype.toFloat=function(){return this.throwIfDisposed(),(0,I.p)(this,"float32")},(0,Hn.t3)().prototype.toInt=function(){return this.throwIfDisposed(),(0,I.p)(this,"int32")};var ur=n(9085);(0,Hn.t3)().prototype.topk=function(e,t){return this.throwIfDisposed(),(0,ur.h)(this,e,t)},(0,Hn.t3)().prototype.transpose=function(e){return this.throwIfDisposed(),(0,Me.p)(this,e)};var dr=n(4860);(0,Hn.t3)().prototype.unique=function(e){return this.throwIfDisposed(),(0,dr.T)(this,e)},(0,Hn.t3)().prototype.unsortedSegmentSum=function(e,t){return this.throwIfDisposed(),(0,$e.p)(this,e,t)},(0,Hn.t3)().prototype.unstack=function(e){return this.throwIfDisposed(),(0,Lt.H)(this,e)},(0,Hn.t3)().prototype.where=function(e,t){return this.throwIfDisposed(),(0,ge.a)(e,this,t)},(0,Hn.t3)().prototype.zerosLike=function(){return this.throwIfDisposed(),(0,U.P)(this)};class hr extends Error{constructor(e){super(e),Object.setPrototypeOf(this,hr.prototype)}}class pr extends Error{constructor(e){super(e),Object.setPrototypeOf(this,pr.prototype)}}class fr extends Error{constructor(e){super(e),Object.setPrototypeOf(this,fr.prototype)}}class mr extends Error{constructor(e){super(e),Object.setPrototypeOf(this,mr.prototype)}}class gr extends Error{constructor(e){super(e),Object.setPrototypeOf(this,gr.prototype)}}class yr extends Error{constructor(e){super(e),Object.setPrototypeOf(this,yr.prototype)}}class br{constructor(e){this.maxEntries=e||100,this.cache=new Map}get(e){let t;return this.cache.has(e)&&(t=this.cache.get(e),this.cache.delete(e),this.cache.set(e,t)),t}put(e,t){if(this.cache.has(e))this.cache.delete(e);else if(this.cache.size>=this.maxEntries){const e=this.cache.keys().next().value;this.cache.delete(e)}this.cache.set(e,t)}getMaxEntries(){return this.maxEntries}setMaxEntries(e){if(e<0)throw new Error("The maxEntries of LRU caches must be at least 0, but got ".concat(e,"."));if(this.maxEntries>e)for(let t=0;t<this.maxEntries-e;t++){const e=this.cache.keys().next().value;this.cache.delete(e)}this.maxEntries=e}}function vr(e,t){if(Array.isArray(e)){let n=[];for(let a=0;a<t;a++)n=n.concat(e);return n}{const n=new Array(t);return n.fill(e),n}}function xr(e,t){if(!e)throw new gr(t)}function wr(e,t){let n=0;for(const a of e)a===t&&n++;return n}function kr(e){return 1===e.length?e[0]:e}function Sr(e){return Array.isArray(e)?e:[e]}function Nr(e){const t=e.replace(/(.)([A-Z][a-z0-9]+)/g,"$1_$2").replace(/([a-z])([A-Z])/g,"$1_$2").toLowerCase();return"_"!==t[0]?t:"private"+t}function Ir(e){return e.length<=1||-1===e.indexOf("_")?e:e.replace(/[_]+(\w|$)/g,((e,t)=>t.toUpperCase()))}let Tr={};function Cr(e){if(null===e||void 0===e)return null;const t={};return t.className=e.getClassName(),t.config=e.getConfig(),t}function Er(e){if(null!=e&&"object"===typeof e)if(Array.isArray(e))e.forEach((e=>Er(e)));else{const t=Object.keys(e);for(const n of t){const t=e[n];null!=t&&"object"===typeof t&&(Array.isArray(t)||"ndarray"!==t.type||"number"!==typeof t.value?Er(t):e[n]=t.value)}}}function _r(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"object",r=arguments.length>4&&void 0!==arguments[4]&&arguments[4];if("string"===typeof e){const r=e;let s;if(r in n)s=n[r];else if(r in Tr)s=Tr[r];else if(s=t[r],null==s)throw new fr("Unknown ".concat(a,": ").concat(e,". ")+"This may be due to one of the following reasons:\n"+"1. The ".concat(a," is defined in Python, in which ")+"case it needs to be ported to TensorFlow.js or your JavaScript code.\n"+"2. The custom ".concat(a," is defined in JavaScript, ")+"but is not registered properly with tf.serialization.registerClass().");return s}{const s=e;if(null==s.className||null==s.config)throw new fr("".concat(a,": Improper config format: ")+"".concat(JSON.stringify(s),".\n")+"'className' and 'config' must set.");const o=s.className;let i,c;if(o in n?[i,c]=n[o]:o in Tr?[i,c]=Tr.className:o in t&&([i,c]=t[o]),null==i)throw new fr("Unknown ".concat(a,": ").concat(o,". ")+"This may be due to one of the following reasons:\n"+"1. The ".concat(a," is defined in Python, in which ")+"case it needs to be ported to TensorFlow.js or your JavaScript code.\n"+"2. The custom ".concat(a," is defined in JavaScript, ")+"but is not registered properly with tf.serialization.registerClass().");if(null!=c){const e={};for(const n of Object.keys(Tr))e[n]=Tr[n];for(const r of Object.keys(n))e[r]=n[r];s.config.customObjects=e;const t=Object.assign({},Tr);for(const r of Object.keys(n))Tr[r]=n[r];Er(s.config);const a=c(i,s.config,n,r);return Tr=Object.assign({},t),a}{const e=Object.assign({},Tr);for(const a of Object.keys(n))Tr[a]=n[a];const t=new i(s.config);return Tr=Object.assign({},e),t}}}function Ar(e,t){return-1*function(e,t){return e<t?-1:e>t?1:0}(e,t)}function Rr(e){if(null==e)return e;const t=[];for(const n of e)-1===t.indexOf(n)&&t.push(n);return t}function Fr(e){if(null==e)throw new fr("Invalid value in obj: ".concat(JSON.stringify(e)));for(const t in e)if(e.hasOwnProperty(t))return!1;return!0}function Dr(e,t,n){if(null!=n&&e.indexOf(n)<0)throw new fr("".concat(n," is not a valid ").concat(t,".  Valid values are ").concat(e," or null/undefined."))}function Or(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1/0;return xr(n>=0),xr(a>=n),Array.isArray(e)&&e.length>=n&&e.length<=a&&e.every((e=>typeof e===t))}function Mr(e,t){Array.isArray(e)?(S.util.assert(e.length>0,(()=>"".concat(t," is unexpectedly an empty array."))),e.forEach(((e,n)=>Mr(e,"element ".concat(n+1," of ").concat(t))))):S.util.assert(Number.isInteger(e)&&e>0,(()=>"Expected ".concat(t," to be a positive integer, but got ")+"".concat(zr(e),".")))}function zr(e){return null===e?"null":Array.isArray(e)?"["+e.map((e=>zr(e))).join(",")+"]":"string"===typeof e?'"'.concat(e,'"'):"".concat(e)}function Lr(e){return"relu"===e?"relu":"linear"===e?"linear":"elu"===e?"elu":null}let Br=0;function Pr(){return Br++}const Vr={};function Wr(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"";return e in Vr||(Vr[e]=0),Vr[e]+=1,e+Vr[e].toString()}const Ur=["channelsFirst","channelsLast"],Gr=["nearest","bilinear"],Hr=["valid","same","causal"],jr=["max","avg"],qr=["sum","mul","concat","ave"],Xr=new Map;function Kr(e){Dr(Ur,"DataFormat",e)}function Qr(e){Dr(Hr,"PaddingMode",e)}function Yr(e){Dr(jr,"PoolMode",e)}const Zr=[];function Jr(e,t){Zr.push(e);try{const e=t();return Zr.pop(),e}catch(n){throw Zr.pop(),n}}function $r(e){if(!ns(e))throw new Error("Not a valid tensor name: '"+e+"'");return(0===Zr.length?"":Zr.join("/")+"/")+e}function es(e){if(!ns(e))throw new Error("Not a valid tensor name: '"+e+"'");Xr.has(e)||Xr.set(e,0);const t=Xr.get(e);if(Xr.set(e,Xr.get(e)+1),t>0){const n="".concat(e,"_").concat(t);return Xr.set(n,1),n}return e}const ts=new RegExp(/^[A-Za-z0-9][-A-Za-z0-9\._\/]*$/);function ns(e){return!!e.match(ts)}function as(e,t,n){null==t&&(t=0),null==n&&(n=e.length);let a=1;for(let r=t;r<n;++r)a*=e[r];return a}function rs(e){if(0===e.length)return Number.NaN;let t=Number.POSITIVE_INFINITY;for(let n=0;n<e.length;n++){const a=e[n];a<t&&(t=a)}return t}function ss(e){if(0===e.length)return Number.NaN;let t=Number.NEGATIVE_INFINITY;for(let n=0;n<e.length;n++){const a=e[n];a>t&&(t=a)}return t}function os(e,t){if(t<e)throw new fr("end (".concat(t,") < begin (").concat(e,") is forbidden."));const n=[];for(let a=e;a<t;++a)n.push(a);return n}let is;function cs(){return null==is&&(is=(0,S.backend)().epsilon()),is}function ls(e,t){return S.cast(e,t)}function us(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:-1;const n=e.shape.slice();return t<0&&(t=n.length+t+1),n.splice(t,0,1),S.reshape(e,n)}function ds(e){const t=[as(e.shape)];return S.reshape(e,t)}function hs(e,t,n){return(0,S.tidy)((()=>{switch(e.rank){case 1:return S.slice1d(e,t,n);case 2:return S.slice2d(e,[t,0],[n,e.shape[1]]);case 3:return S.slice3d(e,[t,0,0],[n,e.shape[1],e.shape[2]]);case 4:return S.slice4d(e,[t,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3]]);case 5:return S.slice(e,[t,0,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3],e.shape[4]]);case 6:return S.slice(e,[t,0,0,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3],e.shape[4],e.shape[5]]);default:throw new fr("sliceAlongFirstAxis() received an unsupported tensor rank: "+"".concat(e.rank))}}))}function ps(e,t,n){return(0,S.tidy)((()=>{switch(e.rank){case 1:return S.slice1d(e,t,n);case 2:return S.slice2d(e,[0,t],[e.shape[0],n]);case 3:return S.slice3d(e,[0,0,t],[e.shape[0],e.shape[1],n]);case 4:return S.slice4d(e,[0,0,0,t],[e.shape[0],e.shape[1],e.shape[2],n]);default:throw new fr("sliceAlongLastAxis() received an unsupported tensor rank: "+"".concat(e.rank))}}))}function fs(e,t,n,a){return(0,S.tidy)((()=>{switch(e.rank){case 1:return S.slice1d(e,t,n);case 2:switch(a){case 1:return hs(e,t,n);case 2:return ps(e,t,n);default:throw new fr("The axis is not within the rank of the tensor "+"".concat(a))}case 3:switch(a){case 1:return hs(e,t,n);case 2:return S.slice3d(e,[0,t,0],[e.shape[0],n,e.shape[2]]);case 3:return ps(e,t,n);default:throw new fr("The axis is not within the rank of the tensor "+"".concat(a))}case 4:switch(a){case 1:return hs(e,t,n);case 2:return S.slice4d(e,[0,t,0,0],[e.shape[0],n,e.shape[2],e.shape[3]]);case 3:return S.slice4d(e,[0,0,t,0],[e.shape[0],e.shape[1],n,e.shape[3]]);case 4:return ps(e,t,n);default:throw new fr("The axis is not within the rank of the tensor "+"".concat(a))}default:throw new fr("sliceAlongLastAxis() received an unsupported tensor rank: "+"".concat(e.rank))}}))}function ms(e){let t,n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:-1;return n<0&&(t=e[0].rank,n=0!==t?t:0),n===e[0].rank&&(n=-1),S.concat(e,n)}function gs(e,t){switch(e.rank){case 1:return S.concat1d([e,t]);case 2:return S.concat2d([e,t],0);case 3:return S.concat3d([e,t],0);case 4:return S.concat4d([e,t],0);default:throw new fr("concatAlongFirstAxis() received an unsupported "+"tensor rank: ".concat(e.rank))}}function ys(e,t){if(Array.isArray(t)||(t=[t]),e.rank!==t.length)throw new fr("The length of input n (".concat(t.length,") does not match ")+"the number of dimensions in input x (".concat(e.rank,")"));return S.tile(e,t)}function bs(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,a=arguments.length>3?arguments[3]:void 0,r=arguments.length>4?arguments[4]:void 0;return S.randomNormal(e,t,n,a,r)}function vs(e,t,n,a){if(e.rank<2||t.rank<2)throw new mr("dot requires both inputs to be rank >= 2"+" but got x shape = ".concat(e.shape," and y shape = ").concat(t.shape));if(t.rank>=3){if(e.shape.slice(-1)[0]!==t.shape.slice(-2)[0])throw new mr("If rank y >= 3, then the second last dim"+" of y must equal the last dim of x but got x shape = ".concat(e.shape," and ")+" y shape = ".concat(t.shape))}if(2===e.rank&&2===t.rank){const r=!1,s=!1;return S.fused.matMul({a:e,b:t,transposeA:r,transposeB:s,bias:a?ks(e.rank,a,"channelsLast"):null,activation:n})}{const r=e.shape.slice(),s=r.pop();e=S.reshape(e,[-1,s]);const o=t.shape.slice(),i=o.pop(),c=o.pop(),l=[...o,i],u=Array.from({length:t.rank},((e,n)=>0===n?t.rank-2:n<=t.rank-2?n-1:n));t=S.reshape(S.transpose(t,u),[c,-1]);const d=[...r,...l],h=!1,p=!1;return S.reshape(S.fused.matMul({a:e,b:t,transposeA:h,transposeB:p,bias:a?ks(e.rank,a,"channelsLast"):null,activation:n}),d)}}function xs(e,t,n){return(0,S.tidy)((()=>(t=Array.isArray(t)?(0,S.tensor1d)(t,"int32"):S.cast(t,"int32"),S.gather(e,t,n))))}function ws(e){return S.mul(e,e)}function ks(e,t,n){const a=t.shape;if(1!==t.rank&&t.rank!==e)throw new fr("Unexpected bias dimensions: ".concat(t.rank)+"; expected it to be 1 or ".concat(e));if(5===e){if("channelsFirst"===n)return 1===a.length?S.reshape(t,[1,a[0],1,1,1]):S.reshape(t,[1,a[3],a[0],a[1],a[2]]);if("channelsLast"===n)return 1===a.length?S.reshape(t,[1,1,1,1,a[0]]):S.reshape(t,[1].concat(a))}else if(4===e){if("channelsFirst"===n)return 1===a.length?S.reshape(t,[1,a[0],1,1]):S.reshape(t,[1,a[2],a[0],a[1]]);if("channelsLast"===n)return 1===a.length?S.reshape(t,[1,1,1,a[0]]):S.reshape(t,[1].concat(a))}else if(3===e){if("channelsFirst"===n)return 1===a.length?S.reshape(t,[1,a[0],1]):S.reshape(t,[1,a[1],a[0]]);if("channelsLast"===n)return 1===a.length?S.reshape(t,[1,1,a[0]]):S.reshape(t,[1].concat(a))}else if(e<3)return t;throw new fr("Unsupported input rank by biasAdd: ".concat(t.rank))}function Ss(e,t,n){return(0,S.tidy)((()=>(null==n&&(n="channelsLast"),Kr(n),S.add(e,ks(e.rank,t,n)))))}function Ns(e,t,n,a){return(0,S.tidy)((()=>S.dropout(e,t,n,a)))}function Is(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];return n?e():t()}const Ts=["fanIn","fanOut","fanAvg"],Cs=["normal","uniform","truncatedNormal"];class Es extends S.serialization.Serializable{fromConfigUsesCustomObjects(){return!1}getConfig(){return{}}}class _s extends Es{apply(e,t){return(0,S.zeros)(e,t)}}_s.className="Zeros",S.serialization.registerClass(_s);class As extends Es{apply(e,t){return(0,S.ones)(e,t)}}As.className="Ones",S.serialization.registerClass(As);class Rs extends Es{constructor(e){if(super(),"object"!==typeof e)throw new fr("Expected argument of type ConstantConfig but got ".concat(e));if(void 0===e.value)throw new fr("config must have value set but got ".concat(e));this.value=e.value}apply(e,t){return(0,S.tidy)((()=>(0,S.mul)((0,S.scalar)(this.value),(0,S.ones)(e,t))))}getConfig(){return{value:this.value}}}Rs.className="Constant",S.serialization.registerClass(Rs);class Fs extends Es{constructor(e){super(),this.DEFAULT_MINVAL=-.05,this.DEFAULT_MAXVAL=.05,this.minval=e.minval||this.DEFAULT_MINVAL,this.maxval=e.maxval||this.DEFAULT_MAXVAL,this.seed=e.seed}apply(e,t){return(0,S.randomUniform)(e,this.minval,this.maxval,t,this.seed)}getConfig(){return{minval:this.minval,maxval:this.maxval,seed:this.seed}}}Fs.className="RandomUniform",S.serialization.registerClass(Fs);class Ds extends Es{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if("float32"!==(t=t||"float32")&&"int32"!==t)throw new mr("randomNormal does not support dType ".concat(t,"."));return bs(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}Ds.className="RandomNormal",S.serialization.registerClass(Ds);class Os extends Es{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if("float32"!==(t=t||"float32")&&"int32"!==t)throw new mr("truncatedNormal does not support dType ".concat(t,"."));return(0,S.truncatedNormal)(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}Os.className="TruncatedNormal",S.serialization.registerClass(Os);class Ms extends Es{constructor(e){super(),this.gain=null!=e.gain?e.gain:1}apply(e,t){return(0,S.tidy)((()=>{if(2!==e.length||e[0]!==e[1])throw new fr("Identity matrix initializer can only be used for 2D square matrices.");return(0,S.mul)(this.gain,(0,S.eye)(e[0]))}))}getConfig(){return{gain:this.gain}}}Ms.className="Identity",S.serialization.registerClass(Ms);class zs extends Es{constructor(e){if(super(),e.scale<0)throw new fr("scale must be a positive float. Got: ".concat(e.scale));var t;this.scale=null==e.scale?1:e.scale,this.mode=null==e.mode?"fanIn":e.mode,t=this.mode,Dr(Ts,"FanMode",t),this.distribution=null==e.distribution?"normal":e.distribution,function(e){Dr(Cs,"Distribution",e)}(this.distribution),this.seed=e.seed}apply(e,t){const n=function(e){let t,n,a=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"channelsLast";if(Kr(a),2===e.length)t=e[0],n=e[1];else if(-1!==[3,4,5].indexOf(e.length)){if("channelsFirst"===a){const a=as(e,2);t=e[1]*a,n=e[0]*a}else if("channelsLast"===a){const a=as(e,0,e.length-2);t=e[e.length-2]*a,n=e[e.length-1]*a}}else{const a=as(e);t=Math.sqrt(a),n=Math.sqrt(a)}return[t,n]}(e),a=n[0],r=n[1];let s=this.scale;if("fanIn"===this.mode?s/=Math.max(1,a):"fanOut"===this.mode?s/=Math.max(1,r):s/=Math.max(1,(a+r)/2),"normal"===this.distribution){const n=Math.sqrt(s);if("float32"!==(t=t||"float32")&&"int32"!==t)throw new mr("".concat(this.getClassName()," does not support dType ").concat(t,"."));return(0,S.truncatedNormal)(e,0,n,t,this.seed)}{const n=Math.sqrt(3*s);return(0,S.randomUniform)(e,-n,n,t,this.seed)}}getConfig(){return{scale:this.scale,mode:this.mode,distribution:this.distribution,seed:this.seed}}}zs.className="VarianceScaling",S.serialization.registerClass(zs);class Ls extends zs{constructor(e){super({scale:1,mode:"fanAvg",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return zs.className}}Ls.className="GlorotUniform",S.serialization.registerClass(Ls);class Bs extends zs{constructor(e){super({scale:1,mode:"fanAvg",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return zs.className}}Bs.className="GlorotNormal",S.serialization.registerClass(Bs);class Ps extends zs{constructor(e){super({scale:2,mode:"fanIn",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return zs.className}}Ps.className="HeNormal",S.serialization.registerClass(Ps);class Vs extends zs{constructor(e){super({scale:2,mode:"fanIn",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return zs.className}}Vs.className="HeUniform",S.serialization.registerClass(Vs);class Ws extends zs{constructor(e){super({scale:1,mode:"fanIn",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return zs.className}}Ws.className="LeCunNormal",S.serialization.registerClass(Ws);class Us extends zs{constructor(e){super({scale:1,mode:"fanIn",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return zs.className}}Us.className="LeCunUniform",S.serialization.registerClass(Us);class Gs extends Es{constructor(e){super(),this.DEFAULT_GAIN=1,this.ELEMENTS_WARN_SLOW=2e3,this.gain=null==e.gain?this.DEFAULT_GAIN:e.gain,this.seed=e.seed}apply(e,t){return(0,S.tidy)((()=>{if(e.length<2)throw new mr("Shape must be at least 2D.");if("int32"!==t&&"float32"!==t&&void 0!==t)throw new TypeError("Unsupported data type ".concat(t,"."));const n=S.util.sizeFromShape(e.slice(0,-1)),a=e[e.length-1],r=n*a;r>this.ELEMENTS_WARN_SLOW&&console.warn("Orthogonal initializer is being called on a matrix with more "+"than ".concat(this.ELEMENTS_WARN_SLOW," (").concat(r,") elements: ")+"Slowness may result.");const s=bs([Math.max(a,n),Math.min(a,n)],0,1,t,this.seed),o=S.linalg.qr(s,!1);let i=o[0];const c=o[1].flatten().stridedSlice([0],[Math.min(a,n)*Math.min(a,n)],[Math.min(a,n)+1]);return i=(0,S.mul)(i,c.sign()),n<a&&(i=i.transpose()),(0,S.mul)((0,S.scalar)(this.gain),i.reshape(e))}))}getConfig(){return{gain:this.gain,seed:this.seed}}}Gs.className="Orthogonal",S.serialization.registerClass(Gs);const Hs={constant:"Constant",glorotNormal:"GlorotNormal",glorotUniform:"GlorotUniform",heNormal:"HeNormal",heUniform:"HeUniform",identity:"Identity",leCunNormal:"LeCunNormal",leCunUniform:"LeCunUniform",ones:"Ones",orthogonal:"Orthogonal",randomNormal:"RandomNormal",randomUniform:"RandomUniform",truncatedNormal:"TruncatedNormal",varianceScaling:"VarianceScaling",zeros:"Zeros"};function js(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return _r(e,S.serialization.SerializationMap.getMap().classNameMap,t,"initializer")}function qs(e){return Cr(e)}function Xs(e){if("string"===typeof e){const t=e in Hs?Hs[e]:e;if("GlorotNormal"===t)return new Bs;if("GlorotUniform"===t)return new Ls;if("HeNormal"===t)return new Ps;if("HeUniform"===t)return new Vs;if("LeCunNormal"===t)return new Ws;if("LeCunUniform"===t)return new Us;{const e={};return e.className=t,e.config={},js(e)}}return e instanceof Es?e:js(e)}function Ks(e){return Array.isArray(e)&&Array.isArray(e[0])}function Qs(e){return 0===e.length?[]:Array.isArray(e[0])?e:[e]}function Ys(e){let t;if(Array.isArray(e)){if(1!==e.length)throw new fr("Expected Tensor length to be 1; got ".concat(e.length));t=e[0]}else t=e;return t}function Zs(e){if(Array.isArray(e)&&Array.isArray(e[0])){if(1===e.length)return e[0];throw new fr("Expected exactly 1 Shape; got ".concat(e.length))}return e}function Js(e){let t=0;for(const n of e)0===n.shape.length?t+=1:t+=n.shape.reduce(((e,t)=>e*t));return t}const $s="Variable";class eo{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"float32",n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:$s,a=!(arguments.length>3&&void 0!==arguments[3])||arguments[3],r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:null;this.dtype=null==t?"float32":t,this.shape=e.shape,this.id=Pr(),n=null==n?$s:n,this.originalName=$r(n),this.name=es(this.originalName),this.trainable_=a,this.constraint=r,this.val=S.variable(e,this.trainable_,this.name,this.dtype)}read(){return this.assertNotDisposed(),this.val}write(e){return this.assertNotDisposed(),function(e,t){if(e.shape.toString()!==t.shape.toString())throw new Error("Shape mismatch: "+JSON.stringify(e.shape)+" vs. "+JSON.stringify(t.shape))}(this.val,e),this.val.id!==e.id&&(this.val.assign(e),null!=this.constraint&&this.val.assign(this.constraint.apply(this.val))),this}dispose(){this.assertNotDisposed(),this.val.dispose()}assertNotDisposed(){if(this.val.isDisposed)throw new Error("LayersVariable ".concat(this.name," is already disposed."))}get trainable(){return this.trainable_}set trainable(e){this.trainable_=e,this.val.trainable=e}}function to(e){return e.map((e=>e.read()))}function no(e){e.forEach((e=>{e[0].write(e[1])}))}class ao{constructor(e){this.dtype=e.dtype,this.shape=e.shape,null!=e.shape?this.ndim=e.shape.length:this.ndim=e.ndim,this.maxNDim=e.maxNDim,this.minNDim=e.minNDim,this.axes=e.axes||{}}}class ro{constructor(e,t,n,a,r,s,o){this.dtype=e,this.shape=t,this.sourceLayer=n,this.inputs=a,this.callArgs=r,this.outputTensorIndex=o,this.id=Pr(),null!=s&&(this.originalName=$r(s),this.name=es(this.originalName)),this.rank=t.length}}let so=0;class oo{constructor(e,t){this.callArgs=t,this.id=so++,this.outboundLayer=e.outboundLayer,this.inboundLayers=e.inboundLayers,this.nodeIndices=e.nodeIndices,this.tensorIndices=e.tensorIndices,this.inputTensors=e.inputTensors,this.outputTensors=e.outputTensors,this.inputMasks=e.inputMasks,this.outputMasks=e.outputMasks,this.inputShapes=e.inputShapes,this.outputShapes=e.outputShapes;for(const n of e.inboundLayers)null!=n&&n.outboundNodes.push(this);e.outboundLayer.inboundNodes.push(this)}getConfig(){const e=[];for(const t of this.inboundLayers)null!=t?e.push(t.name):e.push(null);return{outboundLayer:this.outboundLayer?this.outboundLayer.name:null,inboundLayers:e,nodeIndices:this.nodeIndices,tensorIndices:this.tensorIndices}}}let io=0;class co extends S.serialization.Serializable{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};super(),this._callHook=null,this._addedWeightNames=[],this._stateful=!1,this.id=io++,this.activityRegularizer=null,this.inputSpec=null,this.supportsMasking=!1,this._trainableWeights=[],this._nonTrainableWeights=[],this._losses=[],this._updates=[],this._built=!1,this.inboundNodes=[],this.outboundNodes=[];let t=e.name;if(!t){const e=this.getClassName();t=Nr(e)+"_"+Wr(e)}if(this.name=t,this.trainable_=null==e.trainable||e.trainable,null!=e.inputShape||null!=e.batchInputShape){let t;if(null!=e.batchInputShape)t=e.batchInputShape;else if(null!=e.inputShape){let n=null;null!=e.batchSize&&(n=e.batchSize),t=[n].concat(e.inputShape)}this.batchInputShape=t;let n=e.dtype;null==n&&(n=e.inputDType),null==n&&(n="float32"),this.dtype=n}null!=e.weights?this.initialWeights=e.weights:this.initialWeights=null,this._refCount=null,this.fastWeightInitDuringBuild=!1}static nodeKey(e,t){return e.name+"_ib-"+t.toString()}getNodeAtIndex(e,t){if(0===this.inboundNodes.length)throw new pr("The layer has never been called "+"and thus has no defined ".concat(t,"."));if(this.inboundNodes.length<=e)throw new fr("Asked to get ".concat(t," at node ").concat(e,", ")+"but the layer has only ".concat(this.inboundNodes.length," inbound nodes."));return this.inboundNodes[e]}getInputAt(e){return kr(this.getNodeAtIndex(e,"input").inputTensors)}getOutputAt(e){return kr(this.getNodeAtIndex(e,"output").outputTensors)}get input(){if(this.inboundNodes.length>1)throw new hr("Layer ".concat(this.name)+' has multiple inbound nodes, hence the notion of "layer input" is ill-defined. Use `getInputAt(nodeIndex)` instead.');if(0===this.inboundNodes.length)throw new hr("Layer ".concat(this.name)+" is not connected, no input to return.");return kr(this.getNodeAtIndex(0,"input").inputTensors)}get output(){if(0===this.inboundNodes.length)throw new hr("Layer ".concat(this.name)+" has no inbound nodes.");if(this.inboundNodes.length>1)throw new hr("Layer ".concat(this.name)+' has multiple inbound nodes, hence the notion of "layer output" is ill-defined. Use `getOutputAt(nodeIndex)` instead.');return kr(this.getNodeAtIndex(0,"output").outputTensors)}get losses(){return this._losses}calculateLosses(){return this.losses.map((e=>e()))}get updates(){return this._updates}get built(){return this._built}set built(e){this._built=e}get trainable(){return this.trainable_}set trainable(e){this._trainableWeights.forEach((t=>t.trainable=e)),this.trainable_=e}get trainableWeights(){return this.trainable_?this._trainableWeights.filter((e=>e.trainable)):[]}set trainableWeights(e){this._trainableWeights=e}get nonTrainableWeights(){return this.trainable?this._trainableWeights.filter((e=>!e.trainable)).concat(this._nonTrainableWeights):this._trainableWeights.concat(this._nonTrainableWeights)}set nonTrainableWeights(e){this._nonTrainableWeights=e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}get stateful(){return this._stateful}resetStates(){if(!this.stateful)throw new Error("Cannot call the resetStates() method of a non-stateful Layer object.")}assertInputCompatibility(e){const t=Sr(e);if(null==this.inputSpec||0===this.inputSpec.length)return;const n=Sr(this.inputSpec);if(t.length!==n.length)throw new fr("Layer ".concat(this.name," expects ").concat(n.length," inputs, ")+"but it received ".concat(t.length," input tensors. ")+"Input received: ".concat(e));for(let a=0;a<t.length;a++){const e=t[a],r=n[a];if(null==r)continue;const s=e.rank;if(null!=r.ndim&&s!==r.ndim)throw new fr("Input ".concat(a," is incompatible with layer ").concat(this.name,": ")+"expected ndim=".concat(r.ndim,", found ndim=").concat(s));if(null!=r.maxNDim&&s>r.maxNDim)throw new fr("Input ".concat(a," is incompatible with layer ").concat(this.name)+": expected max_ndim=".concat(r.maxNDim,", found ndim=").concat(s));if(null!=r.minNDim&&s<r.minNDim)throw new fr("Input ".concat(a," is incompatible with layer ").concat(this.name)+": expected min_ndim=".concat(r.minNDim,", found ndim=").concat(s,"."));if(null!=r.dtype&&e.dtype!==r.dtype)throw new fr("Input ".concat(a," is incompatible with layer ").concat(this.name," ")+": expected dtype=".concat(r.dtype,", found dtype=").concat(e.dtype,"."));if(r.axes){const t=e.shape;for(const e in r.axes){const n=Number(e),s=r.axes[e],o=n>=0?t[n]:t[t.length+n];if(null!=s&&-1===[s,null].indexOf(o))throw new fr("Input ".concat(a," is incompatible with layer ")+"".concat(this.name,": expected axis ").concat(n," of input shape to ")+"have value ".concat(s," but got shape ").concat(t,"."))}}if(null!=r.shape)for(let t=0;t<r.shape.length;++t){const n=r.shape[t],s=e.shape[t];if(null!=n&&null!=s&&n!==s)throw new fr("Input ".concat(a," is incompatible with layer ")+"".concat(this.name,": expected shape=").concat(r.shape,", ")+"found shape=".concat(e.shape,"."))}}}call(e,t){return e}invokeCallHook(e,t){null!=this._callHook&&this._callHook(e,t)}setCallHook(e){this._callHook=e}clearCallHook(){this._callHook=null}apply(e,t){t=t||{},this.assertNotDisposed();const n=Sr(e),a=function(e){let t=!0;for(const n of Sr(e))if(!(n instanceof ro)){t=!1;break}return t}(e),r=function(e){let t=!0;for(const n of Sr(e))if(n instanceof ro){t=!1;break}return t}(e);if(a===r)throw new fr("Arguments to apply() must be all SymbolicTensors or all Tensors");return Jr(this.name,(()=>{if(!this.built){this.assertInputCompatibility(e);const t=[];for(const n of Sr(e))t.push(n.shape);this.build(kr(t)),this.built=!0,this.initialWeights&&this.setWeights(this.initialWeights),null===this._refCount&&r&&(this._refCount=1)}if(this.assertInputCompatibility(e),r){let a=this.call(e,t);this.supportsMasking&&this.setMaskMetadata(e,a);const r=Sr(a),s=[];for(let e of r)-1!==n.indexOf(e)&&(e=e.clone()),s.push(e);if(a=kr(s),null!=this.activityRegularizer)throw new mr("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return a}{const n=function(e){e=Sr(e);const t=[];for(const n of e)t.push(n.shape);return kr(t)}(e),a=this.computeOutputShape(n);let r;const s="float32";if(this.warnOnIncompatibleInputShape(Array.isArray(e)?n[0]:n),r=null!=a&&a.length>0&&Array.isArray(a[0])?a.map(((n,a)=>new ro(s,n,this,Sr(e),t,this.name,a))):new ro(s,a,this,Sr(e),t,this.name),this.addInboundNode(e,r,null,null,n,a,t),this._refCount++,null!=this.activityRegularizer)throw new mr("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return r}}))}warnOnIncompatibleInputShape(e){if(null!=this.batchInputShape)if(e.length!==this.batchInputShape.length)console.warn("The rank of the input tensor provided (shape: "+"".concat(JSON.stringify(e),") does not match that of the ")+"batchInputShape (".concat(JSON.stringify(this.batchInputShape),") ")+"of the layer ".concat(this.name));else{let t=!1;this.batchInputShape.forEach(((n,a)=>{null!=n&&null!=e[a]&&e[a]!==n&&(t=!0)})),t&&console.warn("The shape of the input tensor "+"(".concat(JSON.stringify(e),") does not ")+"match the expectation of layer ".concat(this.name,": ")+"".concat(JSON.stringify(this.batchInputShape)))}}get outputShape(){if(null==this.inboundNodes||0===this.inboundNodes.length)throw new hr("The layer ".concat(this.name," has never been called and thus has no ")+"defined output shape.");const e=[];for(const t of this.inboundNodes){const n=JSON.stringify(t.outputShapes);-1===e.indexOf(n)&&e.push(n)}if(1===e.length){const e=this.inboundNodes[0].outputShapes;return Array.isArray(e)&&Array.isArray(e[0])&&1===e.length?e[0]:e}throw new hr("The layer ".concat(this.name," has multiple inbound nodes with different ")+'output shapes. Hence the notion of "output shape" is ill-defined for the layer.')}countParams(){if(!this.built)throw new pr("You tried to call countParams() on ".concat(this.name,", ")+"but the layer is not built yet. Build it first by calling build(batchInputShape).");return Js(this.weights)}build(e){this.built=!0}getWeights(){return to(arguments.length>0&&void 0!==arguments[0]&&arguments[0]?this.trainableWeights:this.weights)}setWeights(e){(0,S.tidy)((()=>{const t=this.weights;if(t.length!==e.length)throw new fr('You called setWeights(weights) on layer "'.concat(this.name,'" ')+"with a weight list of length ".concat(e.length,", ")+"but the layer was expecting ".concat(t.length," weights. ")+"Provided weights: ".concat(e,"..."));if(0===t.length)return;const n=[],a=to(t);for(let r=0;r<a.length;++r){const s=a[r],o=t[r],i=e[r];if(!S.util.arraysEqual(s.shape,i.shape))throw new fr("Layer weight shape ".concat(s.shape," ")+"not compatible with provided weight shape ".concat(i.shape));n.push([o,i])}no(n)}))}addWeight(e,t,n,a,r,s,o,i){if(-1!==this._addedWeightNames.indexOf(e))throw new fr("Duplicate weight name ".concat(e," for layer ").concat(this.name));this._addedWeightNames.push(e),null==n&&(n="float32"),this.fastWeightInitDuringBuild&&(a=null!=i?i():Xs("zeros"));const c=a.apply(t,n),l=new eo(c,n,e,s,o);return c.dispose(),null!=r&&this.addLoss((()=>r.apply(l.read()))),null==s&&(s=!0),s?this._trainableWeights.push(l):this._nonTrainableWeights.push(l),l}setFastWeightInitDuringBuild(e){this.fastWeightInitDuringBuild=e}addLoss(e){null==e||Array.isArray(e)&&0===e.length||(e=Sr(e),void 0!==this._losses&&null!==this._losses&&this.losses.push(...e))}computeOutputShape(e){return e}computeMask(e,t){if(!this.supportsMasking){if(null!=t){if(!Array.isArray(t))throw new TypeError("Layer ".concat(this.name," does not support masking, ")+"but was passed an inputMask.");t.forEach((e=>{if(null!=e)throw new TypeError("Layer ".concat(this.name," does not support masking, ")+"but was passed an inputMask.")}))}return null}return t}setMaskMetadata(e,t,n){if(!this.supportsMasking)return;const a=this.computeMask(e,n),r=Sr(t),s=Sr(a);if(r.length!==s.length)throw new Error("".concat(this.name," outputs ").concat(r.length," tensors ")+"but ".concat(r.length," masks for those tensors"));for(let o=0;o<r.length;o++)r[o].kerasMask=s[o]}addInboundNode(e,t,n,a,r,s){let o=arguments.length>6&&void 0!==arguments[6]?arguments[6]:null;const i=Sr(e);t=Sr(t),n=Sr(n),a=Sr(a),r=Qs(r),s=Qs(s);const c=[],l=[],u=[];for(const d of i)c.push(d.sourceLayer),l.push(d.nodeIndex),u.push(d.tensorIndex);new oo({outboundLayer:this,inboundLayers:c,nodeIndices:l,tensorIndices:u,inputTensors:i,outputTensors:t,inputMasks:n,outputMasks:a,inputShapes:r,outputShapes:s},o);for(let d=0;d<t.length;d++)t[d].sourceLayer=this,t[d].nodeIndex=this.inboundNodes.length-1,t[d].tensorIndex=d}getConfig(){const e={name:this.name,trainable:this.trainable};return null!=this.batchInputShape&&(e.batchInputShape=this.batchInputShape),null!=this.dtype&&(e.dtype=this.dtype),e}disposeWeights(){return this.weights.forEach((e=>e.dispose())),this.weights.length}assertNotDisposed(){if(0===this._refCount)throw new Error("Layer '".concat(this.name,"' is already disposed."))}dispose(){if(!this.built)throw new Error("Cannot dispose Layer ".concat(this.name," because it has not been ")+"built yet.");if(null===this._refCount)throw new Error("Cannot dispose Layer ".concat(this.name," because it has not been used ")+"yet.");this.assertNotDisposed();let e=0;return 0===--this._refCount&&(e=this.disposeWeights()),{refCountAfterDispose:this._refCount,numDisposedVariables:e}}}function lo(e,t,n){if((null==t||null!=n&&n>0)&&(t=e.sourceLayer,n=e.nodeIndex),0===t.inboundNodes.length)return[e];{const e=t.inboundNodes[n];if(0===e.inboundLayers.length)return e.inputTensors;{const t=[];for(let n=0;n<e.inboundLayers.length;n++){const a=lo(e.inputTensors[n],e.inboundLayers[n],e.nodeIndices[n]);for(const e of a)-1===t.indexOf(e)&&t.push(e)}return t}}}class uo extends co{constructor(e){if(super({dtype:e.dtype,name:null!=e.name?e.name:Wr("input").toString()}),null==e.batchSize&&(e.batchSize=null),null==e.sparse&&(e.sparse=!1),this.trainable=!1,this.built=!0,this.sparse=e.sparse,null!=e.inputShape&&null!=e.batchInputShape)throw new fr("Only provide the inputShape OR batchInputShape argument to inputLayer, not both at the same time.");let t=e.batchInputShape;if(null==t){if(null==e.inputShape)throw new fr("An InputLayer should be passed either a `batchInputShape` or an `inputShape`.");t=[e.batchSize].concat(e.inputShape)}else if(null!=e.batchSize)throw new fr("Cannot specify batchSize if batchInputShape is specified when creating an InputLayer.");const n=e.dtype||"float32";this.batchInputShape=t,this.dtype=n,this.inputSpec=[{shape:t}];const a=new ro(this.dtype,this.batchInputShape,this,[],{},this.name);a.nodeIndex=0,a.tensorIndex=0,new oo({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:[a],outputTensors:[a],inputMasks:[null],outputMasks:[null],inputShapes:[t],outputShapes:[t]})}apply(e,t){throw new fr("Cannot pass any input to an "+"InputLayer's apply() method. InputLayer name: ".concat(this.name))}dispose(){return{refCountAfterDispose:this._refCount,numDisposedVariables:0}}getConfig(){return{batchInputShape:this.batchInputShape,dtype:this.dtype,sparse:this.sparse,name:this.name}}}uo.className="InputLayer",S.serialization.registerClass(uo);class ho{constructor(e){if(this.id2Value={},this.id2Mask={},this.name2Id={},e instanceof ho)for(const t in e.id2Value)this.id2Value[t]=e.id2Value[t],t in e.id2Mask&&(this.id2Mask[t]=e.id2Mask[t]);else{if(null==e)return;for(const t of e)this.add(t.key,t.value)}}add(e,t,n){if(null!=this.id2Value[e.id])throw new fr("Duplicate key: name=".concat(e.name,", id=").concat(e.id));return this.id2Value[e.id]=function(e,t){if(null==e.dtype||e.dtype===t.dtype)return t;try{return(0,S.cast)(t,e.dtype)}catch(n){throw new fr("The dtype of the feed (".concat(t.dtype,") can not be cast to the dtype ")+"of the key '".concat(e.name,"' (").concat(e.dtype,")."))}}(e,t),this.name2Id[e.name]=e.id,null!=n&&(this.id2Mask[e.id]=n),this}addFeed(e){this.add(e.key,e.value)}hasKey(e){return null!=this.id2Value[e.id]}names(){return Object.keys(this.name2Id)}getValue(e){if(e instanceof ro){if(null==this.id2Value[e.id])throw new fr("Nonexistent key: ".concat(e.name));return this.id2Value[e.id]}{const t=this.name2Id[e];if(null==t)throw new fr("Feed dict has no SymbolicTensor name: ".concat(e));return this.id2Value[t]}}getMask(e){if(e instanceof ro){if(null==this.id2Value[e.id])throw new fr("Nonexistent key: ".concat(e.name));return this.id2Mask[e.id]}{const t=this.name2Id[e];if(null==t)throw new fr("Feed dict has no SymbolicTensor name: ".concat(e));return this.id2Mask[t]}}disposeMasks(){null!=this.id2Mask&&(0,S.dispose)(this.id2Mask)}}const po=new br,fo=new br;function mo(e,t,n,a){const r=null!=n&&n.training,s=Array.isArray(e),o=s?e:[e],i=o.map((e=>e.name)),c=[],l=t.names();for(const f of i)-1!==l.indexOf(f)?c.push(t.getValue(f)):c.push(null);null!=a&&(a.maxNumTensors=-1/0,a.minNumTensors=1/0);const u=i.join(",")+"|"+t.names().sort().join(",");let d,h=po.get(u);if(null==h){const e=function(e,t){S.util.assert(null!=e&&e.length>0,(()=>"Expected at least one fetch, got none"));let n=[],a={};if(1===e.length){const r=yo(e[0],t);n=r.sorted,a=r.recipientMap}else{const r=new Set;for(const s of e){const{sorted:e,recipientMap:o}=yo(s,t);for(const t of e)r.has(t.name)||(n.push(t),r.add(t.name));for(const t in o)null==a[t]&&(a[t]=new Set),o[t].forEach((e=>a[t].add(e)))}}return{sorted:n,recipientCounts:go(a)}}(o,t);h=e.sorted,d=e.recipientCounts,po.put(u,h),fo.put(u,d)}d={},r||Object.assign(d,fo.get(u));const p=new ho(t);for(let f=0;f<h.length;++f){if(null!=a){const e=(0,S.memory)().numTensors;e>a.maxNumTensors&&(a.maxNumTensors=e),e<a.minNumTensors&&(a.minNumTensors=e)}const e=h[f],s=e.sourceLayer;if(s instanceof uo)continue;const o=[],l=[],u=[];let m=!1;for(const n of e.inputs){const e=p.getValue(n),a=p.getMask(n);o.push(e),l.push(a),null!=a&&(m=!0),r||(d[n.name]--,0!==d[n.name]||t.hasKey(n)||-1!==i.indexOf(n.name)||e.isDisposed||!0===n.sourceLayer.stateful||u.push(e))}m&&((n=n||{}).mask=l[0]);const g=Sr(s.apply(o,n));let y=null;s.supportsMasking&&(y=s.computeMask(o,l));const b=bo(e),v=Array.isArray(b)?b:[b];for(let t=0;t<v.length;++t){p.hasKey(v[t])||p.add(v[t],g[t],Array.isArray(y)?y[0]:y);const e=i.indexOf(v[t].name);-1!==e&&(c[e]=g[t])}r||(0,S.dispose)(u)}return p.disposeMasks(),s?c:c[0]}function go(e){const t={};for(const n in e)t[n]=e[n].size;return t}function yo(e,t){const n=new Set,a=[],r={};for(const i of t.names())n.add(i);const s=[],o=[];for(s.push(e);s.length>0;){const e=s[s.length-1];if(n.has(e.name)){s.pop();continue}const t=o[o.length-1]===s.length-1;if(0===e.inputs.length||t)s.pop(),a.push(e),n.add(e.name),t&&o.pop();else{o.push(s.length-1);for(const t of e.inputs)null==r[t.name]&&(r[t.name]=new Set),r[t.name].add(e.name),n.has(t.name)||s.push(t)}}return{sorted:a,recipientMap:r}}function bo(e){let t;if(1===e.sourceLayer.inboundNodes.length)t=e.sourceLayer.output;else{let n=null;for(let t=0;t<e.sourceLayer.inboundNodes.length;++t)for(const a of e.sourceLayer.inboundNodes[t].outputTensors)if(a.id===e.id){n=t;break}t=e.sourceLayer.getOutputAt(n)}return t}function vo(e,t){return(0,S.tidy)((()=>S.sqrt(S.sum(S.mul(e,e),t,!0))))}(0,S.env)().registerFlag("TOPOLOGICAL_SORT_CACHE_MAX_ENTRIES",(()=>100),(function(e){null!=po&&po.setMaxEntries(e),null!=fo&&fo.setMaxEntries(e)}));class xo extends S.serialization.Serializable{getConfig(){return{}}}class wo extends xo{constructor(e){super(),this.defaultMaxValue=2,this.defaultAxis=0,this.maxValue=null!=e.maxValue?e.maxValue:this.defaultMaxValue,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return(0,S.tidy)((()=>{const t=vo(e,this.axis),n=S.clipByValue(t,0,this.maxValue);return S.mul(e,S.div(n,S.add(cs(),t)))}))}getConfig(){return{maxValue:this.maxValue,axis:this.axis}}}wo.className="MaxNorm",S.serialization.registerClass(wo);class ko extends xo{constructor(e){super(),this.defaultAxis=0,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return(0,S.tidy)((()=>S.div(e,S.add(cs(),vo(e,this.axis)))))}getConfig(){return{axis:this.axis}}}ko.className="UnitNorm",S.serialization.registerClass(ko);class So extends xo{apply(e){return S.relu(e)}}So.className="NonNeg",S.serialization.registerClass(So);class No extends xo{constructor(e){super(),this.defaultMinValue=0,this.defaultMaxValue=1,this.defaultRate=1,this.defaultAxis=0,this.minValue=null!=e.minValue?e.minValue:this.defaultMinValue,this.maxValue=null!=e.maxValue?e.maxValue:this.defaultMaxValue,this.rate=null!=e.rate?e.rate:this.defaultRate,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return(0,S.tidy)((()=>{const t=vo(e,this.axis),n=S.add(S.mul(this.rate,S.clipByValue(t,this.minValue,this.maxValue)),S.mul(1-this.rate,t));return S.mul(e,S.div(n,S.add(cs(),t)))}))}getConfig(){return{minValue:this.minValue,maxValue:this.maxValue,rate:this.rate,axis:this.axis}}}No.className="MinMaxNorm",S.serialization.registerClass(No);const Io={maxNorm:"MaxNorm",minMaxNorm:"MinMaxNorm",nonNeg:"NonNeg",unitNorm:"UnitNorm"};function To(e){return Cr(e)}function Co(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return _r(e,S.serialization.SerializationMap.getMap().classNameMap,t,"constraint")}function Eo(e){if(null==e)return null;if("string"===typeof e){return Co({className:e in Io?Io[e]:e,config:{}})}return e instanceof xo?e:Co(e)}async function _o(e){if(null==e)return;const t=[],n=[],a=[];for(const r in e){const s=e[r];if("number"!==typeof s){const e=s;t.push(e.data()),n.push(r),a.push(e)}}if(t.length>0){const r=await Promise.all(t);for(let t=0;t<r.length;++t)e[n[t]]=r[t][0];(0,S.dispose)(a)}}function Ao(e){if(null!=e)for(const t in e){const n=e[t];"number"!==typeof n&&n.dispose()}}var Ro;!function(e){e[e.SILENT=0]="SILENT",e[e.VERBOSE=1]="VERBOSE"}(Ro||(Ro={}));class Fo{constructor(){this.validationData=null}setParams(e){this.params=e}async onEpochBegin(e,t){}async onEpochEnd(e,t){}async onBatchBegin(e,t){}async onBatchEnd(e,t){}async onTrainBegin(e){}async onTrainEnd(e){}setModel(e){}}class Do{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:10;null==e&&(e=[]),this.callbacks=e,this.queueLength=t}append(e){this.callbacks.push(e)}setParams(e){for(const t of this.callbacks)t.setParams(e)}setModel(e){for(const t of this.callbacks)t.setModel(e)}async onEpochBegin(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onEpochBegin(e,t)}async onEpochEnd(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onEpochEnd(e,t)}async onBatchBegin(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onBatchBegin(e,t)}async onBatchEnd(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onBatchEnd(e,t)}async onTrainBegin(e){null==e&&(e={});for(const t of this.callbacks)await t.onTrainBegin(e)}async onTrainEnd(e){null==e&&(e={});for(const t of this.callbacks)await t.onTrainEnd(e)}}class Oo extends Fo{constructor(){super()}async onEpochBegin(e){this.seen=0,this.totals={}}async onBatchEnd(e,t){null==t&&(t={});const n=null==t.size?0:t.size;this.seen+=n;for(const a in t){const e=t[a];if("number"===typeof e)this.totals.hasOwnProperty(a)||(this.totals[a]=0),this.totals[a]=this.totals[a]+e*n;else{let t;a in this.totals?t=this.totals[a]:this.totals[a]=0;const r=(0,S.tidy)((()=>(0,S.add)(this.totals[a],(0,S.mul)(e,n))));this.totals[a]=r,null!=t&&t.dispose()}}}async onEpochEnd(e,t){if(null!=t)for(const n of this.params.metrics)null!=this.totals[n]&&("number"===typeof this.totals[n]?t[n]=this.totals[n]/this.seen:(0,S.tidy)((()=>{const e=(0,S.mul)((0,S.div)(1,this.seen),this.totals[n]);t[n]=e,this.totals[n].dispose(),(0,S.keep)(t[n])})))}}class Mo extends Fo{async onTrainBegin(e){this.epoch=[],this.history={}}async onEpochEnd(e,t){null==t&&(t={}),this.epoch.push(e);for(const n in t)null==this.history[n]&&(this.history[n]=[]),this.history[n].push(t[n])}async syncData(){const e=[],t=[],n=[];for(const r in this.history){const a=this.history[r];for(let s=0;s<a.length;++s)if("number"!==typeof a[s]){const o=a[s];e.push(o.data()),t.push(r),n.push(s)}}const a=await Promise.all(e);for(let r=0;r<a.length;++r){this.history[t[r]][n[r]].dispose(),this.history[t[r]][n[r]]=a[r][0]}}}class zo extends Fo{constructor(e,t){if(super(),this.currentEpoch=0,this.nowFunc=e.nowFunc,this.nextFrameFunc=e.nextFrameFunc||S.nextFrame,this.yieldEvery=t||"auto","auto"===this.yieldEvery&&(this.yieldEvery=125),"never"===this.yieldEvery&&null!=e.onYield)throw new Error("yieldEvery is `never` but you provided an `onYield` callback. Either change `yieldEvery` or remove the callback");S.util.isNumber(this.yieldEvery)&&(this.maybeWait=function(e,t,n){let a,r=null!=n?n():S.util.now();return function(){const s=null!=n?n():S.util.now();return s-r<t||(r=s,a=e(...arguments)),a}}(this.maybeWait.bind(this),this.yieldEvery,this.nowFunc)),this.trainBegin=e.onTrainBegin,this.trainEnd=e.onTrainEnd,this.epochBegin=e.onEpochBegin,this.epochEnd=e.onEpochEnd,this.batchBegin=e.onBatchBegin,this.batchEnd=e.onBatchEnd,this.yield=e.onYield}async maybeWait(e,t,n){const a=[];null!=this.yield&&(await _o(n),a.push(this.yield(e,t,n))),a.push(this.nextFrameFunc()),await Promise.all(a)}async onEpochBegin(e,t){this.currentEpoch=e,null!=this.epochBegin&&(await _o(t),await this.epochBegin(e,t))}async onEpochEnd(e,t){const n=[];null!=this.epochEnd&&(await _o(t),n.push(this.epochEnd(e,t))),"epoch"===this.yieldEvery&&n.push(this.nextFrameFunc()),await Promise.all(n)}async onBatchBegin(e,t){null!=this.batchBegin&&(await _o(t),await this.batchBegin(e,t))}async onBatchEnd(e,t){const n=[];null!=this.batchEnd&&(await _o(t),n.push(this.batchEnd(e,t))),"batch"===this.yieldEvery?n.push(this.nextFrameFunc()):S.util.isNumber(this.yieldEvery)&&n.push(this.maybeWait(this.currentEpoch,e,t)),await Promise.all(n)}async onTrainBegin(e){null!=this.trainBegin&&(await _o(e),await this.trainBegin(e))}async onTrainEnd(e){null!=this.trainEnd&&(await _o(e),await this.trainEnd(e))}}function Lo(e,t){if(null==e&&(e={}),e instanceof Fo)return[e];if(Array.isArray(e)&&e[0]instanceof Fo)return e;return Sr(e).map((e=>new zo(e,t)))}class Bo{constructor(){}static registerCallbackConstructor(e,t){S.util.assert(e>=0&&Number.isInteger(e),(()=>"Verbosity level is expected to be an integer >= 0, "+"but got ".concat(e))),Bo.checkForDuplicate(t),null==Bo.constructors[e]&&(Bo.constructors[e]=[]),Bo.constructors[e].push(t)}static checkForDuplicate(e){for(const t in Bo.constructors){Bo.constructors[+t].forEach((t=>{if(t===e)throw new fr("Duplicate callback constructor.")}))}}static clear(){Bo.constructors={}}static createCallbacks(e){const t=[];for(const n in Bo.constructors){const a=+n;e>=a&&t.push(...Bo.constructors[a])}return t.map((e=>new e))}}function Po(e,t,n,a,r,s,o,i,c){const l=new Mo,u=[new Oo,...Bo.createCallbacks(t)];null!=e&&u.push(...e),u.push(l);const d=new Do(u);return d.setParams({epochs:n,initialEpoch:a,samples:r,steps:s,batchSize:o,verbose:t,doValidation:i,metrics:c}),{callbackList:d,history:l}}function Vo(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];return _r(e,S.serialization.SerializationMap.getMap().classNameMap,t,"layer",n)}function Wo(e,t){return(0,S.tidy)((()=>{"float32"!==e.dtype&&(e=S.cast(e,"float32"));const n=S.sum(ws(e),t,!0),a=S.fill(n.shape,cs()),r=S.sqrt(S.maximum(n,a));return S.div(e,r)}))}function Uo(e,t){return(0,S.tidy)((()=>S.mean(ws(S.sub(t,e)),-1)))}function Go(e,t){return(0,S.tidy)((()=>S.mean(S.abs(S.sub(t,e)),-1)))}function Ho(e,t){return(0,S.tidy)((()=>{const n=S.sub(e,t),a=S.clipByValue(S.abs(e),cs(),Number.MAX_VALUE),r=S.abs(S.div(n,a));return S.mul(100,S.mean(r,-1))}))}function jo(e,t){return(0,S.tidy)((()=>{const n=S.clipByValue(t,cs(),Number.MAX_VALUE),a=S.log(S.add(1,n)),r=S.clipByValue(e,cs(),Number.MAX_VALUE),s=S.log(S.add(1,r));return S.mean(ws(S.sub(a,s)),-1)}))}function qo(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];return(0,S.tidy)((()=>{if(n)t=S.softmax(t);else{const e=S.sum(t,t.shape.length-1,!0);t=S.div(t,e)}return t=S.clipByValue(t,cs(),1-cs()),S.neg(S.sum(S.mul(S.cast(e,"float32"),S.log(t)),t.shape.length-1))}))}function Xo(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];return(0,S.tidy)((()=>{const a=S.cast(S.floor(ds(e)),"int32"),r=(t=S.clipByValue(t,cs(),1-cs())).shape;return qo(S.reshape(S.oneHot(a,r[r.length-1]),r),t,n)}))}function Ko(e,t){return(0,S.tidy)((()=>{let n;return n=S.clipByValue(t,cs(),1-cs()),n=S.log(S.div(n,S.sub(1,n))),S.mean(function(e,t){if(!S.util.arraysEqual(e.shape,t.shape))throw new fr("logits and labels must have the same shape, but got shapes "+"".concat(JSON.stringify(e.shape)," and ").concat(JSON.stringify(t.shape)));return(0,S.tidy)((()=>{const n=S.relu(t),a=S.neg(S.abs(t));return S.add(S.sub(n,S.mul(t,e)),S.log1p(S.exp(a)))}))}(e,n),-1)}))}function Qo(e,t){return(0,S.tidy)((()=>{const n=S.clipByValue(e,cs(),1),a=S.clipByValue(t,cs(),1);return S.sum(S.mul(e,S.log(S.div(n,a))),-1)}))}function Yo(e,t){return(0,S.tidy)((()=>{const n=Wo(e,-1),a=Wo(t,-1),r=S.mul(n,a);return S.neg(S.sum(r,-1))}))}Bo.constructors={};const Zo={meanSquaredError:Uo,meanAbsoluteError:Go,meanAbsolutePercentageError:Ho,meanSquaredLogarithmicError:jo,squaredHinge:function(e,t){return(0,S.tidy)((()=>{const n=S.maximum(0,S.sub(1,S.mul(e,t)));return S.mean(ws(n),-1)}))},hinge:function(e,t){return(0,S.tidy)((()=>{const n=S.maximum(0,S.sub(1,S.mul(e,t)));return S.mean(n,-1)}))},categoricalHinge:function(e,t){return(0,S.tidy)((()=>{const n=S.sum(S.mul(e,t),-1),a=S.max(S.mul(S.sub(1,e),t),-1);return S.maximum(0,S.add(1,S.sub(a,n)))}))},logcosh:function(e,t){return(0,S.tidy)((()=>{const n=Math.log(2),a=S.sub(t,e),r=S.sub(S.add(a,S.softplus(S.mul(-2,a))),n);return S.mean(r,-1)}))},categoricalCrossentropy:qo,sparseCategoricalCrossentropy:Xo,binaryCrossentropy:Ko,kullbackLeiblerDivergence:Qo,poisson:function(e,t){return(0,S.tidy)((()=>{const n=S.log(S.add(cs(),t));return S.mean(S.sub(t,S.mul(e,n)),-1)}))},cosineProximity:Yo};function Jo(e){if("string"===typeof e){if(e in Zo)return Zo[e];let t="Unknown loss ".concat(e);throw e.toLowerCase().includes("softmaxcrossentropy")&&(t="Unknown loss ".concat(e,". ")+'Use "categoricalCrossentropy" as the string name for tf.losses.softmaxCrossEntropy'),new fr(t)}return e}function $o(e,t){return(0,S.tidy)((()=>{const n=S.mul(.5,S.onesLike(t)),a=ls(S.greater(t,n),e.dtype);return S.mean(S.equal(e,a),-1)}))}function ei(e,t){return(0,S.tidy)((()=>ls(S.equal(S.argMax(e,-1),S.argMax(t,-1)),"float32")))}function ti(e,t){return(0,S.tidy)((()=>S.cast(S.sum(S.logicalAnd(S.equal(e,1),S.equal(t,1))),"float32")))}function ni(e,t){return Ko(e,t)}function ai(e,t){return e.rank===t.rank&&(e=S.squeeze(e,[e.rank-1])),(t=S.argMax(t,-1)).dtype!==e.dtype&&(t=S.cast(t,e.dtype)),S.cast(S.equal(e,t),"float32")}const ri=qo,si=Xo,oi={binaryAccuracy:$o,categoricalAccuracy:ei,precision:function(e,t){return(0,S.tidy)((()=>{const n=ti(e,t),a=function(e,t){return(0,S.tidy)((()=>S.cast(S.sum(S.logicalAnd(S.equal(e,0),S.equal(t,1))),"float32")))}(e,t),r=S.add(n,a);return S.cast(S.where(S.greater(r,0),S.div(n,r),0),"float32")}))},categoricalCrossentropy:ri,sparseCategoricalCrossentropy:si,mse:Uo,MSE:Uo,mae:Go,MAE:Go,mape:Ho,MAPE:Ho,cosine:Yo};function ii(e){if("string"===typeof e&&e in oi)return oi[e];if("string"!==typeof e&&null!=e)return e;throw new fr("Unknown metric ".concat(e))}function ci(e){if(xr(null!==e,"Unknown LossOrMetricFn ".concat(e)),"string"===typeof e)return e;{let t;for(const n of Object.keys(Zo))if(Zo[n]===e){t=n;break}if(void 0!==t)return t;for(const n of Object.keys(oi))if(oi[n]===e){t=n;break}return void 0!==t?t:e.name}}const li=1048576;function ui(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];if(null==e||"object"!==typeof e||Object.getPrototypeOf(e)!==Object.prototype||!di(e))throw new Error("User-defined metadata is expected to be a JSON object, but is not.");if(n){const n=JSON.stringify(e);n.length>li&&console.warn('User-defined metadata of model "'.concat(t,'" is too large in ')+"size (length=".concat(n.length," when serialized). It is not ")+"recommended to store such large objects in user-defined metadata. Please make sure its serialized length is <= "+"".concat(li,"."))}}function di(e){if(null===e)return!0;if("object"===typeof e){if(Object.getPrototypeOf(e)===Object.prototype){const t=Object.keys(e);for(const n of t){if("string"!==typeof n)return!1;if(!di(e[n]))return!1}return!0}if(Array.isArray(e)){for(const t of e)if(!di(t))return!1;return!0}return!1}{const t=typeof e;return"string"===t||"number"===t||"boolean"===t}}function hi(e){let t;return t=null!=e.collectedTrainableWeights?Js(e.collectedTrainableWeights):Js(e.trainableWeights),t}function pi(e){let t=!0;const n=[],a=[];for(const r in e.nodesByDepth)n.push(e.nodesByDepth[r]);for(const r of n){if(r.length>1||1===r.length&&r[0].inboundLayers.length>1){t=!1;break}a.push(...r)}if(t)for(const r of e.layers){let e=!1;for(const n of r.inboundNodes)if(-1!==a.indexOf(n)){if(e){t=!1;break}e=!0}if(!t)break}return t}function fi(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:console.log,a="";for(let r=0;r<e.length;++r)r>0&&(a=a.slice(0,a.length-1)+" "),a+=e[r],a=a.slice(0,t[r]),a+=" ".repeat(t[r]-a.length);n(a)}function mi(e,t,n){let a,r;try{r=e.inboundNodes.map((e=>JSON.stringify(e.inputShapes))).join(",")}catch(i){r="multiple"}try{a=JSON.stringify(e.outputShape)}catch(i){a="multiple"}const s=e.name,o=e.getClassName();fi(["".concat(s," (").concat(o,")"),r,a,e.countParams().toString()],t,n)}function gi(e,t,n,a){let r,s;try{s=e.inboundNodes.map((e=>JSON.stringify(e.inputShapes))).join(",")}catch(u){s="multiple"}try{r=JSON.stringify(e.outputShape)}catch(u){r="multiple"}const o=[];for(const d of e.inboundNodes)if(!(null!=n&&n.length>0&&-1===n.indexOf(d)))for(let e=0;e<d.inboundLayers.length;++e){const t=d.inboundLayers[e].name,n=d.nodeIndices[e],a=d.tensorIndices[e];o.push("".concat(t,"[").concat(n,"][").concat(a,"]"))}const i=e.name,c=e.getClassName(),l=0===o.length?"":o[0];fi(["".concat(i," (").concat(c,")"),s,r,e.countParams().toString(),l],t,a);for(let d=1;d<o.length;++d)fi(["","","","",o[d]],t,a)}function yi(e,t,n){return("inboundNodes"===e||"outputLayers"===e||"inputLayers"===e)&&0===t&&"string"===typeof n}function bi(e,t){if(null===e)return null;if("string"===typeof e)return Ir(e);if("number"===typeof e||"boolean"===typeof e)return e;if(e instanceof Array){const n=[],a=e.length;for(let r=0;r<a;++r){const a=e[r];yi(t,r,a)?n.push(a):n.push(bi(a,t))}return n}{const t={};for(const n of Object.keys(e)){const a=e[n];if("name"===n&&"string"===typeof a)t[n]=a;else{const e=Ir(n);t[e]=bi(a,e)}}return t}}function vi(e,t){if(null===e||void 0===e)return null;if("string"===typeof e)return Nr(e);if("number"===typeof e||"boolean"===typeof e)return e;if(e instanceof Array){const n=[],a=e.length;for(let r=0;r<a;++r){const a=e[r];yi(t,r,a)?n.push(a):n.push(vi(a,t))}return n}{const t={};for(const n of Object.keys(e)){const a=e[n],r=Nr(n);t[r]="name"!==n&&"className"!==n||"string"!==typeof a?vi(a,n):a}return t}}const xi="4.20.0";class wi extends co{constructor(e){if(super({}),this.containerNodes=new Set,this.name=e.name,null==this.name){const e=this.getClassName().toLowerCase();this.name=Wr(e)}if(this.supportsMasking=!1,this.trainable_=!0,Array.isArray(e.inputs)?this.inputs=e.inputs.slice():this.inputs=[e.inputs],Array.isArray(e.outputs)?this.outputs=e.outputs.slice():this.outputs=[e.outputs],Rr(this.inputs).length!==this.inputs.length)throw new fr("The list of inputs passed to the model is redundant. All inputs should only appear once. Found: "+"".concat(this.inputs.map((e=>e.name))));Rr(this.outputs).length!==this.outputs.length&&console.warn("The list of outputs passed to the model is redundant. All outputs should only appear once. Found: "+"".concat(this.outputs.map((e=>e.name)))),this.inputLayers=[],this.inputLayersNodeIndices=[],this.inputLayersTensorIndices=[],this.outputLayers=[],this.outputLayersNodeIndices=[],this.outputLayersTensorIndices=[],this.layers=[],this.internalContainerRefs=[];for(const y of this.outputs){const e=y.sourceLayer,t=y.nodeIndex,n=y.tensorIndex;this.outputLayers.push(e),this.outputLayersNodeIndices.push(t),this.outputLayersTensorIndices.push(n)}for(const y of this.inputs){const e=y.sourceLayer,t=y.nodeIndex,n=y.tensorIndex;xr(0===t,"input layer has >1 nodes"),xr(0===n,"input layer has >1 tensors"),this.inputLayers.push(e),this.inputLayersNodeIndices.push(t),this.inputLayersTensorIndices.push(n)}this.inputNames=[],this.outputNames=[],this.feedInputShapes=[],this.feedInputNames=[],this.feedOutputNames=[];for(let y=0;y<this.inputLayers.length;y++){const t=this.inputLayers[y];if(!(t instanceof uo))throw new TypeError("Input layers to a LayersModel must be InputLayer objects. "+"Received inputs: ".concat(e.inputs,". ")+"Input ".concat(y," (0-based) originates ")+"from layer type ".concat(t.getClassName(),"."));this.inputNames.push(t.name),this.feedInputShapes.push(t.batchInputShape),this.feedInputNames.push(t.name)}for(const y of this.outputLayers)this.outputNames.push(y.name);this.internalInputShapes=this.inputs.map((e=>e.shape)),this.internalOutputShapes=this.outputs.map((e=>e.shape));const t={},n={},a={},r={},s={},o=[],i=(e,t,n,a,r,c)=>{null!=a&&null!=r&&null!=c||(a=e.sourceLayer,r=e.nodeIndex,c=e.tensorIndex);const l=a.inboundNodes[r];if(-1!==n.indexOf(l))throw new pr("The tensor ".concat(e.name,' at layer "').concat(a.name,'" ')+"is part of a cycle.");if(-1!==t.indexOf(l))return;this.containerNodes.add(wi.nodeKey(a,r)),a.id in s||(s[a.id]=Object.keys(s).length),-1===n.indexOf(l)&&n.push(l);const u=l.inboundLayers.length;for(let s=0;s<u;s++){const e=l.inputTensors[s],a=l.inboundLayers[s],r=l.nodeIndices[s],o=l.tensorIndices[s];i(e,t,n,a,r,o)}for(t.push(l);n.indexOf(l)>=0;)n.splice(n.indexOf(l),1);o.push(l)},c=[],l=[];for(const y of this.outputs)i(y,c,l);const u=o.slice().reverse();for(const y of u){n[y.id]=y,y.id in t||(t[y.id]=0);let e=t[y.id];const s=null==a[y.outboundLayer.id]?0:a[y.outboundLayer.id];e=Math.max(e,s),a[y.outboundLayer.id]=e,r[y.outboundLayer.id]=y.outboundLayer,t[y.id]=e;for(let a=0;a<y.inboundLayers.length;a++){const r=y.inboundLayers[a],s=y.nodeIndices[a],o=r.inboundNodes[s],i=null==t[o.id]?0:t[o.id];t[o.id]=Math.max(e+1,i),n[o.id]=o}}const d={};for(const y in t){const e=t[y];e in d||(d[e]=[]),d[e].push(n[y])}const h={};for(const y in a){const e=a[y];e in h||(h[e]=[]),h[e].push(r[y])}let p=Object.keys(h).map((e=>parseInt(e,10))).sort(Ar);this.layers=[];for(const y of p){const e=h[y];e.sort(((e,t)=>{const n=s[e.id],a=s[t.id];return n<a?-1:n>a?1:0}));for(const t of e)t instanceof wi&&this.internalContainerRefs.push(t),this.layers.push(t)}this.layersByDepth=h,p=Object.keys(d).map((e=>parseInt(e,10))).sort(Ar);const f=this.inputs.slice(),m=[];for(const y of p)for(const e of d[y]){const t=e.outboundLayer;if(null!=t){for(const n of e.inputTensors)if(-1===f.indexOf(n))throw new pr("Graph disconnected: cannot obtain value for tensor ".concat(n)+' at layer "'.concat(t.name,'". ')+"The following previous layers were accessed without "+"issue: ".concat(m));for(const t of e.outputTensors)f.push(t);m.push(t.name)}}this.nodesByDepth=d;const g=this.layers.map((e=>e.name));for(const y of g){const e=g.filter((e=>e===y)).length;if(1!==e)throw new pr('The name "'.concat(y,'" is used ').concat(e," times ")+"in the model. All layer names should be unique. Layer names: "+JSON.stringify(g))}this.outboundNodes=[],this.inboundNodes=[],new oo({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:this.inputs.map((e=>null)),outputMasks:this.outputs.map((e=>null)),inputShapes:this.inputs.map((e=>e.shape)),outputShapes:this.outputs.map((e=>e.shape))}),this.built=!0,this._refCount=1}assertNotDisposed(){if(0===this._refCount)throw new Error("Container '".concat(this.name,"' is already disposed."))}dispose(){this.assertNotDisposed();const e={refCountAfterDispose:null,numDisposedVariables:0};if(0===--this._refCount){for(const t of this.layers)e.numDisposedVariables+=t.dispose().numDisposedVariables;for(const t of this.internalContainerRefs)e.numDisposedVariables+=t.dispose().numDisposedVariables}return e.refCountAfterDispose=this._refCount,e}get trainable(){return this.trainable_}set trainable(e){this.layers.forEach((t=>{t._trainableWeights.forEach((t=>t.trainable=e))})),this.trainable_=e}get trainableWeights(){if(this._trainableWeights.length>0)throw new fr("Container instance unexpectedly contains _trainableWeights.The trainable weights of a Container are a union of the trainable weights of its consituent Layers. Its own _trainableWeights must remain an empty Array.");if(!this.trainable)return[];let e=[];for(const t of this.layers)e=e.concat(t.trainableWeights);return e}get nonTrainableWeights(){const e=[];for(const t of this.layers)e.push(...t.nonTrainableWeights);if(!this.trainable){const t=[];for(const e of this.layers)t.push(...e.trainableWeights);return t.concat(e)}return e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}loadWeights(e){let t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];const n={};let a=0;const r=(e=>{const t=Object.keys(e);if(0===t.length)return!1;const n=t[0].split("/");return!isNaN(parseInt(n[n.length-1],10))})(e);r&&this.parseWeights(e);for(const o of this.layers)for(const[e,t]of o.weights.entries()){const s=r?"".concat(t.name.split("/").slice(0,-1).join("/")+"/").concat(e):t.originalName;if(null!=n[s])throw new fr("Duplicate weight name: ".concat(s));n[s]=t,a++}const s=[];for(const o in e){let a=o;if(null==n[o]){const e=o.split("/");a=e.slice(0,-2).concat([e[e.length-1]]).join("/")}if(null!=n[a])s.push([n[a],e[o]]);else if(t)throw new fr("Provided weight data has no target variable: ".concat(o));delete n[a]}if(t){const e=[];for(const t in n)e.push(t);if(e.length>0)throw new fr("".concat(e.length," of ").concat(a," weights are not set: ")+"".concat(e))}no(s)}parseWeights(e){for(const t in Object.keys(e)){const n=t.split("/"),a=["vars","layer_checkpoint_dependencies"],r=n.map((e=>e.startsWith("_")?e.slice(1):e)).filter((e=>!a.includes(e))).join("/");r!==t&&(e[r]=e[t],delete e[t])}}updatedConfig(){const e=this.getConfig(),t={};return t.className=this.getClassName(),t.config=e,t.kerasVersion="tfjs-layers ".concat(xi),t.backend="TensorFlow.js",t}toJSON(e){let t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];const n=vi(this.updatedConfig());return t?JSON.stringify(n):n}call(e,t){return(0,S.tidy)((()=>{e=Sr(e);const n=new ho;for(let t=0;t<this.inputs.length;++t)n.add(this.inputs[t],e[t]);return mo(this.outputs,n,t)}))}computeMask(e,t){return(0,S.tidy)((()=>{let n;return e=Sr(e),n=null==t?vr(null,e.length):Sr(t),this.runInternalGraph(e,n)[1]}))}computeOutputShape(e){const t=Qs(e);if(t.length!==this.inputLayers.length)throw new fr("Invalid inputShape argument ".concat(e,": ")+"model has ".concat(this.inputLayers.length," tensor inputs."));const n={};for(let o=0;o<t.length;o++){const e=this.inputLayers[o],a=t[o];n[e.name+"_0_0"]=a}const a=Object.keys(this.nodesByDepth).map((e=>parseInt(e,10))).sort(Ar);if(a.length>1)for(const o of a){const e=this.nodesByDepth[o];for(const t of e){const e=t.outboundLayer;if(-1!==this.inputLayers.map((e=>e.id)).indexOf(e.id))continue;const a=[];for(let o=0;o<t.inboundLayers.length;o++){const e=t.inboundLayers[o],r=t.nodeIndices[o],s=t.tensorIndices[o],i=n["".concat(e.name,"_").concat(r,"_").concat(s)];a.push(i)}const r=Qs(e.computeOutputShape(kr(a))),s=e.inboundNodes.indexOf(t);for(let t=0;t<r.length;t++){n["".concat(e.name,"_").concat(s,"_").concat(t)]=r[t]}}}const r=[],s=[];for(let o=0;o<this.outputLayers.length;o++){const e=this.outputLayers[o],t=this.outputLayersNodeIndices[o],n=this.outputLayersTensorIndices[o],a="".concat(e.name,"_").concat(t,"_").concat(n);s.push(a)}for(let o=0;o<s.length;o++){const e=s[o];xr(e in n),r.push(n[e])}return kr(r)}runInternalGraph(e,t){null==t&&(t=vr(null,e.length));const n={};for(let i=0;i<this.inputs.length;++i){const a=this.inputs[i],r=e[i],s=t[i];n[a.id]=[r,s]}const a=Object.keys(this.nodesByDepth).map((e=>parseInt(e,10))).sort(Ar);for(const i of a){const e=this.nodesByDepth[i];for(const t of e){const e=t.outboundLayer,a=t.inputTensors,r=t.outputTensors,s=new Array;for(const t of a)t.id in n&&s.push(n[t.id]);if(s.length===a.length){let a,o,i,c,l={};if(null!=t.callArgs&&(l=t.callArgs),1===s.length){const[t,n]=s[0];null==l.mask&&(l.mask=n),i=Sr(e.call(t,l)),c=Sr(e.computeMask(t,n)),a=[t],o=[n]}else a=s.map((e=>e[0])),o=s.map((e=>e[1])),null==l.mask&&(l.mask=o),i=Sr(e.call(a,l)),c=Sr(e.computeMask(a,o));if(e.activityRegularizer)throw new mr("LayersModel invocation with concrete Tensor value(s) in the presence of activity regularizer(s) is not supported yet.");for(let e=0;e<r.length;++e){const t=r[e],a=i[e],s=c[e];n[t.id]=[a,s]}}}}const r=[],s=[],o=[];for(const i of this.outputs){xr(i.id in n,"Could not compute output ".concat(i.name," : ").concat(i.id));const[e,t]=n[i.id];o.push(e.shape),r.push(e),s.push(t)}return[r,s,o]}buildNodeConversionMap(e){const t={};let n;for(const a of this.layers){n=a instanceof wi?1:0;for(let e=0;e<a.inboundNodes.length;e++){const r=wi.nodeKey(a,e);this.containerNodes.has(r)&&(t[r]=n,n+=1)}}return t}getLayer(e,t){if(null!=t)return this.findLayer(t);if(null==e)throw new fr("Provide either a layer name or layer index");if("number"===typeof e)return this.findLayer(e);for(const n of this.layers)if(n.name===e)return n;throw new fr("No such layer: ".concat(e))}findLayer(e){if(this.layers.length<=e)throw new fr("Was asked to retrieve layer at index ".concat(e,", but model only ")+"has ".concat(this.layers.length," layer(s)."));return this.layers[e]}calculateLosses(){return(0,S.tidy)((()=>{const e=[];for(const t of this.layers)for(let n=0;n<t.inboundNodes.length;++n){const a=wi.nodeKey(t,n);this.containerNodes.has(a)&&e.push(...t.calculateLosses())}return e}))}getConfig(){const e={name:this.name},t=this.buildNodeConversionMap(this.layers),n=[];for(const o of this.layers){const e=o.getClassName(),a=o.getConfig(),r=[];for(let n=0;n<o.inboundNodes.length;n++){const e=o.inboundNodes[n],a=wi.nodeKey(o,n);let i={};if(this.containerNodes.has(a)){if(e.callArgs)try{JSON.stringify(e.callArgs),i=e.callArgs}catch(s){console.warn("Layer ".concat(o.name," was passed ")+"non-serializable keyword arguments: "+"".concat(e.callArgs,". They will not be included ")+"in the serialized model (and thus will be missing at deserialization time)."),i={}}if(e.inboundLayers.length>0){const n=[];for(let a=0;a<e.inboundLayers.length;a++){const r=e.inboundLayers[a],s=e.nodeIndices[a],o=e.tensorIndices[a];let c=t[wi.nodeKey(r,s)];null==c&&(c=0),n.push([r.name,c,o,i])}r.push(n)}}}const i={};i.name=o.name,i.className=e,i.config=a,i.inboundNodes=r,n.push(i)}e.layers=n;const a=[];for(let o=0;o<this.inputLayers.length;o++){const e=this.inputLayers[o],n=this.inputLayersNodeIndices[o],r=wi.nodeKey(e,n);if(!this.containerNodes.has(r))continue;let s=t[r];null!==s&&void 0!==s||(s=0);const i=this.inputLayersTensorIndices[o];a.push([e.name,s,i])}e.inputLayers=a;const r=[];for(let o=0;o<this.outputLayers.length;o++){const e=this.outputLayers[o],n=this.outputLayersNodeIndices[o],a=wi.nodeKey(e,n);if(!this.containerNodes.has(a))continue;let s=t[a];null!==s&&void 0!==s||(s=0);const i=this.outputLayersTensorIndices[o];r.push([e.name,s,i])}return e.outputLayers=r,e}static fromConfig(e,t){let n=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const a={},r={};function s(e,t){e.name in r?r[e.name].push(t):r[e.name]=[t]}function o(e,t){const n=[];let r;for(const o of t){const i=o[0],c=o[1],l=o[2];if(r=null==o[3]?{}:o[3],!(i in a))return void s(e,t);const u=a[i];if(u.inboundNodes.length<=c)return void s(e,t);const d=u.inboundNodes[c];n.push(d.outputTensors[l])}n.length>0&&e.apply(kr(n),r)}function i(e){const r=e.name,o=Vo(e,null!=t.customObjects?t.customObjects:{});o.setFastWeightInitDuringBuild(n),a[r]=o;e.inboundNodes.forEach((e=>{if(!(e instanceof Array))throw new fr("Corrupted configuration, expected array for nodeData: ".concat(e));s(o,e)}))}const c=t.name,l=t.layers;for(const f of l)i(f);for(;!Fr(r);)for(const e of l){const t=a[e.name];if(t.name in r){const e=r[t.name];delete r[t.name];for(const n of e)o(t,n)}}const u=[],d=[],h=t.inputLayers;for(const f of h){const e=f[0],t=f[1],n=f[2];xr(e in a);const r=a[e].inboundNodes[t].outputTensors;u.push(r[n])}const p=t.outputLayers;for(const f of p){const e=f[0],t=f[1],n=f[2];xr(e in a);const r=a[e].inboundNodes[t].outputTensors;d.push(r[n])}return new e({inputs:u,outputs:d,name:c})}get stateful(){if(this._stateful)throw new fr("Container instance unexpectedly has _stateful = true. The statefulness of a Container is determined by the Layers it contains. Its _stateful property must remain the default false.");for(const e of this.layers)if(e.stateful)return!0;return!1}resetStates(){(0,S.tidy)((()=>{this.layers.forEach((e=>{e.stateful&&e.resetStates()}))}))}}function ki(e,t,n){const a=t.length;if(null==e||Array.isArray(e)&&0===e.length)return t.map((e=>null));if(1===a)return Array.isArray(e)&&1===e.length?e:"object"===typeof e&&t[0]in e?[e[t[0]]]:[e];if(Array.isArray(e)){if(e.length!==a)throw new Error("Provided ".concat(n," is an array of ").concat(e.length," ")+"element(s), but the model has ".concat(a," outputs. ")+"Make sure a set of weights is provided for each model output.");return e}if("object"===typeof e&&Object.keys(e).length>0&&"object"===typeof e[Object.keys(e)[0]]){const n=[];return t.forEach((t=>{t in e?n.push(e[t]):n.push(null)})),n}throw new Error("The model has multiple (".concat(a,") outputs, ")+"so ".concat(n," must be either an array with ")+"".concat(a," elements or an object with ").concat(t," keys. ")+"Provided ".concat(n," not understood: ").concat(JSON.stringify(e)))}function Si(e,t){return ki(e,t,"classWeight")}async function Ni(e,t,n,a){if(null!=t||null!=a)throw new Error("Support sampleWeight is not implemented yet");if(null!=n){const t=(0,S.tidy)((()=>{if(1===e.shape.length)return(0,S.clone)(e);if(2===e.shape.length){if(e.shape[1]>1){const t=1;return(0,S.argMax)(e,t)}if(1===e.shape[1])return(0,S.reshape)(e,[e.shape[0]]);throw new Error("Encountered unexpected last-dimension size (".concat(e.shape[1],") ")+"during handling of class weights. The size is expected to be >= 1.")}throw new Error("Unexpected rank of target (y) tensor (".concat(e.rank,") during ")+"handling of class weights. The rank is expected to be 1 or 2.")})),a=Array.from(await t.data());(0,S.dispose)(t);const r=[];return a.forEach((e=>{if(null==n[e])throw new Error("classWeight must contain all classes in the training data. "+"The class ".concat(e," exists in the data but not in ")+"classWeight");r.push(n[e])})),(0,S.tensor1d)(r,"float32")}return null}function Ii(e,t){return(0,S.mul)(e,t)}function Ti(e,t){let n,a;const r=t;n=r.xs,a=r.ys,S.util.assert(null!=n&&null!=a,(()=>"A Dataset iterator for fitDataset() is expected to generate objects of the form `{xs: xVal, ys: yVal}`, where the two values may be `tf.Tensor`, an array of Tensors, or a map of string to Tensor.  The provided Dataset instead generates "+"".concat(t)));const s=Ci("input",e.inputNames,n),o=Ci("output",e.outputNames,a),i=s[0].shape[0];S.util.assert(s.length===e.inputs.length,(()=>"LayersModel has ".concat(e.inputs.length," inputs, but the dataset ")+"provides ".concat(s.length," inputs.  (Expected input keys: ")+"".concat(JSON.stringify(e.inputNames),")"))),S.util.assert(o.length===e.outputs.length,(()=>"LayersModel has ".concat(e.outputs.length," outputs, but the dataset ")+"provides ".concat(o.length," outputs.  (Expected output keys: ")+"".concat(JSON.stringify(e.outputNames),")")));for(let c=0;c<s.length;c++)S.util.assert(s[c].shape[0]===i,(()=>"Batch size mismatch: input "+"".concat(e.inputNames[c]," has ").concat(s[c].shape[0],"; ")+"expected  ".concat(i," based on input ").concat(e.inputNames[0],".")));for(let c=0;c<o.length;c++)S.util.assert(o[c].shape[0]===i,(()=>"Batch size mismatch: output "+"".concat(e.outputNames[c]," has ").concat(o[c].shape[0],"; ")+"expected  ".concat(i," based on input ").concat(e.inputNames[0],".")));return{xs:s,ys:o}}function Ci(e,t,n){if(n instanceof S.Tensor)return[n];if(Array.isArray(n))return S.util.assert(n.length===t.length,(()=>"Received an array of ".concat(n.length," Tensors, but expected ").concat(t.length," to match the ").concat(e," keys ").concat(t,"."))),n;{const a=[];for(const r of t){if(null==n[r])throw new fr("The feature data generated by the dataset lacks the required "+"".concat(e," key '").concat(r,"'."));a.push(n[r])}return a}}async function Ei(e,t,n){const a=null!=n.batchesPerEpoch;if(S.util.assert(null!=e.optimizer,(()=>"You must compile a model before training/testing. Use LayersModel.compile(modelCompileConfig).")),S.util.assert(null!=n,(()=>"For fitDataset(), the 2nd argument (config) is required, but it is not provided in this call.")),S.util.assert(null!=n.epochs&&n.epochs>0&&Number.isInteger(n.epochs),(()=>"For fitDataset(), config.epochs is expected to be a positive "+"integer, but got ".concat(n.epochs))),S.util.assert(!a||n.batchesPerEpoch>0&&Number.isInteger(n.batchesPerEpoch),(()=>"For fitDataset(), config.batchesPerEpoch is expected to be a "+"positive integer if specified, but got ".concat(n.batchesPerEpoch))),S.util.assert(null==n.validationSplit,(()=>"`validationSplit` is not supported by `fitDataset()`. Use validationData instead.")),e.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");e.isTraining=!0;try{const r=null!=n.validationData;let s,o;if(r)if(_i(n.validationData))S.util.assert(null==n.validationBatches||n.validationBatches>0&&Number.isInteger(n.validationBatches),(()=>"For fitDataset() with dataset-based validation, config.validationBatches is expected not to be provided, or to be a positive integer, "+"but got ".concat(n.validationBatches)));else{const e=function(e){if(3===e.length)throw new mr("Validation with sample weights is not implemented yet.");return{xs:e[0],ys:e[1]}}(n.validationData);s=e.xs,o=e.ys}const i=e.makeTrainFunction(),c=e.getDedupedMetricsNames();let l;l=r?c.slice().concat(c.map((e=>"val_"+e))):c.slice();const u=Lo(n.callbacks,n.yieldEvery),d=null==n.verbose?1:n.verbose,{callbackList:h,history:p}=Po(u,d,n.epochs,null,null,function(e,t){let n=null;null!=t.batchesPerEpoch?n=t.batchesPerEpoch:Number.isFinite(e.size)&&(n=e.size);return n}(t,n),null,r,l);h.setModel(e),e.history=p,await h.onTrainBegin(),e.stopTraining_=!1;let f=null==n.initialEpoch?0:n.initialEpoch,m=await t.iterator();for(;f<n.epochs;){const l={};await h.onEpochBegin(f);let u=0,d=0;for(a||(m=await t.iterator());!a||u<n.batchesPerEpoch;){const t=await m.next();if(a&&t.done){console.warn("You provided `batchesPerEpoch` as "+"".concat(n.batchesPerEpoch,", ")+"but your dataset iterator ran out of data after "+"".concat(u," batches; ")+"interrupting training. Make sure that your dataset can generate at least `batchesPerEpoch * epochs` batches (in this case, "+"".concat(n.batchesPerEpoch*n.epochs," batches). ")+"You may need to use the repeat() function when building your dataset.");break}if(null!=t.value){const{xs:a,ys:r}=Ti(e,t.value),s={};s.batch=d,s.size=a[0].shape[0],await h.onBatchBegin(d,s);const o=[];if(null!=n.classWeight){const t=Si(n.classWeight,e.outputNames);for(let e=0;e<t.length;++e)o.push(await Ni(r[e],null,t[e]))}const l=a.concat(r).concat(o),p=i(l);S.dispose(l);for(let e=0;e<c.length;++e){const t=c[e],n=p[e];s[t]=n,S.keep(n)}await h.onBatchEnd(d,s),Ao(s),d++,u++}if(a?u>=n.batchesPerEpoch:t.done){if(r){let t;t=_i(n.validationData)?Sr(await e.evaluateDataset(n.validationData,{batches:n.validationBatches})):Sr(e.evaluate(s,o,{batchSize:null==n.validationBatchSize?32:n.validationBatchSize,verbose:0}));for(let n=0;n<e.metricsNames.length;++n)l["val_".concat(e.metricsNames[n])]=t[n]}break}if(e.stopTraining_)break}if(await h.onEpochEnd(f,l),f++,e.stopTraining_)break}return await h.onTrainEnd(),await e.history.syncData(),e.history}finally{e.isTraining=!1}}function _i(e){return"function"===typeof e.iterator}function Ai(e){S.util.assert(e>0&&Number.isInteger(e),(()=>"batchSize is required to be a positive integer, but got ".concat(e)))}function Ri(e,t,n){return null==e?[null]:Array.isArray(e)?e.map((e=>hs(e,t,n-t))):hs(e,t,n-t)}function Fi(e,t){return S.tidy((()=>null==e?null:Array.isArray(e)?e.map((e=>Fi(e,t))):xs(e,"int32"===t.dtype?t:S.cast(t,"int32"))))}function Di(e,t){const n=[];let a=0,r=null;for(;a<e;)r=a+t,r>=e&&(r=e),n.push([a,r]),a=r;return n}function Oi(e){const t=[];e instanceof S.Tensor&&(e=[e]);for(let n=0;n<e.length;++n){const a=e[n];if(1===a.rank)t.push(us(a,1));else{if(0===a.rank)throw new Error("Expected tensor to be at least 1D, but received a 0D tensor (scalar).");t.push(a)}}return t}function Mi(e,t){if(null==e)return;const n=[];if(t instanceof S.Tensor)n.push(t.id);else if(Array.isArray(t))t.forEach((e=>n.push(e.id)));else if(null!=t)for(const r in t){const e=t[r];n.push(e.id)}const a=[];if(e instanceof S.Tensor)-1===n.indexOf(e.id)&&a.push(e);else if(Array.isArray(e))e.forEach((e=>{-1===n.indexOf(e.id)&&a.push(e)}));else if(null!=e)for(const r in e){const t=e[r];-1===n.indexOf(t.id)&&a.push(t)}a.forEach((e=>{e.isDisposed||e.dispose()}))}function zi(e){return Array.isArray(e)}function Li(e){return!function(e){return e instanceof S.Tensor}(e)&&!zi(e)}function Bi(e,t,n){let a,r=!(arguments.length>3&&void 0!==arguments[3])||arguments[3],s=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"";if(null==t||0===t.length){if(null!=e){let t=!1;if(zi(e)&&e.length>0)t=!0;else if(Li(e)){for(const n in e)if(e.hasOwnProperty(n)){t=!0;break}}else t=!0;if(t)throw new fr("Error when checking model ".concat(s," expected no data, ")+"but got ".concat(e))}return[]}if(null==e)return t.map((e=>null));if(Li(e)){a=[];for(const n of t){if(null==e[n])throw new fr('No data provided for "'.concat(n,'". Need data for each key in: ')+"".concat(t));a.push(e[n])}}else if(zi(e)){if(e.length!==t.length)throw new fr("Error when checking model ".concat(s,": the Array of ")+"Tensors that you are passing to your model is not the size the "+"model expected. Expected to see ".concat(t.length," Tensor(s), but ")+"instead got the following list of Tensor(s): ".concat(e));a=e}else{if(t.length>1)throw new fr("The model ".concat(s," expects ").concat(t.length," Tensor(s), ")+"but only received one Tensor. Found: Tensor with shape ".concat(e.shape));a=[e]}if(a=Oi(a),null!=n)for(let o=0;o<t.length;++o){if(null==n[o])continue;const e=a[o];if(e.shape.length!==n[o].length)throw new fr("Error when checking ".concat(s,": expected ").concat(t[o]," ")+"to have ".concat(n[o].length," dimension(s). but got array with ")+"shape ".concat(e.shape));for(let t=0;t<n[o].length;++t){if(0===t&&!r)continue;const a=e.shape[t],i=n[o][t];if(null!=i&&i>=0&&a!==i)throw new fr("".concat(s," expected a batch of elements where each ")+"example has shape [".concat(n[o].slice(1,n[o].length),"] ")+"(i.e.,tensor shape [*,".concat(n[o].slice(1,n[o].length),"])")+" but the ".concat(s," received an input with ").concat(e.shape[0])+" examples, each with shape [".concat(e.shape.slice(1,e.shape.length),"]")+" (tensor shape [".concat(e.shape,"])"))}}return a}function Pi(e,t,n){let a,r=!(arguments.length>3&&void 0!==arguments[3])||arguments[3],s=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"";if(Array.isArray(e)){if(e.length!==t.length)throw new fr("Error when checking model ".concat(s,": the Array of ")+"Tensors that you are passing to your model is not the size the "+"the model expected. Expected to see ".concat(t.length," Tensor(s),")+" but instead got ".concat(e.length," Tensors(s)."));a=e}else{if(t.length>1)throw new fr("The model expects ".concat(t.length," ").concat(s," Tensors, ")+"but only received one Tensor. Found: array with shape "+"".concat(JSON.stringify(e.shape),"."));a=[e]}if(null!=n)for(let o=0;o<t.length;++o){if(null==n[o])continue;const e=a[o];if(e.shape.length!==n[o].length)throw new fr("Error when checking ".concat(s,": expected ").concat(t[o]," ")+"to have ".concat(n[o].length," dimension(s), but got array with ")+"shape ".concat(JSON.stringify(e.shape)));for(let a=0;a<n[o].length;++a){if(0===a&&!r)continue;const i=e.shape[a],c=n[o][a];if(null!=c&&c!==i)throw new fr("Error when checking ".concat(s,": expected ")+"".concat(t[o]," to have shape ").concat(JSON.stringify(n[o])," but ")+"got array with shape ".concat(JSON.stringify(e.shape),"."))}}}class Vi extends wi{constructor(e){super(e),this.isTraining=!1}summary(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:console.log;if(!this.built)throw new fr("This model has never been called, thus its weights have not been created yet. So no summary can be displayed. Build the model first (e.g., by calling it on some test data).");!function(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:console.log;const r=pi(e),s=["Layer (type)","Input Shape","Output shape","Param #"];let o;if(r?(t=t||90,n=n||[.32,.61,.89,1]):(t=t||115,n=n||[.24,.48,.7,.8,1]),n[n.length-1]<=1&&(n=n.map((e=>Math.floor(t*e)))),!r){s.push("Receives inputs"),o=[];for(const t in e.nodesByDepth)o.push(...e.nodesByDepth[t])}a("_".repeat(t)),fi(s,n,a),a("=".repeat(t));const i=e.layers;for(let u=0;u<i.length;++u)r?mi(i[u],n,a):gi(i[u],n,o,a),a((u===i.length-1?"=":"_").repeat(t));e.checkTrainableWeightsConsistency();const c=hi(e),l=Js(e.nonTrainableWeights);a("Total params: ".concat(c+l)),a("Trainable params: ".concat(c)),a("Non-trainable params: ".concat(l)),a("_".repeat(t))}(this,e,t,n)}compile(e){if(null==e.loss&&(e.loss=[]),this.loss=e.loss,"string"===typeof e.optimizer)this.optimizer_=function(e){const t={Adagrad:()=>S.train.adagrad(.01),Adadelta:()=>S.train.adadelta(1,.95,cs()),Adam:()=>S.train.adam(.001,.9,.999,cs()),Adamax:()=>S.train.adamax(.002,.9,.999,cs(),0),RMSProp:()=>S.train.rmsprop(.001,.9,0,cs()),SGD:()=>S.train.sgd(.01)};if(t.adagrad=t.Adagrad,t.adadelta=t.Adadelta,t.adam=t.Adam,t.adamax=t.Adamax,t.rmsprop=t.RMSProp,t.sgd=t.SGD,e in t)return t[e]();throw new fr("Unknown Optimizer ".concat(e))}(e.optimizer),this.isOptimizerOwned=!0;else{if(!(e.optimizer instanceof S.Optimizer))throw new fr("User-defined optimizer must be an instance of tf.Optimizer.");this.optimizer_=e.optimizer,this.isOptimizerOwned=!1}let t=[];if(Array.isArray(e.loss)||"string"===typeof e.loss||"function"===typeof e.loss)if(Array.isArray(e.loss)){if(e.loss.length!==this.outputs.length)throw new fr("When passing an Array as loss, it should have one entry per "+"model output. The model has ".concat(this.outputs.length," output(s), ")+"but you passed loss=".concat(e.loss,"."));const n=e.loss;t=n.map((e=>Jo(e)))}else{const n=Jo(e.loss);this.outputs.forEach((e=>{t.push(n)}))}else{e.loss=e.loss;for(const t in e.loss)if(-1===this.outputNames.indexOf(t))throw new fr('Unknown entry in loss dictionary: "'.concat(t,'". ')+"Only expected the following keys: ".concat(this.outputNames));for(const n of this.outputNames)null==e.loss[n]&&console.warn('Output "'.concat(n,'" is missing from loss dictionary. We assume ')+"this was done on purpose, and we will not be expecting data "+"to be passed to ".concat(n," during training")),t.push(Jo(e.loss[n]))}this.lossFunctions=t,this.feedOutputNames=[],this.feedOutputShapes=[],this.feedLossFns=[];for(let s=0;s<this.outputs.length;++s){const e=this.internalOutputShapes[s],t=this.outputNames[s];this.feedOutputNames.push(t),this.feedOutputShapes.push(e),this.feedLossFns.push(this.lossFunctions[s])}const n=[];this.metrics=e.metrics,this.metricsNames=["loss"],this.metricsTensors=[],Jr("loss",(()=>{for(let e=0;e<this.outputs.length;++e){if(-1!==n.indexOf(e))continue;const t=this.lossFunctions[e];this.outputs.length>1&&(this.metricsTensors.push([t,e]),this.metricsNames.push(this.outputNames[e]+"_loss"))}}));const a=function(e,t){if(null==e||Array.isArray(e)&&0===e.length)return t.map((e=>[]));let n;if("string"===typeof e||"function"===typeof e)n=[e];else{if(!Array.isArray(e)&&"object"!==typeof e)throw new TypeError("Type of metrics argument not understood. Expected an string,"+"function, Array, or Object, found: ".concat(e));n=e}if(Array.isArray(n))return t.map((e=>n));{const e=[];for(const a of t){let t=n.hasOwnProperty(a)?n[a]:[];Array.isArray(t)||(t=[t]),e.push(t)}return e}}(e.metrics,this.outputNames),r=(e,t,n)=>{this.outputNames.length>1&&(t=this.outputNames[e]+"_"+t),this.metricsNames.push(t),this.metricsTensors.push([n,e])};Jr("metric",(()=>{for(let e=0;e<this.outputs.length;++e){if(-1!==n.indexOf(e))continue;(t=>{let n,a,s;for(const o of t){if("string"===typeof o&&-1!==["accuracy","acc","crossentropy","ce"].indexOf(o)){const t=this.internalOutputShapes[e];let r;1===t[t.length-1]||this.lossFunctions[e]===Ko?-1!==["accuracy","acc"].indexOf(o)?a=$o:-1!==["crossentropy","ce"].indexOf(o)&&(a=ni):this.lossFunctions[e]===Xo?-1!==["accuracy","acc"].indexOf(o)?a=ai:-1!==["crossentropy","ce"].indexOf(o)&&(a=si):-1!==["accuracy","acc"].indexOf(o)?a=ei:-1!==["crossentropy","ce"].indexOf(o)&&(a=ri),-1!==["accuracy","acc"].indexOf(o)?r="acc":-1!==["crossentropy","ce"].indexOf(o)&&(r="ce"),s=a,n=""+r}else{const e=ii(o);s=e,n=""+ci(o)}let t;Jr(n,(()=>{t=s})),r(e,n,t)}})(a[e])}})),this.collectedTrainableWeights=this.trainableWeights}checkTrainableWeightsConsistency(){null!=this.collectedTrainableWeights&&this.trainableWeights.length!==this.collectedTrainableWeights.length&&console.warn("Discrepancy between trainableweights and collected trainable weights. Did you set `model.trainable` without calling `model.compile()` afterwards?")}evaluate(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};const a=null==n.batchSize?32:n.batchSize;Ai(a);const r=this.standardizeUserDataXY(e,t,!0,a);try{const s=r[0].concat(r[1]);this.makeTestFunction();const o=this.testFunction;return kr(this.testLoop(o,s,a,n.verbose,n.steps))}finally{Mi(r[0],e),Mi(r[1],t)}}async evaluateDataset(e,t){return this.makeTestFunction(),async function(e,t,n){const a=null!=(n=n||{}).batches,r=e.testFunction;let s=[];if(n.verbose>0)throw new mr("Verbose mode is not implemented yet.");S.util.assert(!a||n.batches>0&&Number.isInteger(n.batches),(()=>"Test loop expects `batches` to be a positive integer, but "+"received ".concat(JSON.stringify(n.batches))));const o="function"===typeof t.next?t:await t.iterator();let i=0,c=0;for(;!a||c<n.batches;){const t=await o.next();if(s=S.tidy((()=>{if(t.value){const{xs:n,ys:a}=Ti(e,t.value),o=n.concat(a),l=S.tidy((()=>r(o)));if(S.dispose(o),0===c)for(let e=0;e<l.length;++e)s.push((0,S.scalar)(0));const u=o[0].shape[0];for(let e=0;e<l.length;++e){const t=l[e],n=s[e];s[e]=S.tidy((()=>S.add(s[e],S.mul(u,t)))),c>0&&S.dispose(n)}S.dispose(l),i+=u,++c}return s})),t.done){a&&console.warn("Your dataset iterator ran out of data during evaluateDataset(). Interrupting evalution. Make sure that your dataset can generate at least `batches` "+"batches (in this case, ".concat(n.batches," batches). ")+"You may need to use the repeat() function when building your dataset.");break}}for(let l=0;l<s.length;++l){const e=s[l];s[l]=S.div(s[l],i),S.dispose(e)}return kr(s)}(this,e,t)}checkNumSamples(e,t,n){let a,r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"steps";if(null!=n){if(a=null,null!=t)throw new fr("If ".concat(r," is set, batchSize must be null or undefined.")+"Got batchSize = ".concat(t))}else{if(null==e)throw new fr("Either the input data should have a defined shape, or "+"".concat(r," shoud be specified."));a=Array.isArray(e)?e[0].shape[0]:e.shape[0]}return a}execute(e,t){if(Array.isArray(t)&&0===t.length)throw new fr("`outputs` is an empty Array, which is not allowed.");const n=Array.isArray(t),a=n?t:[t],r=this.retrieveSymbolicTensors(a),s=new ho;if(e instanceof S.Tensor&&(e=[e]),Array.isArray(e)){if(e.length!==this.inputs.length)throw new fr("The number of inputs provided (".concat(e.length,") ")+"does not match the number of inputs of this model "+"(".concat(this.inputs.length,")."));for(let t=0;t<this.inputs.length;++t)s.add(this.inputs[t],e[t])}else for(const i of this.inputs){const t=e[i.name];if(null==t)throw new fr("No value is provided for the model's input ".concat(i.name));s.add(i,t)}const o=mo(r,s);return n?o:o[0]}retrieveSymbolicTensors(e){const t=vr(null,e.length);let n=e.length;for(const a of this.layers){const r=Array.isArray(a.output)?a.output:[a.output],s=r.map((e=>e.name));for(let a=0;a<e.length;++a){const o=s.indexOf(e[a]);if(-1!==o&&(t[a]=r[o],n--),0===n)break}if(0===n)break}if(n>0){const n=[];throw t.forEach(((t,a)=>{null==t&&n.push(e[a])})),new fr("Cannot find SymbolicTensors for output name(s): "+"".concat(JSON.stringify(n)))}return t}predictLoop(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:32,n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];return S.tidy((()=>{const a=this.checkNumSamples(e);if(n)throw new mr("Verbose predictLoop() is not implemented yet.");const r=Di(a,t),s=this.outputs.map((e=>[]));for(let t=0;t<r.length;++t){S.tidy((()=>{const n=r[t][0],a=r[t][1],s=Ri(e,n,a),o=[];if(Array.isArray(s))for(let e=0;e<s.length;++e)o.push({key:this.inputs[e],value:s[e]});else o.push({key:this.inputs[0],value:s});const i=new ho(o);return mo(this.outputs,i)})).forEach(((e,t)=>s[t].push(e)))}return kr(s.map((e=>S.concat(e,0))))}))}predict(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};const n=Oi(e);Pi(n,this.inputNames,this.feedInputShapes,!1);try{const a=null==t.batchSize?32:t.batchSize;return Ai(a),this.predictLoop(n,a)}finally{Mi(n,e)}}predictOnBatch(e){Pi(e,this.inputNames,this.feedInputShapes,!0);const t=(Array.isArray(e)?e[0]:e).shape[0];return this.predictLoop(e,t)}standardizeUserDataXY(e,t){let n=arguments.length>3?arguments[3]:void 0;if(null==this.optimizer_)throw new pr("You must compile a model before training/testing. Use LayersModel.compile(modelCompileArgs).");const a=[];for(let r=0;r<this.feedOutputShapes.length;++r){const e=this.feedOutputShapes[r];this.feedLossFns[r]===Xo?a.push(e.slice(0,e.length-1).concat([1])):a.push(e)}if(function(e,t,n){const a=Rr(e.map((e=>e.shape[0])));a.sort();const r=Rr(t.map((e=>e.shape[0])));if(r.sort(),a.length>1)throw new fr("All input Tensors (x) should have the same number of samples. Got array shapes: "+"".concat(JSON.stringify(e.map((e=>e.shape)))));if(r.length>1)throw new fr("All target Tensors (y) should have the same number of samples. Got array shapes: "+"".concat(JSON.stringify(t.map((e=>e.shape)))));if(a.length>0&&r.length>0&&!S.util.arraysEqual(a,r))throw new fr("Input Tensors should have the same number of samples as target "+"Tensors. Found ".concat(a[0]," input sample(s) and ").concat(r[0]," target ")+"sample(s).")}(e=Bi(e,this.feedInputNames,this.feedInputShapes,!1,"input"),t=Bi(t,this.feedOutputNames,a,!1,"target")),function(e,t,n){const a=[Uo,Ko,qo];for(let r=0;r<e.length;++r){const s=e[r],o=t[r],i=n[r];if(null!=o){if(o===qo&&1===s.shape[s.shape.length-1])throw new fr("You are passing a target array of shape ".concat(s.shape," while using ")+"a loss 'categorical_crossentropy'. 'categorical_crossentropy'expects targets to be binary matrices (1s and 0s) of shape [samples, classes].");if(-1!==a.indexOf(o)){const e=s.shape.slice(1),t=i.slice(1);for(let n=0;n<e.length;++n){const a=e[n],r=t[n];if(null!=r&&a!==r)throw new fr("A target Tensor with shape ".concat(s.shape," was passed for an ")+"output of shape ".concat(i,", while using a loss function that ")+"expects targets to have the same shape as the output.")}}}}}(t,this.feedLossFns,this.feedOutputShapes),this.stateful&&null!=n&&n>0&&e[0].shape[0]%n!==0)throw new fr("In a stateful network, you should only pass inputs with a number of samples that is divisible by the batch size "+"".concat(n,". Found: ").concat(e[0].shape[0]," sample(s)."));return[e,t]}async standardizeUserData(e,t,n,a){let r=!(arguments.length>4&&void 0!==arguments[4])||arguments[4],s=arguments.length>5?arguments[5]:void 0;const[o,i]=this.standardizeUserDataXY(e,t,r,s);if(null!=n)throw new Error("sample weight is not supported yet.");let c=null;if(null!=a){const e=Si(a,this.outputNames);c=[];for(let t=0;t<e.length;++t)c.push(await Ni(i[t],null,e[t]))}return[o,i,c]}testLoop(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0,r=arguments.length>4?arguments[4]:void 0;return S.tidy((()=>{const s=this.checkNumSamples(t,n,r,"steps"),o=[];if(a>0)throw new mr("Verbose mode is not implemented yet.");if(null!=r)throw new mr("steps mode in testLoop() is not implemented yet");{const a=Di(s,n),r=(0,S.tensor1d)(os(0,s));for(let n=0;n<a.length;++n){const s=a[n][0],i=a[n][1],c=hs(r,s,i-s),l=Fi(t,c),u=e(l);if(0===n)for(let e=0;e<u.length;++e)o.push((0,S.scalar)(0));for(let e=0;e<u.length;++e){const t=u[e];o[e]=S.add(o[e],S.mul(i-s,t))}}for(let e=0;e<o.length;++e)o[e]=S.div(o[e],s)}return o}))}getDedupedMetricsNames(){const e=this.metricsNames,t=[];for(let n=0;n<e.length;++n){const a=e[n];let r=a;if(wr(e,a)>1){const t=wr(e.slice(0,n),a);r+="_".concat(t)}t.push(r)}return t}makeTrainFunction(){return e=>{const t=[],n=e.slice(0,this.inputs.length),a=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),r=e.slice(this.inputs.length+this.outputs.length,this.inputs.length+2*this.outputs.length),s=[],o=this.collectedTrainableWeights.map((e=>e.read()));return[this.optimizer_.minimize((()=>{const e=[];for(let t=0;t<this.inputs.length;++t)e.push({key:this.inputs[t],value:n[t]});const o=new ho(e),i=mo(this.outputs,o,{training:!0});let c;for(let n=0;n<this.lossFunctions.length;++n){let e=(0,this.lossFunctions[n])(a[n],i[n]);null!=r[n]&&(e=Ii(e,r[n]));const s=S.mean(e);t.push(s),c=0===n?e:S.add(c,e)}for(let n=0;n<this.metricsTensors.length;++n){let e;if(this.outputs.length>1&&n<this.outputs.length)e=t[n];else{const t=this.metricsTensors[n][0],r=this.metricsTensors[n][1];e=S.mean(t(a[r],i[r]))}S.keep(e),s.push(e)}return c=S.mean(c),this.calculateLosses().forEach((e=>{c=S.add(c,e)})),c}),!0,o)].concat(s)}}makeTestFunction(){this.testFunction=e=>S.tidy((()=>{const t=[];let n;const a=e.slice(0,this.inputs.length),r=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),s=[];for(let e=0;e<this.inputs.length;++e)s.push({key:this.inputs[e],value:a[e]});const o=new ho(s),i=mo(this.outputs,o);for(let e=0;e<this.lossFunctions.length;++e){const a=this.lossFunctions[e],s=S.mean(a(r[e],i[e]));n=0===e?s:S.add(n,s),t.push(n)}for(let e=0;e<this.metricsTensors.length;++e){const n=this.metricsTensors[e][0],a=this.metricsTensors[e][1],s=S.mean(n(r[a],i[a]));t.push(s)}return t}))}async fit(e,t){let n,a,r,s,o,i,c,l,u,d=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};if(this.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");this.isTraining=!0;try{const h=null==d.batchSize?32:d.batchSize;Ai(h);const p=!1,f=await this.standardizeUserData(e,t,d.sampleWeight,d.classWeight,p,h);n=f[0],a=f[1],u=f[2];let m,g=!1;if(null!=d.validationData&&d.validationData.length>0){if(g=!0,2!==d.validationData.length)throw 3===d.validationData.length?new mr("validationData including sample weights is not supported yet."):new fr("When passing validation data, it must contain 2 (valX, valY) or 3 (valX, valY, valSampleWeight) items; "+"".concat(d.validationData," is invalid."));o=d.validationData[0],i=d.validationData[1];const e=!0,t=await this.standardizeUserData(o,i,null,null,e,h);c=t[0],l=t[1],m=c.concat(l)}else if(null!=d.validationSplit&&d.validationSplit>0&&d.validationSplit<1){g=!0;const e=Math.floor(n[0].shape[0]*(1-d.validationSplit)),t=n[0].shape[0];c=Ri(n,e,t),r=n,n=Ri(n,0,e),l=Ri(a,e,t),s=a,a=Ri(a,0,e),m=c.concat(l)}else null!=d.validationSteps&&(g=!0);const y=n.concat(a).concat(u);this.checkTrainableWeightsConsistency();const b=this.makeTrainFunction(),v=this.getDedupedMetricsNames();let x,w;g?(this.makeTestFunction(),x=this.testFunction,w=v.slice().concat(v.map((e=>"val_"+e)))):(x=null,m=[],w=v.slice());const k=Lo(d.callbacks,d.yieldEvery);return await this.fitLoop(b,y,v,h,d.epochs,d.verbose,k,x,m,d.shuffle,w,d.initialEpoch,null,null)}finally{this.isTraining=!1,Mi(n,e),Mi(a,t),Mi(r,e),Mi(s,t),Mi(c,o),Mi(l,i),null!=u&&S.dispose(u)}}async fitLoop(e,t,n,a,r,s,o,i,c,l,u,d,h,p){null==a&&(a=32),null==r&&(r=1),null==l&&(l=!0),null==d&&(d=0);let f=!1;if(null!=i&&null!=c&&(f=!0),null!=p&&(f=!0,null==h))throw new fr("Can only use `validationSteps` when doing step-wise training, i.e., `stepsPerEpoch` must be set.");const m=this.checkNumSamples(t,a,h,"steps_per_epoch");let g;null!=m&&(g=os(0,m)),null==s&&(s=1);const{callbackList:y,history:b}=Po(o,s,r,d,m,h,a,f,u);y.setModel(this),this.history=b,await y.onTrainBegin(),this.stopTraining_=!1;for(let v=d;v<r;++v){await y.onEpochBegin(v);const r={};if(null!=h)throw new mr("stepsPerEpoch mode is not implemented yet.");{if("batch"===l)throw new mr("batch shuffling is not implemneted yet");l&&S.util.shuffle(g);const s=(0,S.tensor1d)(g),o=Di(m,a);for(let l=0;l<o.length;++l){const u={};if(await y.onBatchBegin(l,u),S.tidy((()=>{const d=o[l][0],h=o[l][1],p=hs(s,d,h-d);u.batch=l,u.size=h-d;const m=Fi(t,p),g=e(m);for(let e=0;e<n.length;++e){const t=n[e],a=g[e];u[t]=a,S.keep(a)}if(l===o.length-1&&f){const e=this.testLoop(i,c,a);for(let t=0;t<n.length;++t){const a=n[t],s=e[t];S.keep(s),r["val_"+a]=s}}})),await y.onBatchEnd(l,u),Ao(u),this.stopTraining_)break}s.dispose()}if(await y.onEpochEnd(v,r),this.stopTraining_)break}return await y.onTrainEnd(),await this.history.syncData(),this.history}async fitDataset(e,t){return Ei(this,e,t)}async trainOnBatch(e,t){const n=await this.standardizeUserData(e,t),a=n[0],r=n[1],s=this.makeTrainFunction()(a.concat(r)),o=[];for(const i of s){const e=await i.data();o.push(e[0])}return S.dispose(s),Mi(n[0],e),Mi(n[1],t),kr(o)}getNamedWeights(e){const t=[],n=null!=e&&e.trainableOnly,a=n?this.trainableWeights:this.weights,r=this.getWeights(n);for(let s=0;s<a.length;++s)n&&!a[s].trainable||t.push({name:a[s].originalName,tensor:r[s]});return t}set stopTraining(e){this.stopTraining_=e}get stopTraining(){return this.stopTraining_}get optimizer(){return this.optimizer_}set optimizer(e){this.optimizer_!==e&&(this.optimizer_=e,this.isOptimizerOwned=!1)}dispose(){const e=super.dispose();if(0===e.refCountAfterDispose&&null!=this.optimizer&&this.isOptimizerOwned){const t=S.memory().numTensors;this.optimizer_.dispose(),e.numDisposedVariables+=t-S.memory().numTensors}return e}getLossIdentifiers(){let e;if("string"===typeof this.loss)e=Nr(this.loss);else if(Array.isArray(this.loss)){for(const e of this.loss)if("string"!==typeof e)throw new Error("Serialization of non-string loss is not supported.");e=this.loss.map((e=>Nr(e)))}else{const t=Object.keys(this.loss);e={};const n=this.loss;for(const a of t){if("string"!==typeof n[a])throw new Error("Serialization of non-string loss is not supported.");e[a]=Nr(n[a])}}return e}getMetricIdentifiers(){if("string"===typeof this.metrics||"function"===typeof this.metrics)return[Nr(ci(this.metrics))];if(Array.isArray(this.metrics))return this.metrics.map((e=>Nr(ci(e))));{const e={};for(const t in this.metrics)e[t]=Nr(ci(this.metrics[t]));return e}}getTrainingConfig(){return{loss:this.getLossIdentifiers(),metrics:this.getMetricIdentifiers(),optimizer_config:{class_name:this.optimizer.getClassName(),config:this.optimizer.getConfig()}}}loadTrainingConfig(e){if(null!=e.weighted_metrics)throw new Error("Loading weight_metrics is not supported yet.");if(null!=e.loss_weights)throw new Error("Loading loss_weights is not supported yet.");if(null!=e.sample_weight_mode)throw new Error("Loading sample_weight_mode is not supported yet.");const t=Vo(bi(e.optimizer_config));let n,a;if("string"===typeof e.loss)n=Ir(e.loss);else if(Array.isArray(e.loss))n=e.loss.map((e=>Ir(e)));else if(null!=e.loss){n={};for(const t in e.loss)n[t]=Ir(e.loss[t])}if(Array.isArray(e.metrics))a=e.metrics.map((e=>Ir(e)));else if(null!=e.metrics){a={};for(const t in e.metrics)a[t]=Ir(e.metrics[t])}this.compile({loss:n,metrics:a,optimizer:t})}async save(e,t){if("string"===typeof e){const t=S.io.getSaveHandlers(e);if(0===t.length)throw new fr("Cannot find any save handlers for URL '".concat(e,"'"));if(t.length>1)throw new fr("Found more than one (".concat(t.length,") save handlers for ")+"URL '".concat(e,"'"));e=t[0]}if(null==e.save)throw new fr("LayersModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");const n=await S.io.encodeWeights(this.getNamedWeights(t)),a={modelTopology:this.toJSON(null,!1),format:"layers-model",generatedBy:"TensorFlow.js tfjs-layers v".concat(xi),convertedBy:null};if(null!=t&&t.includeOptimizer&&null!=this.optimizer){a.trainingConfig=this.getTrainingConfig();const e="optimizer",{data:t,specs:r}=await S.io.encodeWeights(await this.optimizer.getWeights(),e);n.specs.push(...r),n.data=S.io.concatenateArrayBuffers([n.data,t])}if(null!=this.userDefinedMetadata){const e=!0;ui(this.userDefinedMetadata,this.name,e),a.userDefinedMetadata=this.userDefinedMetadata}return a.weightData=n.data,a.weightSpecs=n.specs,e.save(a)}setUserDefinedMetadata(e){ui(e,this.name),this.userDefinedMetadata=e}getUserDefinedMetadata(){return this.userDefinedMetadata}}Vi.className="Model",S.serialization.registerClass(Vi);class Wi extends Vi{}Wi.className="Functional",S.serialization.registerClass(Wi);class Ui extends Vi{constructor(e){if(super({inputs:[],outputs:[]}),e=e||{},this.trainable=!0,this.built=!1,this.name=null!=e.name?e.name:Wr("sequential_"),null!=e.layers)for(const t of e.layers)this.add(t)}checkShape(e){if(e.inboundNodes[0].outputTensors[0].shape.some((e=>e<0)))throw new fr("Negative dimension size caused by adding layer "+"".concat(e.name," with input shape [")+"".concat(e.inboundNodes[0].inputTensors[0].shape,"]"))}add(e){const t=e instanceof Ui||e instanceof Vi;let n;if(t){if(n=e,1!==n.outputs.length)throw new fr("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");if(1!==n.inputs.length)throw new fr("All layers in a Sequential model should have a single input tensor. For multi-input layers, use the functional API.")}if(0===this.outputs.length){if(0===e.inboundNodes.length){if(null==e.batchInputShape)throw new fr("The first layer in a Sequential model must get an `inputShape` or `batchInputShape` argument.");const t=function(e){if(null==e.batchShape&&null==e.shape)throw new Error("Please provide to Input either a `shape` or a `batchShape` argument. Note that `shape` does not include the batch dimension.");if(null!=e.batchShape&&null!=e.shape)throw new fr("Please provide either a `shape` or `batchShape` argument to Input, but not both.");let t=e.batchShape;null!=e.shape&&null==t&&(t=[null].concat(e.shape));let n=e.dtype;return null==n&&(n="float32"),new uo({batchInputShape:t,name:e.name,dtype:n,sparse:e.sparse}).inboundNodes[0].outputTensors[0]}({batchShape:e.batchInputShape,dtype:e.dtype,name:e.name+"_input"});e.apply(t)}if(t)this.outputs=n.outputs,this.inputs=n.inputs;else{if(1!==e.inboundNodes.length)throw new fr("A layer added to a Sequential model must not already be "+"connected somewhere else. LayersModel received layer ".concat(e.name," ")+"which has ".concat(e.inboundNodes.length," pre-existing inbound ")+"connections.");if(1!==e.inboundNodes[0].outputTensors.length)throw new fr("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[e.inboundNodes[0].outputTensors[0]],this.inputs=lo(this.outputs[0])}this.inboundNodes=[],new oo({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:vr(null,this.inputs.length),outputMasks:[null],inputShapes:this.inputs.map((e=>e.shape)),outputShapes:this.outputs[0].shape})}else{const t=e.apply(this.outputs[0]);if(Array.isArray(t))throw new TypeError("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[t],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}this.layers.push(e),this.built=!1}pop(){if(0===this.layers.length)throw new TypeError("There are no layers in the model.");if(this.layers.pop(),0===this.layers.length)this.outputs=[],this.inboundNodes=[],this.outboundNodes=[];else{const e=this.layers.length-1;this.layers[e].outboundNodes=[],this.outputs=[this.layers[e].output],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}}call(e,t){return null==this.model&&this.build(),this.model.call(e,t)}build(e){if(Zs(e),0===this.inputs.length||0===this.outputs.length)throw new TypeError("Sequential model cannot be built: model is empty. Add some layers first.");this.model=new Vi({inputs:this.inputs,outputs:this.outputs[0],name:this.name+"_model"}),this.model.trainable=this.trainable,this.supportsMasking=this.model.supportsMasking,this.inputLayers=this.model.inputLayers,this.inputLayersNodeIndices=this.model.inputLayersNodeIndices,this.inputLayersTensorIndices=this.model.inputLayersTensorIndices,this.outputLayers=this.model.outputLayers,this.outputLayersNodeIndices=this.model.outputLayersNodeIndices,this.outputLayersTensorIndices=this.model.outputLayersTensorIndices,this.nodesByDepth=this.model.nodesByDepth,this.containerNodes=this.model.containerNodes,this.outputNames=this.model.outputNames,this.inputNames=this.model.inputNames,this.built=!0}countParams(){return this.built||this.build(),super.countParams()}summary(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:console.log;this.built||this.build(),super.summary(e,t,n)}setWeights(e){null==this.model&&this.build(),this.model.setWeights(e)}evaluate(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};if(!this.built)throw new pr("The model needs to be compiled before being used.");return this.model.evaluate(e,t,n)}async evaluateDataset(e,t){if(!this.built)throw new pr("The model needs to be compiled before being used.");return this.model.evaluateDataset(e,t)}predict(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return null==this.model&&this.build(),this.model.predict(e,t)}predictOnBatch(e){return null==this.model&&this.build(),this.model.predictOnBatch(e)}compile(e){this.build(),this.model.compile(e),this.optimizer_=this.model.optimizer,this.isOptimizerOwned=this.model.isOptimizerOwned,this.loss=this.model.loss,this.metrics=this.model.metrics,this.metricsTensors=this.model.metricsTensors,this.metricsNames=this.model.metricsNames}get optimizer(){return null==this.model?void 0:this.model.optimizer}set optimizer(e){this.model.optimizer=e}async fit(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};if(!this.built)throw new pr("The model needs to be compiled before being used.");return this.model.fit(e,t,n)}async fitDataset(e,t){if(!this.built)throw new pr("The model needs to be compiled before being used.");return this.model.fitDataset(e,t)}async trainOnBatch(e,t){return this.model.trainOnBatch(e,t)}static fromConfig(e,t){let n,a=arguments.length>3&&void 0!==arguments[3]&&arguments[3],r={};if(t instanceof Array){if(null==t[0].className||"Merge"===t[0].className)throw new fr("Legacy serialization format not supported yet.");n=t}else S.util.assert(null!=t.layers,(()=>"When the config data for a Sequential model is not an Array, it must be an Object that contains the 'layers' field.")),n=t.layers,delete t.layers,r=t;const s=new e(r);if(!(s instanceof Ui))throw new mr("Sequential.fromConfig called on non-Sequential input: ".concat(s));for(const o of n){const e=Vo(o,void 0,a);a&&e.setFastWeightInitDuringBuild(!0),s.add(e)}return s}set stopTraining(e){if(null==this.model)throw new fr("Cannot set the stopTraining property of a sequential model before it is compiled.");this.model.stopTraining=e}get stopTraining(){if(null==this.model)throw new fr("Cannot get the stopTraining property of a sequential model before it is compiled.");return this.model.stopTraining}getConfig(){const e=[];for(const t of this.layers){const n={};n.className=t.getClassName(),n.config=t.getConfig(),e.push(n)}return{name:this.name,layers:e}}}Ui.className="Sequential",S.serialization.registerClass(Ui);class Gi extends S.serialization.Serializable{getConfig(){return{}}}class Hi extends Gi{apply(e){return function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1;if(1!==t)throw new mr("Support for alpha values other than 1 (".concat(t,") is not implemented ")+"yet.");return S.elu(e)}(e,arguments.length>1&&void 0!==arguments[1]?arguments[1]:1)}}Hi.className="elu",S.serialization.registerClass(Hi);class ji extends Gi{apply(e){return S.selu(e)}}ji.className="selu",S.serialization.registerClass(ji);class qi extends Gi{apply(e){return S.relu(e)}}qi.className="relu",S.serialization.registerClass(qi);class Xi extends Gi{apply(e){return(0,S.tidy)((()=>S.minimum(6,S.relu(e))))}}Xi.className="relu6",S.serialization.registerClass(Xi);class Ki extends Gi{apply(e){return e}}Ki.className="linear",S.serialization.registerClass(Ki);class Qi extends Gi{apply(e){return S.sigmoid(e)}}Qi.className="sigmoid",S.serialization.registerClass(Qi);class Yi extends Gi{apply(e){return function(e){return(0,S.tidy)((()=>{const t=S.add(.5,S.mul(.2,e));return S.clipByValue(t,0,1)}))}(e)}}Yi.className="hardSigmoid",S.serialization.registerClass(Yi);class Zi extends Gi{apply(e){return S.softplus(e)}}Zi.className="softplus",S.serialization.registerClass(Zi);class Ji extends Gi{apply(e){return function(e){return(0,S.tidy)((()=>S.div(e,S.add(S.abs(e),1))))}(e)}}Ji.className="softsign",S.serialization.registerClass(Ji);class $i extends Gi{apply(e){return S.tanh(e)}}$i.className="tanh",S.serialization.registerClass($i);class ec extends Gi{apply(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:-1;return S.softmax(e,t)}}ec.className="softmax",S.serialization.registerClass(ec);class tc extends Gi{apply(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:-1;return S.logSoftmax(e,t)}}tc.className="logSoftmax",S.serialization.registerClass(tc);class nc extends Gi{apply(e){return(0,S.tidy)((()=>S.tidy((()=>{const t=Math.sqrt(2),n=S.mul(.5,S.add(1,S.erf(S.div(e,t))));return S.mul(e,n)}))))}}nc.className="gelu",S.serialization.registerClass(nc);class ac extends Gi{apply(e){return(0,S.tidy)((()=>S.mul(.5,S.mul(e,S.add(1,S.tanh(S.mul(S.sqrt(S.div(2,Math.PI)),S.add(e,S.mul(.044715,S.pow(e,3))))))))))}}ac.className="gelu_new",S.serialization.registerClass(ac);class rc extends Gi{apply(e){return(0,S.tidy)((()=>S.mul(e,S.tanh(S.softplus(e)))))}}rc.className="mish",S.serialization.registerClass(rc);class sc extends Gi{apply(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1;return(0,S.tidy)((()=>S.mul(S.sigmoid(S.mul(e,t)),e)))}}function oc(e){return e.getClassName()}function ic(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return _r(e,S.serialization.SerializationMap.getMap().classNameMap,t,"activation")}function cc(e){if(null==e){const e={className:"linear",config:{}};return ic(e)}if("string"===typeof e){const t={};return t.className=e,t.config={},ic(t)}return e instanceof Gi?e:ic(e)}function lc(e){if(null!=e&&"object"!==typeof e)throw new Error("Argument to L1L2 regularizer's constructor is expected to be an "+"object, but received: ".concat(e))}sc.className="swish",S.serialization.registerClass(sc);class uc extends S.serialization.Serializable{}class dc extends uc{constructor(e){super(),lc(e),this.l1=null==e||null==e.l1?.01:e.l1,this.l2=null==e||null==e.l2?.01:e.l2,this.hasL1=0!==this.l1,this.hasL2=0!==this.l2}apply(e){return(0,S.tidy)((()=>{let t=(0,S.zeros)([1]);return this.hasL1&&(t=(0,S.add)(t,(0,S.sum)(S.mul(this.l1,(0,S.abs)(e))))),this.hasL2&&(t=(0,S.add)(t,(0,S.sum)(S.mul(this.l2,ws(e))))),S.reshape(t,[])}))}getConfig(){return{l1:this.l1,l2:this.l2}}static fromConfig(e,t){return new e({l1:t.l1,l2:t.l2})}}dc.className="L1L2",S.serialization.registerClass(dc);const hc={l1l2:"L1L2"};function pc(e){return Cr(e)}function fc(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return _r(e,S.serialization.SerializationMap.getMap().classNameMap,t,"regularizer")}function mc(e){if(null==e)return null;if("string"===typeof e){return fc({className:e in hc?hc[e]:e,config:{}})}return e instanceof uc?e:fc(e)}class gc extends co{constructor(e){super(null==e?{}:e),this.supportsMasking=!0,null!=e&&(this.maxValue=e.maxValue)}call(e,t){e=Ys(e);let n=(0,S.relu)(e);return null!=this.maxValue&&(n=(0,S.clipByValue)(n,0,this.maxValue)),n}computeOutputShape(e){return e}getConfig(){const e={maxValue:this.maxValue},t=super.getConfig();return Object.assign(e,t),e}}gc.className="ReLU",S.serialization.registerClass(gc);class yc extends co{constructor(e){super(null==e?{}:e),this.DEFAULT_ALPHA=.3,null==e&&(e={}),this.alpha=null==e.alpha?this.DEFAULT_ALPHA:e.alpha}call(e,t){const n=Ys(e);return(0,S.leakyRelu)(n,this.alpha)}computeOutputShape(e){return e}getConfig(){const e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}}yc.className="LeakyReLU",S.serialization.registerClass(yc);class bc extends co{constructor(e){if(super(null==e?{}:e),this.DEFAULT_ALPHA_INITIALIZER="zeros",null==e&&(e={}),this.supportsMasking=!0,this.alphaInitializer=Xs(e.alphaInitializer||this.DEFAULT_ALPHA_INITIALIZER),this.alphaRegularizer=mc(e.alphaRegularizer),this.alphaConstraint=Eo(e.alphaConstraint),null==e.sharedAxes)this.sharedAxes=null;else if(Array.isArray(e.sharedAxes))this.sharedAxes=e.sharedAxes;else{if("number"!==typeof e.sharedAxes)throw new fr("Expected sharedAxes to be a number or an array of numbers, "+"but got ".concat(e.sharedAxes));this.sharedAxes=[e.sharedAxes]}}build(e){const t=(e=Zs(e)).slice(1);if(null!=this.sharedAxes)for(const a of this.sharedAxes)t[a-1]=1;this.alpha=this.addWeight("alpha",t,"float32",this.alphaInitializer,this.alphaRegularizer,!0,this.alphaConstraint);const n={};if(null!=this.sharedAxes)for(let a=1;a<e.length;++a)n[a]=e[a];this.inputSpec=[new ao({ndim:e.length,axes:n})],this.built=!0}call(e,t){return e=Ys(e),(0,S.prelu)(e,this.alpha.read())}getConfig(){const e={alphaInitializer:qs(this.alphaInitializer),alphaRegularizer:pc(this.alphaRegularizer),alphaConstraint:To(this.alphaConstraint),sharedAxes:this.sharedAxes},t=super.getConfig();return Object.assign(e,t),e}}bc.className="PReLU",S.serialization.registerClass(bc);class vc extends co{constructor(e){if(super(null==e?{}:e),this.DEFAULT_ALPHA=1,null==e&&(e={}),null!=e.alpha&&e.alpha!==this.DEFAULT_ALPHA)throw new mr("Non-default alpha value (".concat(e.alpha,") is not supported by the ")+"ELU layer yet.");this.alpha=null==e.alpha?this.DEFAULT_ALPHA:e.alpha}call(e,t){const n=Ys(e);return(0,S.elu)(n)}computeOutputShape(e){return e}getConfig(){const e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}}vc.className="ELU",S.serialization.registerClass(vc);class xc extends co{constructor(e){super(null==e?{}:e),this.DEFAULT_THETA=1,null==e&&(e={}),this.theta=null==e.theta?this.DEFAULT_THETA:e.theta}call(e,t){const n=Ys(e);return(0,S.mul)(n,(0,S.cast)((0,S.greater)(n,this.theta),"float32"))}computeOutputShape(e){return e}getConfig(){const e={theta:this.theta},t=super.getConfig();return Object.assign(e,t),e}}xc.className="ThresholdedReLU",S.serialization.registerClass(xc);class wc extends co{constructor(e){super(null==e?{}:e),this.DEFAULT_AXIS=1,null==e&&(e={}),this.softmax=(new ec).apply,this.axis=null==e.axis?this.DEFAULT_AXIS:e.axis}call(e,t){return(0,S.tidy)((()=>{let n=Ys(e);const a=t.mask;if(null!=a){const e=(0,S.mul)((0,S.sub)((0,S.ones)(n.shape),(0,S.cast)(a,n.dtype)),(0,S.scalar)(-1e9));n=(0,S.add)(n,e)}return this.axis instanceof Array?this.axis.length>1?(0,S.exp)((0,S.sub)(n,(0,S.logSumExp)(n,this.axis,!0))):this.softmax(n,this.axis[0]):this.softmax(n,this.axis)}))}computeOutputShape(e){return e}getConfig(){const e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}}function kc(e,t,n){if("number"===typeof e)return vr(e,t);if(e.length!==t)throw new fr("The ".concat(n," argument must be an integer or tuple of ").concat(t," integers.")+" Received: ".concat(e.length," elements."));for(let r=0;r<t;++r){const s=e[r];if((a=s)!==parseInt(a.toString(),10))throw new fr("The ".concat(n," argument must be an integer or tuple of ").concat(t)+" integers. Received: ".concat(JSON.stringify(e)," including a")+" non-integer number ".concat(s))}return e;var a}function Sc(e,t,n,a){let r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:1;if(null==e)return e;const s=t+(t-1)*(r-1);let o;return o="same"===n?e:e-s+1,Math.floor((o+a-1)/a)}function Nc(e,t,n,a){if(null==e)return null;if("valid"===a)e=e*t+ss([n-t,0]);else{if("same"!==a)throw new fr("Unsupport padding mode: ".concat(a,"."));e*=t}return e}function Ic(e,t){return(0,S.tidy)((()=>(Kr(t),"channelsFirst"===t?S.transpose(e,[0,2,3,1]):e)))}function Tc(e,t){return(0,S.tidy)((()=>(Kr(t),"channelsFirst"===t?S.transpose(e,[0,2,3,4,1]):e)))}function Cc(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1,r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"valid",s=arguments.length>5?arguments[5]:void 0,o=arguments.length>6&&void 0!==arguments[6]?arguments[6]:1;return(0,S.tidy)((()=>{if(null==s&&(s="channelsLast"),Kr(s),3!==e.shape.length)throw new fr("The input of a conv1dWithBias operation should be 3, but is "+"".concat(e.shape.length," instead."));if(3!==t.shape.length)throw new fr("The kernel for a conv1dWithBias operation should be 3, but is "+"".concat(t.shape.length," instead"));if(null!=n&&1!==n.shape.length)throw new fr("The bias for a conv1dWithBias operation should be 1, but is "+"".concat(n.shape.length," instead"));if("channelsFirst"===s&&(e=S.transpose(e,[0,2,1])),"causal"===r)throw new mr("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");let i=S.conv1d(e,t,a,"same"===r?"same":"valid","NWC",o);return null!=n&&(i=Ss(i,n)),i}))}function Ec(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:[1,1],r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"valid",s=arguments.length>5?arguments[5]:void 0,o=arguments.length>6?arguments[6]:void 0,i=arguments.length>7&&void 0!==arguments[7]?arguments[7]:null;return(0,S.tidy)((()=>{if(null==s&&(s="channelsLast"),Kr(s),3!==e.rank&&4!==e.rank)throw new fr("conv2dWithBiasActivation expects input to be of rank 3 or 4, "+"but received ".concat(e.rank,"."));if(3!==t.rank&&4!==t.rank)throw new fr("conv2dWithBiasActivation expects kernel to be of rank 3 or 4, "+"but received ".concat(e.rank,"."));let c=Ic(e,s);if("causal"===r)throw new mr("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");return c=S.fused.conv2d({x:c,filter:t,strides:a,pad:"same"===r?"same":"valid",dilations:o,dataFormat:"NHWC",bias:n,activation:i}),"channelsFirst"===s&&(c=S.transpose(c,[0,3,1,2])),c}))}function _c(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:[1,1,1],r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"valid",s=arguments.length>5?arguments[5]:void 0,o=arguments.length>6?arguments[6]:void 0;return(0,S.tidy)((()=>{if(null==s&&(s="channelsLast"),Kr(s),4!==e.rank&&5!==e.rank)throw new fr("conv3dWithBias expects input to be of rank 4 or 5, but received "+"".concat(e.rank,"."));if(4!==t.rank&&5!==t.rank)throw new fr("conv3dWithBias expects kernel to be of rank 4 or 5, but received "+"".concat(e.rank,"."));let i=Tc(e,s);if("causal"===r)throw new mr("The support for CAUSAL padding mode in conv3dWithBias is not implemented yet.");return i=S.conv3d(i,t,a,"same"===r?"same":"valid","NDHWC",o),null!=n&&(i=Ss(i,n)),"channelsFirst"===s&&(i=S.transpose(i,[0,4,1,2,3])),i}))}wc.className="Softmax",S.serialization.registerClass(wc);class Ac extends co{constructor(e,t){if(super(t),this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",Ac.verifyArgs(t),this.rank=e,Mr(this.rank,"rank"),1!==this.rank&&2!==this.rank&&3!==this.rank)throw new mr("Convolution layer for rank other than 1, 2, or 3 (".concat(this.rank,") is ")+"not implemented yet.");if(this.kernelSize=kc(t.kernelSize,e,"kernelSize"),this.strides=kc(null==t.strides?1:t.strides,e,"strides"),this.padding=null==t.padding?"valid":t.padding,Qr(this.padding),this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,Kr(this.dataFormat),this.activation=cc(t.activation),this.useBias=null==t.useBias||t.useBias,this.biasInitializer=Xs(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.biasConstraint=Eo(t.biasConstraint),this.biasRegularizer=mc(t.biasRegularizer),this.activityRegularizer=mc(t.activityRegularizer),this.dilationRate=kc(null==t.dilationRate?1:t.dilationRate,e,"dilationRate"),1===this.rank&&Array.isArray(this.dilationRate)&&1!==this.dilationRate.length)throw new fr("dilationRate must be a number or an array of a single number for 1D convolution, but received "+"".concat(JSON.stringify(this.dilationRate)));if(2===this.rank){if("number"===typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate];else if(2!==this.dilationRate.length)throw new fr("dilationRate must be a number or array of two numbers for 2D "+"convolution, but received ".concat(JSON.stringify(this.dilationRate)))}else if(3===this.rank)if("number"===typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate,this.dilationRate];else if(3!==this.dilationRate.length)throw new fr("dilationRate must be a number or array of three numbers for 3D "+"convolution, but received ".concat(JSON.stringify(this.dilationRate)))}static verifyArgs(e){if(xr("kernelSize"in e,"required key 'kernelSize' not in config"),"number"!==typeof e.kernelSize&&!Or(e.kernelSize,"number",1,3))throw new fr("BaseConv expects config.kernelSize to be number or number[] with "+"length 1, 2, or 3, but received ".concat(JSON.stringify(e.kernelSize),"."))}getConfig(){const e={kernelSize:this.kernelSize,strides:this.strides,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,activation:oc(this.activation),useBias:this.useBias,biasInitializer:qs(this.biasInitializer),biasRegularizer:pc(this.biasRegularizer),activityRegularizer:pc(this.activityRegularizer),biasConstraint:To(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}}class Rc extends Ac{constructor(e,t){super(e,t),this.kernel=null,Rc.verifyArgs(t),this.filters=t.filters,Mr(this.filters,"filters"),this.kernelInitializer=Xs(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.kernelConstraint=Eo(t.kernelConstraint),this.kernelRegularizer=mc(t.kernelRegularizer)}build(e){e=Zs(e);const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new fr("The channel dimension of the input should be defined. "+"Found ".concat(e[t]));const n=e[t],a=this.kernelSize.concat([n,this.filters]);this.kernel=this.addWeight("kernel",a,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[{ndim:this.rank+2,axes:{[t]:n}}],this.built=!0}call(e,t){return(0,S.tidy)((()=>{let t;e=Ys(e);const n=null==this.bias?null:this.bias.read(),a=Lr(this.activation.getClassName());if(null!=a&&2===this.rank)t=Ec(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate,a);else{if(1===this.rank)t=Cc(e,this.kernel.read(),n,this.strides[0],this.padding,this.dataFormat,this.dilationRate[0]);else if(2===this.rank)t=Ec(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate);else{if(3!==this.rank)throw new mr("convolutions greater than 3D are not implemented yet.");t=_c(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate)}null!=this.activation&&(t=this.activation.apply(t))}return t}))}computeOutputShape(e){e=Zs(e);const t=[],n="channelsLast"===this.dataFormat?e.slice(1,e.length-1):e.slice(2);for(let r=0;r<n.length;++r){const e=Sc(n[r],this.kernelSize[r],this.padding,this.strides[r],"number"===typeof this.dilationRate?this.dilationRate:this.dilationRate[r]);t.push(e)}let a=[e[0]];return"channelsLast"===this.dataFormat?(a=a.concat(t),a.push(this.filters)):(a.push(this.filters),a=a.concat(t)),a}getConfig(){const e={filters:this.filters,kernelInitializer:qs(this.kernelInitializer),kernelRegularizer:pc(this.kernelRegularizer),kernelConstraint:To(this.kernelConstraint)},t=super.getConfig();return Object.assign(e,t),e}static verifyArgs(e){if(!("filters"in e)||"number"!==typeof e.filters||e.filters<1)throw new fr("Convolution layer expected config.filters to be a 'number' > 0 "+"but got ".concat(JSON.stringify(e.filters)))}}class Fc extends Rc{constructor(e){super(2,e),Fc.verifyArgs(e)}getConfig(){const e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if("number"!==typeof e.kernelSize&&!Or(e.kernelSize,"number",1,2))throw new fr("Conv2D expects config.kernelSize to be number or number[] with "+"length 1 or 2, but received ".concat(JSON.stringify(e.kernelSize),"."))}}Fc.className="Conv2D",S.serialization.registerClass(Fc);class Dc extends Rc{constructor(e){super(3,e),Dc.verifyArgs(e)}getConfig(){const e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if("number"!==typeof e.kernelSize&&(!Array.isArray(e.kernelSize)||1!==e.kernelSize.length&&3!==e.kernelSize.length))throw new fr("Conv3D expects config.kernelSize to be number or"+" [number, number, number], but received ".concat(JSON.stringify(e.kernelSize),"."))}}Dc.className="Conv3D",S.serialization.registerClass(Dc);class Oc extends Fc{constructor(e){if(super(e),this.inputSpec=[new ao({ndim:4})],"same"!==this.padding&&"valid"!==this.padding)throw new fr("Conv2DTranspose currently supports only padding modes 'same' "+"and 'valid', but received padding mode ".concat(this.padding))}build(e){if(4!==(e=Zs(e)).length)throw new fr("Input should have rank 4; Received input shape: "+JSON.stringify(e));const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new fr("The channel dimension of the inputs should be defined. Found `None`.");const n=e[t],a=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",a,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new ao({ndim:4,axes:{[t]:n}})],this.built=!0}call(e,t){return S.tidy((()=>{let t=Ys(e);if(4!==t.shape.length)throw new fr("Conv2DTranspose.call() expects input tensor to be rank-4, but "+"received a tensor of rank-".concat(t.shape.length));const n=t.shape,a=n[0];let r,s;"channelsFirst"===this.dataFormat?(r=2,s=3):(r=1,s=2);const o=n[r],i=n[s],c=this.kernelSize[0],l=this.kernelSize[1],u=this.strides[0],d=this.strides[1],h=[a,Nc(o,u,c,this.padding),Nc(i,d,l,this.padding),this.filters];"channelsLast"!==this.dataFormat&&(t=S.transpose(t,[0,2,3,1]));let p=S.conv2dTranspose(t,this.kernel.read(),h,this.strides,this.padding);return"channelsLast"!==this.dataFormat&&(p=S.transpose(p,[0,3,1,2])),null!=this.bias&&(p=Ss(p,this.bias.read(),this.dataFormat)),null!=this.activation&&(p=this.activation.apply(p)),p}))}computeOutputShape(e){const t=(e=Zs(e)).slice();let n,a,r;"channelsFirst"===this.dataFormat?(n=1,a=2,r=3):(n=3,a=1,r=2);const s=this.kernelSize[0],o=this.kernelSize[1],i=this.strides[0],c=this.strides[1];return t[n]=this.filters,t[a]=Nc(t[a],i,s,this.padding),t[r]=Nc(t[r],c,o,this.padding),t}getConfig(){const e=super.getConfig();return delete e.dilationRate,e}}Oc.className="Conv2DTranspose",S.serialization.registerClass(Oc);class Mc extends Dc{constructor(e){if(super(e),this.inputSpec=[new ao({ndim:5})],"same"!==this.padding&&"valid"!==this.padding)throw new fr("Conv3DTranspose currently supports only padding modes 'same' "+"and 'valid', but received padding mode ".concat(this.padding))}build(e){if(5!==(e=Zs(e)).length)throw new fr("Input should have rank 5; Received input shape: "+JSON.stringify(e));const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new fr("The channel dimension of the inputs should be defined. Found `None`.");const n=e[t],a=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",a,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new ao({ndim:5,axes:{[t]:n}})],this.built=!0}call(e,t){return S.tidy((()=>{let t=Ys(e);if(5!==t.shape.length)throw new fr("Conv3DTranspose.call() expects input tensor to be rank-4, but "+"received a tensor of rank-".concat(t.shape.length));const n=t.shape,a=n[0];let r,s,o;"channelsFirst"===this.dataFormat?(o=2,r=3,s=4):(o=1,r=2,s=3);const i=n[o],c=n[r],l=n[s],u=this.kernelSize[0],d=this.kernelSize[1],h=this.kernelSize[2],p=this.strides[0],f=this.strides[1],m=this.strides[2],g=[a,Nc(i,p,u,this.padding),Nc(c,f,d,this.padding),Nc(l,m,h,this.padding),this.filters];"channelsLast"!==this.dataFormat&&(t=S.transpose(t,[0,2,3,4,1]));let y=S.conv3dTranspose(t,this.kernel.read(),g,this.strides,this.padding);return"channelsLast"!==this.dataFormat&&(y=S.transpose(y,[0,4,1,2,3])),null!==this.bias&&(y=Ss(y,this.bias.read(),this.dataFormat)),null!==this.activation&&(y=this.activation.apply(y)),y}))}computeOutputShape(e){const t=(e=Zs(e)).slice();let n,a,r,s;"channelsFirst"===this.dataFormat?(n=1,a=2,r=3,s=4):(n=4,a=1,r=2,s=3);const o=this.kernelSize[0],i=this.kernelSize[1],c=this.kernelSize[2],l=this.strides[0],u=this.strides[1],d=this.strides[2];return t[n]=this.filters,t[a]=Nc(t[a],l,o,this.padding),t[r]=Nc(t[r],u,i,this.padding),t[s]=Nc(t[s],d,c,this.padding),t}getConfig(){const e=super.getConfig();return delete e.dilationRate,e}}Mc.className="Conv3DTranspose",S.serialization.registerClass(Mc);class zc extends Rc{constructor(e,t){if(super(e,t),this.DEFAULT_DEPTHWISE_INITIALIZER="glorotUniform",this.DEFAULT_POINTWISE_INITIALIZER="glorotUniform",this.depthwiseKernel=null,this.pointwiseKernel=null,null==t.filters)throw new fr("The `filters` configuration field is required by SeparableConv, but is unspecified.");if(null!=t.kernelInitializer||null!=t.kernelRegularizer||null!=t.kernelConstraint)throw new fr("Fields kernelInitializer, kernelRegularizer and kernelConstraint are invalid for SeparableConv2D. Use depthwiseInitializer, depthwiseRegularizer, depthwiseConstraint, pointwiseInitializer, pointwiseRegularizer and pointwiseConstraint instead.");if(null!=t.padding&&"same"!==t.padding&&"valid"!==t.padding)throw new fr("SeparableConv".concat(this.rank,"D supports only padding modes: ")+"'same' and 'valid', but received ".concat(JSON.stringify(t.padding)));this.depthMultiplier=null==t.depthMultiplier?1:t.depthMultiplier,this.depthwiseInitializer=Xs(t.depthwiseInitializer||this.DEFAULT_DEPTHWISE_INITIALIZER),this.depthwiseRegularizer=mc(t.depthwiseRegularizer),this.depthwiseConstraint=Eo(t.depthwiseConstraint),this.pointwiseInitializer=Xs(t.depthwiseInitializer||this.DEFAULT_POINTWISE_INITIALIZER),this.pointwiseRegularizer=mc(t.pointwiseRegularizer),this.pointwiseConstraint=Eo(t.pointwiseConstraint)}build(e){if((e=Zs(e)).length<this.rank+2)throw new fr("Inputs to SeparableConv".concat(this.rank,"D should have rank ")+"".concat(this.rank+2,", but received input shape: ")+"".concat(JSON.stringify(e)));const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t]||e[t]<0)throw new fr("The channel dimension of the inputs should be defined, "+"but found ".concat(JSON.stringify(e[t])));const n=e[t],a=this.kernelSize.concat([n,this.depthMultiplier]),r=[];for(let o=0;o<this.rank;++o)r.push(1);r.push(n*this.depthMultiplier,this.filters);const s=!0;this.depthwiseKernel=this.addWeight("depthwise_kernel",a,"float32",this.depthwiseInitializer,this.depthwiseRegularizer,s,this.depthwiseConstraint),this.pointwiseKernel=this.addWeight("pointwise_kernel",r,"float32",this.pointwiseInitializer,this.pointwiseRegularizer,s,this.pointwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,s,this.biasConstraint):this.bias=null,this.inputSpec=[new ao({ndim:this.rank+2,axes:{[t]:n}})],this.built=!0}call(e,t){return(0,S.tidy)((()=>{let t;if(e=Ys(e),1===this.rank)throw new mr("1D separable convolution is not implemented yet.");return 2===this.rank&&("channelsFirst"===this.dataFormat&&(e=S.transpose(e,[0,2,3,1])),t=S.separableConv2d(e,this.depthwiseKernel.read(),this.pointwiseKernel.read(),this.strides,this.padding,this.dilationRate,"NHWC")),this.useBias&&(t=Ss(t,this.bias.read(),this.dataFormat)),null!=this.activation&&(t=this.activation.apply(t)),"channelsFirst"===this.dataFormat&&(t=S.transpose(t,[0,3,1,2])),t}))}getConfig(){const e=super.getConfig();return delete e.rank,delete e.kernelInitializer,delete e.kernelRegularizer,delete e.kernelConstraint,e.depthwiseInitializer=qs(this.depthwiseInitializer),e.pointwiseInitializer=qs(this.pointwiseInitializer),e.depthwiseRegularizer=pc(this.depthwiseRegularizer),e.pointwiseRegularizer=pc(this.pointwiseRegularizer),e.depthwiseConstraint=To(this.depthwiseConstraint),e.pointwiseConstraint=To(this.pointwiseConstraint),e}}zc.className="SeparableConv";class Lc extends zc{constructor(e){super(2,e)}}Lc.className="SeparableConv2D",S.serialization.registerClass(Lc);class Bc extends Rc{constructor(e){super(1,e),Bc.verifyArgs(e),this.inputSpec=[{ndim:3}]}getConfig(){const e=super.getConfig();return delete e.rank,delete e.dataFormat,e}static verifyArgs(e){if("number"!==typeof e.kernelSize&&!Or(e.kernelSize,"number",1,1))throw new fr("Conv1D expects config.kernelSize to be number or number[] with "+"length 1, but received ".concat(JSON.stringify(e.kernelSize),"."))}}Bc.className="Conv1D",S.serialization.registerClass(Bc);class Pc extends co{constructor(e){super(e),"number"===typeof e.cropping?this.cropping=[[e.cropping,e.cropping],[e.cropping,e.cropping]]:"number"===typeof e.cropping[0]?this.cropping=[[e.cropping[0],e.cropping[0]],[e.cropping[1],e.cropping[1]]]:this.cropping=e.cropping,this.dataFormat=void 0===e.dataFormat?"channelsLast":e.dataFormat,this.inputSpec=[{ndim:4}]}computeOutputShape(e){return"channelsFirst"===this.dataFormat?[e[0],e[1],e[2]-this.cropping[0][0]-this.cropping[0][1],e[3]-this.cropping[1][0]-this.cropping[1][1]]:[e[0],e[1]-this.cropping[0][0]-this.cropping[0][1],e[2]-this.cropping[1][0]-this.cropping[1][1],e[3]]}call(e,t){return(0,S.tidy)((()=>{if(e=Ys(e),"channelsLast"===this.dataFormat){const t=fs(e,this.cropping[0][0],e.shape[1]-this.cropping[0][0]-this.cropping[0][1],2);return fs(t,this.cropping[1][0],e.shape[2]-this.cropping[1][1]-this.cropping[1][0],3)}{const t=fs(e,this.cropping[0][0],e.shape[2]-this.cropping[0][0]-this.cropping[0][1],3);return fs(t,this.cropping[1][0],e.shape[3]-this.cropping[1][1]-this.cropping[1][0],4)}}))}getConfig(){const e={cropping:this.cropping,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}Pc.className="Cropping2D",S.serialization.registerClass(Pc);class Vc extends co{constructor(e){var t;super(e),this.DEFAULT_SIZE=[2,2],this.inputSpec=[{ndim:4}],this.size=null==e.size?this.DEFAULT_SIZE:e.size,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,Kr(this.dataFormat),this.interpolation=null==e.interpolation?"nearest":e.interpolation,t=this.interpolation,Dr(Gr,"InterpolationFormat",t)}computeOutputShape(e){if("channelsFirst"===this.dataFormat){const t=null==e[2]?null:this.size[0]*e[2],n=null==e[3]?null:this.size[1]*e[3];return[e[0],e[1],t,n]}{const t=null==e[1]?null:this.size[0]*e[1],n=null==e[2]?null:this.size[1]*e[2];return[e[0],t,n,e[3]]}}call(e,t){return S.tidy((()=>{let t=Ys(e);const n=t.shape;if("channelsFirst"===this.dataFormat){t=S.transpose(t,[0,2,3,1]);const e=this.size[0]*n[2],a=this.size[1]*n[3],r="nearest"===this.interpolation?S.image.resizeNearestNeighbor(t,[e,a]):S.image.resizeBilinear(t,[e,a]);return S.transpose(r,[0,3,1,2])}{const e=this.size[0]*n[1],a=this.size[1]*n[2];return"nearest"===this.interpolation?S.image.resizeNearestNeighbor(t,[e,a]):S.image.resizeBilinear(t,[e,a])}}))}getConfig(){const e={size:this.size,dataFormat:this.dataFormat,interpolation:this.interpolation},t=super.getConfig();return Object.assign(e,t),e}}Vc.className="UpSampling2D",S.serialization.registerClass(Vc);class Wc extends Ac{constructor(e){super(2,e),this.depthwiseKernel=null,this.depthMultiplier=null==e.depthMultiplier?1:e.depthMultiplier,this.depthwiseInitializer=Xs(e.depthwiseInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.depthwiseConstraint=Eo(e.depthwiseConstraint),this.depthwiseRegularizer=mc(e.depthwiseRegularizer)}build(e){if((e=Zs(e)).length<4)throw new fr("Inputs to DepthwiseConv2D should have rank 4. "+"Received input shape: ".concat(JSON.stringify(e),"."));const t="channelsFirst"===this.dataFormat?1:3;if(null==e[t]||e[t]<0)throw new fr("The channel dimension of the inputs to DepthwiseConv2D should "+"be defined, but is not (".concat(e[t],")."));const n=e[t],a=[this.kernelSize[0],this.kernelSize[1],n,this.depthMultiplier];this.depthwiseKernel=this.addWeight("depthwise_kernel",a,null,this.depthwiseInitializer,this.depthwiseRegularizer,!0,this.depthwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[n*this.depthMultiplier],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return(0,S.tidy)((()=>{let t=function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:[1,1],a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"valid",r=arguments.length>4?arguments[4]:void 0,s=arguments.length>5?arguments[5]:void 0;return(0,S.tidy)((()=>{null==r&&(r="channelsLast"),Kr(r);let o=Ic(e,r);if(4!==e.rank)throw new fr("Input for depthwiseConv2d is required to be 4-D, but is instead "+"".concat(e.rank,"-D"));if(4!==t.rank)throw new fr("depthwiseKernel is required to be 4-D, but is instead "+"".concat(t.rank,"-D"));return o=S.depthwiseConv2d(o,t,n,"same"===a?"same":"valid","NHWC",s),"channelsFirst"===r&&(o=S.transpose(o,[0,3,1,2])),o}))}(e=Ys(e),this.depthwiseKernel.read(),this.strides,this.padding,this.dataFormat,null);return this.useBias&&(t=Ss(t,this.bias.read(),this.dataFormat)),null!=this.activation&&(t=this.activation.apply(t)),t}))}computeOutputShape(e){e=Zs(e);const t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2],a="channelsFirst"===this.dataFormat?e[1]*this.depthMultiplier:e[3]*this.depthMultiplier,r=Sc(t,this.kernelSize[0],this.padding,this.strides[0]),s=Sc(n,this.kernelSize[1],this.padding,this.strides[1]);return"channelsFirst"===this.dataFormat?[e[0],a,r,s]:[e[0],r,s,a]}getConfig(){const e=super.getConfig();return e.depthMultiplier=this.depthMultiplier,e.depthwiseInitializer=qs(this.depthwiseInitializer),e.depthwiseRegularizer=pc(this.depthwiseRegularizer),e.depthwiseConstraint=To(this.depthwiseRegularizer),e}}function Uc(e,t,n,a){if(Array.isArray(e)){if(null!=t||null!=n)throw new fr("When inputs is an array, neither initialState or constants should be provided");null!=a&&(n=e.slice(e.length-a,e.length),e=e.slice(0,e.length-a)),e.length>1&&(t=e.slice(1,e.length)),e=e[0]}function r(e){return null==e||Array.isArray(e)?e:[e]}return{inputs:e,initialState:t=r(t),constants:n=r(n)}}function Gc(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]&&arguments[3],r=arguments.length>4?arguments[4]:void 0,s=arguments.length>5?arguments[5]:void 0,o=arguments.length>6&&void 0!==arguments[6]&&arguments[6],i=arguments.length>7&&void 0!==arguments[7]&&arguments[7];return S.tidy((()=>{const c=t.shape.length;if(c<3)throw new fr("Input should be at least 3D, but is ".concat(c,"D."));const l=[1,0].concat(os(2,c));if(t=S.transpose(t,l),null!=s)throw new mr("The rnn() functoin of the deeplearn.js backend does not support constants yet.");o&&console.warn("Backend rnn(): the unroll = true option is not applicable to the imperative deeplearn.js backend."),null!=r&&(r=S.cast(S.cast(r,"bool"),"float32"),r.rank===c-1&&(r=S.expandDims(r,-1)),r=S.transpose(r,l)),a&&(t=S.reverse(t,0),null!=r&&(r=S.reverse(r,0)));const u=[];let d,h=n;const p=t.shape[0],f=S.unstack(t);let m,g;null!=r&&(m=S.unstack(r));for(let t=0;t<p;++t){const n=f[t],a=S.tidy((()=>e(n,h)));if(null==r)d=a[0],h=a[1];else{const e=S.tidy((()=>{const e=m[t],n=S.sub(S.onesLike(e),e);return{output:S.add(S.mul(a[0],e),S.mul(h[0],n)),newStates:h.map(((t,r)=>S.add(S.mul(a[1][r],e),S.mul(t,n))))}}));d=e.output,h=e.newStates}i&&u.push(d)}if(i){const e=1;g=S.stack(u,e)}return[d,g,h]}))}Wc.className="DepthwiseConv2D",S.serialization.registerClass(Wc);class Hc extends co{constructor(e){let t;if(super(e),null==e.cell)throw new fr("cell property is missing for the constructor of RNN.");if(t=Array.isArray(e.cell)?new Jc({cells:e.cell}):e.cell,null==t.stateSize)throw new fr("The RNN cell should have an attribute `stateSize` (tuple of integers, one integer per RNN state).");this.cell=t,this.returnSequences=null!=e.returnSequences&&e.returnSequences,this.returnState=null!=e.returnState&&e.returnState,this.goBackwards=null!=e.goBackwards&&e.goBackwards,this._stateful=null!=e.stateful&&e.stateful,this.unroll=null!=e.unroll&&e.unroll,this.supportsMasking=!0,this.inputSpec=[new ao({ndim:3})],this.stateSpec=null,this.states_=null,this.numConstants=null,this.keptStates=[]}getStates(){if(null==this.states_){return os(0,Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1).map((e=>null))}return this.states_}setStates(e){this.states_=e}computeOutputShape(e){Ks(e)&&(e=e[0]);let t=this.cell.stateSize;Array.isArray(t)||(t=[t]);const n=t[0];let a;if(a=this.returnSequences?[e[0],e[1],n]:[e[0],n],this.returnState){const n=[];for(const a of t)n.push([e[0],a]);return[a].concat(n)}return a}computeMask(e,t){return S.tidy((()=>{Array.isArray(t)&&(t=t[0]);const e=this.returnSequences?t:null;if(this.returnState){const t=this.states.map((e=>null));return[e].concat(t)}return e}))}get states(){if(null==this.states_){const e=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1,t=[];for(let n=0;n<e;++n)t.push(null);return t}return this.states_}set states(e){this.states_=e}build(e){if(null!=this.numConstants)throw new mr("Constants support is not implemented in RNN yet.");Ks(e)&&(e=e[0]);const t=this.stateful?e[0]:null,n=e.slice(2);this.inputSpec[0]=new ao({shape:[t,null,...n]});const a=[e[0]].concat(e.slice(2));let r;if(this.cell.build(a),r=Array.isArray(this.cell.stateSize)?this.cell.stateSize:[this.cell.stateSize],null!=this.stateSpec){if(!S.util.arraysEqual(this.stateSpec.map((e=>e.shape[e.shape.length-1])),r))throw new fr("An initialState was passed that is not compatible with "+"cell.stateSize. Received stateSpec=".concat(this.stateSpec,"; ")+"However cell.stateSize is ".concat(this.cell.stateSize))}else this.stateSpec=r.map((e=>new ao({shape:[null,e]})));this.stateful&&this.resetStates()}resetStates(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];(0,S.tidy)((()=>{if(!this.stateful)throw new hr("Cannot call resetStates() on an RNN Layer that is not stateful.");const n=this.inputSpec[0].shape[0];if(null==n)throw new fr("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.states_)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((e=>S.zeros([n,e]))):this.states_=[S.zeros([n,this.cell.stateSize])];else if(null==e)S.dispose(this.states_),null!=this.keptStates&&(S.dispose(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((e=>S.zeros([n,e]))):this.states_[0]=S.zeros([n,this.cell.stateSize]);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new fr("Layer ".concat(this.name," expects ").concat(this.states_.length," state(s), ")+"but it received ".concat(e.length," state value(s). Input ")+"received: ".concat(e));!0===t?this.keptStates.push(this.states_.slice()):S.dispose(this.states_);for(let t=0;t<this.states_.length;++t){const a=e[t],r=Array.isArray(this.cell.stateSize)?this.cell.stateSize[t]:this.cell.stateSize,s=[n,r];if(!S.util.arraysEqual(a.shape,s))throw new fr("State ".concat(t," is incompatible with layer ").concat(this.name,": ")+"expected shape=".concat(s,", received shape=").concat(a.shape));this.states_[t]=a}}this.states_=this.states_.map((e=>S.keep(e.clone())))}))}apply(e,t){let n=null==t?null:t.initialState,a=null==t?null:t.constants;null==t&&(t={});const r=Uc(e,n,a,this.numConstants);e=r.inputs,n=r.initialState,a=r.constants;let s=[],o=[];if(null!=n){t.initialState=n,s=s.concat(n),this.stateSpec=[];for(const e of n)this.stateSpec.push(new ao({shape:e.shape}));o=o.concat(this.stateSpec)}null!=a&&(t.constants=a,s=s.concat(a),this.numConstants=a.length);if(s[0]instanceof ro){const n=[e].concat(s),a=this.inputSpec.concat(o),r=this.inputSpec;this.inputSpec=a;const i=super.apply(n,t);return this.inputSpec=r,i}return super.apply(e,t)}call(e,t){return(0,S.tidy)((()=>{const n=null==t?null:t.mask,a=null==t?null:t.training;let r=null==t?null:t.initialState;e=Ys(e),null==r&&(r=this.stateful?this.states_:this.getInitialState(e));const s=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;if(r.length!==s)throw new fr("RNN Layer has ".concat(s," state(s) but was passed ")+"".concat(r.length," initial state(s)."));this.unroll&&console.warn("Ignoring unroll = true for RNN layer, due to imperative backend.");const o={training:a},i=Gc(((e,t)=>{const n=this.cell.call([e].concat(t),o);return[n[0],n.slice(1)]}),e,r,this.goBackwards,n,null,this.unroll,this.returnSequences),c=i[0],l=i[1],u=i[2];this.stateful&&this.resetStates(u,a);const d=this.returnSequences?l:c;return this.returnState?[d].concat(u):d}))}getInitialState(e){return(0,S.tidy)((()=>{let t=S.zeros(e.shape);return t=S.sum(t,[1,2]),t=us(t),Array.isArray(this.cell.stateSize)?this.cell.stateSize.map((e=>e>1?ys(t,[1,e]):t)):this.cell.stateSize>1?[ys(t,[1,this.cell.stateSize])]:[t]}))}get trainableWeights(){return this.trainable?this.cell.trainableWeights:[]}get nonTrainableWeights(){return this.trainable?this.cell.nonTrainableWeights:this.cell.weights}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.cell&&this.cell.setFastWeightInitDuringBuild(e)}getConfig(){const e=super.getConfig(),t={returnSequences:this.returnSequences,returnState:this.returnState,goBackwards:this.goBackwards,stateful:this.stateful,unroll:this.unroll};null!=this.numConstants&&(t.numConstants=this.numConstants);const n=this.cell.getConfig();return this.getClassName()===Hc.className&&(t.cell={className:this.cell.getClassName(),config:n}),Object.assign(Object.assign(Object.assign({},n),e),t)}static fromConfig(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};const a=Vo(t.cell,n);return new e(Object.assign(t,{cell:a}))}}Hc.className="RNN",S.serialization.registerClass(Hc);class jc extends co{}class qc extends jc{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,Mr(this.units,"units"),this.activation=cc(null==e.activation?this.DEFAULT_ACTIVATION:e.activation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=Xs(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Xs(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Xs(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=mc(e.kernelRegularizer),this.recurrentRegularizer=mc(e.recurrentRegularizer),this.biasRegularizer=mc(e.biasRegularizer),this.kernelConstraint=Eo(e.kernelConstraint),this.recurrentConstraint=Eo(e.recurrentConstraint),this.biasConstraint=Eo(e.biasConstraint),this.dropout=rs([1,ss([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=rs([1,ss([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){e=Zs(e),this.kernel=this.addWeight("kernel",[e[e.length-1],this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return(0,S.tidy)((()=>{if(2!==e.length)throw new fr("SimpleRNNCell expects 2 input Tensors, got ".concat(e.length,"."));let n=e[1];e=e[0];const a=null!=t.training&&t.training;let r;0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=$c({ones:()=>S.onesLike(e),rate:this.dropout,training:a,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=$c({ones:()=>S.onesLike(n),rate:this.recurrentDropout,training:a,dropoutFunc:this.dropoutFunc}));const s=this.dropoutMask,o=this.recurrentDropoutMask;r=vs(null!=s?S.mul(e,s):e,this.kernel.read()),null!=this.bias&&(r=Ss(r,this.bias.read())),null!=o&&(n=S.mul(n,o));let i=S.add(r,vs(n,this.recurrentKernel.read()));return null!=this.activation&&(i=this.activation.apply(i)),[i,i]}))}getConfig(){const e=super.getConfig(),t={units:this.units,activation:oc(this.activation),useBias:this.useBias,kernelInitializer:qs(this.kernelInitializer),recurrentInitializer:qs(this.recurrentInitializer),biasInitializer:qs(this.biasInitializer),kernelRegularizer:pc(this.kernelRegularizer),recurrentRegularizer:pc(this.recurrentRegularizer),biasRegularizer:pc(this.biasRegularizer),activityRegularizer:pc(this.activityRegularizer),kernelConstraint:To(this.kernelConstraint),recurrentConstraint:To(this.recurrentConstraint),biasConstraint:To(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout};return Object.assign(Object.assign({},e),t)}}qc.className="SimpleRNNCell",S.serialization.registerClass(qc);class Xc extends Hc{constructor(e){e.cell=new qc(e),super(e)}call(e,t){return(0,S.tidy)((()=>{null!=this.cell.dropoutMask&&(S.dispose(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(S.dispose(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==t?null:t.mask,a=null==t?null:t.training,r=null==t?null:t.initialState;return super.call(e,{mask:n,training:a,initialState:r})}))}static fromConfig(e,t){return new e(t)}}Xc.className="SimpleRNN",S.serialization.registerClass(Xc);class Kc extends jc{constructor(e){if(super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",e.resetAfter)throw new fr("GRUCell does not support reset_after parameter set to true.");this.units=e.units,Mr(this.units,"units"),this.activation=cc(void 0===e.activation?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=cc(void 0===e.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=Xs(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Xs(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Xs(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=mc(e.kernelRegularizer),this.recurrentRegularizer=mc(e.recurrentRegularizer),this.biasRegularizer=mc(e.biasRegularizer),this.kernelConstraint=Eo(e.kernelConstraint),this.recurrentConstraint=Eo(e.recurrentConstraint),this.biasConstraint=Eo(e.biasConstraint),this.dropout=rs([1,ss([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=rs([1,ss([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){const t=(e=Zs(e))[e.length-1];this.kernel=this.addWeight("kernel",[t,3*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,3*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[3*this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return(0,S.tidy)((()=>{if(2!==e.length)throw new fr("GRUCell expects 2 input Tensors (inputs, h, c), got "+"".concat(e.length,"."));const n=null!=t.training&&t.training;let a=e[1];e=e[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=$c({ones:()=>S.onesLike(e),rate:this.dropout,training:n,count:3,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=$c({ones:()=>S.onesLike(a),rate:this.recurrentDropout,training:n,count:3,dropoutFunc:this.dropoutFunc}));const r=this.dropoutMask,s=this.recurrentDropoutMask;let o,i,c;0<this.dropout&&this.dropout<1&&(e=S.mul(e,r[0]));let l=vs(e,this.kernel.read());this.useBias&&(l=Ss(l,this.bias.read())),0<this.recurrentDropout&&this.recurrentDropout<1&&(a=S.mul(a,s[0]));const u=this.recurrentKernel.read(),[d,h]=S.split(u,[2*this.units,this.units],u.rank-1),p=vs(a,d),[f,m,g]=S.split(l,3,l.rank-1),[y,b]=S.split(p,2,p.rank-1);o=this.recurrentActivation.apply(S.add(f,y)),i=this.recurrentActivation.apply(S.add(m,b));const v=vs(S.mul(i,a),h);c=this.activation.apply(S.add(g,v));const x=S.add(S.mul(o,a),S.mul(S.add(1,S.neg(o)),c));return[x,x]}))}getConfig(){const e=super.getConfig(),t={units:this.units,activation:oc(this.activation),recurrentActivation:oc(this.recurrentActivation),useBias:this.useBias,kernelInitializer:qs(this.kernelInitializer),recurrentInitializer:qs(this.recurrentInitializer),biasInitializer:qs(this.biasInitializer),kernelRegularizer:pc(this.kernelRegularizer),recurrentRegularizer:pc(this.recurrentRegularizer),biasRegularizer:pc(this.biasRegularizer),activityRegularizer:pc(this.activityRegularizer),kernelConstraint:To(this.kernelConstraint),recurrentConstraint:To(this.recurrentConstraint),biasConstraint:To(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation,resetAfter:!1};return Object.assign(Object.assign({},e),t)}}Kc.className="GRUCell",S.serialization.registerClass(Kc);class Qc extends Hc{constructor(e){0===e.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new Kc(e),super(e)}call(e,t){return(0,S.tidy)((()=>{null!=this.cell.dropoutMask&&(S.dispose(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(S.dispose(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==t?null:t.mask,a=null==t?null:t.training,r=null==t?null:t.initialState;return super.call(e,{mask:n,training:a,initialState:r})}))}static fromConfig(e,t){return 0===t.implmentation&&(t.implementation=1),new e(t)}}Qc.className="GRU",S.serialization.registerClass(Qc);class Yc extends jc{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,Mr(this.units,"units"),this.activation=cc(void 0===e.activation?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=cc(void 0===e.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=Xs(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Xs(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Xs(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.unitForgetBias=e.unitForgetBias,this.kernelRegularizer=mc(e.kernelRegularizer),this.recurrentRegularizer=mc(e.recurrentRegularizer),this.biasRegularizer=mc(e.biasRegularizer),this.kernelConstraint=Eo(e.kernelConstraint),this.recurrentConstraint=Eo(e.recurrentConstraint),this.biasConstraint=Eo(e.biasConstraint),this.dropout=rs([1,ss([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=rs([1,ss([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=[this.units,this.units],this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){var t;const n=(e=Zs(e))[e.length-1];let a;if(this.kernel=this.addWeight("kernel",[n,4*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,4*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){if(this.unitForgetBias){const e=this.biasInitializer,n=this.units;a=new((t=class extends Es{apply(t,a){const r=e.apply([n]),s=(new As).apply([n]),o=e.apply([2*n]);return gs(gs(r,s),o)}}).className="CustomInit",t)}else a=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.units],null,a,this.biasRegularizer,!0,this.biasConstraint)}else this.bias=null;this.built=!0}call(e,t){return(0,S.tidy)((()=>{const n=null!=t.training&&t.training;if(3!==e.length)throw new fr("LSTMCell expects 3 input Tensors (inputs, h, c), got "+"".concat(e.length,"."));let a=e[1];const r=e[2];e=e[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=$c({ones:()=>S.onesLike(e),rate:this.dropout,training:n,count:4,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=$c({ones:()=>S.onesLike(a),rate:this.recurrentDropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));const s=this.dropoutMask,o=this.recurrentDropoutMask;let i,c,l,u;0<this.dropout&&this.dropout<1&&(e=S.mul(e,s[0]));let d=vs(e,this.kernel.read());0<this.recurrentDropout&&this.recurrentDropout<1&&(a=S.mul(a,o[0])),d=S.add(d,vs(a,this.recurrentKernel.read())),this.useBias&&(d=Ss(d,this.bias.read()));const[h,p,f,m]=S.split(d,4,d.rank-1);i=this.recurrentActivation.apply(h),c=this.recurrentActivation.apply(p),l=S.add(S.mul(c,r),S.mul(i,this.activation.apply(f))),u=this.recurrentActivation.apply(m);const g=S.mul(u,this.activation.apply(l));return[g,g,l]}))}getConfig(){const e=super.getConfig(),t={units:this.units,activation:oc(this.activation),recurrentActivation:oc(this.recurrentActivation),useBias:this.useBias,kernelInitializer:qs(this.kernelInitializer),recurrentInitializer:qs(this.recurrentInitializer),biasInitializer:qs(this.biasInitializer),unitForgetBias:this.unitForgetBias,kernelRegularizer:pc(this.kernelRegularizer),recurrentRegularizer:pc(this.recurrentRegularizer),biasRegularizer:pc(this.biasRegularizer),activityRegularizer:pc(this.activityRegularizer),kernelConstraint:To(this.kernelConstraint),recurrentConstraint:To(this.recurrentConstraint),biasConstraint:To(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation};return Object.assign(Object.assign({},e),t)}}Yc.className="LSTMCell",S.serialization.registerClass(Yc);class Zc extends Hc{constructor(e){0===e.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new Yc(e),super(e)}call(e,t){return(0,S.tidy)((()=>{null!=this.cell.dropoutMask&&(S.dispose(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(S.dispose(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==t?null:t.mask,a=null==t?null:t.training,r=null==t?null:t.initialState;return super.call(e,{mask:n,training:a,initialState:r})}))}static fromConfig(e,t){return 0===t.implmentation&&(t.implementation=1),new e(t)}}Zc.className="LSTM",S.serialization.registerClass(Zc);class Jc extends jc{constructor(e){super(e),this.cells=e.cells}get stateSize(){const e=[];for(const t of this.cells.slice().reverse())Array.isArray(t.stateSize)?e.push(...t.stateSize):e.push(t.stateSize);return e}call(e,t){return(0,S.tidy)((()=>{let n=e.slice(1);const a=[];for(const e of this.cells.slice().reverse())Array.isArray(e.stateSize)?a.push(n.splice(0,e.stateSize.length)):a.push(n.splice(0,1));a.reverse();const r=[];let s;for(let o=0;o<this.cells.length;++o){const i=this.cells[o];n=a[o],s=0===o?[e[0]].concat(n):[s[0]].concat(n),s=i.call(s,t),r.push(s.slice(1))}n=[];for(const e of r.slice().reverse())n.push(...e);return[s[0]].concat(n)}))}build(e){let t;Ks(e)&&(e=e[0]),this.cells.forEach(((n,a)=>{Jr("RNNCell_".concat(a),(()=>{n.build(e),t=Array.isArray(n.stateSize)?n.stateSize[0]:n.stateSize,e=[e[0],t]}))})),this.built=!0}getConfig(){const e=super.getConfig(),t={cells:this.cells.map((e=>({className:e.getClassName(),config:e.getConfig()})))};return Object.assign(Object.assign({},e),t)}static fromConfig(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};const a=[];for(const r of t.cells)a.push(Vo(r,n));return new e({cells:a})}get trainableWeights(){if(!this.trainable)return[];const e=[];for(const t of this.cells)e.push(...t.trainableWeights);return e}get nonTrainableWeights(){const e=[];for(const t of this.cells)e.push(...t.nonTrainableWeights);if(!this.trainable){const t=[];for(const e of this.cells)t.push(...e.trainableWeights);return t.concat(e)}return e}getWeights(){const e=[];for(const t of this.cells)e.push(...t.weights);return to(e)}setWeights(e){const t=[];for(const n of this.cells){const a=n.weights.length,r=e.splice(a);for(let e=0;e<n.weights.length;++e)t.push([n.weights[e],r[e]])}no(t)}}function $c(e){const{ones:t,rate:n,training:a=!1,count:r=1,dropoutFunc:s}=e,o=()=>null!=s?s(t(),n):Ns(t(),n),i=()=>Is(o,t,a);if(!r||r<=1)return S.keep(i().clone());return Array(r).fill(void 0).map(i).map((e=>S.keep(e.clone())))}Jc.className="StackedRNNCells",S.serialization.registerClass(Jc);var el=function(e,t){var n={};for(var a in e)Object.prototype.hasOwnProperty.call(e,a)&&t.indexOf(a)<0&&(n[a]=e[a]);if(null!=e&&"function"===typeof Object.getOwnPropertySymbols){var r=0;for(a=Object.getOwnPropertySymbols(e);r<a.length;r++)t.indexOf(a[r])<0&&Object.prototype.propertyIsEnumerable.call(e,a[r])&&(n[a[r]]=e[a[r]])}return n};class tl extends Hc{constructor(e){if(e.unroll)throw new mr("Unrolling is not possible with convolutional RNNs.");if(Array.isArray(e.cell))throw new mr("It is not possible at the moment to stack convolutional cells.");super(e),this.inputSpec=[new ao({ndim:5})]}call(e,t){return S.tidy((()=>{if(null!=this.cell.dropoutMask&&(S.dispose(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(S.dispose(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),t&&t.constants)throw new fr("ConvRNN2D cell does not support constants");const n=null==t?null:t.mask,a=null==t?null:t.training,r=null==t?null:t.initialState;return super.call(e,{mask:n,training:a,initialState:r})}))}computeOutputShape(e){let t=this.computeSingleOutputShape(e);return this.returnSequences||(t=[t[0],...t.slice(2)]),this.returnState&&(t=[t,...Array(2).fill([e[0],...t.slice(-3)])]),t}getInitialState(e){return S.tidy((()=>{const{stateSize:t}=this.cell,n=e.shape,a=this.computeSingleOutputShape(n),r=[a[0],...a.slice(2)],s=S.zeros(r);return Array.isArray(t)?Array(t.length).fill(s):[s]}))}resetStates(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];S.tidy((()=>{if(!this.stateful)throw new hr("Cannot call resetStates() on an RNN Layer that is not stateful.");const n=this.inputSpec[0].shape,a=this.computeSingleOutputShape(n),r=[a[0],...a.slice(2)];if(null==n[0])throw new fr("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.getStates())Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((()=>S.zeros(r))):this.states_=[S.zeros(r)];else if(null==e)S.dispose(this.states_),null!=this.keptStates&&(S.dispose(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((()=>S.zeros(r))):this.states_[0]=S.zeros(r);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new fr("Layer ".concat(this.name," expects ").concat(this.states_.length," state(s), ")+"but it received ".concat(e.length," state value(s). Input ")+"received: ".concat(e));t?this.keptStates.push(this.states_.slice()):S.dispose(this.states_);for(let t=0;t<this.states_.length;++t){const n=e[t],a=r;if(!S.util.arraysEqual(n.shape,a))throw new fr("State ".concat(t," is incompatible with layer ").concat(this.name,": ")+"expected shape=".concat(a,", received shape=").concat(n.shape));this.states_[t]=n}}this.states_=this.states_.map((e=>S.keep(e.clone())))}))}computeSingleOutputShape(e){const{dataFormat:t,filters:n,kernelSize:a,padding:r,strides:s,dilationRate:o}=this.cell,i="channelsFirst"===t,c=e[i?3:2],l=e[i?4:3],u=Sc(c,a[0],r,s[0],o[0]),d=Sc(l,a[1],r,s[1],o[1]);return[...e.slice(0,2),...i?[n,u,d]:[u,d,n]]}}tl.className="ConvRNN2D";class nl extends Yc{constructor(e){const{filters:t,kernelSize:n,strides:a,padding:r,dataFormat:s,dilationRate:o}=e;super(Object.assign(Object.assign({},e),{units:t})),this.filters=t,Mr(this.filters,"filters"),this.kernelSize=kc(n,2,"kernelSize"),this.kernelSize.forEach((e=>Mr(e,"kernelSize"))),this.strides=kc(a||1,2,"strides"),this.strides.forEach((e=>Mr(e,"strides"))),this.padding=r||"valid",Qr(this.padding),this.dataFormat=s||"channelsLast",Kr(this.dataFormat),this.dilationRate=kc(o||1,2,"dilationRate"),this.dilationRate.forEach((e=>Mr(e,"dilationRate")))}build(e){var t;e=Zs(e);const n="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[n])throw new fr("The channel dimension of the input should be defined. "+"Found ".concat(e[n]));const a=e[n],r=this.kernelSize.concat([a,4*this.filters]);this.kernel=this.addWeight("kernel",r,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint);const s=this.kernelSize.concat([this.filters,4*this.filters]);if(this.recurrentKernel=this.addWeight("recurrent_kernel",s,null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){let e;if(this.unitForgetBias){const n=this.biasInitializer,a=this.filters;e=new((t=class extends Es{apply(e,t){return ms([n.apply([a]),S.ones([a]),n.apply([2*a])])}}).className="CustomInit",t)}else e=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.filters],null,e,this.biasRegularizer,!0,this.biasConstraint)}this.built=!0}call(e,t){return S.tidy((()=>{if(3!==e.length)throw new fr("ConvLSTM2DCell expects 3 input Tensors (inputs, h, c), got "+"".concat(e.length,"."));const n=t.training||!1,a=e[0],r=e[1],s=e[2];0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=$c({ones:()=>S.onesLike(a),rate:this.dropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));const o=this.dropoutMask,i=(e,t,n)=>t&&t[n]?S.mul(t[n],e):e;let c=i(a,o,0),l=i(a,o,1),u=i(a,o,2),d=i(a,o,3);0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=$c({ones:()=>S.onesLike(r),rate:this.recurrentDropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));const h=this.recurrentDropoutMask;let p=i(r,h,0),f=i(r,h,1),m=i(r,h,2),g=i(r,h,3);const[y,b,v,x]=S.split(this.kernel.read(),4,3),[w,k,N,I]=this.useBias?S.split(this.bias.read(),4):[null,null,null,null];c=this.inputConv(c,y,w,this.padding),l=this.inputConv(l,b,k,this.padding),u=this.inputConv(u,v,N,this.padding),d=this.inputConv(d,x,I,this.padding);const[T,C,E,_]=S.split(this.recurrentKernel.read(),4,3);p=this.recurrentConv(p,T),f=this.recurrentConv(f,C),m=this.recurrentConv(m,E),g=this.recurrentConv(g,_);const A=this.recurrentActivation.apply(S.add(c,p)),R=this.recurrentActivation.apply(S.add(l,f)),F=S.add(S.mul(R,s),S.mul(A,this.activation.apply(S.add(u,m)))),D=S.mul(this.recurrentActivation.apply(S.add(d,g)),this.activation.apply(F));return[D,D,F]}))}getConfig(){const e=super.getConfig(),{units:t}=e,n=el(e,["units"]),a={filters:this.filters,kernelSize:this.kernelSize,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,strides:this.strides};return Object.assign(Object.assign({},n),a)}inputConv(e,t,n,a){const r=S.conv2d(e,t,this.strides,a||"valid","channelsFirst"===this.dataFormat?"NCHW":"NHWC",this.dilationRate);return n?Ss(r,n,this.dataFormat):r}recurrentConv(e,t){return S.conv2d(e,t,1,"same","channelsFirst"===this.dataFormat?"NCHW":"NHWC")}}nl.className="ConvLSTM2DCell",S.serialization.registerClass(nl);class al extends tl{constructor(e){const t=new nl(e);super(Object.assign(Object.assign({},e),{cell:t}))}static fromConfig(e,t){return new e(t)}}al.className="ConvLSTM2D",S.serialization.registerClass(al);class rl extends co{constructor(e){super(e),this.rate=Math.max(Math.min(e.rate,1),0),this.noiseShape=e.noiseShape,this.seed=e.seed,this.supportsMasking=!0}getNoiseShape(e){if(null==this.noiseShape)return this.noiseShape;const t=e.shape,n=[];for(let a=0;a<this.noiseShape.length;++a)n.push(null==this.noiseShape[a]?t[a]:this.noiseShape[a]);return n}call(e,t){return(0,S.tidy)((()=>{this.invokeCallHook(e,t);const n=Ys(e);if(0<this.rate&&this.rate<1){const e=null!=t.training&&t.training,a=this.getNoiseShape(n);return Is((()=>Ns(n,this.rate,a,this.seed)),(()=>n),e)}return e}))}getConfig(){const e={rate:this.rate,noiseShape:this.noiseShape,seed:this.seed},t=super.getConfig();return Object.assign(e,t),e}dispose(){return super.dispose()}}rl.className="Dropout",S.serialization.registerClass(rl);class sl extends rl{constructor(e){super(e),this.inputSpec=[{ndim:3}]}getNoiseShape(e){const t=e.shape;return[t[0],1,t[2]]}}sl.className="SpatialDropout1D",S.serialization.registerClass(sl);class ol extends co{constructor(e){if(super(e),this.activation=null,this.useBias=!0,this.kernel=null,this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",null==e.batchInputShape&&null==e.inputShape&&null!=e.inputDim){let t=null;null!=e.batchSize&&(t=e.batchSize),this.batchInputShape=[t,e.inputDim]}this.units=e.units,Mr(this.units,"units"),this.activation=cc(e.activation),null!=e.useBias&&(this.useBias=e.useBias),this.kernelInitializer=Xs(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.biasInitializer=Xs(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelConstraint=Eo(e.kernelConstraint),this.biasConstraint=Eo(e.biasConstraint),this.kernelRegularizer=mc(e.kernelRegularizer),this.biasRegularizer=mc(e.biasRegularizer),this.activityRegularizer=mc(e.activityRegularizer),this.supportsMasking=!0,this.inputSpec=[{minNDim:2}]}build(e){const t=(e=Zs(e))[e.length-1];null==this.kernel&&(this.kernel=this.addWeight("kernel",[t,this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint))),this.inputSpec=[{minNDim:2,axes:{[-1]:t}}],this.built=!0}computeOutputShape(e){const t=(e=Zs(e)).slice();return t[t.length-1]=this.units,t}call(e,t){return(0,S.tidy)((()=>{this.invokeCallHook(e,t);const n=Ys(e),a=Lr(this.activation.getClassName());let r;return null!=a?r=vs(n,this.kernel.read(),a,this.bias?this.bias.read():null):(r=vs(n,this.kernel.read()),null!=this.bias&&(r=Ss(r,this.bias.read())),null!=this.activation&&(r=this.activation.apply(r))),r}))}getConfig(){const e={units:this.units,activation:oc(this.activation),useBias:this.useBias,kernelInitializer:qs(this.kernelInitializer),biasInitializer:qs(this.biasInitializer),kernelRegularizer:pc(this.kernelRegularizer),biasRegularizer:pc(this.biasRegularizer),activityRegularizer:pc(this.activityRegularizer),kernelConstraint:To(this.kernelConstraint),biasConstraint:To(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}}ol.className="Dense",S.serialization.registerClass(ol);class il extends co{constructor(e){super(e=e||{}),this.inputSpec=[{minNDim:3}],this.dataFormat=e.dataFormat}computeOutputShape(e){e=Zs(e);for(const t of e.slice(1))if(null==t)throw new fr('The shape of the input to "Flatten" is not fully defined '+"(got ".concat(e.slice(1),"). Make sure to pass a complete ")+'"input_shape" or "batch_input_shape" argument to the first layer in your model.');return[e[0],as(e,1)]}call(e,t){return(0,S.tidy)((()=>{this.invokeCallHook(e,t);let n=Ys(e);if("channelsFirst"===this.dataFormat&&n.rank>1){const e=[0];for(let t=2;t<n.rank;++t)e.push(t);e.push(1),n=(0,S.transpose)(n,e)}return function(e){if(e.rank<=1)throw new fr("batchFlatten requires a minimum rank of 2. Got rank: ".concat(e.rank,"."));const t=[e.shape[0],as(e.shape,1)];return S.reshape(e,t)}(n)}))}getConfig(){const e={};null!=this.dataFormat&&(e.dataFormat=this.dataFormat);const t=super.getConfig();return Object.assign(e,t),e}}il.className="Flatten",S.serialization.registerClass(il);class cl extends co{constructor(e){super(e),this.supportsMasking=!0,this.activation=cc(e.activation)}call(e,t){return(0,S.tidy)((()=>{this.invokeCallHook(e,t);const n=Ys(e);return this.activation.apply(n)}))}getConfig(){const e={activation:oc(this.activation)},t=super.getConfig();return Object.assign(e,t),e}}cl.className="Activation",S.serialization.registerClass(cl);class ll extends co{constructor(e){super(e),this.n=e.n,this.inputSpec=[{ndim:2}]}computeOutputShape(e){return[e[0],this.n,e[1]]}call(e,t){return(0,S.tidy)((()=>{return e=Ys(e),t=e,n=this.n,(0,S.tidy)((()=>{if(2!==t.shape.length)throw new fr("repeat() expects a rank-2 tensor, but received a "+"rank-".concat(t.shape.length," tensor."));return ys(us(t,1),[1,n,1])}));var t,n}))}getConfig(){const e={n:this.n},t=super.getConfig();return Object.assign(e,t),e}}ll.className="RepeatVector",S.serialization.registerClass(ll);class ul extends co{constructor(e){super(e),this.targetShape=e.targetShape;for(let t=0;t<this.targetShape.length;++t)this.isUnknown(this.targetShape[t])&&(this.targetShape[t]=null)}isUnknown(e){return e<0||null==e}fixUnknownDimension(e,t){const n="Total size of new array must be unchanged.",a=t.slice();let r=1,s=null;for(let i=0;i<a.length;++i){const e=a[i];if(this.isUnknown(e)){if(null!==s)throw new fr("Can only specifiy one unknown dimension.");s=i}else r*=e}const o=as(e);if(null!==s){if(0===r||o%r!==0)throw new fr(n);a[s]=o/r}else if(o!==r)throw new fr(n);return a}computeOutputShape(e){let t=!1;for(let n=0;n<e.length;++n)if(this.isUnknown(e[n])){t=!0;break}return t?e.slice(0,1).concat(this.targetShape):e.slice(0,1).concat(this.fixUnknownDimension(e.slice(1),this.targetShape))}call(e,t){return(0,S.tidy)((()=>{this.invokeCallHook(e,t);const n=Ys(e),a=n.shape,r=a.slice(0,1).concat(this.fixUnknownDimension(a.slice(1),this.targetShape));return(0,S.reshape)(n,r)}))}getConfig(){const e={targetShape:this.targetShape},t=super.getConfig();return Object.assign(e,t),e}}ul.className="Reshape",S.serialization.registerClass(ul);class dl extends co{constructor(e){if(super(e),null==e.dims)throw new Error("Required configuration field `dims` is missing during Permute constructor call.");if(!Array.isArray(e.dims))throw new Error("Permute constructor requires `dims` to be an Array, but received "+"".concat(e.dims," instead."));const t=os(1,e.dims.length+1);if(!S.util.arraysEqual(e.dims.slice().sort(),t))throw new Error("Invalid permutation `dims`: "+JSON.stringify(e.dims)+" `dims` must contain consecutive integers starting from 1.");this.dims=e.dims,this.dimsIncludingBatch=[0].concat(this.dims),this.inputSpec=[new ao({ndim:this.dims.length+1})]}computeOutputShape(e){const t=(e=Zs(e)).slice();return this.dims.forEach(((n,a)=>{t[a+1]=e[n]})),t}call(e,t){return(0,S.transpose)(Ys(e),this.dimsIncludingBatch)}getConfig(){const e={dims:this.dims},t=super.getConfig();return Object.assign(e,t),e}}dl.className="Permute",S.serialization.registerClass(dl);class hl extends co{constructor(e){super(null==e?{}:e),this.supportsMasking=!0,this.maskValue=null!=e?null==e.maskValue?0:e.maskValue:0}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={maskValue:this.maskValue};return Object.assign(t,e),t}computeMask(e,t){const n=Ys(e);return(0,S.any)((0,S.notEqual)(n,this.maskValue),-1)}call(e,t){return(0,S.tidy)((()=>{this.invokeCallHook(e,t);const n=Ys(e),a=(0,S.any)((0,S.notEqual)(n,this.maskValue),-1,!0);return(0,S.mul)(n,(0,S.cast)(a,n.dtype))}))}}hl.className="Masking",S.serialization.registerClass(hl);class pl extends co{constructor(e){if(super(e),this.embeddings=null,this.DEFAULT_EMBEDDINGS_INITIALIZER="randomUniform",null==e.batchInputShape&&null==e.inputShape){let t=null;null!=e.batchSize&&(t=e.batchSize),null==e.inputLength?this.batchInputShape=[t,null]:this.batchInputShape=[t].concat(Sr(e.inputLength))}this.inputDim=e.inputDim,Mr(this.inputDim,"inputDim"),this.outputDim=e.outputDim,Mr(this.outputDim,"outputDim"),this.embeddingsInitializer=Xs(e.embeddingsInitializer||this.DEFAULT_EMBEDDINGS_INITIALIZER),this.embeddingsRegularizer=mc(e.embeddingsRegularizer),this.activityRegularizer=mc(e.activityRegularizer),this.embeddingsConstraint=Eo(e.embeddingsConstraint),this.maskZero=e.maskZero,this.supportsMasking=e.maskZero,this.inputLength=e.inputLength}build(e){this.embeddings=this.addWeight("embeddings",[this.inputDim,this.outputDim],this.dtype,this.embeddingsInitializer,this.embeddingsRegularizer,!0,this.embeddingsConstraint),this.built=!0}warnOnIncompatibleInputShape(e){}computeMask(e,t){return(0,S.tidy)((()=>this.maskZero?(e=Ys(e),(0,S.notEqual)(e,(0,S.zerosLike)(e))):null))}computeOutputShape(e){if(e=Zs(e),null==this.inputLength)return[...e,this.outputDim];const t=Sr(this.inputLength);if(t.length!==e.length-1)throw new fr('"inputLength" is '.concat(this.inputLength,", but received ")+"input shape has shape ".concat(e));{let n=0;for(let a=0;a<t.length;++a){const r=t[a],s=e[a+1];if(null!=r&&null!=s&&r!==s)throw new fr('"inputLength" is '.concat(this.inputLength,", but received ")+"input shape has shape ".concat(e));null==r&&(t[n]=s),n++}}return[e[0],...t,this.outputDim]}call(e,t){return(0,S.tidy)((()=>{this.invokeCallHook(e,t);let n=Ys(e);"int32"!==n.dtype&&(n=ls(n,"int32"));const a=xs(this.embeddings.read(),(0,S.reshape)(n,[n.size]));return(0,S.reshape)(a,Zs(this.computeOutputShape(n.shape)))}))}getConfig(){const e={inputDim:this.inputDim,outputDim:this.outputDim,embeddingsInitializer:qs(this.embeddingsInitializer),embeddingsRegularizer:pc(this.embeddingsRegularizer),activityRegularizer:pc(this.activityRegularizer),embeddingsConstraint:To(this.embeddingsConstraint),maskZero:this.maskZero,inputLength:this.inputLength},t=super.getConfig();return Object.assign(e,t),e}}pl.className="Embedding",S.serialization.registerClass(pl);class fl extends co{constructor(e){super(e||{}),this.supportsMasking=!0}mergeFunction(e){throw new mr}computeElementwiseOpOutputShape(e,t){if(null==e||null==t)return null;if(e.length<t.length)return this.computeElementwiseOpOutputShape(t,e);if(0===t.length)return e;const n=e.slice(0,e.length-t.length);for(let a=0;a<t.length;++a){const r=e[e.length-t.length+a],s=t[a];if(null==r||null==s||r<0||s<0)n.push(null);else if(1===r)n.push(s);else if(1===s)n.push(r);else{if(r!==s)throw new fr("Operands could not be broadcast together with shapes "+JSON.stringify(e)+" "+JSON.stringify(t));n.push(r)}}return n}build(e){if(Array.isArray(e)&&!Array.isArray(e[0])&&(e=[Zs(e)]),e.length<2)throw new fr("A merge layer should be called on an Array of at least 2 inputs."+" Got ".concat(e.length," input(s)."));let t=[];for(const r of e)null!=r&&null!==r[0]&&t.push(r[0]);if(t=Rr(t),t.length>1)throw new fr("Can not merge tensors with different batch sizes. "+"Got tensors with shapes: ".concat(JSON.stringify(e),"."));let n=null==e[0]?null:e[0].slice(1);for(let r=1;r<e.length;++r){const t=null==e[r]?null:e[r].slice(1);n=this.computeElementwiseOpOutputShape(n,t)}const a=e.map((e=>e.length));-1===e.indexOf(null)&&1===Rr(a).length?this.reshapeRequired=!1:this.reshapeRequired=!0}call(e,t){return(0,S.tidy)((()=>{if(this.reshapeRequired){const t=[],n=e.map((e=>e.rank));if(-1===n.indexOf(null)){const a=ss(n);for(let n of e){const e=n.rank;for(let t=0;t<a-e;++t)n=us(n,1);t.push(n)}return this.mergeFunction(t)}{let n=!1;for(const s of e){const e=s.rank;if(null==e){const e=s.shape,a=e[0],r=e.slice(1).concat([a]);let o=S.reshape(s,[a].concat(as(e.slice(1))));o=S.transpose(o,[1,0]),o=S.reshape(o,r),t.push(o),n=!0}else if(e>1){const a=os(1,e).concat([0]);t.push(S.transpose(s,a)),n=!0}else t.push(s)}let a=this.mergeFunction(t);const r=a.rank;if(n)if(null==r){const e=a.shape,t=e[e.length-1],n=[t].concat(e.slice(0,e.length-1));a=S.reshape(S.transpose(S.reshape(a,[-1,t]),[1,0]),n)}else if(r>1){const e=[r-1].concat(os(0,r-1));a=S.transpose(a,e)}return a}}return this.mergeFunction(e)}))}computeOutputShape(e){let t;t=null==e[0]?null:e[0].slice(1);for(let a=1;a<e.length;++a){const n=null==e[a]?null:e[a].slice(1);t=this.computeElementwiseOpOutputShape(t,n)}let n=[];for(const a of e)null!=a&&null!==a[0]&&n.push(a[0]);return n=Rr(n),t=1===n.length?n.concat(t):[null].concat(t),t}computeMask(e,t){return S.tidy((()=>{if(null==t)return null;if(!Array.isArray(t))throw new fr("`mask` should be an Array");if(!Array.isArray(e))throw new fr("`inputs` should be an Array");if(t.length!==e.length)throw new fr("The Array 'inputs' and 'mask' are expected to have the same length, but have different lengths "+"(".concat(e.length," vs ").concat(t.length,")"));if(t.every((e=>null==e)))return null;let n=(t=t.map((e=>null==e?e:S.expandDims(e,0))))[0];for(let e=1;e<t.length-1;++e)n=S.logicalAnd(n,t[e]);return n}))}}class ml extends fl{constructor(e){super(e)}mergeFunction(e){return(0,S.tidy)((()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=S.add(t,e[n]);return t}))}}ml.className="Add",S.serialization.registerClass(ml);class gl extends fl{constructor(e){super(e)}mergeFunction(e){return(0,S.tidy)((()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=S.mul(t,e[n]);return t}))}}gl.className="Multiply",S.serialization.registerClass(gl);class yl extends fl{constructor(e){super(e)}mergeFunction(e){return(0,S.tidy)((()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=S.add(t,e[n]);return S.mul(1/e.length,t)}))}}yl.className="Average",S.serialization.registerClass(yl);class bl extends fl{constructor(e){super(e)}mergeFunction(e){return(0,S.tidy)((()=>{let t=e[0];for(let n=1;n<e.length;++n)t=S.maximum(t,e[n]);return t}))}}bl.className="Maximum",S.serialization.registerClass(bl);class vl extends fl{constructor(e){super(e)}mergeFunction(e){return(0,S.tidy)((()=>{let t=e[0];for(let n=1;n<e.length;++n)t=S.minimum(t,e[n]);return t}))}}vl.className="Minimum",S.serialization.registerClass(vl);class xl extends fl{constructor(e){super(e),this.DEFAULT_AXIS=-1,null==e&&(e={}),this.axis=null==e.axis?this.DEFAULT_AXIS:e.axis,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){if(!Array.isArray(e)||!Array.isArray(e[0])||1===e.length)throw new fr("A `Concatenate` layer should be called on a list of at least 2 inputs");let t=!0;for(const a of e)if(null!=a){t=!1;break}if(t)return;const n=[];for(let a=0;a<e.length;++a){const t=e[a].slice();t.splice(this.axis,1);let r=!1;for(const e of n)if(S.util.arraysEqual(e,t)){r=!0;break}r||n.push(t)}if(n.length>1)throw new fr("A `Concatenate` layer requires inputs with matching shapes except for the concat axis. Got input shapes: "+JSON.stringify(e))}mergeFunction(e){return(0,S.tidy)((()=>ms(e,this.axis)))}computeOutputShape(e){if(!Array.isArray(e)||!Array.isArray(e[0]))throw new fr("A `Concatenate` layer should be called on a list of inputs.");const t=e,n=t[0].slice(),a=this.axis<0?n.length+this.axis:this.axis;for(const r of t.slice(1)){if(null==n[a]||null==r[a]){n[a]=null;break}n[a]+=r[a]}return n}computeMask(e,t){if(null==t)return null;if(!Array.isArray(t))throw new fr("`mask` should be an array for Concatenate");if(!Array.isArray(e))throw new fr("`inputs` should be an array for Concatenate");if(t.length!==e.length)throw new fr("Mismatch in the length of mask (".concat(t.length,") ")+"and the legnth of inputs (".concat(e.length,")"));return S.tidy((()=>{let n=!0;if(t.forEach((e=>{null==e||(n=!1)})),n)return null;const a=[];for(let s=0;s<e.length;++s)null==t[s]?a.push(S.cast(S.onesLike(e[s]),"bool")):t[s].rank<e[s].rank?a.push(S.expandDims(t[s],-1)):a.push(t[s]);const r=S.concat(a,this.axis);return S.all(r,-1,!1)}))}getConfig(){const e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}}function wl(e,t){for(;e<0;)e+=t;return e}xl.className="Concatenate",S.serialization.registerClass(xl);class kl extends fl{constructor(e){super(e),this.axes=e.axes,this.normalize=null!=e.normalize&&e.normalize,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){S.util.assert(Array.isArray(e)&&2===e.length&&Array.isArray(e[0])&&Array.isArray(e[1]),(()=>"A `Dot` layer should be called on a list of exactly 2 inputs."));const t=e[0],n=e[1];if(t.length>3||n.length>3)throw new mr("Dot layer does not support tensors of 4D or higher rank yet.");const a=this.interpretAxes(t,n);if(t[a[0]]!==n[a[1]])throw new fr("Dimension incompatibility: "+"".concat(t[a[0]]," !== ").concat(n[a[1]]))}mergeFunction(e){if(2!==e.length)throw new fr("A `Dot` layer must be called on exactly 2 inputs, "+"but received ".concat(e.length," input(s)."));let t,n=e[0],a=e[1];return t=Array.isArray(this.axes)?this.axes.map(((t,n)=>wl(t,e[n].shape.length))):[wl(this.axes,n.shape.length),wl(this.axes,a.shape.length)],this.normalize&&(n=Wo(n,t[0]),a=Wo(a,t[1])),function(e,t,n){if(e.shape.length>3||t.shape.length>3)throw new mr("batchDot is not implemented for tensors of 4D or higher rank yet");if(S.util.assert(e.shape.length>=2,(()=>"batchDot requires the rank of x to be >= 2, "+"but got ".concat(e.shape.length))),S.util.assert(e.shape.length>=2,(()=>"batchDot requires the rank of y to be >= 2, "+"but got ".concat(t.shape.length))),"number"===typeof n&&(n=[n,n]),"complex64"===e.dtype||"complex64"===t.dtype)throw new mr("batchDot is not implemented for complex64-type Tensors yet.");const a=e.shape.length,r=t.shape.length;null==n&&(n=[a-1,r-2]);const s=n;return S.tidy((()=>{let n,o;if(a>r){n=a-r;const e=[];for(let t=0;t<n;++t)e.push(1);t=S.reshape(t,t.shape.concat(e))}else if(r>a){n=r-a;const t=[];for(let e=0;e<n;++e)t.push(1);e=S.reshape(e,e.shape.concat(t))}else n=0;if(2===e.shape.length&&2===t.shape.length)o=s[0]===s[1]?S.sum(S.mul(e,t),s[0]):S.sum(S.mul(S.transpose(e,[1,0]),t),s[1]);else{const n=s[0]!==e.shape.length-1,a=s[1]===t.shape.length-1;o=S.matMul(e,t,n,a)}if(n>0){let e;e=a>r?a+r-3:a-1;const t=[];for(let a=e;a<e+n;++a)t.push(a);o=S.squeeze(o,t)}return 1===o.shape.length&&(o=S.expandDims(o,1)),o}))}(n,a,t)}interpretAxes(e,t){let n;return n=Array.isArray(this.axes)?this.axes:[wl(this.axes,e.length),wl(this.axes,t.length)],n}computeOutputShape(e){S.util.assert(Array.isArray(e)&&2===e.length&&Array.isArray(e[0])&&Array.isArray(e[1]),(()=>"A `Dot` layer should be called on a list of exactly 2 inputs."));const t=e[0].slice(),n=e[1].slice();if(t.length>3||n.length>3)throw new mr("Dot layer does not support tensors of 4D or higher rank yet.");const a=this.interpretAxes(t,n);t.splice(a[0],1),n.splice(a[1],1),n.splice(0,1);const r=t.concat(n);return 1===r.length&&r.push(1),r}computeMask(e,t){return null}getConfig(){const e={axes:this.axes,normalize:this.normalize},t=super.getConfig();return Object.assign(e,t),e}}kl.className="Dot",S.serialization.registerClass(kl);class Sl extends co{constructor(e){super(e),this.supportsMasking=!0,this.stddev=e.stddev}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={stddev:this.stddev};return Object.assign(t,e),t}call(e,t){return(0,S.tidy)((()=>{this.invokeCallHook(e,t);const n=Ys(e);return Is((()=>(0,S.add)(bs(n.shape,0,this.stddev),n)),(()=>n),t.training||!1)}))}}Sl.className="GaussianNoise",S.serialization.registerClass(Sl);class Nl extends co{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return(0,S.tidy)((()=>{this.invokeCallHook(e,t);const n=Ys(e);if(this.rate>0&&this.rate<1){return Is((()=>{const e=Math.sqrt(this.rate/(1-this.rate));return(0,S.mul)(n,bs(n.shape,1,e))}),(()=>n),t.training||!1)}return n}))}}Nl.className="GaussianDropout",S.serialization.registerClass(Nl);class Il extends co{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate,this.noiseShape=e.noiseShape}_getNoiseShape(e){return this.noiseShape||Ys(e).shape}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return(0,S.tidy)((()=>{if(this.rate<1&&this.rate>0){const n=this._getNoiseShape(e),a=()=>{const t=Ys(e),a=-1.7580993408473766;let r=(0,S.greaterEqual)((0,S.randomUniform)(n),this.rate);r=ls(r,"float32");const s=((1-this.rate)*(1+this.rate*a**2))**-.5,o=-s*a*this.rate,i=(0,S.add)((0,S.mul)(t,r),(0,S.mul)((0,S.add)(r,-1),a));return(0,S.add)((0,S.mul)(i,s),o)};return Is(a,(()=>Ys(e)),t.training||!1)}return e}))}}function Tl(e,t,n,a,r){let s,o=arguments.length>5&&void 0!==arguments[5]?arguments[5]:.001;if(2===e.rank)s=S.batchNorm2d(e,t,n,a,r,o);else if(3===e.rank)s=S.batchNorm3d(e,t,n,a,r,o);else{if(4!==e.rank)throw new mr("batchNormalization is not implemented for array of rank ".concat(e.rank," ")+"yet");s=S.batchNorm4d(e,t,n,a,r,o)}return s}function Cl(e,t,n,a){let r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:.001;return(0,S.tidy)((()=>{const s=S.moments(e,a),o=s.mean,i=s.variance;return[Tl(e,o,i,n,t,r),o,i]}))}function El(e,t,n,a){let r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:.001;return(0,S.tidy)((()=>{const s=S.moments(e,a),o=s.mean,i=s.variance,c=[];for(const t of os(0,e.rank))-1!==a.indexOf(t)?c.push(1):c.push(e.shape[t]);const l=(0,S.reshape)(o,c),u=(0,S.reshape)(i,c),d=null==t?null:(0,S.reshape)(t,c),h=null==n?null:(0,S.reshape)(n,c);return[Tl(e,l,u,h,d,r),o,i]}))}Il.className="AlphaDropout",S.serialization.registerClass(Il);class _l extends co{constructor(e){null==e&&(e={}),super(e),this.supportsMasking=!0,this.axis=null==e.axis?-1:e.axis,this.momentum=null==e.momentum?.99:e.momentum,this.epsilon=null==e.epsilon?.001:e.epsilon,this.center=null==e.center||e.center,this.scale=null==e.scale||e.scale,this.betaInitializer=Xs(e.betaInitializer||"zeros"),this.gammaInitializer=Xs(e.gammaInitializer||"ones"),this.movingMeanInitializer=Xs(e.movingMeanInitializer||"zeros"),this.movingVarianceInitializer=Xs(e.movingVarianceInitializer||"ones"),this.betaConstraint=Eo(e.betaConstraint),this.gammaConstraint=Eo(e.gammaConstraint),this.betaRegularizer=mc(e.betaRegularizer),this.gammaRegularizer=mc(e.gammaRegularizer)}build(e){e=Zs(e);const t=this.axis>=0?this.axis:this.axis+e.length,n=e[t];if(null==n)throw new fr("Axis ".concat(t," of input tensor should have a defined dimension but ")+"the layer received an input with shape "+"".concat(JSON.stringify(e),"."));this.inputSpec=[new ao({ndim:e.length,axes:{[t]:n}})];const a=[n];this.scale&&(this.gamma=this.addWeight("gamma",a,null,this.gammaInitializer,this.gammaRegularizer,!0,this.gammaConstraint)),this.center&&(this.beta=this.addWeight("beta",a,null,this.betaInitializer,this.betaRegularizer,!0,this.betaConstraint)),this.movingMean=this.addWeight("moving_mean",a,null,this.movingMeanInitializer,null,!1),this.movingVariance=this.addWeight("moving_variance",a,null,this.movingVarianceInitializer,null,!1),this.built=!0}call(e,t){return(0,S.tidy)((()=>{const n=null!=t.training&&t.training,a=Ys(e),r=a.shape,s=r.length,o=os(0,s),i=this.axis>=0?this.axis:this.axis+s;o.splice(i,1);const c=vr(1,s);c[i]=r[i];const l=o.slice();l.sort();const u=!S.util.arraysEqual(l,os(0,s).slice(0,s-1));if(!n)return(()=>{if(u){const e=(0,S.reshape)(this.movingMean.read(),c),t=(0,S.reshape)(this.movingVariance.read(),c),n=this.center?(0,S.reshape)(this.beta.read(),c):null,r=this.scale?(0,S.reshape)(this.gamma.read(),c):null;return Tl(a,e,t,n,r,this.epsilon)}return Tl(a,this.movingMean.read(),this.movingVariance.read(),null==this.beta?null:this.beta.read(),null==this.gamma?null:this.gamma.read(),this.epsilon)})();const[d,h,p]=function(e,t,n,a){let r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:.001;return S.util.arraysEqual(a.slice().sort(),os(0,e.rank-1))?Cl(e,t,n,a,r):El(e,t,n,a,r)}(a,this.gamma.read(),this.beta.read(),o,this.epsilon),f=(e,t,n)=>{S.tidy((()=>{const a=1-n,r=e.read(),s=S.mul(S.sub(r,t),a);e.write(S.sub(r,s))}))};return(()=>{f(this.movingMean,h,this.momentum),f(this.movingVariance,p,this.momentum)})(),d}))}getConfig(){const e={axis:this.axis,momentum:this.momentum,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:qs(this.betaInitializer),gammaInitializer:qs(this.gammaInitializer),movingMeanInitializer:qs(this.movingMeanInitializer),movingVarianceInitializer:qs(this.movingVarianceInitializer),betaRegularizer:pc(this.betaRegularizer),gammaRegularizer:pc(this.gammaRegularizer),betaConstraint:To(this.betaConstraint),gammaConstraint:To(this.gammaConstraint)},t=super.getConfig();return Object.assign(e,t),e}}_l.className="BatchNormalization",S.serialization.registerClass(_l);class Al extends co{constructor(e){if(null==e&&(e={}),super(e),this.axis=null==e.axis?-1:e.axis,"number"===typeof this.axis){if(!Number.isInteger(this.axis))throw new Error("Expected axis to be an integer, but received ".concat(this.axis))}else{if(!Array.isArray(this.axis))throw new Error("Expected axis to be an integer or an array of integers, "+"but received ".concat(JSON.stringify(this.axis)));for(const e of this.axis)if(!Number.isInteger(e))throw new Error("Expected axis to be an array of integers, "+"but received ".concat(JSON.stringify(this.axis)))}this.epsilon=null==e.epsilon?.001:e.epsilon,this.center=null==e.center||e.center,this.scale=null==e.scale||e.scale,this.betaInitializer=Xs(e.betaInitializer||"zeros"),this.gammaInitializer=Xs(e.gammaInitializer||"ones"),this.betaRegularizer=mc(e.betaRegularizer),this.gammaRegularizer=mc(e.gammaRegularizer),this.supportsMasking=!0}build(e){const t=(e=Zs(e)).length;"number"===typeof this.axis&&(this.axis=[this.axis]);for(let a=0;a<this.axis.length;++a)this.axis[a]<0&&(this.axis[a]+=t);for(const a of this.axis)if(a<0||a>=t)throw new Error("Invalid axis: ".concat(a));if(this.axis.length!==Rr(this.axis).length)throw new Error("Found duplicate axes in: ".concat(this.axis));const n=this.axis.map((t=>e[t]));this.scale?this.gamma=this.addWeight("gamma",n,"float32",this.gammaInitializer,this.gammaRegularizer,true):this.gamma=null,this.center?this.beta=this.addWeight("beta",n,"float32",this.betaInitializer,this.betaRegularizer,true):this.beta=null,this.built=!0}call(e,t){const n=Ys(e),a=n.shape,r=a.length;return(0,S.tidy)((()=>{let{mean:e,variance:t}=(0,S.moments)(n,this.axis,!0);const s=vr(1,r);for(const n of this.axis)s[n]=a[n];const o=e=>null!=e&&e.shape.length!==r?S.reshape(e,s):e;let i=this.scale?o(this.gamma.read()):null,c=this.center?o(this.beta.read()):null;const l=[],u=[];for(let n=0;n<r;++n)-1!==this.axis.indexOf(n)?(l.push(a[n]),u.push(1)):(l.push(1),u.push(a[n]));return e=S.tile(e,l),t=S.tile(t,l),null!=i&&(i=S.tile(i,u)),null!=c&&(c=S.tile(c,u)),Tl(n,e,t,c,i,this.epsilon)}))}getConfig(){const e={axis:this.axis,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:qs(this.betaInitializer),gammaInitializer:qs(this.gammaInitializer),betaRegularizer:pc(this.betaRegularizer),gammaRegularizer:pc(this.gammaRegularizer)},t=super.getConfig();return Object.assign(e,t),e}}Al.className="LayerNormalization",S.serialization.registerClass(Al);class Rl extends co{constructor(e){if(null==e&&(e={}),super(e),this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,null==e.padding)this.padding=[[1,1],[1,1]];else if("number"===typeof e.padding)this.padding=[[e.padding,e.padding],[e.padding,e.padding]];else{if(e.padding=e.padding,2!==e.padding.length)throw new fr("ZeroPadding2D expects padding to be a length-2 array, but "+"received a length-".concat(e.padding.length," array."));let t,n;if("number"===typeof e.padding[0])t=[e.padding[0],e.padding[0]],n=[e.padding[1],e.padding[1]];else{if(e.padding=e.padding,2!==e.padding[0].length)throw new fr("ZeroPadding2D expects height padding to be a length-2 array, "+"but received a length-".concat(e.padding[0].length," array."));if(t=e.padding[0],2!==e.padding[1].length)throw new fr("ZeroPadding2D expects width padding to be a length-2 array, "+"but received a length-".concat(e.padding[1].length," array."));n=e.padding[1]}this.padding=[t,n]}this.inputSpec=[new ao({ndim:4})]}computeOutputShape(e){let t,n;return e=Zs(e),"channelsFirst"===this.dataFormat?(t=null!=e[2]&&e[2]>=0?e[2]+this.padding[0][0]+this.padding[0][1]:null,n=null!=e[3]&&e[3]>=0?e[3]+this.padding[1][0]+this.padding[1][1]:null,[e[0],e[1],t,n]):(t=null!=e[1]&&e[1]>=0?e[1]+this.padding[0][0]+this.padding[0][1]:null,n=null!=e[2]&&e[2]>=0?e[2]+this.padding[1][0]+this.padding[1][1]:null,[e[0],t,n,e[3]])}call(e,t){return(0,S.tidy)((()=>{return t=Ys(e),n=this.padding,a=this.dataFormat,(0,S.tidy)((()=>{if(4!==t.rank)throw new fr("temporalPadding expects input tensor to be 4-D, but received a "+"".concat(t.rank,"-D tensor."));if(null==n&&(n=[[1,1],[1,1]]),2!==n.length||2!==n[0].length||2!==n[1].length)throw new fr("spatial2dPadding expects `padding` to be an Array of two Arrays, each of which is an Array of two integers.");if(null==a&&(a="channelsLast"),"channelsLast"!==a&&"channelsFirst"!==a)throw new fr("Unknown data format: ".concat(a,". ")+"Supported data formats are 'channelsLast' and 'channelsFirst.");let e;return e="channelsFirst"===a?[[0,0],[0,0],n[0],n[1]]:[[0,0],n[0],n[1],[0,0]],S.pad(t,e)}));var t,n,a}))}getConfig(){const e={padding:this.padding,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}function Fl(e,t,n,a,r,s){return(0,S.tidy)((()=>{let o;Kr(r),Yr(s),Qr(a),null==n&&(n=[1,1]),null==a&&(a="valid"),null==r&&(r="channelsLast"),null==s&&(s="max"),e=Ic(e,r);const i="same"===a?"same":"valid";return o="max"===s?S.maxPool(e,t,n,i):S.avgPool(e,t,n,i),"channelsFirst"===r&&(o=S.transpose(o,[0,3,1,2])),o}))}function Dl(e,t,n,a,r,s){return(0,S.tidy)((()=>{let o;Kr(r),Yr(s),Qr(a),null==n&&(n=[1,1,1]),null==a&&(a="valid"),null==r&&(r="channelsLast"),null==s&&(s="max"),e=Tc(e,r);const i="same"===a?"same":"valid";return o="max"===s?S.maxPool3d(e,t,n,i):S.avgPool3d(e,t,n,i),"channelsFirst"===r&&(o=S.transpose(o,[0,4,1,2,3])),o}))}Rl.className="ZeroPadding2D",S.serialization.registerClass(Rl);class Ol extends co{constructor(e){if(null==e.poolSize&&(e.poolSize=2),super(e),"number"===typeof e.poolSize)this.poolSize=[e.poolSize];else{if(!Array.isArray(e.poolSize)||1!==e.poolSize.length||"number"!==typeof e.poolSize[0])throw new fr("poolSize for 1D convolutional layer must be a number or an Array of a single number, but received "+"".concat(JSON.stringify(e.poolSize)));this.poolSize=e.poolSize}if(Mr(this.poolSize,"poolSize"),null==e.strides)this.strides=this.poolSize;else if("number"===typeof e.strides)this.strides=[e.strides];else{if(!Array.isArray(e.strides)||1!==e.strides.length||"number"!==typeof e.strides[0])throw new fr("strides for 1D convolutional layer must be a number or an Array of a single number, but received "+"".concat(JSON.stringify(e.strides)));this.strides=e.strides}Mr(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,Qr(this.padding),this.inputSpec=[new ao({ndim:3})]}computeOutputShape(e){const t=Sc((e=Zs(e))[1],this.poolSize[0],this.padding,this.strides[0]);return[e[0],t,e[2]]}call(e,t){return(0,S.tidy)((()=>{this.invokeCallHook(e,t),e=us(Ys(e),2);const n=this.poolingFunction(Ys(e),[this.poolSize[0],1],[this.strides[0],1],this.padding,"channelsLast");return S.squeeze(n,[2])}))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides},t=super.getConfig();return Object.assign(e,t),e}}class Ml extends Ol{constructor(e){super(e)}poolingFunction(e,t,n,a,r){return Kr(r),Qr(a),Fl(e,t,n,a,r,"max")}}Ml.className="MaxPooling1D",S.serialization.registerClass(Ml);class zl extends Ol{constructor(e){super(e)}poolingFunction(e,t,n,a,r){return Kr(r),Qr(a),Fl(e,t,n,a,r,"avg")}}zl.className="AveragePooling1D",S.serialization.registerClass(zl);class Ll extends co{constructor(e){if(null==e.poolSize&&(e.poolSize=[2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize],null==e.strides)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(2!==e.strides.length)throw new fr("If the strides property of a 2D pooling layer is an Array, it is expected to have a length of 2, but received length "+"".concat(e.strides.length,"."));this.strides=e.strides}else this.strides=[e.strides,e.strides];Mr(this.poolSize,"poolSize"),Mr(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,Kr(this.dataFormat),Qr(this.padding),this.inputSpec=[new ao({ndim:4})]}computeOutputShape(e){e=Zs(e);let t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2];return t=Sc(t,this.poolSize[0],this.padding,this.strides[0]),n=Sc(n,this.poolSize[1],this.padding,this.strides[1]),"channelsFirst"===this.dataFormat?[e[0],e[1],t,n]:[e[0],t,n,e[3]]}call(e,t){return(0,S.tidy)((()=>(this.invokeCallHook(e,t),this.poolingFunction(Ys(e),this.poolSize,this.strides,this.padding,this.dataFormat))))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class Bl extends Ll{constructor(e){super(e)}poolingFunction(e,t,n,a,r){return Kr(r),Qr(a),Fl(e,t,n,a,r,"max")}}Bl.className="MaxPooling2D",S.serialization.registerClass(Bl);class Pl extends Ll{constructor(e){super(e)}poolingFunction(e,t,n,a,r){return Kr(r),Qr(a),Fl(e,t,n,a,r,"avg")}}Pl.className="AveragePooling2D",S.serialization.registerClass(Pl);class Vl extends co{constructor(e){if(null==e.poolSize&&(e.poolSize=[2,2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize,e.poolSize],null==e.strides)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(3!==e.strides.length)throw new fr("If the strides property of a 3D pooling layer is an Array, it is expected to have a length of 3, but received length "+"".concat(e.strides.length,"."));this.strides=e.strides}else this.strides=[e.strides,e.strides,e.strides];Mr(this.poolSize,"poolSize"),Mr(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,Kr(this.dataFormat),Qr(this.padding),this.inputSpec=[new ao({ndim:5})]}computeOutputShape(e){e=Zs(e);let t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2],a="channelsFirst"===this.dataFormat?e[4]:e[3];return t=Sc(t,this.poolSize[0],this.padding,this.strides[0]),n=Sc(n,this.poolSize[1],this.padding,this.strides[1]),a=Sc(a,this.poolSize[2],this.padding,this.strides[2]),"channelsFirst"===this.dataFormat?[e[0],e[1],t,n,a]:[e[0],t,n,a,e[4]]}call(e,t){return(0,S.tidy)((()=>(this.invokeCallHook(e,t),this.poolingFunction(Ys(e),this.poolSize,this.strides,this.padding,this.dataFormat))))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class Wl extends Vl{constructor(e){super(e)}poolingFunction(e,t,n,a,r){return Kr(r),Qr(a),Dl(e,t,n,a,r,"max")}}Wl.className="MaxPooling3D",S.serialization.registerClass(Wl);class Ul extends Vl{constructor(e){super(e)}poolingFunction(e,t,n,a,r){return Kr(r),Qr(a),Dl(e,t,n,a,r,"avg")}}Ul.className="AveragePooling3D",S.serialization.registerClass(Ul);class Gl extends co{constructor(e){super(e),this.inputSpec=[new ao({ndim:3})]}computeOutputShape(e){return[e[0],e[2]]}call(e,t){throw new mr}}class Hl extends Gl{constructor(e){super(e||{})}call(e,t){return(0,S.tidy)((()=>{const t=Ys(e);return S.mean(t,1)}))}}Hl.className="GlobalAveragePooling1D",S.serialization.registerClass(Hl);class jl extends Gl{constructor(e){super(e||{})}call(e,t){return(0,S.tidy)((()=>{const t=Ys(e);return S.max(t,1)}))}}jl.className="GlobalMaxPooling1D",S.serialization.registerClass(jl);class ql extends co{constructor(e){super(e),this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,Kr(this.dataFormat),this.inputSpec=[new ao({ndim:4})]}computeOutputShape(e){return"channelsLast"===this.dataFormat?[e[0],e[3]]:[e[0],e[1]]}call(e,t){throw new mr}getConfig(){const e={dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class Xl extends ql{call(e,t){return(0,S.tidy)((()=>{const t=Ys(e);return"channelsLast"===this.dataFormat?S.mean(t,[1,2]):S.mean(t,[2,3])}))}}Xl.className="GlobalAveragePooling2D",S.serialization.registerClass(Xl);class Kl extends ql{call(e,t){return(0,S.tidy)((()=>{const t=Ys(e);return"channelsLast"===this.dataFormat?S.max(t,[1,2]):S.max(t,[2,3])}))}}Kl.className="GlobalMaxPooling2D",S.serialization.registerClass(Kl);class Ql extends co{constructor(e){super(e),this.layer=e.layer}build(e){this.built=!0}get trainable(){return null!=this.layer&&this.layer.trainable}set trainable(e){null!=this.layer&&(this.layer.trainable=e)}get trainableWeights(){return this.layer.trainableWeights}get nonTrainableWeights(){return this.layer.nonTrainableWeights}get updates(){return this.layer._updates}get losses(){return this.layer.losses}getWeights(){return this.layer.getWeights()}setWeights(e){this.layer.setWeights(e)}getConfig(){const e={layer:{className:this.layer.getClassName(),config:this.layer.getConfig()}},t=super.getConfig();return Object.assign(e,t),e}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.layer&&this.layer.setFastWeightInitDuringBuild(e)}static fromConfig(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};const a=Vo(t.layer,n);delete t.layer;const r={layer:a};return Object.assign(r,t),new e(r)}}class Yl extends Ql{constructor(e){super(e),this.supportsMasking=!0}build(e){if((e=Zs(e)).length<3)throw new fr("TimeDistributed layer expects an input shape >= 3D, but received "+"input shape ".concat(JSON.stringify(e)));this.inputSpec=[{shape:e}];const t=[e[0]].concat(e.slice(2));this.layer.built||(this.layer.build(t),this.layer.built=!0),super.build(e)}computeOutputShape(e){const t=[(e=Zs(e))[0]].concat(e.slice(2)),n=this.layer.computeOutputShape(t),a=e[1];return[n[0],a].concat(n.slice(1))}call(e,t){return(0,S.tidy)((()=>Gc(((e,n)=>[Ys(this.layer.call(e,t)),[]]),e=Ys(e),[],!1,null,null,!1,!0)[1]))}}Yl.className="TimeDistributed",S.serialization.registerClass(Yl);class Zl extends Ql{constructor(e){super(e);const t=e.layer.getConfig(),n={};n.className=e.layer.getClassName(),n.config=t,this.forwardLayer=Vo(n),t.goBackwards=!0!==t.goBackwards;const a={};var r;if(a.className=e.layer.getClassName(),a.config=t,this.backwardLayer=Vo(a),this.forwardLayer.name="forward_"+this.forwardLayer.name,this.backwardLayer.name="backward_"+this.backwardLayer.name,this.mergeMode=void 0===e.mergeMode?"concat":e.mergeMode,r=this.mergeMode,Dr(qr,"BidirectionalMergeMode",r),e.weights)throw new mr("weights support is not implemented for Bidirectional layer yet.");this._stateful=e.layer.stateful,this.returnSequences=e.layer.returnSequences,this.returnState=e.layer.returnState,this.supportsMasking=!0,this._trainable=!0,this.inputSpec=e.layer.inputSpec,this.numConstants=null}get trainable(){return this._trainable}set trainable(e){this._trainable=e,null!=this.forwardLayer&&(this.forwardLayer.trainable=e),null!=this.backwardLayer&&(this.backwardLayer.trainable=e)}getWeights(){return this.forwardLayer.getWeights().concat(this.backwardLayer.getWeights())}setWeights(e){const t=e.length,n=Math.floor(t/2);this.forwardLayer.setWeights(e.slice(0,n)),this.backwardLayer.setWeights(e.slice(n))}computeOutputShape(e){let t,n,a,r=this.forwardLayer.computeOutputShape(e);return Array.isArray(r)&&Array.isArray(r[0])||(r=[r]),this.returnState?(a=r.slice(1),t=r[0]):t=r[0],"concat"===this.mergeMode?(t[t.length-1]*=2,n=[t]):n=null==this.mergeMode?[t,t.slice()]:[t],this.returnState?null==this.mergeMode?n.concat(a).concat(a.slice()):[t].concat(a).concat(a.slice()):kr(n)}apply(e,t){let n=null==t?null:t.initialState,a=null==t?null:t.constants;null==t&&(t={});const r=Uc(e,n,a,this.numConstants);if(e=r.inputs,n=r.initialState,a=r.constants,Array.isArray(e)&&(n=e.slice(1),e=e[0]),(null==n||0===n.length)&&null==a)return super.apply(e,t);const s=[],o=[];if(null!=n){const e=n.length;if(e%2>0)throw new fr("When passing `initialState` to a Bidrectional RNN, the state should be an Array containing the states of the underlying RNNs.");t.initialState=n,s.push(...n);const a=n.map((e=>new ao({shape:e.shape})));this.forwardLayer.stateSpec=a.slice(0,e/2),this.backwardLayer.stateSpec=a.slice(e/2),o.push(...a)}if(null!=a)throw new mr("Support for constants in Bidirectional layers is not implemented yet.");const i=s[0]instanceof ro;for(const c of s)if(c instanceof ro!==i)throw new fr("The initial state of a Bidirectional layer cannot be specified as a mix of symbolic and non-symbolic tensors");if(i){const n=[e].concat(s),a=this.inputSpec.concat(o),r=this.inputSpec;this.inputSpec=a;const i=super.apply(n,t);return this.inputSpec=r,i}return super.apply(e,t)}call(e,t){return(0,S.tidy)((()=>{const n=t.initialState;let a,r,s,o;if(null==n)a=this.forwardLayer.call(e,t),r=this.backwardLayer.call(e,t);else{const s=n.slice(0,n.length/2),o=n.slice(n.length/2);a=this.forwardLayer.call(e,Object.assign(t,{initialState:s})),r=this.backwardLayer.call(e,Object.assign(t,{initialState:o}))}return this.returnState&&(Array.isArray(a)&&(s=a.slice(1).concat(r.slice(1))),a=a[0],r=r[0]),this.returnSequences&&(r=S.reverse(r,1)),"concat"===this.mergeMode?o=ms([a,r]):"sum"===this.mergeMode?o=S.add(a,r):"ave"===this.mergeMode?o=S.mul(.5,S.add(a,r)):"mul"===this.mergeMode?o=S.mul(a,r):null==this.mergeMode&&(o=[a,r]),this.returnState?null==this.mergeMode?o.concat(s):[o].concat(s):o}))}resetStates(e){this.forwardLayer.resetStates(),this.backwardLayer.resetStates()}build(e){Jr(this.forwardLayer.name,(()=>{this.forwardLayer.build(e)})),Jr(this.backwardLayer.name,(()=>{this.backwardLayer.build(e)})),this.built=!0}computeMask(e,t){let n;if(Array.isArray(t)&&(t=t[0]),n=this.returnSequences?null==this.mergeMode?[t,t]:t:null==this.mergeMode?[null,null]:null,this.returnState){const e=this.forwardLayer.states.map((e=>null));return Array.isArray(n)?n.concat(e).concat(e):[n].concat(e).concat(e)}return n}get trainableWeights(){return this.forwardLayer.trainableWeights.concat(this.backwardLayer.trainableWeights)}get nonTrainableWeights(){return this.forwardLayer.nonTrainableWeights.concat(this.backwardLayer.nonTrainableWeights)}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.forwardLayer&&this.forwardLayer.setFastWeightInitDuringBuild(e),null!=this.backwardLayer&&this.backwardLayer.setFastWeightInitDuringBuild(e)}getConfig(){const e={mergeMode:this.mergeMode},t=super.getConfig();return Object.assign(e,t),e}static fromConfig(e,t){const n=Vo(t.layer);if(delete t.layer,null!=t.numConstants)throw new mr("Deserialization of a Bidirectional layer with numConstants present is not supported yet.");const a=t;return a.layer=n,new e(a)}}Zl.className="Bidirectional",S.serialization.registerClass(Zl);class Jl extends co{constructor(e){super(e),this.scale=e.scale,e.offset?this.offset=e.offset:this.offset=0}getConfig(){const e={scale:this.scale,offset:this.offset},t=super.getConfig();return Object.assign(e,t),e}call(e,t){return(0,S.tidy)((()=>("float32"!==(e=Ys(e)).dtype&&(e=ls(e,"float32")),(0,S.add)((0,S.mul)(e,this.scale),this.offset))))}}Jl.className="Rescaling",S.serialization.registerClass(Jl);const{resizeBilinear:$l,cropAndResize:eu}=S.image;class tu extends co{constructor(e){super(e),this.height=e.height,this.width=e.width}centerCrop(e,t,n,a,r,s,o,i){return(0,S.tidy)((()=>{let c,l=!1;const u=[t/s,n/o,(a+t)/s,(r+n)/o],d=[];3===e.rank?(l=!0,c=(0,S.stack)([e])):c=e;for(let e=0;e<c.shape[0];e++)d.push(u);const h=(0,S.tensor)(d,[d.length,4]),p=(0,S.range)(0,d.length,1,"int32"),f=eu(c,h,p,[a,r],"nearest");return ls(l?Ys((0,S.unstack)(f)):f,i)}))}upsize(e,t,n,a){return(0,S.tidy)((()=>ls($l(e,[t,n]),a)))}call(e,t){return(0,S.tidy)((()=>{const t=Ys(e),n=t.dtype,a=t.shape,r=a[a.length-3],s=a[a.length-2];let o=0;r!==this.height&&(o=Math.floor((r-this.height)/2));let i=0;return s!==this.width&&(i=Math.floor((s-this.width)/2),0===i&&(i=1)),o>=0&&i>=0?this.centerCrop(t,o,i,this.height,this.width,r,s,n):this.upsize(e,this.height,this.width,n)}))}getConfig(){const e={height:this.height,width:this.width},t=super.getConfig();return Object.assign(e,t),e}computeOutputShape(e){const t=(e=Zs(e)).length-3,n=e.length-2;return e[t]=this.height,e[n]=this.width,e}}tu.className="CenterCrop",S.serialization.registerClass(tu);class nu extends co{constructor(e){super(e),this.numTokens=e.numTokens,e.outputMode?this.outputMode=e.outputMode:this.outputMode="multiHot"}getConfig(){const e={numTokens:this.numTokens,outputMode:this.outputMode},t=super.getConfig();return Object.assign(e,t),e}computeOutputShape(e){return null==(e=Zs(e))?[this.numTokens]:"oneHot"===this.outputMode&&1!==e[e.length-1]?(e.push(this.numTokens),e):(e[e.length-1]=this.numTokens,e)}call(e,t){return(0,S.tidy)((()=>{let n;if("int32"!==(e=Ys(e)).dtype&&(e=ls(e,"int32")),"undefined"!==typeof t.countWeights){if("count"!==this.outputMode)throw new fr("countWeights is not used when outputMode !== count.\n              Received countWeights=".concat(t.countWeights));n=Ys(t.countWeights)}const a=(0,S.max)(e),r=(0,S.min)(e),s=(0,S.greater)(this.numTokens,a).bufferSync().get(0),o=(0,S.greaterEqual)(r,0).bufferSync().get(0);if(!s||!o)throw new fr("Input values must be between 0 < values <="+" numTokens with numTokens=".concat(this.numTokens));return function(e,t,n,a){let r=Ys(e);if("int32"!==r.dtype&&(r=ls(r,"int32")),"int"===t)return r;const s=r.shape;if(0===r.rank&&(r=(0,S.expandDims)(r,-1)),"oneHot"===t&&1!==r.shape[r.shape.length-1]&&(r=(0,S.expandDims)(r,-1)),r.rank>2)throw new fr("When outputMode is not int, maximum output rank is 2"+" Received outputMode ".concat(t," and input shape ").concat(s)+" which would result in output rank ".concat(r.rank,"."));const o=["multiHot","oneHot"].includes(t),i=r;let c;if(c="undefined"!==typeof a&&"count"===t?(0,S.denseBincount)(i,a,n,o):(0,S.denseBincount)(i,[],n,o),"tfIdf"!==t)return c;if(a)return(0,S.mul)(c,a);throw new fr("When outputMode is 'tfIdf', weights must be provided.")}(e,this.outputMode,this.numTokens,n)}))}}nu.className="CategoryEncoding",S.serialization.registerClass(nu);const au=new Set(["bilinear","nearest"]);class ru extends co{constructor(e){if(super(e),this.height=e.height,this.width=e.width,e.interpolation){if(!au.has(e.interpolation))throw new fr("Invalid interpolation parameter: ".concat(e.interpolation," is not implemented"));this.interpolation=e.interpolation}else this.interpolation="bilinear";this.cropToAspectRatio=Boolean(e.cropToAspectRatio)}computeOutputShape(e){const t=(e=Zs(e))[2];return[this.height,this.width,t]}getConfig(){const e={height:this.height,width:this.width,interpolation:this.interpolation,cropToAspectRatio:this.cropToAspectRatio},t=super.getConfig();return Object.assign(e,t),e}call(e,t){return(0,S.tidy)((()=>{const t=[this.height,this.width];if("bilinear"===this.interpolation)return S.image.resizeBilinear(e,t,!this.cropToAspectRatio);if("nearest"===this.interpolation)return S.image.resizeNearestNeighbor(e,t,!this.cropToAspectRatio);throw new Error("Interpolation is ".concat(this.interpolation," but only ").concat([...au]," are supported"))}))}}ru.className="Resizing",S.serialization.registerClass(ru);class su{constructor(e){this.seed=e}next(){if(void 0!==this.seed)return this.seed++}}su.className="RandomSeed";class ou extends co{constructor(e){super(e),this.randomGenerator=new su(e.seed)}getConfig(){const e={seed:this.randomGenerator.seed},t=super.getConfig();return Object.assign(e,t),e}}ou.className="BaseRandomLayer";const iu=new Set(["bilinear","nearest"]);class cu extends ou{constructor(e){super(e);const{factor:t,interpolation:n="bilinear"}=e;if(this.factor=t,Array.isArray(this.factor)&&2===this.factor.length)this.widthLower=this.factor[0],this.widthUpper=this.factor[1];else{if(Array.isArray(this.factor)||!(this.factor>0))throw new fr("Invalid factor: ".concat(this.factor,". Must be positive number or tuple of 2 numbers"));this.widthLower=-this.factor,this.widthUpper=this.factor}if(this.widthLower<-1||this.widthUpper<-1)throw new fr("factor must have values larger than -1. Got: ".concat(this.factor));if(this.widthUpper<this.widthLower)throw new fr("factor cannot have upper bound less than lower bound.\n        Got upper bound: ".concat(this.widthUpper,".\n        Got lower bound: ").concat(this.widthLower,"\n      "));if(n){if(!iu.has(n))throw new fr("Invalid interpolation parameter: ".concat(n," is not implemented"));this.interpolation=n}}getConfig(){const e={factor:this.factor,interpolation:this.interpolation},t=super.getConfig();return Object.assign(e,t),e}computeOutputShape(e){const t=(e=Zs(e))[2];return[this.imgHeight,-1,t]}call(e,t){return(0,S.tidy)((()=>{const t=Ys(e);this.imgHeight=t.shape[t.shape.length-3];const n=t.shape[t.shape.length-2];this.widthFactor=(0,S.randomUniform)([1],1+this.widthLower,1+this.widthUpper,"float32",this.randomGenerator.next());let a=this.widthFactor.dataSync()[0]*n;a=Math.round(a);const r=[this.imgHeight,a];switch(this.interpolation){case"bilinear":return S.image.resizeBilinear(e,r);case"nearest":return S.image.resizeNearestNeighbor(e,r);default:throw new Error("Interpolation is ".concat(this.interpolation,"\n          but only ").concat([...iu]," are supported"))}}))}}cu.className="RandomWidth",S.serialization.registerClass(cu);var lu,uu=n(1447),du=n(6699);function hu(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:new Map,a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:new Set;if(null==e)return null;if("function"===typeof Blob&&e instanceof Blob)return e.slice();if(a.has(e))throw new Error("Circular references are not supported.");if(n.has(e))return n.get(e);const r=t(e);if(r.recurse&&null!==r.value)throw new Error("A deep map function may not return both a value and recurse=true.");if(r.recurse){if(mu(e)){const r=Array.isArray(e)?[]:{};a.add(e);for(const s in e){const o=hu(e[s],t,n,a);r[s]=o}return a.delete(e),e.__proto__&&(r.__proto__=e.__proto__),r}throw new Error("Can't recurse into non-iterable type: ".concat(e))}return n.set(e,r.value),r.value}function pu(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:new Set;const a=e[0];if(n.has(a))throw new Error("Circular references are not supported.");const r=t(e);if(r.recurse&&null!==r.value)throw new Error("A deep zip function may not return both a value and recurse=true.");if(r.recurse){if(mu(a)){const r=Array.isArray(a)?[]:{};n.add(a);for(const s in a){const a=pu(e.map((e=>e[s])),t,n);r[s]=a}return n.delete(a),r}throw new Error("Can't recurse into non-iterable type: ".concat(a))}return r.value}function fu(e){return null===e?null:mu(e[0])?{value:null,recurse:!0}:{value:e,recurse:!1}}function mu(e){let t=!1;if(S.env().get("IS_BROWSER"))t=e instanceof TextDecoder;else{const{StringDecoder:a}=n(4977);t=e instanceof a}return null!=e&&!ArrayBuffer.isView(e)&&(Array.isArray(e)||"object"===typeof e&&!(e instanceof S.Tensor)&&!(e instanceof Promise)&&!t)}function gu(e){return function(e,t){return hu(e,t)}(e,yu)}function yu(e){return e instanceof S.Tensor?{value:e.clone(),recurse:!1}:mu(e)?{value:null,recurse:!0}:{value:e,recurse:!1}}class bu{constructor(e){if(this.capacity=e,this.begin=0,this.end=0,null==e)throw new RangeError("Can't create a ring buffer of unknown capacity.");if(e<1)throw new RangeError("Can't create ring buffer of capacity < 1.");this.data=new Array(e),this.doubledCapacity=2*e}wrap(e){for(;e<0;)e+=this.doubledCapacity;return e%this.doubledCapacity}get(e){if(e<0)throw new RangeError("Can't get item at a negative index.");return this.data[e%this.capacity]}set(e,t){if(e<0)throw new RangeError("Can't set item at a negative index.");this.data[e%this.capacity]=t}length(){let e=this.end-this.begin;return e<0&&(e=this.doubledCapacity+e),e}isFull(){return this.length()===this.capacity}isEmpty(){return 0===this.length()}push(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.set(this.end,e),this.end=this.wrap(this.end+1)}pushAll(e){for(const t of e)this.push(t)}pop(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");this.end=this.wrap(this.end-1);const e=this.get(this.end);return this.set(this.end,void 0),e}unshift(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.begin=this.wrap(this.begin-1),this.set(this.begin,e)}shift(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");const e=this.get(this.begin);return this.set(this.begin,void 0),this.begin=this.wrap(this.begin+1),e}shuffleExcise(e){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");const t=this.wrap(this.begin+e),n=this.get(t);return this.set(t,this.pop()),n}}class vu extends bu{constructor(){super(vu.INITIAL_CAPACITY)}isFull(){return!1}push(e){super.isFull()&&this.expand(),super.push(e)}unshift(e){super.isFull()&&this.expand(),super.unshift(e)}expand(){const e=2*this.capacity,t=new Array(e),n=this.length();for(let a=0;a<n;a++)t[a]=this.get(this.wrap(this.begin+a));this.data=t,this.capacity=e,this.doubledCapacity=2*this.capacity,this.begin=0,this.end=n}}function xu(e){return new Nu(e)}function wu(e,t){return new Mu(e,t)}vu.INITIAL_CAPACITY=32;class ku{async toArray(){const e=[];let t=await this.next();for(;!t.done;)e.push(t.value),t=await this.next();return e}async toArrayForTest(){const e=this.prefetch(100),t=[];let n=await e.next();for(;!n.done;)t.push(n.value),n=await e.next();return t}async resolveFully(){let e=await this.next();for(;!e.done;)e=await this.next()}async resolveWhile(e){let t=await this.next(),n=e(t.value);for(;!t.done&&n;)t=await this.next(),n=e(t.value)}handleErrors(e){return new Ru(this,e)}filter(e){return new _u(this,e)}map(e){return new Au(this,e)}mapAsync(e){return new Fu(this,e)}serialMapAsync(e){return new Fu(this,e).serial()}flatmap(e){return new Ou(this,e)}async forEachAsync(e){return this.map(e).resolveFully()}async serialForEach(e){return this.serialMapAsync(e).resolveWhile((e=>!0===e))}rowMajorBatch(e){return new Eu(this,e,!(arguments.length>1&&void 0!==arguments[1])||arguments[1])}columnMajorBatch(e){let t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:fu;return this.rowMajorBatch(e,t).map((e=>function(e){return pu(e,arguments.length>1&&void 0!==arguments[1]?arguments[1]:fu)}(e,n)))}concatenate(e,t){return new Mu(new Su([this,e]),t)}take(e){return e<0||null==e?this:new Cu(this,e)}skip(e){return e<0||null==e?this:new Tu(this,e)}prefetch(e){return new zu(this,e)}shuffle(e,t){return new Lu(this,e,t)}serial(){return new Iu(this)}}class Su extends ku{constructor(e){super(),this.items=e,this.trav=0}summary(){return"Array of ".concat(this.items.length," items")}async next(){if(this.trav>=this.items.length)return{value:null,done:!0};const e=this.items[this.trav];return this.trav++,{value:gu(e),done:!1}}}class Nu extends ku{constructor(e){super(),this.nextFn=e}summary(){return"Function call"}async next(){try{return this.nextFn()}catch(e){throw e.message="Error thrown while iterating through a dataset: ".concat(e.message),e}}}class Iu extends ku{constructor(e){super(),this.upstream=e,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return"".concat(this.upstream.summary()," -> Serial")}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){return this.upstream.next()}}class Tu extends ku{constructor(e,t){super(),this.upstream=e,this.maxCount=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return"".concat(this.upstream.summary()," -> Skip")}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;this.count++<this.maxCount;){const e=await this.upstream.next();if(e.done)return e;S.dispose(e.value)}return this.upstream.next()}}class Cu extends ku{constructor(e,t){super(),this.upstream=e,this.maxCount=t,this.count=0}summary(){return"".concat(this.upstream.summary()," -> Take")}async next(){return this.count++>=this.maxCount?{value:null,done:!0}:this.upstream.next()}}class Eu extends ku{constructor(e,t){let n=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];super(),this.upstream=e,this.batchSize=t,this.enableSmallLastBatch=n,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return"".concat(this.upstream.summary()," -> RowMajorBatch")}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){const e=[];for(;e.length<this.batchSize;){const t=await this.upstream.next();if(t.done)return this.enableSmallLastBatch&&e.length>0?{value:e,done:!1}:{value:null,done:!0};e.push(t.value)}return{value:e,done:!1}}}class _u extends ku{constructor(e,t){super(),this.upstream=e,this.predicate=t,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return"".concat(this.upstream.summary()," -> Filter")}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;;){const e=await this.upstream.next();if(e.done||this.predicate(e.value))return e;S.dispose(e.value)}}}class Au extends ku{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return"".concat(this.upstream.summary()," -> Map")}async next(){const e=await this.upstream.next();if(e.done)return{value:null,done:!0};const t=S.tensor_util.getTensorsInContainer(e.value),n=this.transform(e.value),a=S.tensor_util.getTensorsInContainer(n);for(const r of t)S.tensor_util.isTensorInList(r,a)||r.dispose();return{value:n,done:!1}}}class Ru extends ku{constructor(e,t){super(),this.upstream=e,this.handler=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return"".concat(this.upstream.summary()," -> handleErrors")}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;;)try{return await this.upstream.next()}catch(e){if(!this.handler(e))return{value:null,done:!0}}}}class Fu extends ku{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return"".concat(this.upstream.summary()," -> AsyncMap")}async next(){const e=await this.upstream.next();if(e.done)return{value:null,done:!0};const t=S.tensor_util.getTensorsInContainer(e.value),n=await this.transform(e.value),a=S.tensor_util.getTensorsInContainer(n);for(const r of t)S.tensor_util.isTensorInList(r,a)||r.dispose();return{value:n,done:!1}}}class Du extends ku{constructor(){super(),this.outputQueue=new vu,this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;0===this.outputQueue.length();)if(!await this.pump())return{value:null,done:!0};return{value:this.outputQueue.shift(),done:!1}}}class Ou extends Du{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return"".concat(this.upstream.summary()," -> Flatmap")}async pump(){const e=await this.upstream.next();if(e.done)return!1;const t=S.tensor_util.getTensorsInContainer(e.value),n=this.transform(e.value),a=S.tensor_util.getTensorsInContainer(n);this.outputQueue.pushAll(n);for(const r of t)S.tensor_util.isTensorInList(r,a)||r.dispose();return!0}}class Mu extends ku{constructor(e,t){super(),this.baseErrorHandler=t,this.lastRead=null,this.iterator=null,this.moreIterators=e}summary(){return"".concat("TODO: fill in upstream of chained summaries"," -> Chained")}async next(){return this.lastRead=this.readFromChain(this.lastRead),this.lastRead}async readFromChain(e){if(await e,null==this.iterator){const e=await this.moreIterators.next();if(e.done)return{value:null,done:!0};this.iterator=e.value,null!=this.baseErrorHandler&&(this.iterator=this.iterator.handleErrors(this.baseErrorHandler))}const t=await this.iterator.next();return t.done?(this.iterator=null,this.readFromChain(e)):t}}!function(e){e[e.FAIL=0]="FAIL",e[e.SHORTEST=1]="SHORTEST",e[e.LONGEST=2]="LONGEST"}(lu||(lu={}));class zu extends ku{constructor(e,t){super(),this.upstream=e,this.bufferSize=t,this.buffer=new bu(t)}summary(){return"".concat(this.upstream.summary()," -> Prefetch")}refill(){for(;!this.buffer.isFull();){const e=this.upstream.next();this.buffer.push(e)}}next(){return this.refill(),this.buffer.shift()}}class Lu extends zu{constructor(e,t,n){super(e,t),this.upstream=e,this.windowSize=t,this.upstreamExhausted=!1,this.random=du.alea(n||S.util.now().toString()),this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}randomInt(e){return Math.floor(this.random()*e)}chooseIndex(){return this.randomInt(this.buffer.length())}async serialNext(){for(this.upstreamExhausted||this.refill();!this.buffer.isEmpty();){const e=this.chooseIndex(),t=await this.buffer.shuffleExcise(e);if(!t.done)return this.refill(),t;this.upstreamExhausted=!0}return{value:null,done:!0}}}class Bu{constructor(){this.size=null}batch(e){let t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];const n=this;let a;return S.util.assert(e>0,(()=>"batchSize needs to be positive, but it is\n      ".concat(e))),a=this.size===1/0||null==this.size?this.size:t?Math.ceil(this.size/e):Math.floor(this.size/e),Pu((async()=>(await n.iterator()).columnMajorBatch(e,t,Vu)),a)}concatenate(e){const t=this;let n;return n=this.size===1/0||e.size===1/0?1/0:null!=this.size&&null!=e.size?this.size+e.size:null,Pu((async()=>(await t.iterator()).concatenate(await e.iterator())),n)}filter(e){const t=this;let n;return n=this.size===1/0?1/0:null,Pu((async()=>(await t.iterator()).filter((t=>S.tidy((()=>e(t)))))),n)}async forEachAsync(e){return(await this.iterator()).forEachAsync(e)}map(e){const t=this;return Pu((async()=>(await t.iterator()).map((t=>S.tidy((()=>e(t)))))),this.size)}mapAsync(e){const t=this;return Pu((async()=>(await t.iterator()).mapAsync(e)),this.size)}prefetch(e){if(null==e)throw new RangeError("`Dataset.prefetch()` requires bufferSize to be specified.");const t=this;return Pu((async()=>(await t.iterator()).prefetch(e)),this.size)}repeat(e){const t=this;let n;return n=null!=this.size&&e>0?this.size*e:0===e?0:null!=this.size&&(void 0===e||e<0)?1/0:null,Pu((async()=>wu(xu((async()=>({value:await t.iterator(),done:!1}))).take(e))),n)}skip(e){const t=this;let n;return n=null!=this.size&&e>=0&&this.size>=e?this.size-e:null!=this.size&&(this.size<e||void 0===e||e<0)?0:null,Pu((async()=>(await t.iterator()).skip(e)),n)}shuffle(e,t){let n=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];if(null==e||e<0)throw null==this.size?new RangeError("`Dataset.shuffle()` requires bufferSize to be specified."):new RangeError("`Dataset.shuffle()` requires bufferSize to be specified.  If your data fits in main memory (for regular JS objects), and/or GPU memory (for `tf.Tensor`s), consider setting "+"bufferSize to the dataset size (".concat(this.size," elements)"));const a=this,r=du.alea(t||S.util.now().toString());return Pu((async()=>{let t=r.int32();return n&&(t+=r.int32()),(await a.iterator()).shuffle(e,t.toString())}),this.size)}take(e){const t=this;let n;return n=null!=this.size&&this.size>e?e:null!=this.size&&this.size<=e?this.size:null,Pu((async()=>(await t.iterator()).take(e)),n)}async toArray(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArray()}async toArrayForTest(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArrayForTest()}}function Pu(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;return new class extends Bu{constructor(){super(...arguments),this.size=t}async iterator(){return e()}}}function Vu(e){if(null===e)return null;if(function(e){return null==e||null===(t=e)||"object"!==typeof t&&"function"!==typeof t||Array.isArray(e)||"object"===typeof e&&e instanceof S.Tensor||S.util.isTypedArray(e);var t}(e[0])){return{value:function(e){if(0===e.length)throw new Error("Can't make a batch of zero elements.");return e[0]instanceof S.Tensor?S.stack(e):S.tensor(e)}(e),recurse:!1}}return{value:null,recurse:!0}}Bu.MAX_BUFFER_SIZE=1e4;Symbol("out"),Symbol("field"),Symbol("quote"),Symbol("quoteafterquote"),Symbol("quoteinquote");function Wu(e,t){Array.isArray(e)||(e=[e]),e.forEach((e=>{null!=e&&S.util.assert("complex64"!==e.dtype,(()=>"".concat(t," does not support complex64 tensors in the CPU backend.")))}))}const Uu=S.kernel_impls.whereImpl;class Gu extends S.KernelBackend{nextDataId(){return Gu.nextDataId++}constructor(){super(),this.blockSize=48,this.firstUse=!0,this.data=new S.DataStorage(this,(0,S.engine)())}write(e,t,n){this.firstUse&&(this.firstUse=!1,(0,S.env)().get("IS_NODE")&&S.backend_util.warn("\n============================\nHi, looks like you are running TensorFlow.js in Node.js. To speed things up dramatically, install our node backend, visit https://github.com/tensorflow/tfjs-node for more details. \n============================"));const a={id:this.nextDataId()};return this.data.set(a,{values:e,dtype:n,refCount:1}),a}makeTensorInfo(e,t,n){let a;if("string"===t&&null!=n&&n.length>0&&S.util.isString(n[0])){const r=n.map((e=>S.util.encodeString(e)));a=this.write(r,e,t)}else a=this.write(n,e,t);return{dataId:a,shape:e,dtype:t}}refCount(e){if(this.data.has(e)){return this.data.get(e).refCount}return 0}incRef(e){this.data.get(e).refCount++}decRef(e){if(this.data.has(e)){this.data.get(e).refCount--}}move(e,t,n,a,r){this.data.set(e,{values:t,dtype:a,refCount:r})}numDataIds(){return this.data.numDataIds()}async read(e){return this.readSync(e)}readSync(e){const{dtype:t,complexTensorInfos:n}=this.data.get(e);if("complex64"===t){const e=this.readSync(n.real.dataId),t=this.readSync(n.imag.dataId);return S.backend_util.mergeRealAndImagArrays(e,t)}return S.util.convertBackendValuesAndArrayBuffer(this.data.get(e).values,t)}bufferSync(e){const t=this.readSync(e.dataId);if("string"===e.dtype)try{const n=t.map((e=>S.util.decodeString(e)));return(0,S.buffer)(e.shape,e.dtype,n)}catch(n){throw new Error("Failed to decode encoded string bytes into utf-8")}return(0,S.buffer)(e.shape,e.dtype,t)}makeOutput(e,t,n){return(0,S.engine)().makeTensorFromTensorInfo(this.makeTensorInfo(t,n,e),this)}disposeData(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];if(this.data.has(e)){if(this.data.get(e).refCount--,!t&&this.data.get(e).refCount>0)return!1;const{complexTensorInfos:n}=this.data.get(e);null!=n&&(this.disposeData(n.real.dataId,!0),this.disposeData(n.imag.dataId,!0)),this.data.delete(e)}return!0}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}async time(e){const t=S.util.now();e();return{kernelMs:S.util.now()-t}}memory(){return{unreliable:!0,reasons:["The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less."]}}where(e){Wu([e],"where");const t=this.readSync(e.dataId);return Uu(e.shape,t)}dispose(){}floatPrecision(){return 32}epsilon(){return super.epsilon()}}Gu.nextDataId=0;function Hu(e){return(t,n,a)=>{const r=S.util.getArrayFromDType(n,t.length);for(let s=0;s<t.length;++s)r[s]=e(t[s],a);return r}}function ju(e,t,n){return qu(e,Hu(t),n)}function qu(e,t,n){return a=>{let{inputs:r,attrs:s,backend:o}=a;const{x:i}=r;Wu(i,e);const c=o,l=c.data.get(i.dataId).values;let u;if("string"===i.dtype){if(!Array.isArray(l))throw new Error("String tensor's value was not an instance of Array");u=S.backend_util.fromUint8ToStringArray(l)}else u=l;const d=n||i.dtype,h=t(u,d,s);return c.makeTensorInfo(i.shape,d,h)}}(0,S.registerBackend)("cpu",(()=>new Gu),1);const Xu=ju(S.Elu,(e=>e>=0?e:Math.exp(e)-1)),Ku={kernelName:S.Elu,backendName:"cpu",kernelFunc:Xu};function Qu(e){const{inputs:t,backend:n}=e,{x:a}=t;return n.incRef(a.dataId),{dataId:a.dataId,shape:a.shape,dtype:a.dtype}}const Yu={kernelName:S.Identity,backendName:"cpu",kernelFunc:Qu};function Zu(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{alpha:s}=a;Wu([r],"leakyRelu");const o=S.util.sizeFromShape(r.shape),i=n.data.get(r.dataId).values,c=S.util.getTypedArrayFromDType("float32",o);for(let l=0;l<i.length;l++)c[l]=i[l]<0?s*i[l]:i[l];return n.makeTensorInfo(r.shape,"float32",c)}const Ju={kernelName:S.LeakyRelu,backendName:"cpu",kernelFunc:Zu};function $u(e){return(t,n,a,r,s)=>{const o=S.backend_util.assertAndGetBroadcastShape(t,n),i=o.length,c=S.util.computeStrides(o),l=S.util.sizeFromShape(o),u=S.util.getTypedArrayFromDType(s,l),d=t.length,h=n.length,p=S.util.computeStrides(t),f=S.util.computeStrides(n),m=S.backend_util.getBroadcastDims(t,o),g=S.backend_util.getBroadcastDims(n,o);if(m.length+g.length===0)for(let y=0;y<u.length;++y)u[y]=e(a[y%a.length],r[y%r.length]);else for(let y=0;y<u.length;++y){const t=S.util.indexToLoc(y,i,c),n=t.slice(-d);m.forEach((e=>n[e]=0));const s=S.util.locToIndex(n,d,p),o=t.slice(-h);g.forEach((e=>o[e]=0));const l=S.util.locToIndex(o,h,f);u[y]=e(a[s],r[l])}return[u,o]}}const ed=$u(((e,t)=>e<0?t*e:e));function td(e){const{inputs:t,backend:n}=e,{x:a,alpha:r}=t;Wu([a,r],"prelu");const s=n.data.get(a.dataId).values,o=n.data.get(r.dataId).values,[i,c]=ed(a.shape,r.shape,s,o,"float32");return n.makeTensorInfo(c,"float32",i)}const nd={kernelName:S.Prelu,backendName:"cpu",kernelFunc:td},ad=ju(S.Relu,(e=>Math.max(0,e))),rd={kernelName:S.Relu,backendName:"cpu",kernelFunc:ad},sd=ju(S.Relu6,(e=>Math.min(Math.max(0,e),6))),od={kernelName:S.Relu6,backendName:"cpu",kernelFunc:sd},id=Hu((e=>1/(1+Math.exp(-e)))),cd=ju(S.Sigmoid,(e=>1/(1+Math.exp(-e)))),ld={kernelName:S.Sigmoid,backendName:"cpu",kernelFunc:cd};function ud(e,t,n,a,r){if("linear"===n)return Qu({inputs:{x:t},backend:e});if("relu"===n)return ad({inputs:{x:t},backend:e});if("elu"===n)return Xu({inputs:{x:t},backend:e});if("relu6"===n)return sd({inputs:{x:t},backend:e});if("prelu"===n)return td({inputs:{x:t,alpha:a},backend:e});if("leakyrelu"===n)return Zu({inputs:{x:t},backend:e,attrs:{alpha:r}});if("sigmoid"===n)return cd({inputs:{x:t},backend:e});throw new Error("Activation ".concat(n," has not been implemented for the CPU backend."))}function dd(e){const{inputs:t,backend:n}=e,{real:a,imag:r}=t,s=n.data.get(a.dataId).values,o=n.data.get(r.dataId).values,i=n.makeTensorInfo(a.shape,"complex64");return n.data.get(i.dataId).complexTensorInfos={real:n.makeTensorInfo(a.shape,"float32",s),imag:n.makeTensorInfo(r.shape,"float32",o)},i}const hd={kernelName:S.Complex,backendName:"cpu",kernelFunc:dd};function pd(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"float32";if("complex64"===n){return dd({inputs:{real:pd(e,t,"float32"),imag:pd(e,t,"float32")},backend:e})}const a=S.util.makeZerosTypedArray(S.util.sizeFromShape(t),n);return e.makeTensorInfo(t,n,a)}function fd(e){const{inputs:t,backend:n}=e,{input:a}=t,r=n.data.get(a.dataId).complexTensorInfos.real,s=n.data.get(r.dataId).values;return n.makeTensorInfo(r.shape,r.dtype,s)}const md={kernelName:S.Real,backendName:"cpu",kernelFunc:fd};function gd(e,t,n,a){if("int32"===a){return[t,"int32",Int32Array.from(e)]}if("bool"===a){const a=S.util.toTypedArray([0],n),[r,s]=$u(((e,t)=>e!==t?1:0))(t,[],e,a,"bool");return[s,"bool",r]}throw new Error("Error in Cast: failed to cast ".concat(n," to ").concat(a))}function yd(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{dtype:s}=a;if("complex64"===s){if("complex64"===r.dtype)return Qu({inputs:{x:r},backend:n});const e=pd(n,r.shape,r.dtype),t=yd({inputs:{x:r},backend:n,attrs:{dtype:"float32"}}),a=dd({inputs:{real:t,imag:e},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),a}if("complex64"===r.dtype){const e=fd({inputs:{input:r},backend:n}),t=yd({inputs:{x:e},backend:n,attrs:{dtype:s}});return n.disposeIntermediateTensorInfo(e),t}if(!S.util.hasEncodingLoss(r.dtype,s)){const e=Qu({inputs:{x:r},backend:n});return{dataId:e.dataId,shape:e.shape,dtype:s}}const o=n.data.get(r.dataId).values,[i,c,l]=gd(o,r.shape,r.dtype,s);return n.makeTensorInfo(i,c,l)}const bd={kernelName:S.Cast,backendName:"cpu",kernelFunc:yd};function vd(e,t,n,a){return null==n?n=>{let{inputs:r,backend:s}=n;const{a:o,b:i}=r,c=s;Wu([o,i],e);const l=c.data.get(o.dataId).values,u=c.data.get(i.dataId).values,d="string"===o.dtype?S.backend_util.fromUint8ToStringArray(l):l,h="string"===o.dtype?S.backend_util.fromUint8ToStringArray(u):u,p=a||o.dtype,[f,m]=t(o.shape,i.shape,d,h,p);return c.makeTensorInfo(m,p,f)}:e=>{let{inputs:r,backend:s}=e;const{a:o,b:i}=r,c=s;if("complex64"===o.dtype||"complex64"===i.dtype){const e=yd({inputs:{x:o},backend:c,attrs:{dtype:"complex64"}}),t=c.data.get(e.dataId),a=t.complexTensorInfos.real,r=t.complexTensorInfos.imag,s=c.data.get(a.dataId).values,l=c.data.get(r.dataId).values,u=yd({inputs:{x:i},backend:c,attrs:{dtype:"complex64"}}),d=c.data.get(u.dataId),h=d.complexTensorInfos.real,p=d.complexTensorInfos.imag,f=c.data.get(h.dataId).values,m=c.data.get(p.dataId).values,[g,y,b]=n(o.shape,i.shape,s,l,f,m),v=c.makeTensorInfo(b,"float32",g),x=c.makeTensorInfo(b,"float32",y),w=dd({inputs:{real:v,imag:x},backend:c});return c.disposeIntermediateTensorInfo(e),c.disposeIntermediateTensorInfo(u),c.disposeIntermediateTensorInfo(v),c.disposeIntermediateTensorInfo(x),w}{const e=c.data.get(o.dataId).values,n=c.data.get(i.dataId).values,r=a||o.dtype,[s,l]=t(o.shape,i.shape,e,n,r);return c.makeTensorInfo(l,r,s)}}}function xd(e){return(t,n,a,r,s,o)=>{const i=S.backend_util.assertAndGetBroadcastShape(t,n),c=S.util.sizeFromShape(i),l=i.length,u=S.util.computeStrides(i),d=S.util.getTypedArrayFromDType("float32",c),h=S.util.getTypedArrayFromDType("float32",c),p=S.backend_util.getBroadcastDims(t,i),f=S.backend_util.getBroadcastDims(n,i),m=S.backend_util.mergeRealAndImagArrays(a,r),g=S.backend_util.mergeRealAndImagArrays(s,o),y=t.length,b=S.util.computeStrides(t),v=n.length,x=S.util.computeStrides(n);if(p.length+f.length===0)for(let w=0;w<d.length;w++){const t=w%m.length,n=w%g.length,a=e(m[2*t],m[2*t+1],g[2*n],g[2*n+1]);d[w]=a.real,h[w]=a.imag}else for(let w=0;w<d.length;w++){const t=S.util.indexToLoc(w,l,u),n=t.slice(-y);p.forEach((e=>n[e]=0));const a=S.util.locToIndex(n,y,b),r=t.slice(-v);f.forEach((e=>r[e]=0));const s=S.util.locToIndex(r,v,x),o=e(m[2*a],m[2*a+1],g[2*s],g[2*s+1]);d[w]=o.real,h[w]=o.imag}return[d,h,i]}}const wd=$u(((e,t)=>e+t)),kd=xd(((e,t,n,a)=>({real:e+n,imag:t+a}))),Sd=vd(S.Add,wd,kd),Nd={kernelName:S.Add,backendName:"cpu",kernelFunc:Sd};function Id(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{shape:s}=a,o=S.util.sizeFromShape(r.shape),i=S.util.inferFromImplicitShape(s,o),c=S.util.sizeFromShape(i);S.util.assert(o===c,(()=>"The new shape (".concat(i,") has ").concat(c," elements and the old ")+"shape (".concat(r.shape,") has ").concat(o," elements. The new shape and old ")+"shape must have the same number of elements.")),n.incRef(r.dataId);const l=n.data.get(r.dataId);if(null!=l.complexTensorInfos){const e=l.complexTensorInfos.real,t=l.complexTensorInfos.imag;e.shape=i,t.shape=i}return{dataId:r.dataId,shape:i,dtype:r.dtype}}const Td={kernelName:S.Reshape,backendName:"cpu",kernelFunc:Id};function Cd(e){const{inputs:t,backend:n,attrs:a}=e,{a:r,b:s}=t,{transposeA:o,transposeB:i}=a;Wu([r,s],"matMul");const c=r.shape.length,l=s.shape.length,u=o?r.shape[c-2]:r.shape[c-1],d=i?s.shape[l-1]:s.shape[l-2],h=o?r.shape[c-1]:r.shape[c-2],p=i?s.shape[l-2]:s.shape[l-1],f=r.shape.slice(0,-2),m=s.shape.slice(0,-2),g=S.util.sizeFromShape(f),y=S.util.sizeFromShape(m),b=S.broadcast_util.assertAndGetBroadcastShape(r.shape.slice(0,-2),s.shape.slice(0,-2)).concat([h,p]);S.util.assert(u===d,(()=>"Error in matMul: inner shapes (".concat(u,") and (")+"".concat(d,") of Tensors with shapes ").concat(r.shape," and ")+"".concat(s.shape," and transposeA=").concat(o)+" and transposeB=".concat(i," must match.")));const v=i?[y,p,d]:[y,d,p],x=Id({inputs:{x:r},backend:n,attrs:{shape:o?[g,u,h]:[g,h,u]}}),w=Id({inputs:{x:s},backend:n,attrs:{shape:v}}),k=o?x.shape[1]:x.shape[2],N=o?x.shape[2]:x.shape[1],I=i?w.shape[1]:w.shape[2],T=Math.max(g,y),C=n.data.get(x.dataId).values,E=n.data.get(w.dataId).values,_=S.util.computeStrides(x.shape),A=S.util.computeStrides(w.shape),[R,F,D]=o?[_[0],1,_[1]]:[_[0],_[1],1],[O,M,z]=i?[1,A[1],A[0]]:[A[1],1,A[0]],L=N*I,B=(0,S.buffer)([T,N,I],x.dtype),P=B.values,V=n.blockSize;for(let S=0;S<T;S++){const e=S%g,t=S%y;for(let n=0;n<N;n+=V){const a=Math.min(n+V,N);for(let r=0;r<I;r+=V){const s=Math.min(r+V,I);for(let o=0;o<k;o+=V){const i=Math.min(o+V,k);for(let c=n;c<a;c++)for(let n=r;n<s;n++){let a=0;for(let r=o;r<i;r++){a+=C[e*R+c*F+r*D]*E[r*O+n*M+t*z]}P[S*L+(c*I+n)]+=a}}}}}return n.disposeIntermediateTensorInfo(x),n.disposeIntermediateTensorInfo(w),n.makeTensorInfo(b,B.dtype,B.values)}const Ed={kernelName:S.BatchMatMul,backendName:"cpu",kernelFunc:Cd};const _d={kernelName:S._FusedMatMul,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{a:r,b:s,bias:o,preluActivationWeights:i}=t,{transposeA:c,transposeB:l,activation:u,leakyreluAlpha:d}=a;let h,p,f;const m=[];h=Cd({inputs:{a:r,b:s},attrs:{transposeA:c,transposeB:l},backend:n}),o&&(p=Sd({inputs:{a:h,b:o},backend:n}),m.push(h),h=p),u&&(f=ud(n,h,u,i,d),m.push(h),h=f);for(const g of m)n.disposeIntermediateTensorInfo(g);return h}};function Ad(e){const t=new Float32Array(e.length);for(let n=0;n<e.length;++n)t[n]=Math.abs(e[n]);return t}const Rd={kernelName:S.Abs,backendName:"cpu",kernelFunc:e=>{const{x:t}=e.inputs,n=e.backend;Wu(t,"abs");let a=new Float32Array(S.util.sizeFromShape(t.shape));return a=Ad(n.data.get(t.dataId).values),n.makeOutput(a,t.shape,t.dtype)}},Fd=ju(S.Acos,(e=>Math.acos(e))),Dd={kernelName:S.Acos,backendName:"cpu",kernelFunc:Fd},Od=ju(S.Acosh,(e=>Math.acosh(e))),Md={kernelName:S.Acosh,backendName:"cpu",kernelFunc:Od};const zd={kernelName:S.AddN,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,a=t;Wu(t,"addN");const r=a.map((e=>n.data.get(e.dataId).values)),s=(0,S.buffer)(a[0].shape,a[0].dtype),o=s.values;for(let i=0;i<a.length;i++){const e=r[i];for(let t=0;t<o.length;t++)o[t]+=e[t]}return n.makeTensorInfo(s.shape,s.dtype,s.values)}};function Ld(e,t,n,a,r){const s=t.length,o=S.util.sizeFromShape(t),i=S.util.computeStrides(t),c=S.util.computeStrides(r),l=S.util.getTypedArrayFromDType(n,S.util.sizeFromShape(r));for(let u=0;u<o;++u){const t=S.util.indexToLoc(u,s,i),n=new Array(t.length);for(let e=0;e<n.length;e++)n[e]=t[a[e]];l[S.util.locToIndex(n,s,c)]=e[u]}return l}function Bd(e){const{inputs:t,attrs:n,backend:a}=e,{x:r}=t,{perm:s}=n;Wu(r,"transpose");const o=r.shape.length,i=new Array(o);for(let l=0;l<i.length;l++)i[l]=r.shape[s[l]];const c=Ld(a.data.get(r.dataId).values,r.shape,r.dtype,s,i);return{dataId:a.write(c,i,r.dtype),shape:i,dtype:r.dtype}}const Pd={kernelName:S.Transpose,backendName:"cpu",kernelFunc:Bd};const Vd={kernelName:S.All,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s,keepDims:o}=a;Wu(r,"all");const i=S.util.parseAxisParam(s,r.shape);let c=i;const l=S.backend_util.getAxesPermutation(c,r.shape.length);let u=r;null!=l&&(u=Bd({inputs:{x:r},backend:n,attrs:{perm:l}}),c=S.backend_util.getInnerMostAxes(c.length,r.shape.length)),S.backend_util.assertAxesAreInnerMostDims("all",c,u.shape.length);const[d,h]=S.backend_util.computeOutAndReduceShapes(u.shape,c),p=S.util.sizeFromShape(h),f=S.util.makeZerosTypedArray(S.util.sizeFromShape(d),u.dtype),m=n.data.get(u.dataId).values;for(let y=0;y<f.length;++y){const e=y*p;let t=m[e];for(let n=0;n<p;++n){const a=m[e+n];t=t&&a}f[y]=t}null!=l&&n.disposeIntermediateTensorInfo(u);const g=n.makeTensorInfo(d,u.dtype,f);if(o){const e=Id({inputs:{x:g},backend:n,attrs:{shape:S.backend_util.expandShapeToKeepDim(d,i)}});return n.disposeIntermediateTensorInfo(g),e}return g}};const Wd={kernelName:S.Any,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s,keepDims:o}=a;Wu(r,"any");const i=S.util.parseAxisParam(s,r.shape);let c=i;const l=S.backend_util.getAxesPermutation(c,r.shape.length);let u=r;null!=l&&(u=Bd({inputs:{x:r},backend:n,attrs:{perm:l}}),c=S.backend_util.getInnerMostAxes(c.length,r.shape.length)),S.backend_util.assertAxesAreInnerMostDims("any",c,u.shape.length);const[d,h]=S.backend_util.computeOutAndReduceShapes(u.shape,c),p=S.util.sizeFromShape(h),f=S.util.makeZerosTypedArray(S.util.sizeFromShape(d),u.dtype),m=n.data.get(u.dataId).values;for(let y=0;y<f.length;++y){const e=y*p;let t=m[e];for(let n=0;n<p;++n){const a=m[e+n];t=t||a}f[y]=t}null!=l&&n.disposeIntermediateTensorInfo(u);const g=n.makeTensorInfo(d,u.dtype,f);if(o){const e=Id({inputs:{x:g},backend:n,attrs:{shape:S.backend_util.expandShapeToKeepDim(d,i)}});return n.disposeIntermediateTensorInfo(g),e}return g}};const Ud={kernelName:S.ArgMax,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s}=a;Wu(r,"argMax");let o=S.util.parseAxisParam(s,r.shape);const i=S.backend_util.getAxesPermutation(o,r.shape.length);let c=r;const l=[];null!=i&&(c=Bd({inputs:{x:r},backend:n,attrs:{perm:i}}),l.push(c),o=S.backend_util.getInnerMostAxes(o.length,c.shape.length)),o=[o[0]],S.backend_util.assertAxesAreInnerMostDims("argMax",o,c.shape.length);const[u,d]=S.backend_util.computeOutAndReduceShapes(c.shape,o),h=S.util.sizeFromShape(u),p=S.util.makeZerosTypedArray(h,"int32"),f=S.util.sizeFromShape(d),m=n.data.get(c.dataId).values;for(let g=0;g<p.length;++g){const e=g*f;let t=m[e],n=0;for(let a=0;a<f;++a){const r=m[e+a];r>t&&(t=r,n=a)}p[g]=n}return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(u,"int32",p)}};const Gd={kernelName:S.ArgMin,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s}=a;Wu(r,"argMin");let o=S.util.parseAxisParam(s,r.shape);const i=S.backend_util.getAxesPermutation(o,r.shape.length);let c=r;const l=[];null!=i&&(c=Bd({inputs:{x:r},backend:n,attrs:{perm:i}}),l.push(c),o=S.backend_util.getInnerMostAxes(o.length,c.shape.length)),o=[o[0]],S.backend_util.assertAxesAreInnerMostDims("argMin",o,c.shape.length);const[u,d]=S.backend_util.computeOutAndReduceShapes(c.shape,o),h=S.util.sizeFromShape(u),p=S.util.makeZerosTypedArray(h,"int32"),f=S.util.sizeFromShape(d),m=n.data.get(c.dataId).values;for(let g=0;g<p.length;++g){const e=g*f;let t=m[e],n=0;for(let a=0;a<f;++a){const r=m[e+a];r<t&&(t=r,n=a)}p[g]=n}return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(u,"int32",p)}},Hd=ju(S.Asin,(e=>Math.asin(e))),jd={kernelName:S.Asin,backendName:"cpu",kernelFunc:Hd},qd=ju(S.Asinh,(e=>Math.asinh(e))),Xd={kernelName:S.Asinh,backendName:"cpu",kernelFunc:qd},Kd=ju(S.Atan,(e=>Math.atan(e))),Qd={kernelName:S.Atan,backendName:"cpu",kernelFunc:Kd},Yd=$u(((e,t)=>Math.atan2(e,t))),Zd=vd(S.Atan2,Yd),Jd={kernelName:S.Atan2,backendName:"cpu",kernelFunc:Zd},$d=ju(S.Atanh,(e=>Math.atanh(e))),eh={kernelName:S.Atanh,backendName:"cpu",kernelFunc:$d};function th(e,t,n,a,r,s){const o=r.strideHeight,i=r.strideWidth,c=r.dilationHeight,l=r.dilationWidth,u=r.effectiveFilterHeight,d=r.effectiveFilterWidth,h=r.padInfo.top,p=r.padInfo.left,f="max"===s?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,m=(0,S.buffer)(r.outShape,n),g=m.values,y=r.outShape[1]*r.outShape[2]*r.outShape[3],b=r.outShape[2]*r.outShape[3],v=r.outShape[3];for(let x=0;x<r.batchSize;++x){const t=x*y,n=x*a[0];for(let m=0;m<r.inChannels;++m)for(let y=0;y<r.outHeight;++y){const x=y*o-h,w=Math.max(0,x),k=Math.min(r.inHeight,u+x),S=t+y*b;for(let t=0;t<r.outWidth;++t){const o=t*i-p,u=Math.max(0,o),h=Math.min(r.inWidth,d+o);let y=f,b=0,x=0;for(let t=w;t<k;t+=c){const r=n+t*a[1];for(let t=u;t<h;t+=l){const n=e[r+t*a[2]+m];"max"===s&&n>y?y=n:"avg"===s&&(b+=n,x++)}if(isNaN(y))break}g[S+t*v+m]="avg"===s?b/x:y}}}return m}function nh(e,t,n,a){let r=arguments.length>4&&void 0!==arguments[4]&&arguments[4],s=arguments.length>5&&void 0!==arguments[5]&&arguments[5];const o=(0,S.buffer)(a.outShape,"int32"),i=a.strideHeight,c=a.strideWidth,l=a.dilationHeight,u=a.dilationWidth,d=a.effectiveFilterHeight,h=a.effectiveFilterWidth,p=a.padInfo.top,f=a.padInfo.left,m=(0,S.buffer)(t,n,e);for(let g=0;g<a.batchSize;++g)for(let e=0;e<a.inChannels;++e)for(let t=0;t<a.outHeight;++t){const n=t*i-p;let y=n;for(;y<0;)y+=l;const b=Math.min(a.inHeight,d+n);for(let i=0;i<a.outWidth;++i){const d=i*c-f;let p=d;for(;p<0;)p+=u;const v=Math.min(a.inWidth,h+d);let x=Number.NEGATIVE_INFINITY,w=-1;for(let t=y;t<b;t+=l){const o=t-n;for(let n=p;n<v;n+=u){const i=n-d,c=m.get(g,t,n,e);c>x&&(x=c,w=r?s?((g*a.inHeight+t)*a.inWidth+n)*a.inChannels+e:(t*a.inWidth+n)*a.inChannels+e:o*h+i)}}o.set(w,g,t,i,e)}}return o}function ah(e,t,n,a,r,s){const o=r.strideDepth,i=r.strideHeight,c=r.strideWidth,l=r.dilationDepth,u=r.dilationHeight,d=r.dilationWidth,h=r.effectiveFilterDepth,p=r.effectiveFilterHeight,f=r.effectiveFilterWidth,m=r.padInfo.front,g=r.padInfo.top,y=r.padInfo.left,b="max"===s?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,v=(0,S.buffer)(r.outShape,n),x=v.values,w=r.outShape[1]*r.outShape[2]*r.outShape[3]*r.outShape[4],k=r.outShape[2]*r.outShape[3]*r.outShape[4],N=r.outShape[3]*r.outShape[4],I=r.outShape[4];for(let S=0;S<r.batchSize;++S){const t=S*w,n=S*a[0];for(let v=0;v<r.inChannels;++v)for(let w=0;w<r.outDepth;++w){const S=w*o-m;let T=S;for(;T<0;)T+=l;const C=Math.min(r.inDepth,h+S),E=t+w*k;for(let t=0;t<r.outHeight;++t){const o=t*i-g;let h=o;for(;h<0;)h+=u;const m=Math.min(r.inHeight,p+o),w=E+t*N;for(let t=0;t<r.outWidth;++t){const o=t*c-y;let i=o;for(;i<0;)i+=d;const p=Math.min(r.inWidth,f+o),g=w+t*I;let k=b,S=0,N=0;for(let t=T;t<C;t+=l){const r=n+t*a[1];for(let t=h;t<m;t+=u){const n=r+t*a[2];for(let t=i;t<p;t+=d){const r=e[n+t*a[3]+v];if("max"===s&&r>k?k=r:"avg"===s&&(S+=r,N++),isNaN(k))break}if(isNaN(k))break}if(isNaN(k))break}x[g+v]="avg"===s?S/Math.max(N,1):k}}}}return v}const rh={kernelName:S.AvgPool,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t;Wu(r,"avgPool");const{filterSize:s,strides:o,pad:i,dimRoundingMode:c}=a;S.util.assert(S.backend_util.eitherStridesOrDilationsAreOne(o,1),(()=>"Error in avgPool: Either strides or dilations must be 1. "+"Got strides ".concat(o," and dilations '").concat(1,"'")));const l=S.backend_util.computePool2DInfo(r.shape,s,o,1,i,c);let u;if(1===l.filterWidth&&1===l.filterHeight&&S.util.arraysEqual(l.inShape,l.outShape))u=Qu({inputs:{x:r},backend:n});else{const e=n.data.get(r.dataId).values,t=S.util.computeStrides(r.shape),a=th(e,r.shape,r.dtype,t,l,"avg");u=n.makeTensorInfo(l.outShape,r.dtype,a.values)}return u}};const sh={kernelName:S.AvgPool3D,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{filterSize:s,strides:o,pad:i,dimRoundingMode:c,dataFormat:l}=a;Wu(r,"avgPool3d");const u=S.backend_util.computePool3DInfo(r.shape,s,o,1,i,c,l),d=ah(n.data.get(r.dataId).values,r.shape,r.dtype,S.util.computeStrides(r.shape),u,"avg");return n.makeTensorInfo(d.shape,"float32",d.values)}};const oh={kernelName:S.AvgPool3DGrad,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:r,input:s}=t,{filterSize:o,strides:i,pad:c,dimRoundingMode:l}=a;Wu([r,s],"avgPool3DGrad");const u=S.backend_util.computePool3DInfo(s.shape,o,i,1,c,l),d=u.strideDepth,h=u.strideHeight,p=u.strideWidth,f=u.filterDepth,m=u.filterHeight,g=u.filterWidth,y=u.dilationDepth,b=u.dilationHeight,v=u.dilationWidth,x=u.effectiveFilterDepth,w=u.effectiveFilterHeight,k=u.effectiveFilterWidth,N=x-1-u.padInfo.front,I=k-1-u.padInfo.left,T=w-1-u.padInfo.top,C=(0,S.buffer)(s.shape,"float32"),E=1/(f*m*g),_=n.bufferSync(r);for(let S=0;S<u.batchSize;++S)for(let e=0;e<u.inChannels;++e)for(let t=0;t<u.inDepth;++t)for(let n=0;n<u.inHeight;++n)for(let a=0;a<u.inWidth;++a){const r=t-N,s=n-T,o=a-I;let i=0;for(let t=0;t<x;t+=y){const n=(r+t)/d;if(!(n<0||n>=u.outDepth||Math.floor(n)!==n))for(let t=0;t<w;t+=b){const a=(s+t)/h;if(!(a<0||a>=u.outHeight||Math.floor(a)!==a))for(let t=0;t<k;t+=v){const r=(o+t)/p;if(r<0||r>=u.outWidth||Math.floor(r)!==r)continue;i+=_.get(S,n,a,r,e)}}}C.set(i*E,S,t,n,a,e)}return n.makeTensorInfo(C.shape,C.dtype,C.values)}};const ih={kernelName:S.AvgPoolGrad,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:r,input:s}=t,o=s;Wu([r,s],"avgPoolGrad");const{filterSize:i,strides:c,pad:l}=a,u=S.backend_util.computePool2DInfo(o.shape,i,c,1,l),d=u.strideHeight,h=u.strideWidth,p=u.filterHeight,f=u.filterWidth,m=u.dilationHeight,g=u.dilationWidth,y=u.effectiveFilterHeight,b=u.effectiveFilterWidth,v=b-1-u.padInfo.left,x=y-1-u.padInfo.top,w=(0,S.buffer)(o.shape,"float32"),k=1/(p*f),N=n.data.get(r.dataId).values,I=(0,S.buffer)(r.shape,"float32",N);for(let S=0;S<u.batchSize;++S)for(let e=0;e<u.inChannels;++e)for(let t=0;t<u.inHeight;++t)for(let n=0;n<u.inWidth;++n){const a=t-x,r=n-v;let s=0;for(let t=0;t<y;t+=m){const n=(a+t)/d;if(!(n<0||n>=u.outHeight||Math.floor(n)!==n))for(let t=0;t<b;t+=g){const a=(r+t)/h;if(a<0||a>=u.outWidth||Math.floor(a)!==a)continue;s+=I.get(S,n,a,e)}}w.set(s*k,S,t,n,e)}return n.makeTensorInfo(w.shape,w.dtype,w.values)}};const ch={kernelName:S.FusedBatchNorm,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,scale:s,offset:o,mean:i,variance:c}=t;S.util.assert(i.shape.length===c.shape.length,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),S.util.assert(null==o||i.shape.length===o.shape.length,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),S.util.assert(null==s||i.shape.length===s.shape.length,(()=>"Batch normalization gradient requires mean and scale to have equal ranks.")),Wu([r,i,c,s,o],"batchNorm");let{varianceEpsilon:l}=a;null==l&&(l=.001);const u=n.data.get(r.dataId).values,d=n.data.get(i.dataId).values,h=n.data.get(c.dataId).values,p=s?n.data.get(s.dataId).values:new Float32Array([1]),f=o?n.data.get(o.dataId).values:new Float32Array([0]),m=new Float32Array(u.length),g=f.length,y=p.length,b=h.length,v=d.length;let x=0,w=0,k=0,N=0;for(let S=0;S<u.length;++S)m[S]=f[x++]+(u[S]-d[w++])*p[k++]/Math.sqrt(h[N++]+l),x>=g&&(x=0),w>=v&&(w=0),k>=y&&(k=0),N>=b&&(N=0);return n.makeTensorInfo(r.shape,r.dtype,m)}};function lh(e,t,n,a,r){const s=S.slice_util.isSliceContinous(a,t,n),o=S.util.sizeFromShape(n),i=S.util.computeStrides(a);if(s){const n=S.slice_util.computeFlatOffset(t,i);return"string"===r?e.slice(n,n+o):e.subarray(n,n+o)}const c="string"===r?S.backend_util.fromUint8ToStringArray(e):e,l=(0,S.buffer)(a,r,c),u=(0,S.buffer)(n,r);for(let d=0;d<u.size;++d){const e=u.indexToLoc(d),n=e.map(((e,n)=>e+t[n]));u.set(l.get(...n),...e)}return"string"===r?S.backend_util.fromStringArrayToUint8(u.values):u.values}function uh(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{begin:s,size:o}=a;Wu(r,"slice");const[i,c]=S.slice_util.parseSliceParams(r,s,o);S.slice_util.assertParamsValid(r,i,c);const l=lh(n.data.get(r.dataId).values,i,c,r.shape,r.dtype);return n.makeTensorInfo(c,r.dtype,l)}const dh={kernelName:S.Slice,backendName:"cpu",kernelFunc:uh};const hh={kernelName:S.BatchToSpaceND,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{blockShape:s,crops:o}=a;Wu([r],"batchToSpaceND");const i=s.reduce(((e,t)=>e*t)),c=S.backend_util.getReshaped(r.shape,s,i),l=S.backend_util.getPermuted(c.length,s.length),u=S.backend_util.getReshapedPermuted(r.shape,s,i),d=S.backend_util.getSliceBeginCoords(o,s.length),h=S.backend_util.getSliceSize(u,o,s.length),p=Id({inputs:{x:r},backend:n,attrs:{shape:c}}),f=Bd({inputs:{x:p},backend:n,attrs:{perm:l}}),m=Id({inputs:{x:f},backend:n,attrs:{shape:u}}),g=uh({inputs:{x:m},backend:n,attrs:{begin:d,size:h}});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),g}};function ph(e,t,n,a,r){const s=S.util.sizeFromShape(a),o=S.util.makeZerosTypedArray(r,n);for(let i=0;i<e.length;i++){const n=e[i];if(n<0)throw new Error("Input x must be non-negative!");n>=r||(o[n]+=s>0?t[i]:1)}return o}function fh(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const r=e.shape[0],s=e.shape[1],o=(0,S.buffer)([r,n],t.dtype);for(let i=0;i<r;i++)for(let r=0;r<s;r++){const s=e.get(i,r);if(s<0)throw new Error("Input x must be non-negative!");s>=n||(a?o.set(1,i,s):t.size>0?o.set(o.get(i,s)+t.get(i,r),i,s):o.set(o.get(i,s)+1,i,s))}return o}const mh={kernelName:S.Bincount,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,weights:s}=t,{size:o}=a,i=ph(n.data.get(r.dataId).values,n.data.get(s.dataId).values,s.dtype,s.shape,o);return n.makeTensorInfo([o],s.dtype,i)}},gh=$u(((e,t)=>e&t)),yh=vd(S.BitwiseAnd,gh),bh={kernelName:S.BitwiseAnd,backendName:"cpu",kernelFunc:yh};const vh={kernelName:S.BroadcastArgs,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{s0:a,s1:r}=t,s=n.data.get(a.dataId).values,o=n.data.get(r.dataId).values,i=S.backend_util.assertAndGetBroadcastShape(Array.from(s),Array.from(o));return n.makeTensorInfo([i.length],"int32",Int32Array.from(i))}},xh=Hu((e=>Math.ceil(e))),wh=qu(S.Ceil,xh),kh={kernelName:S.Ceil,backendName:"cpu",kernelFunc:wh},Sh=ju(S.ClipByValue,((e,t)=>{const n=t;return e>n.clipValueMax?n.clipValueMax:e<n.clipValueMin?n.clipValueMin:e})),Nh={kernelName:S.ClipByValue,backendName:"cpu",kernelFunc:Sh},Ih={kernelName:S.ComplexAbs,backendName:"cpu",kernelFunc:e=>{const{x:t}=e.inputs,n=e.backend,a=new Float32Array(S.util.sizeFromShape(t.shape)),r=n.data.get(t.dataId),s=r.complexTensorInfos.real,o=r.complexTensorInfos.imag,i=n.data.get(s.dataId).values,c=n.data.get(o.dataId).values;for(let l=0;l<i.length;l++){const e=i[l],t=c[l];a[l]=Math.hypot(e,t)}return n.makeOutput(a,t.shape,"float32")}};function Th(e,t,n,a){const r=S.util.getArrayFromDType(n,S.util.sizeFromShape(t));if(a&&"string"!==n){let t=0;e.forEach((e=>{const n=S.util.sizeFromShape(e.shape);r.set(e.vals,t),t+=n}))}else{let a=0;e.forEach((e=>{const s="string"===n?S.backend_util.fromUint8ToStringArray(e.vals):e.vals;let o=0;for(let n=0;n<e.shape[0];++n){const i=n*t[1]+a;for(let t=0;t<e.shape[1];++t)r[i+t]=s[o++]}a+=e.shape[1]}))}return r}function Ch(e){const{inputs:t,backend:n}=e,{input:a}=t,r=n.data.get(a.dataId).complexTensorInfos.imag,s=n.data.get(r.dataId).values;return n.makeTensorInfo(r.shape,r.dtype,s)}const Eh={kernelName:S.Imag,backendName:"cpu",kernelFunc:Ch};function _h(e){const{inputs:t,backend:n,attrs:a}=e,{axis:r}=a,s=S.util.parseAxisParam(r,t[0].shape)[0],o=t.map((e=>e.shape));S.backend_util.assertParamsConsistent(o,s);let i=S.backend_util.computeOutShape(t.map((e=>e.shape)),s);if(0===S.util.sizeFromShape(i))return n.makeTensorInfo(i,t[0].dtype,[]);const c=t.filter((e=>S.util.sizeFromShape(e.shape)>0));if(1===c.length)return Qu({inputs:{x:c[0]},backend:n});if("complex64"===c[0].dtype){const e=c.map((e=>fd({inputs:{input:e},backend:n}))),t=c.map((e=>Ch({inputs:{input:e},backend:n}))),a=_h({inputs:e,backend:n,attrs:{axis:s}}),r=_h({inputs:t,backend:n,attrs:{axis:s}}),o=dd({inputs:{real:a,imag:r},backend:n});return e.forEach((e=>n.disposeIntermediateTensorInfo(e))),t.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(r),o}const l=c.map((e=>{const t=S.util.sizeFromShape(e.shape.slice(s));return Id({inputs:{x:e},backend:n,attrs:{shape:[-1,t]}})})),u=l.map((e=>({vals:n.data.get(e.dataId).values,shape:e.shape})));i=S.backend_util.computeOutShape(l.map((e=>e.shape)),1);const d=1===l[0].shape[0],h=Th(u,i,t[0].dtype,d),p=S.backend_util.computeOutShape(c.map((e=>e.shape)),s),f=n.makeTensorInfo(p,t[0].dtype,h);return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),f}const Ah={kernelName:S.Concat,backendName:"cpu",kernelFunc:_h};function Rh(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,filter:s}=t,{strides:o,pad:i,dataFormat:c,dilations:l,dimRoundingMode:u}=a;Wu([r,s],"conv2d");const d=S.backend_util.convertConv2DDataFormat(c),h=S.backend_util.computeConv2DInfo(r.shape,s.shape,o,l,i,u,!1,d),p=h.filterHeight,f=h.filterWidth,m=h.dilationHeight,g=h.dilationWidth,y=h.padInfo.left,b=h.padInfo.top,v="channelsLast"===h.dataFormat,x=new S.TensorBuffer(h.outShape,r.dtype),w=S.util.computeStrides(r.shape),k=S.util.computeStrides(s.shape),N=w[0],I=v?w[1]:w[2],T=v?w[2]:1,C=v?1:w[1],E=x.strides[0],_=v?x.strides[1]:x.strides[2],A=v?x.strides[2]:1,R=v?1:x.strides[1],F=n.data.get(r.dataId).values,D=n.data.get(s.dataId).values,O=x.values;for(let S=0;S<h.batchSize;++S){const e=S*N,t=S*E;for(let n=0;n<h.outHeight;++n){const a=t+n*_,r=n*h.strideHeight-b;for(let t=0;t<p;++t){const n=r+t*m;if(n<0||n>=h.inHeight)continue;const s=t*k[0],o=e+n*I;for(let e=0;e<h.outWidth;++e){const t=a+e*A,n=e*h.strideWidth-y;for(let e=0;e<f;++e){const a=n+e*g;if(a<0||a>=h.inWidth)continue;const r=o+a*T;let i=s+e*k[1];for(let e=0;e<h.inChannels;++e){const n=F[r+e*C];for(let e=0;e<h.outChannels;++e)O[t+e*R]+=n*D[i+e];i+=h.outChannels}}}}}}return n.makeTensorInfo(x.shape,x.dtype,O)}const Fh={kernelName:S.Conv2D,backendName:"cpu",kernelFunc:Rh};const Dh={kernelName:S.Conv2DBackpropFilter,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,dy:s}=t,{strides:o,pad:i,dataFormat:c,dimRoundingMode:l,filterShape:u}=a;Wu([r,s],"conv2dBackpropFilter");const d=S.backend_util.convertConv2DDataFormat(c),h=S.backend_util.computeConv2DInfo(r.shape,u,o,1,i,l,!1,d),{strideHeight:p,strideWidth:f,filterHeight:m,filterWidth:g}=h,y="channelsLast"===h.dataFormat,b=new S.TensorBuffer(h.filterShape,"float32"),v=h.padInfo.left,x=h.padInfo.top,w=n.data.get(r.dataId).values,k=n.data.get(s.dataId).values,N=new S.TensorBuffer(r.shape,r.dtype,w),I=new S.TensorBuffer(s.shape,s.dtype,k);for(let S=0;S<m;++S){const e=Math.max(0,Math.ceil((x-S)/p)),t=Math.min(h.outHeight,(h.inHeight+x-S)/p);for(let n=0;n<g;++n){const a=Math.max(0,Math.ceil((v-n)/f)),r=Math.min(h.outWidth,(h.inWidth+v-n)/f);for(let s=0;s<h.inChannels;++s)for(let o=0;o<h.outChannels;++o){let i=0;for(let c=0;c<h.batchSize;++c)for(let l=e;l<t;++l){const e=S+l*p-x;for(let t=a;t<r;++t){const a=n+t*f-v;i+=y?N.get(c,e,a,s)*I.get(c,l,t,o):N.get(c,s,e,a)*I.get(c,o,l,t)}}b.set(i,S,n,s,o)}}}return n.makeTensorInfo(b.shape,b.dtype,b.values)}};const Oh={kernelName:S.Conv2DBackpropInput,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:r,filter:s}=t,{inputShape:o,strides:i,pad:c,dataFormat:l,dimRoundingMode:u}=a;Wu([r,s],"conv2dBackpropInput");const d=S.util.computeStrides(s.shape),h=S.util.computeStrides(r.shape);let p=S.backend_util.convertConv2DDataFormat(l);const f=S.backend_util.computeConv2DInfo(o,s.shape,i,1,c,u,!1,p),m=new S.TensorBuffer(f.inShape,"float32"),g=m.values,y=n.data.get(r.dataId).values,b=n.data.get(s.dataId).values,[v,x,w]=d,{batchSize:k,filterHeight:N,filterWidth:I,inChannels:T,inHeight:C,inWidth:E,outChannels:_,outHeight:A,outWidth:R,strideHeight:F,strideWidth:D}=f;p=f.dataFormat;const O=N-1-f.padInfo.top,M=I-1-f.padInfo.left,z="channelsLast"===p,L=m.strides[0],B=z?m.strides[1]:m.strides[2],P=z?m.strides[2]:1,V=z?1:m.strides[1],W=h[0],U=z?h[1]:h[2],G=z?h[2]:1,H=z?1:h[1];for(let S=0;S<k;++S)for(let e=0;e<T;++e)for(let t=0;t<C;++t){const n=t-O,a=Math.max(0,Math.ceil(n/F)),r=Math.min(A,(N+n)/F);for(let s=0;s<E;++s){const o=s-M,i=Math.max(0,Math.ceil(o/D)),c=Math.min(R,(I+o)/D);let l=0;for(let t=a;t<r;++t){const a=t*F-n;for(let n=i;n<c;++n){const r=W*S+U*t+G*n,s=v*(N-1-a)+x*(I-1-(n*D-o))+w*e;for(let e=0;e<_;++e){l+=y[r+H*e]*b[s+e]}}}g[L*S+B*t+P*s+V*e]=l}}return n.makeTensorInfo(m.shape,m.dtype,m.values)}};const Mh={kernelName:S.Conv3D,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,filter:s}=t,{strides:o,pad:i,dilations:c}=a;Wu([r,s],"conv3d");const l=S.backend_util.computeConv3DInfo(r.shape,s.shape,o,c,i),{filterDepth:u,filterHeight:d,filterWidth:h,dilationDepth:p,dilationHeight:f,dilationWidth:m,padInfo:g}=l,y=g.front,b=g.left,v=g.top,x=new S.TensorBuffer(l.outShape,r.dtype),w=n.data.get(r.dataId).values,k=n.data.get(s.dataId).values,N=x.values,I=S.util.computeStrides(r.shape),T=S.util.computeStrides(s.shape);for(let S=0;S<l.batchSize;++S){const e=S*I[0],t=S*x.strides[0];for(let n=0;n<l.outDepth;++n){const a=t+n*x.strides[1],r=n*l.strideDepth-y;for(let t=0;t<u;++t){const n=r+t*p;if(n<0||n>=l.inDepth)continue;const s=t*T[0],o=e+n*I[1];for(let e=0;e<l.outHeight;++e){const t=a+e*x.strides[2],n=e*l.strideHeight-v;for(let e=0;e<d;++e){const a=n+e*f;if(a<0||a>=l.inHeight)continue;const r=s+e*T[1],i=o+a*I[2];for(let e=0;e<l.outWidth;++e){const n=t+e*l.outChannels,a=e*l.strideWidth-b;for(let e=0;e<h;++e){const t=a+e*m;if(t<0||t>=l.inWidth)continue;const s=r+e*T[2],o=i+t*l.inChannels;let c=s;for(let e=0;e<l.inChannels;++e){const t=w[o+e];for(let e=0;e<l.outChannels;++e)N[n+e]+=t*k[c+e];c+=l.outChannels}}}}}}}}return n.makeTensorInfo(x.shape,x.dtype,x.values)}};const zh={kernelName:S.Conv3DBackpropFilterV2,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,dy:s}=t,{strides:o,pad:i,filterShape:c}=a;Wu([r,s],"conv3dBackpropFilterV2");const l=S.util.computeStrides(r.shape),u=S.util.computeStrides(s.shape),d=S.backend_util.computeConv3DInfo(r.shape,c,o,1,i),h=d.strideDepth,p=d.strideHeight,f=d.strideWidth,m=d.filterDepth,g=d.filterHeight,y=d.filterWidth,b=new S.TensorBuffer(d.filterShape,"float32"),v=b.values,[x,w,k,N]=b.strides,I=n.data.get(s.dataId).values,[T,C,E,_]=u,A=n.data.get(r.dataId).values,[R,F,D,O]=l,M=d.padInfo.front,z=d.padInfo.left,L=d.padInfo.top;for(let S=0;S<m;++S){const e=Math.max(0,Math.ceil((M-S)/h)),t=Math.min(d.outDepth,(d.inDepth+M-S)/h),n=S*x;for(let a=0;a<g;++a){const r=Math.max(0,Math.ceil((L-a)/p)),s=Math.min(d.outHeight,(d.inHeight+L-a)/p),o=a*w+n;for(let n=0;n<y;++n){const i=Math.max(0,Math.ceil((z-n)/f)),c=Math.min(d.outWidth,(d.inWidth+z-n)/f),l=n*k+o;for(let o=0;o<d.inChannels;++o){const u=o*N+l;for(let l=0;l<d.outChannels;++l){let m=0;for(let u=0;u<d.batchSize;++u){const d=u*R,g=u*T;for(let u=e;u<t;++u){const e=(S+u*h-M)*F+d,t=u*C+g;for(let u=r;u<s;++u){const r=(a+u*p-L)*D+e,s=u*E+t;for(let e=i;e<c;++e){const t=e*_+s;m+=A[(n+e*f-z)*O+r+o]*I[t+l]}}}}v[u+l]=m}}}}}return n.makeTensorInfo(b.shape,b.dtype,b.values)}};const Lh={kernelName:S.Conv3DBackpropInputV2,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:r,filter:s}=t,{pad:o,strides:i,inputShape:c}=a;Wu([r],"conv3dBackpropInputV2");const l=S.util.computeStrides(r.shape),u=S.util.computeStrides(s.shape),d=S.backend_util.computeConv3DInfo(c,s.shape,i,1,o),h=new S.TensorBuffer(d.inShape,"float32"),p=h.values,[f,m,g,y]=h.strides,b=n.data.get(r.dataId).values,[v,x,w,k]=l,N=n.data.get(s.dataId).values,[I,T,C,E]=u,{batchSize:_,filterDepth:A,filterHeight:R,filterWidth:F,inChannels:D,inDepth:O,inHeight:M,inWidth:z,outChannels:L,outDepth:B,outHeight:P,outWidth:V,strideDepth:W,strideHeight:U,strideWidth:G}=d,H=A-1-d.padInfo.front,j=R-1-d.padInfo.top,q=F-1-d.padInfo.left;for(let S=0;S<_;++S)for(let e=0;e<D;++e)for(let t=0;t<O;++t){const n=t-H,a=Math.max(0,Math.ceil(n/W)),r=Math.min(B,(A+n)/W);for(let s=0;s<M;++s){const o=s-j,i=Math.max(0,Math.ceil(o/U)),c=Math.min(P,(R+o)/U);for(let l=0;l<z;++l){const u=l-q,d=Math.max(0,Math.ceil(u/G)),h=Math.min(V,(F+u)/G);let _=0;for(let t=a;t<r;++t){const a=t*W-n;for(let n=i;n<c;++n){const r=n*U-o;for(let s=d;s<h;++s){const o=v*S+x*t+w*n+k*s,i=I*(A-1-a)+T*(R-1-r)+C*(F-1-(s*G-u))+E*e;for(let e=0;e<L;++e){_+=b[o+e]*N[i+e]}}}}p[f*S+m*t+g*s+y*l+e]=_}}}return n.makeTensorInfo(h.shape,h.dtype,h.values)}},Bh=ju(S.Cos,(e=>Math.cos(e))),Ph={kernelName:S.Cos,backendName:"cpu",kernelFunc:Bh},Vh=ju(S.Cosh,(e=>Math.cosh(e))),Wh={kernelName:S.Cosh,backendName:"cpu",kernelFunc:Vh};const Uh={kernelName:S.CropAndResize,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{image:r,boxes:s,boxInd:o}=t,{cropSize:i,method:c,extrapolationValue:l}=a,[u,d,h,p]=r.shape,f=s.shape[0],[m,g]=i,y=(0,S.buffer)([f,m,g,p],"float32"),b=n.data.get(s.dataId).values,v=n.data.get(o.dataId).values,x=n.data.get(r.dataId).values,w=S.util.computeStrides(r.shape),k=S.util.computeStrides(y.shape);for(let S=0;S<f;S++){const e=4*S,t=b[e],n=b[e+1],a=b[e+2],r=b[e+3],s=v[S];if(s>=u)continue;const o=m>1?(a-t)*(d-1)/(m-1):0,i=g>1?(r-n)*(h-1)/(g-1):0;for(let u=0;u<m;u++){const e=m>1?t*(d-1)+u*o:.5*(t+a)*(d-1);if(e<0||e>d-1)for(let t=0;t<g;t++)for(let e=0;e<p;e++){const n=e+t*k[2]+u*k[1]+S*k[0];y.values[n]=l}else if("bilinear"===c){const t=Math.floor(e),a=Math.ceil(e),o=e-t;for(let e=0;e<g;e++){const c=g>1?n*(h-1)+e*i:.5*(n+r)*(h-1);if(c<0||c>h-1){for(let t=0;t<p;t++){const n=t+e*k[2]+u*k[1]+S*k[0];y.values[n]=l}continue}const d=Math.floor(c),f=Math.ceil(c),m=c-d;for(let n=0;n<p;n++){let r=n+d*w[2]+t*w[1]+s*w[0];const i=x[r];r=n+f*w[2]+t*w[1]+s*w[0];const c=x[r];r=n+d*w[2]+a*w[1]+s*w[0];const l=x[r];r=n+f*w[2]+a*w[1]+s*w[0];const h=i+(c-i)*m,p=l+(x[r]-l)*m;r=n+e*k[2]+u*k[1]+S*k[0],y.values[r]=h+(p-h)*o}}}else for(let t=0;t<g;++t){const a=g>1?n*(h-1)+t*i:.5*(n+r)*(h-1);if(a<0||a>h-1){for(let e=0;e<p;e++){const n=e+t*k[2]+u*k[1]+S*k[0];y.values[n]=l}continue}const o=Math.round(a),c=Math.round(e);for(let e=0;e<p;e++){const n=e+o*w[2]+c*w[1]+s*w[0],a=e+t*k[2]+u*k[1]+S*k[0];y.values[a]=x[n]}}}}return n.makeTensorInfo(y.shape,y.dtype,y.values)}};const Gh={kernelName:S.Cumprod,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s,exclusive:o,reverse:i}=a;Wu(r,"cumprod");const c=S.backend_util.getAxesPermutation([s],r.shape.length);let l=r;null!=c&&(l=Bd({inputs:{x:r},backend:n,attrs:{perm:c}}));const u=S.backend_util.getInnerMostAxes(1,r.shape.length)[0];if(u!==l.shape.length-1)throw new Error("backend.cumprod in CPU expects an inner-most "+"axis=".concat(l.shape.length-1," but got axis=").concat(u));const d=(0,S.upcastType)(l.dtype,"int32"),h=S.util.makeOnesTypedArray(S.util.sizeFromShape(l.shape),d),p=n.data.get(l.dataId).values,f=l.shape[l.shape.length-1],m=i?(e,t)=>e+f-t-1:(e,t)=>e+t;for(let y=0;y<p.length;y+=f)for(let e=0;e<f;e++){const t=m(y,e);if(0===e)h[t]=o?1:p[t];else{const n=m(y,e-1);h[t]=o?p[n]*h[n]:p[t]*h[n]}}const g=n.makeTensorInfo(l.shape,d,h);if(null!=c){const e=Bd({inputs:{x:g},backend:n,attrs:{perm:S.backend_util.getUndoAxesPermutation(c)}});return n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(l),e}return g}};const Hh={kernelName:S.Cumsum,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s,exclusive:o,reverse:i}=a;Wu(r,"cumsum");const c=S.backend_util.getAxesPermutation([s],r.shape.length);let l=r;null!=c&&(l=Bd({inputs:{x:r},backend:n,attrs:{perm:c}}));const u=S.backend_util.getInnerMostAxes(1,r.shape.length)[0];if(u!==l.shape.length-1)throw new Error("backend.cumsum in CPU expects an inner-most "+"axis=".concat(l.shape.length-1," but got axis=").concat(u));const d=(0,S.upcastType)(l.dtype,"int32"),h=S.util.makeZerosTypedArray(S.util.sizeFromShape(l.shape),d),p=n.data.get(l.dataId).values,f=l.shape[l.shape.length-1],m=i?(e,t)=>e+f-t-1:(e,t)=>e+t;for(let y=0;y<p.length;y+=f)for(let e=0;e<f;e++){const t=m(y,e);if(0===e)h[t]=o?0:p[t];else{const n=m(y,e-1);h[t]=o?p[n]+h[n]:p[t]+h[n]}}const g=n.makeTensorInfo(l.shape,d,h);if(null!=c){const e=Bd({inputs:{x:g},backend:n,attrs:{perm:S.backend_util.getUndoAxesPermutation(c)}});return n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(l),e}return g}};const jh={kernelName:S.DenseBincount,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,weights:s}=t,{size:o,binaryOutput:i}=a;if(1===r.shape.length){const e=ph(n.data.get(r.dataId).values,n.data.get(s.dataId).values,s.dtype,s.shape,o);return n.makeTensorInfo([o],s.dtype,e)}if(2===r.shape.length){const e=fh(n.bufferSync(r),n.bufferSync(s),o,i);return n.makeTensorInfo(e.shape,s.dtype,e.values)}throw new Error("Error in denseBincount: input must be at most rank 2, but got rank"+"".concat(r.shape.length,"."))}};const qh={kernelName:S.DepthToSpace,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{blockSize:s,dataFormat:o}=a;S.util.assert("NHWC"===o,(()=>"Only NHWC dataFormat supported on CPU for depthToSpace. Got ".concat(o)));const i=r.shape[0],c=r.shape[1],l=r.shape[2],u=r.shape[3],d=c*s,h=l*s,p=u/(s*s),f=n.data.get(r.dataId).values,m=new Float32Array(i*d*h*p);let g=0;for(let y=0;y<i;++y)for(let e=0;e<d;++e){const t=Math.floor(e/s),n=e%s;for(let e=0;e<h;++e){const a=Math.floor(e/s),r=(n*s+e%s)*p;for(let e=0;e<p;++e){const n=e+r+u*(a+l*(t+c*y));m[g++]=f[n]}}}return n.makeTensorInfo([i,d,h,p],r.dtype,m)}};function Xh(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,filter:s}=t,{strides:o,pad:i,dilations:c,dimRoundingMode:l}=a;Wu([r,s],"depthwiseConv2DNative");const u=S.util.computeStrides(r.shape),d=S.util.computeStrides(s.shape);let h=c;null==h&&(h=[1,1]),S.util.assert(S.backend_util.eitherStridesOrDilationsAreOne(o,h),(()=>"Error in depthwiseConv2d: Either strides or dilations must be "+"1. Got strides ".concat(o," and dilations '").concat(h,"'")));const p=S.backend_util.computeConv2DInfo(r.shape,s.shape,o,h,i,l,!0),{filterHeight:f,filterWidth:m,dilationHeight:g,dilationWidth:y,padInfo:b}=p,v=b.left,x=b.top,w=p.outChannels/p.inChannels,k=new S.TensorBuffer(p.outShape,r.dtype),N=n.data.get(r.dataId).values,I=n.data.get(s.dataId).values,T=k.values;for(let S=0;S<p.batchSize;++S){const e=S*u[0],t=S*k.strides[0];for(let n=0;n<p.outHeight;++n){const a=t+n*k.strides[1],r=n*p.strideHeight-x;for(let t=0;t<f;++t){const n=r+t*g;if(n<0||n>=p.inHeight)continue;const s=t*d[0],o=e+n*u[1];for(let e=0;e<p.outWidth;++e){const t=a+e*k.strides[2],n=e*p.strideWidth-v;for(let e=0;e<m;++e){const a=n+e*y;if(a<0||a>=p.inWidth)continue;const r=s+e*d[1],i=o+a*p.inChannels;let c=t,l=r;for(let e=0;e<p.inChannels;++e){const t=N[i+e];for(let e=0;e<w;++e)T[c+e]+=t*I[l+e];c+=w,l+=w}}}}}}return n.makeTensorInfo(k.shape,k.dtype,k.values)}const Kh={kernelName:S.DepthwiseConv2dNative,backendName:"cpu",kernelFunc:Xh};const Qh={kernelName:S.DepthwiseConv2dNativeBackpropFilter,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,dy:s}=t,{strides:o,dilations:i,pad:c,dimRoundingMode:l,filterShape:u}=a;Wu([r,s],"depthwiseConv2dNativeBackpropFilter");const d=S.backend_util.computeConv2DInfo(r.shape,u,o,i,c,l,!0),{strideHeight:h,strideWidth:p,filterHeight:f,filterWidth:m}=d,g=new S.TensorBuffer(d.filterShape,"float32"),y=d.padInfo.left,b=d.padInfo.top,v=d.outChannels/d.inChannels,x=n.data.get(r.dataId).values,w=new S.TensorBuffer(r.shape,r.dtype,x),k=n.data.get(s.dataId).values,N=new S.TensorBuffer(s.shape,s.dtype,k);for(let S=0;S<f;++S){const e=Math.max(0,Math.ceil((b-S)/h)),t=Math.min(d.outHeight,(d.inHeight+b-S)/h);for(let n=0;n<m;++n){const a=Math.max(0,Math.ceil((y-n)/p)),r=Math.min(d.outWidth,(d.inWidth+y-n)/p);for(let s=0;s<d.outChannels;++s){const o=Math.trunc(s/v),i=s%v;let c=0;for(let l=0;l<d.batchSize;++l)for(let i=e;i<t;++i){const e=S+i*h-b;for(let t=a;t<r;++t){const a=n+t*p-y;c+=w.get(l,e,a,o)*N.get(l,i,t,s)}}g.set(c,S,n,o,i)}}}return n.makeTensorInfo(g.shape,g.dtype,g.values)}};const Yh={kernelName:S.DepthwiseConv2dNativeBackpropInput,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:r,filter:s}=t,{strides:o,dilations:i,pad:c,dimRoundingMode:l,inputShape:u}=a;Wu([r,s],"depthwiseConv2DNativeBackpropInput");const d=S.util.computeStrides(r.shape),h=S.util.computeStrides(s.shape),p=S.backend_util.computeConv2DInfo(u,s.shape,o,i,c,l,!0),f=new S.TensorBuffer(p.inShape,"float32"),m=f.values,[g,y,b]=f.strides,v=n.data.get(r.dataId).values,[x,w,k]=d,N=n.data.get(s.dataId).values,[I,T,C]=h,{batchSize:E,filterHeight:_,filterWidth:A,inChannels:R,inHeight:F,inWidth:D,outChannels:O,outHeight:M,outWidth:z,strideHeight:L,strideWidth:B}=p,P=_-1-p.padInfo.top,V=A-1-p.padInfo.left,W=O/R;for(let S=0;S<E;++S)for(let e=0;e<R;++e)for(let t=0;t<F;++t){const n=t-P,a=Math.max(0,Math.ceil(n/L)),r=Math.min(M,(_+n)/L);for(let s=0;s<D;++s){const o=s-V,i=Math.max(0,Math.ceil(o/B)),c=Math.min(z,(A+o)/B);let l=0;for(let t=a;t<r;++t){const a=t*L-n;for(let n=i;n<c;++n){const r=x*S+w*t+k*n,s=I*(_-1-a)+T*(A-1-(n*B-o))+C*e;for(let t=0;t<W;++t){l+=v[r+(e*W+t)]*N[s+t]}}}m[g*S+y*t+b*s+e]=l}}return n.makeTensorInfo(f.shape,f.dtype,f.values)}};const Zh={kernelName:S.Diag,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:a}=t,r=S.util.sizeFromShape(a.shape),s=n.data.get(a.dataId).values,o=(0,S.buffer)([r,r],a.dtype),i=o.values;for(let l=0;l<s.length;l++)i[l*r+l]=s[l];const c=[...a.shape,...a.shape];return n.makeTensorInfo(c,o.dtype,o.values)}},Jh={kernelName:S.Dilation2D,backendName:"cpu",kernelFunc:e=>{let{inputs:t,backend:n,attrs:a}=e;const{x:r,filter:s}=t,{strides:o,pad:i,dilations:c}=a,l=n,u=l.data.get(r.dataId).values,d=r.shape.length,h=l.data.get(s.dataId).values,p=s.shape.length,{batchSize:f,inHeight:m,inWidth:g,inChannels:y,outHeight:b,outWidth:v,padInfo:x,strideHeight:w,strideWidth:k,filterHeight:N,filterWidth:I,dilationHeight:T,dilationWidth:C,outShape:E}=S.backend_util.computeDilation2DInfo(r.shape,s.shape,o,i,"NHWC",c),_=S.util.sizeFromShape(E),A=E.length,R=S.util.getArrayFromDType(r.dtype,_);for(let F=0;F<f;++F)for(let e=0;e<b;++e){const t=e*w-x.top;for(let n=0;n<v;++n){const a=n*k-x.left;for(let o=0;o<y;++o){let i=Number.MIN_SAFE_INTEGER;for(let e=0;e<N;++e){const n=t+e*T;if(n>=0&&n<m)for(let t=0;t<I;++t){const c=a+t*C;if(c>=0&&c<g){const a=S.util.locToIndex([F,n,c,o],d,S.util.computeStrides(r.shape)),l=S.util.locToIndex([e,t,o],p,S.util.computeStrides(s.shape)),f=u[a]+h[l];f>i&&(i=f)}}}R[S.util.locToIndex([F,e,n,o],A,S.util.computeStrides(E))]=i}}}return{dataId:l.write(S.util.toTypedArray(R,r.dtype),E,r.dtype),shape:E,dtype:r.dtype}}},$h={kernelName:S.Dilation2DBackpropFilter,backendName:"cpu",kernelFunc:e=>{let{inputs:t,backend:n,attrs:a}=e;const{x:r,filter:s,dy:o}=t,{strides:i,pad:c,dilations:l}=a,u=n,d=S.util.toNestedArray(r.shape,u.data.get(r.dataId).values),h=S.util.toNestedArray(s.shape,u.data.get(s.dataId).values),{batchSize:p,inHeight:f,inWidth:m,inChannels:g,outHeight:y,outWidth:b,padInfo:v,strideHeight:x,strideWidth:w,filterHeight:k,filterWidth:N,dilationHeight:I,dilationWidth:T,outShape:C}=S.backend_util.computeDilation2DInfo(r.shape,s.shape,i,c,"NHWC",l);S.util.assert(o.rank===C.length,(()=>"Error in ".concat(S.Dilation2DBackpropFilter,", dy ")+"must have the same rank as output ".concat(C.length,", but got ")+"".concat(o.rank)));const E=S.util.toNestedArray(C,u.data.get(o.dataId).values),_=S.util.makeZerosNestedTypedArray(s.shape,s.dtype);for(let S=0;S<p;++S)for(let e=0;e<y;++e){const t=e*x-v.top;for(let n=0;n<b;++n){const a=n*w-v.left;for(let r=0;r<g;++r){let s=Number.MIN_SAFE_INTEGER,o=0,i=0;for(let e=0;e<k;++e){const n=t+e*I;if(n>=0&&n<f)for(let t=0;t<N;++t){const c=a+t*T;if(c>=0&&c<m){const a=d[S][n][c][r]+h[e][t][r];a>s&&(s=a,o=e,i=t)}}}_[o][i][r]+=E[S][e][n][r]}}}return{dataId:u.write(S.util.toTypedArray(_,r.dtype),s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}},ep={kernelName:S.Dilation2DBackpropInput,backendName:"cpu",kernelFunc:e=>{let{inputs:t,backend:n,attrs:a}=e;const{x:r,filter:s,dy:o}=t,{strides:i,pad:c,dilations:l}=a,u=n,d=S.util.toNestedArray(r.shape,u.data.get(r.dataId).values),h=S.util.toNestedArray(s.shape,u.data.get(s.dataId).values),{batchSize:p,inHeight:f,inWidth:m,inChannels:g,outHeight:y,outWidth:b,padInfo:v,strideHeight:x,strideWidth:w,filterHeight:k,filterWidth:N,dilationHeight:I,dilationWidth:T,outShape:C}=S.backend_util.computeDilation2DInfo(r.shape,s.shape,i,c,"NHWC",l);S.util.assert(o.rank===C.length,(()=>"Error in ".concat(S.Dilation2DBackpropInput,", dy ")+"must have the same rank as output ".concat(C.length,", but got ")+"".concat(o.rank)));const E=S.util.toNestedArray(C,u.data.get(o.dataId).values),_=S.util.makeZerosNestedTypedArray(r.shape,r.dtype);for(let S=0;S<p;++S)for(let e=0;e<y;++e){const t=e*x-v.top;for(let n=0;n<b;++n){const a=n*w-v.left;for(let r=0;r<g;++r){let s=Number.MIN_SAFE_INTEGER,o=t<0?0:t,i=a<0?0:a;for(let e=0;e<k;++e){const n=t+e*I;if(n>=0&&n<f)for(let t=0;t<N;++t){const c=a+t*T;if(c>=0&&c<m){const a=d[S][n][c][r]+h[e][t][r];a>s&&(s=a,o=n,i=c)}}}_[S][o][i][r]+=E[S][e][n][r]}}}return{dataId:u.write(S.util.toTypedArray(_,r.dtype),r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}};const tp={kernelName:S.Draw,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{image:r}=t,{canvas:s,options:o}=a,{contextOptions:i,imageOptions:c}=o||{},l=(null===c||void 0===c?void 0:c.alpha)||1,u=(null===i||void 0===i?void 0:i.contextType)||"2d";if("2d"!==u)throw new Error("Context type ".concat(i.contextType," is not supported by the CPU backend."));const d=s.getContext(u,(null===i||void 0===i?void 0:i.contextAttributes)||{});if(null==d)throw new Error("Could not get the context with ".concat(u," type."));const[h,p]=r.shape.slice(0,2),f=2===r.shape.length?1:r.shape[2],m=n.data.get(r.dataId).values,g="float32"===r.dtype?255:1,y=new Uint8ClampedArray(p*h*4);for(let v=0;v<h*p;++v){const e=[0,0,0,255*l];for(let n=0;n<f;n++){const t=m[v*f+n];if("float32"===r.dtype){if(t<0||t>1)throw new Error("Tensor values for a float32 Tensor must be in the "+"range [0 - 1] but encountered ".concat(t,"."))}else if("int32"===r.dtype&&(t<0||t>255))throw new Error("Tensor values for a int32 Tensor must be in the "+"range [0 - 255] but encountered ".concat(t,"."));1===f?(e[0]=t*g,e[1]=t*g,e[2]=t*g):e[n]=t*g}const t=4*v;y[t+0]=Math.round(e[0]),y[t+1]=Math.round(e[1]),y[t+2]=Math.round(e[2]),y[t+3]=Math.round(e[3])}s.width=p,s.height=h;const b=new ImageData(y,p,h);return d.putImageData(b,0,0),r}},np=$u(((e,t)=>e*t)),ap=xd(((e,t,n,a)=>({real:e*n-t*a,imag:e*a+t*n}))),rp=vd(S.Multiply,np,ap),sp={kernelName:S.Multiply,backendName:"cpu",kernelFunc:rp};function op(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s,keepDims:o}=a;let i;Wu(r,"sum"),i="bool"===r.dtype?yd({inputs:{x:r},backend:n,attrs:{dtype:"int32"}}):Qu({inputs:{x:r},backend:n});const c=i.shape.length,l=S.util.parseAxisParam(s,i.shape),u=S.backend_util.getAxesPermutation(l,c);let d=l,h=i;null!=u&&(h=Bd({inputs:{x:i},backend:n,attrs:{perm:u}}),d=S.backend_util.getInnerMostAxes(d.length,c)),S.backend_util.assertAxesAreInnerMostDims("sum",d,h.shape.length);const[p,f]=S.backend_util.computeOutAndReduceShapes(h.shape,d);let m=pd(n,p,S.backend_util.upcastType(h.dtype,"int32"));const g=S.util.sizeFromShape(f),y=n.data.get(m.dataId).values,b=n.data.get(h.dataId).values;for(let v=0;v<y.length;++v){const e=v*g;let t=0;for(let n=0;n<g;++n)t+=b[e+n];y[v]=t}if(o){const e=m;m=Id({inputs:{x:m},backend:n,attrs:{shape:S.backend_util.expandShapeToKeepDim(m.shape,l)}}),n.disposeIntermediateTensorInfo(e)}return n.disposeIntermediateTensorInfo(i),null!=u&&n.disposeIntermediateTensorInfo(h),m}const ip={kernelName:S.Sum,backendName:"cpu",kernelFunc:op};const cp={kernelName:S.Einsum,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{equation:r}=a,s=t,{allDims:o,summedDims:i,idDims:c}=S.backend_util.decodeEinsumEquation(r,s.length);S.backend_util.checkEinsumDimSizes(o.length,c,s);const{path:l,steps:u}=S.backend_util.getEinsumComputePath(i,c),d=u.length;let h=null,p=o.length;const f=[];for(let m=0;m<d;++m){for(const e of u[m]){const{permutationIndices:t,expandDims:a}=S.backend_util.getEinsumPermutation(p,c[e]);let r;S.backend_util.isIdentityPermutation(t)?r=s[e]:(r=Bd({inputs:{x:s[e]},backend:n,attrs:{perm:t}}),f.push(r));const o=r.shape.slice();for(let e=0;e<a.length;++e)o.splice(a[e],0,1);S.util.arraysEqual(r.shape,o)||(r=Id({inputs:{x:r},backend:n,attrs:{shape:o}}),f.push(r)),null===h?h=r:(h=rp({inputs:{a:r,b:h},backend:n}),f.push(h))}m<d-1&&(l[m]>=0&&(h=op({inputs:{x:h},backend:n,attrs:{axis:l[m]-(o.length-p),keepDims:!1}}),f.push(h)),p--)}for(const m of f)m!==h&&n.disposeIntermediateTensorInfo(m);return h}};const lp={kernelName:S.EluGrad,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{dy:a,y:r}=t;Wu([a,r],"eluGrad");const s=new Float32Array(S.util.sizeFromShape(r.shape)),o=n.data.get(r.dataId).values,i=n.data.get(a.dataId).values;for(let c=0;c<o.length;++c){const e=o[c];s[c]=e>=0?i[c]:i[c]*(e+1)}return n.makeTensorInfo(r.shape,"float32",s)}},up=$u(((e,t)=>e===t?1:0)),dp=vd(S.Equal,up,null,"bool"),hp={kernelName:S.Equal,backendName:"cpu",kernelFunc:dp},pp=S.backend_util.ERF_P,fp=S.backend_util.ERF_A1,mp=S.backend_util.ERF_A2,gp=S.backend_util.ERF_A3,yp=S.backend_util.ERF_A4,bp=S.backend_util.ERF_A5,vp=ju(S.Erf,(e=>{const t=Math.sign(e),n=Math.abs(e),a=1/(1+pp*n);return t*(1-((((bp*a+yp)*a+gp)*a+mp)*a+fp)*a*Math.exp(-n*n))})),xp={kernelName:S.Erf,backendName:"cpu",kernelFunc:vp},wp=Hu((e=>Math.exp(e))),kp=qu(S.Exp,wp,"float32"),Sp={kernelName:S.Exp,backendName:"cpu",kernelFunc:kp};function Np(e){const{inputs:t,backend:n,attrs:a}=e,{input:r}=t,{dim:s}=a,o=r.shape.length,i=r.shape.slice();let c=s;return s<0&&(S.util.assert(-(o+1)<=s,(()=>"Axis must be in the interval [".concat(-(o+1),", ").concat(o,"]"))),c=o+s+1),i.splice(c,0,1),Id({inputs:{x:r},backend:n,attrs:{shape:i}})}const Ip={kernelName:S.ExpandDims,backendName:"cpu",kernelFunc:Np},Tp=Hu((e=>Math.expm1(e))),Cp=qu(S.Expm1,Tp),Ep={kernelName:S.Expm1,backendName:"cpu",kernelFunc:Cp},_p=$u(((e,t)=>e/t)),Ap=vd(S.RealDiv,_p),Rp={kernelName:S.RealDiv,backendName:"cpu",kernelFunc:Ap},Fp=$u(((e,t)=>e-t)),Dp=xd(((e,t,n,a)=>({real:e-n,imag:t-a}))),Op=vd(S.Sub,Fp,Dp),Mp={kernelName:S.Sub,backendName:"cpu",kernelFunc:Op};function zp(e,t,n){const a=e.shape,r=a[0],s=a[1],o=n.data.get(e.dataId),i=o.complexTensorInfos.real,c=o.complexTensorInfos.imag,l=[r,s],u=S.util.sizeFromShape(l),d=S.util.getTypedArrayFromDType("float32",u),h=S.util.getTypedArrayFromDType("float32",u);for(let g=0;g<r;g++){const e=uh({inputs:{x:i},backend:n,attrs:{begin:[g,0],size:[1,s]}}),a=uh({inputs:{x:c},backend:n,attrs:{begin:[g,0],size:[1,s]}}),r=dd({inputs:{real:e,imag:a},backend:n}),{real:o,imag:l}=Lp(r,t,n),u=S.backend_util.mergeRealAndImagArrays(o,l);for(let t=0;t<s;t++){const e=S.backend_util.getComplexWithIndex(u,t);d[g*s+t]=e.real,h[g*s+t]=e.imag}n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(r)}const p=n.makeTensorInfo(l,"float32",d),f=n.makeTensorInfo(l,"float32",h),m=dd({inputs:{real:p,imag:f},backend:n});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),m}function Lp(e,t,n){const a=S.util.sizeFromShape(e.shape),r=n.data.get(e.dataId),s=n.data.get(r.complexTensorInfos.real.dataId).values,o=n.data.get(r.complexTensorInfos.imag.dataId).values;if(0===((i=a)&i-1)){const r=Bp(s,o,a,t,n),i=[e.shape[0],e.shape[1]];if(t){const e=n.makeTensorInfo(i,"float32",r.real),t=n.makeTensorInfo(i,"float32",r.imag),s=n.makeTensorInfo([],"float32",S.util.createScalarValue(a,"float32")),o=Qu({inputs:{x:s},backend:n}),c=Rp.kernelFunc({inputs:{a:e,b:s},backend:n}),l=Rp.kernelFunc({inputs:{a:t,b:o},backend:n}),u=n.data.get(c.dataId).values,d=n.data.get(l.dataId).values;return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(l),{real:u,imag:d}}return r}{const e=function(e,t,n){const a=new Float32Array(2*t);for(let r=0;r<t;r++){let s=0,o=0;for(let a=0;a<t;a++){const i=S.backend_util.exponent(r*a,t,n),c=S.backend_util.getComplexWithIndex(e,a);s+=c.real*i.real-c.imag*i.imag,o+=c.real*i.imag+c.imag*i.real}n&&(s/=t,o/=t),S.backend_util.assignToTypedArray(a,s,o,r)}return a}(S.backend_util.mergeRealAndImagArrays(s,o),a,t);return S.backend_util.splitRealAndImagArrays(e)}var i}function Bp(e,t,n,a,r){if(1===n)return{real:e,imag:t};const s=S.backend_util.mergeRealAndImagArrays(e,t),o=n/2,i=S.backend_util.complexWithEvenIndex(s),c=i.real,l=i.imag,u=[c.length],d=r.makeTensorInfo(u,"float32",c),h=r.makeTensorInfo(u,"float32",l),p=dd({inputs:{real:d,imag:h},backend:r}),f=S.backend_util.complexWithOddIndex(s),m=f.real,g=f.imag,y=[m.length],b=r.makeTensorInfo(y,"float32",m),v=r.makeTensorInfo(y,"float32",g),x=dd({inputs:{real:b,imag:v},backend:r}),w=Bp(c,l,o,a,r),k=w.real,N=w.imag,I=[k.length],T=r.makeTensorInfo(I,"float32",k),C=r.makeTensorInfo(I,"float32",N),E=dd({inputs:{real:T,imag:C},backend:r}),_=Bp(m,g,o,a,r),A=_.real,R=_.imag,F=[A.length],D=r.makeTensorInfo(F,"float32",A),O=r.makeTensorInfo(F,"float32",R),M=dd({inputs:{real:D,imag:O},backend:r}),z=S.backend_util.exponents(n,a),L=[z.real.length],B=r.makeTensorInfo(L,"float32",z.real),P=r.makeTensorInfo(L,"float32",z.imag),V=dd({inputs:{real:B,imag:P},backend:r}),W=rp({inputs:{a:V,b:M},backend:r}),U=Sd({inputs:{a:E,b:W},backend:r}),G=Op({inputs:{a:E,b:W},backend:r}),H=fd({inputs:{input:U},backend:r}),j=fd({inputs:{input:G},backend:r}),q=Ch({inputs:{input:U},backend:r}),X=Ch({inputs:{input:G},backend:r}),K=_h({inputs:[H,j],backend:r,attrs:{axis:0}}),Q=_h({inputs:[q,X],backend:r,attrs:{axis:0}}),Y=r.data.get(K.dataId).values,Z=r.data.get(Q.dataId).values;return r.disposeIntermediateTensorInfo(d),r.disposeIntermediateTensorInfo(h),r.disposeIntermediateTensorInfo(p),r.disposeIntermediateTensorInfo(b),r.disposeIntermediateTensorInfo(v),r.disposeIntermediateTensorInfo(x),r.disposeIntermediateTensorInfo(T),r.disposeIntermediateTensorInfo(C),r.disposeIntermediateTensorInfo(E),r.disposeIntermediateTensorInfo(D),r.disposeIntermediateTensorInfo(O),r.disposeIntermediateTensorInfo(M),r.disposeIntermediateTensorInfo(B),r.disposeIntermediateTensorInfo(P),r.disposeIntermediateTensorInfo(V),r.disposeIntermediateTensorInfo(W),r.disposeIntermediateTensorInfo(U),r.disposeIntermediateTensorInfo(G),r.disposeIntermediateTensorInfo(H),r.disposeIntermediateTensorInfo(q),r.disposeIntermediateTensorInfo(j),r.disposeIntermediateTensorInfo(X),r.disposeIntermediateTensorInfo(K),r.disposeIntermediateTensorInfo(Q),{real:Y,imag:Z}}const Pp={kernelName:S.FFT,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:a}=t,r=S.util.sizeFromShape(a.shape),s=a.shape[a.shape.length-1],o=Id({inputs:{x:a},backend:n,attrs:{shape:[r/s,s]}}),i=zp(o,!1,n),c=Id({inputs:{x:i},backend:n,attrs:{shape:a.shape}});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(i),c}};function Vp(e){const{backend:t,attrs:n}=e,{shape:a,value:r,dtype:s}=n,o=s||S.util.inferDtype(r),i=S.util.getArrayFromDType(o,S.util.sizeFromShape(a));return function(e,t,n){e.fill(t)}(i,r),t.makeTensorInfo(a,o,i)}const Wp={kernelName:S.Fill,backendName:"cpu",kernelFunc:Vp};const Up={kernelName:S.FlipLeftRight,backendName:"cpu",kernelFunc:e=>{let{inputs:t,attrs:n,backend:a}=e;const{image:r}=t,s=a,o=S.util.getTypedArrayFromDType(r.dtype,S.util.sizeFromShape(r.shape)),[i,c,l,u]=r.shape,d=s.data.get(r.dataId).values;for(let h=0;h<i;h++){const e=h*l*c*u;for(let t=0;t<c;t++){const n=t*(l*u);for(let t=0;t<l;t++){const a=t*u;for(let r=0;r<u;r++){const s=Math.round(l-t-1),i=e+n+a+r;let c=d[i];if(s>=0&&s<l){c=d[e+n+s*u+r]}o[i]=c}}}}return{dataId:s.write(o,r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},Gp=Hu((e=>Math.floor(e))),Hp=qu(S.Floor,Gp),jp={kernelName:S.Floor,backendName:"cpu",kernelFunc:Hp},qp=$u(((e,t)=>Math.floor(e/t))),Xp=vd(S.FloorDiv,qp,null,"int32"),Kp={kernelName:S.FloorDiv,backendName:"cpu",kernelFunc:Xp};const Qp={kernelName:S.FusedConv2D,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,filter:s,bias:o,preluActivationWeights:i}=t,{strides:c,pad:l,dataFormat:u,dilations:d,dimRoundingMode:h,activation:p,leakyreluAlpha:f}=a;let m=Rh({inputs:{x:r,filter:s},backend:n,attrs:{strides:c,pad:l,dataFormat:u,dilations:d,dimRoundingMode:h}});if(o){const e=m;if("NCHW"===u&&1===o.shape.length&&1!==o.shape[0]){const e=Id({inputs:{x:o},backend:n,attrs:{shape:[o.shape[0],1,1]}});m=Sd({inputs:{a:m,b:e},backend:n}),n.disposeIntermediateTensorInfo(e)}else m=Sd({inputs:{a:m,b:o},backend:n});n.disposeIntermediateTensorInfo(e)}if(p){const e=m;if("NCHW"===u&&"prelu"===p&&1===i.shape.length&&1!==i.shape[0]){const e=Id({inputs:{x:i},backend:n,attrs:{shape:[i.shape[0],1,1]}});m=ud(n,m,p,e,f),n.disposeIntermediateTensorInfo(e)}else m=ud(n,m,p,i,f);n.disposeIntermediateTensorInfo(e)}return m}};const Yp={kernelName:S.FusedDepthwiseConv2D,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,filter:s,bias:o,preluActivationWeights:i}=t,{strides:c,pad:l,dataFormat:u,dilations:d,dimRoundingMode:h,activation:p,leakyreluAlpha:f}=a;let m=Xh({inputs:{x:r,filter:s},backend:n,attrs:{strides:c,pad:l,dataFormat:u,dilations:d,dimRoundingMode:h}});if(o){const e=m;m=Sd({inputs:{a:m,b:o},backend:n}),n.disposeIntermediateTensorInfo(e)}if(p){const e=m;m=ud(n,m,p,i,f),n.disposeIntermediateTensorInfo(e)}return m}};function Zp(e,t,n,a,r,s,o,i,c){const l=(0,S.buffer)([a,s],n);for(let u=0;u<a;u++){const n=[];let a=0;for(let t=0;t<r;t++){const s=e[u*r+t];a+=s*o[t],n.push(s)}if(a<0||a>=c/s)throw new Error("Invalid indices: ".concat(n," does not index into ").concat(i));for(let e=0;e<s;e++)l.values[u*s+e]=t.get(...t.indexToLoc(a*s+e))}return l}const Jp={kernelName:S.GatherNd,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{params:a,indices:r}=t,s=S.util.sizeFromShape(a.shape),o=r.shape,i=o[o.length-1],[c,l,u,d]=S.backend_util.prepareAndValidate(a,r);if(0===l)return n.makeTensorInfo(c,a.dtype,[]);const h=Zp(n.data.get(r.dataId).values,n.bufferSync(a),a.dtype,l,i,u,d,a.shape,s);return n.makeTensorInfo(c,a.dtype,h.values)}};function $p(e,t,n){const a=(0,S.buffer)(n,e.dtype);for(let r=0;r<a.size;++r){const n=a.indexToLoc(r).slice(),s=n[0],o=n[2],i=t.locToIndex([s,o]);n[2]=t.values[i];const c=e.locToIndex(n);0<=c&&c<e.values.length&&(a.values[r]=e.values[c])}return a}const ef={kernelName:S.GatherV2,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,indices:s}=t,{axis:o,batchDims:i}=a;Wu([r,s],"gatherV2");const c=S.util.parseAxisParam(o,r.shape)[0],l=n.data.get(s.dataId).values,u=r.shape[c];for(let v=0;v<l.length;++v){const e=l[v];S.util.assert(e<=u-1&&e>=0,(()=>"GatherV2: the index value ".concat(e," is not in [0, ").concat(u-1,"]")))}let d=i;null==i&&(d=0);const h=S.util.sizeFromShape(s.shape),p=S.backend_util.segment_util.collectGatherOpShapeInfo(r,s,c,d),f=Id({inputs:{x:r},backend:n,attrs:{shape:[p.batchSize,p.outerSize,p.dimSize,p.sliceSize]}}),m=Id({inputs:{x:s},backend:n,attrs:{shape:[p.batchSize,h/p.batchSize]}}),g=[p.batchSize,p.outerSize,h/p.batchSize,p.sliceSize],y=n.bufferSync(m),b=$p(n.bufferSync(f),y,g);return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),n.makeTensorInfo(p.outputShape,b.dtype,b.values)}},tf=$u(((e,t)=>e>t?1:0)),nf=vd(S.Greater,tf,null,"bool"),af={kernelName:S.Greater,backendName:"cpu",kernelFunc:nf},rf=$u(((e,t)=>e>=t?1:0)),sf=vd(S.GreaterEqual,rf,null,"bool"),of={kernelName:S.GreaterEqual,backendName:"cpu",kernelFunc:sf};const cf={kernelName:S.IFFT,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:a}=t,r=S.util.sizeFromShape(a.shape),s=a.shape[a.shape.length-1],o=Id({inputs:{x:a},backend:n,attrs:{shape:[r/s,s]}}),i=zp(o,!0,n),c=Id({inputs:{x:i},backend:n,attrs:{shape:a.shape}});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(i),c}},lf=ju(S.IsFinite,(e=>Number.isFinite(e)?1:0),"bool"),uf={kernelName:S.IsFinite,backendName:"cpu",kernelFunc:lf},df=ju(S.IsInf,(e=>Math.abs(e)===1/0?1:0),"bool"),hf={kernelName:S.IsInf,backendName:"cpu",kernelFunc:df},pf=ju(S.IsNan,(e=>Number.isNaN(e)?1:0),"bool"),ff={kernelName:S.IsNan,backendName:"cpu",kernelFunc:pf},mf=$u(((e,t)=>e<t?1:0)),gf=vd(S.Less,mf,null,"bool"),yf={kernelName:S.Less,backendName:"cpu",kernelFunc:gf},bf=$u(((e,t)=>e<=t?1:0)),vf=vd(S.LessEqual,bf,null,"bool"),xf={kernelName:S.LessEqual,backendName:"cpu",kernelFunc:vf};function wf(e,t,n){const a=(t-e)/(n-1),r=S.util.makeZerosTypedArray(n,"float32");r[0]=e;for(let s=1;s<r.length;s++)r[s]=r[s-1]+a;return r}const kf={kernelName:S.LinSpace,backendName:"cpu",kernelFunc:function(e){const{backend:t,attrs:n}=e,{start:a,stop:r,num:s}=n,o=wf(a,r,s);return t.makeTensorInfo([o.length],"float32",o)}},Sf=Hu((e=>Math.log(e))),Nf=qu(S.Log,Sf),If={kernelName:S.Log,backendName:"cpu",kernelFunc:Nf},Tf=ju(S.Log1p,(e=>Math.log1p(e))),Cf={kernelName:S.Log1p,backendName:"cpu",kernelFunc:Tf},Ef=$u(((e,t)=>e&&t)),_f=vd(S.LogicalAnd,Ef,null,"bool"),Af={kernelName:S.LogicalAnd,backendName:"cpu",kernelFunc:_f},Rf=ju(S.LogicalNot,(e=>e?0:1),"bool"),Ff={kernelName:S.LogicalNot,backendName:"cpu",kernelFunc:Rf},Df=$u(((e,t)=>e||t)),Of=vd(S.LogicalOr,Df,null,"bool"),Mf={kernelName:S.LogicalOr,backendName:"cpu",kernelFunc:Of};const zf={kernelName:S.LRN,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{depthRadius:s,bias:o,alpha:i,beta:c}=a;Wu(r,"LRN");const l=r.shape[3],u=l-1,d=n.data.get(r.dataId).values,h=S.util.sizeFromShape(r.shape),p=new Float32Array(h);function f(e){const t=e%l;let n=e-t+Math.max(0,t-s);const a=e-t+Math.min(t+s,u);let r=0;for(;n<=a;n++){const e=d[n];r+=e*e}return r}for(let m=0;m<h;m++){const e=f(m),t=d[m]*Math.pow(o+i*e,-c);p[m]=t}return n.makeTensorInfo(r.shape,r.dtype,p)}};const Lf={kernelName:S.LRNGrad,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,y:s,dy:o}=t,{depthRadius:i,bias:c,alpha:l,beta:u}=a;Wu(o,"LRNGrad");const d=S.util.sizeFromShape(o.shape),h=o.shape[3],p=n.data.get(o.dataId).values,f=n.data.get(r.dataId).values,m=n.data.get(s.dataId).values,g=new Float32Array(d),y=d;for(let b=0;b<y;b++){const e=b%h,t=b-e+Math.max(0,e-i),n=b-e+Math.min(h,e+i+1);let a=0;for(let r=t;r<n;r++)a+=Math.pow(f[r],2);a=l*a+c;for(let r=t;r<n;r++){let e=-2*l*u*f[r]*m[b]/a;b===r&&(e+=Math.pow(a,-u)),e*=p[b],g[r]+=e}}return n.makeTensorInfo(o.shape,r.dtype,g)}};function Bf(e,t,n,a){const r=S.util.getTypedArrayFromDType(a,S.util.sizeFromShape(n));for(let s=0;s<r.length;++s){const n=s*t;let a=e[n];for(let r=0;r<t;++r){const t=e[n+r];(Number.isNaN(t)||t>a)&&(a=t)}r[s]=a}return r}function Pf(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{reductionIndices:s,keepDims:o}=a,i=n;let c=r.shape;const l=c.length,u=S.util.parseAxisParam(s,c);let d=u;const h=S.backend_util.getAxesPermutation(d,l);let p=i.data.get(r.dataId).values;if(null!=h){const e=new Array(l);for(let t=0;t<e.length;t++)e[t]=c[h[t]];p=Ld(p,c,r.dtype,h,e),d=S.backend_util.getInnerMostAxes(d.length,l),c=e}Wu(r,"max"),S.backend_util.assertAxesAreInnerMostDims("max",d,l);const[f,m]=S.backend_util.computeOutAndReduceShapes(c,d),g=Bf(p,S.util.sizeFromShape(m),f,r.dtype),y=i.write(g,f,r.dtype);let b=f;if(o){b=S.backend_util.expandShapeToKeepDim(f,u)}return{dataId:y,shape:b,dtype:r.dtype}}const Vf={kernelName:S.Max,backendName:"cpu",kernelFunc:Pf},Wf=$u(((e,t)=>Math.max(e,t))),Uf=vd(S.Maximum,Wf),Gf={kernelName:S.Maximum,backendName:"cpu",kernelFunc:Uf};const Hf={kernelName:S.MaxPool,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t;Wu(r,"maxPool");const{filterSize:s,strides:o,pad:i,dimRoundingMode:c}=a;S.util.assert(S.backend_util.eitherStridesOrDilationsAreOne(o,1),(()=>"Error in maxPool: Either strides or dilations must be 1. "+"Got strides ".concat(o," and dilations '").concat(1,"'")));const l=S.backend_util.computePool2DInfo(r.shape,s,o,1,i,c);let u;if(1===l.filterWidth&&1===l.filterHeight&&S.util.arraysEqual(l.inShape,l.outShape))u=Qu({inputs:{x:r},backend:n});else{const e=n.data.get(r.dataId).values,t=S.util.computeStrides(r.shape),a=th(e,r.shape,r.dtype,t,l,"max");u=n.makeTensorInfo(l.outShape,r.dtype,a.values)}return u}};const jf={kernelName:S.MaxPool3D,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{filterSize:s,strides:o,pad:i,dimRoundingMode:c,dataFormat:l}=a;Wu(r,"maxPool3d");const u=S.backend_util.computePool3DInfo(r.shape,s,o,1,i,c,l),d=ah(n.data.get(r.dataId).values,r.shape,r.dtype,S.util.computeStrides(r.shape),u,"max");return n.makeTensorInfo(d.shape,"float32",d.values)}};const qf={kernelName:S.MaxPool3DGrad,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:r,input:s}=t,{filterSize:o,strides:i,pad:c,dimRoundingMode:l}=a;Wu([r,s],"maxPool3DGrad");const u=S.backend_util.computePool3DInfo(s.shape,o,i,1,c,l),d=function(e,t){const n=(0,S.buffer)(t.outShape,"int32"),a=t.strideDepth,r=t.strideHeight,s=t.strideWidth,o=t.dilationDepth,i=t.dilationHeight,c=t.dilationWidth,l=t.effectiveFilterDepth,u=t.effectiveFilterHeight,d=t.effectiveFilterWidth,h=t.padInfo.front,p=t.padInfo.top,f=t.padInfo.left;for(let m=0;m<t.batchSize;++m)for(let g=0;g<t.inChannels;++g)for(let y=0;y<t.outDepth;++y){const b=y*a-h;let v=b;for(;v<0;)v+=o;const x=Math.min(t.inDepth,l+b);for(let a=0;a<t.outHeight;++a){const l=a*r-p;let h=l;for(;h<0;)h+=i;const w=Math.min(t.inHeight,u+l);for(let r=0;r<t.outWidth;++r){const p=r*s-f;let k=p;for(;k<0;)k+=c;const S=Math.min(t.inWidth,d+p);let N=Number.NEGATIVE_INFINITY,I=-1;for(let t=v;t<x;t+=o){const n=t-b;for(let a=h;a<w;a+=i){const r=a-l;for(let s=k;s<S;s+=c){const o=s-p,i=e.get(m,t,a,s,g);i>=N&&(N=i,I=n*u*d+r*u+o)}}}n.set(I,m,y,a,r,g)}}}return n}(n.bufferSync(s),u),h=u.strideDepth,p=u.strideHeight,f=u.strideWidth,m=u.dilationDepth,g=u.dilationHeight,y=u.dilationWidth,b=u.effectiveFilterDepth,v=u.effectiveFilterHeight,x=u.effectiveFilterWidth,w=b-1-u.padInfo.front,k=x-1-u.padInfo.left,N=v-1-u.padInfo.top,I=(0,S.buffer)(s.shape,"float32"),T=n.bufferSync(r);for(let S=0;S<u.batchSize;++S)for(let e=0;e<u.inChannels;++e)for(let t=0;t<u.inDepth;++t)for(let n=0;n<u.inHeight;++n)for(let a=0;a<u.inWidth;++a){const r=t-w,s=n-N,o=a-k;let i=0;for(let t=0;t<b;t+=m){const n=(r+t)/h;if(!(n<0||n>=u.outDepth||Math.floor(n)!==n))for(let a=0;a<v;a+=g){const r=(s+a)/p;if(!(r<0||r>=u.outHeight||Math.floor(r)!==r))for(let s=0;s<x;s+=y){const c=(o+s)/f;if(c<0||c>=u.outWidth||Math.floor(c)!==c)continue;const l=b*v*x-1-d.get(S,n,r,c,e)===t*v*x+a*x+s?1:0;if(0===l)continue;i+=T.get(S,n,r,c,e)*l}}}I.set(i,S,t,n,a,e)}return n.makeTensorInfo(I.shape,I.dtype,I.values)}};const Xf={kernelName:S.MaxPoolGrad,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:r,input:s,output:o}=t,i=s;Wu([s,o],"maxPoolGrad");const{filterSize:c,strides:l,pad:u,dimRoundingMode:d}=a,h=S.backend_util.computePool2DInfo(i.shape,c,l,1,u,d),p=n.data.get(i.dataId).values,f=(0,S.buffer)(h.outShape,i.dtype,nh(p,i.shape,i.dtype,h).values),m=h.strideHeight,g=h.strideWidth,y=h.dilationHeight,b=h.dilationWidth,v=h.effectiveFilterHeight,x=h.effectiveFilterWidth,w=x-1-h.padInfo.left,k=v-1-h.padInfo.top,N=(0,S.buffer)(i.shape,"float32"),I=n.data.get(r.dataId).values,T=(0,S.buffer)(r.shape,"float32",I);for(let S=0;S<h.batchSize;++S)for(let e=0;e<h.inChannels;++e)for(let t=0;t<h.inHeight;++t)for(let n=0;n<h.inWidth;++n){const a=t-k,r=n-w;let s=0;for(let t=0;t<v;t+=y){const n=(a+t)/m;if(!(n<0||n>=h.outHeight||Math.floor(n)!==n))for(let a=0;a<x;a+=b){const o=(r+a)/g;if(o<0||o>=h.outWidth||Math.floor(o)!==o)continue;const i=v*x-1-f.get(S,n,o,e)===t*x+a?1:0;if(0===i)continue;s+=T.get(S,n,o,e)*i}}N.set(s,S,t,n,e)}return n.makeTensorInfo(N.shape,N.dtype,N.values)}};const Kf={kernelName:S.MaxPoolWithArgmax,backendName:"cpu",kernelFunc:e=>{let{inputs:t,attrs:n,backend:a}=e;const{x:r}=t,{filterSize:s,strides:o,pad:i,includeBatchInIndex:c}=n,l=a;Wu(r,"MaxPoolWithArgmax");const u=l.data.get(r.dataId).values,d=S.backend_util.computePool2DInfo(r.shape,s,o,[1,1],i),[h,p]=function(e,t,n,a,r){const s=th(e,0,n,S.util.computeStrides(t),r,"max"),o=nh(e,t,n,r,!0,a);return[s.values,o.values]}(u,r.shape,r.dtype,c,d),f=l.write(h,d.outShape,r.dtype),m=l.write(p,d.outShape,r.dtype);return[{dataId:f,shape:d.outShape,dtype:r.dtype},{dataId:m,shape:d.outShape,dtype:"int32"}]}};const Qf={kernelName:S.Mean,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s,keepDims:o}=a,i=S.util.parseAxisParam(s,r.shape),c=S.backend_util.computeOutAndReduceShapes(r.shape,i)[1],l=S.util.sizeFromShape(c),u=[],d=n.makeTensorInfo([],"float32",new Float32Array([l]));u.push(d);const h=yd({inputs:{x:r},backend:n,attrs:{dtype:"float32"}});u.push(h);const p=Ap({inputs:{a:h,b:d},backend:n});u.push(p);const f=op({inputs:{x:p},backend:n,attrs:{axis:s,keepDims:o}});return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),f}};const Yf={kernelName:S.Min,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s,keepDims:o}=a;Wu(r,"min");const i=S.util.parseAxisParam(s,r.shape);let c=i;const l=S.backend_util.getAxesPermutation(c,r.shape.length);let u=r;null!=l&&(u=Bd({inputs:{x:r},backend:n,attrs:{perm:l}}),c=S.backend_util.getInnerMostAxes(c.length,r.shape.length)),S.backend_util.assertAxesAreInnerMostDims("min",c,u.shape.length);const[d,h]=S.backend_util.computeOutAndReduceShapes(u.shape,c),p=S.util.sizeFromShape(h),f=S.util.makeZerosTypedArray(S.util.sizeFromShape(d),u.dtype),m=n.data.get(u.dataId).values;for(let y=0;y<f.length;++y){const e=y*p;let t=m[e];for(let n=0;n<p;++n){const a=m[e+n];(Number.isNaN(a)||a<t)&&(t=a)}f[y]=t}null!=l&&n.disposeIntermediateTensorInfo(u);const g=n.makeTensorInfo(d,u.dtype,f);if(o){const e=Id({inputs:{x:g},backend:n,attrs:{shape:S.backend_util.expandShapeToKeepDim(d,i)}});return n.disposeIntermediateTensorInfo(g),e}return g}},Zf=$u(((e,t)=>Math.min(e,t))),Jf=vd(S.Minimum,Zf),$f={kernelName:S.Minimum,backendName:"cpu",kernelFunc:Jf};const em={kernelName:S.MirrorPad,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{paddings:s,mode:o}=a;Wu(r,"mirrorPad");const i=s.map(((e,t)=>e[0]+r.shape[t]+e[1])),c=s.map((e=>e[0])),l=s.map(((e,t)=>e[0]+r.shape[t])),u="reflect"===o?0:1,d=n.data.get(r.dataId).values,h=r.shape.length,p=S.util.computeStrides(r.shape),f=S.util.sizeFromShape(i),m=i.length,g=S.util.computeStrides(i),y=S.util.getTypedArrayFromDType(r.dtype,f);for(let b=0;b<f;b++){let e=S.util.indexToLoc(b,m,g);for(let n=0;n<m;n++)e[n]<c[n]?e[n]=2*c[n]-e[n]-u:e[n]>=l[n]&&(e[n]=2*(l[n]-1)-e[n]+u);e=e.map(((e,t)=>e-c[t]));const t=S.util.locToIndex(e,h,p);y[b]=d[t]}return{dataId:n.write(y,i,r.dtype),shape:i,dtype:r.dtype}}},tm=$u(((e,t)=>{const n=e%t;return e<0&&t<0||e>=0&&t>=0?n:(n+t)%t})),nm=vd(S.Mod,tm),am={kernelName:S.Mod,backendName:"cpu",kernelFunc:nm};function rm(e){const{inputs:t,backend:n,attrs:a}=e,{logits:r}=t,{dim:s}=a,o=r.shape.length;let i=s;if(-1===i&&(i=o-1),i!==o-1)throw Error("Softmax along a non-last dimension is not yet supported. "+"Logits was rank ".concat(o," and dim was ").concat(i));const c=S.util.parseAxisParam([i],r.shape),l=Pf({inputs:{x:r},backend:n,attrs:{reductionIndices:c,keepDims:!1}}),u=S.backend_util.expandShapeToKeepDim(l.shape,c),d=Id({inputs:{x:l},backend:n,attrs:{shape:u}}),h=Op({inputs:{a:r,b:d},backend:n}),p=kp({inputs:{x:h},backend:n}),f=op({inputs:{x:p},backend:n,attrs:{axis:c,keepDims:!1}}),m=Id({inputs:{x:f},backend:n,attrs:{shape:u}}),g=Ap({inputs:{a:p,b:m},backend:n});return n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),g}const sm={kernelName:S.Softmax,backendName:"cpu",kernelFunc:rm};const om={kernelName:S.Multinomial,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{logits:r}=t,{numSamples:s,seed:o,normalized:i}=a;Wu(r,"multinomial");const c=i?r:rm({inputs:{logits:r},backend:n,attrs:{dim:-1}}),l=c.shape[0],u=c.shape[1],d=n.data.get(c.dataId).values,h=[l,s],p=S.util.makeZerosTypedArray(S.util.sizeFromShape(h),"int32");for(let f=0;f<l;++f){const e=f*u,t=new Float32Array(u-1);t[0]=d[e];for(let r=1;r<t.length;++r)t[r]=t[r-1]+d[e+r];const n=du.alea(o.toString()),a=f*s;for(let r=0;r<s;++r){const e=n();p[a+r]=t.length;for(let n=0;n<t.length;n++)if(e<t[n]){p[a+r]=n;break}}}return i||n.disposeIntermediateTensorInfo(c),n.makeTensorInfo(h,"int32",p)}};function im(e,t,n){const a=S.util.createScalarValue(-1,n);return np([],t,a,e,n)}const cm={kernelName:S.Neg,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:a}=t;Wu(a,"neg");const r=n.data.get(a.dataId).values,[s,o]=im(r,a.shape,a.dtype);return n.makeTensorInfo(o,a.dtype,s)}},lm=S.kernel_impls.nonMaxSuppressionV3Impl;const um={kernelName:S.NonMaxSuppressionV3,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{boxes:r,scores:s}=t,{maxOutputSize:o,iouThreshold:i,scoreThreshold:c}=a;Wu(r,"NonMaxSuppression");const l=n.data.get(r.dataId).values,u=n.data.get(s.dataId).values,{selectedIndices:d}=lm(l,u,o,i,c);return n.makeTensorInfo([d.length],"int32",new Int32Array(d))}},dm=S.kernel_impls.nonMaxSuppressionV4Impl;const hm={kernelName:S.NonMaxSuppressionV4,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{boxes:r,scores:s}=t,{maxOutputSize:o,iouThreshold:i,scoreThreshold:c,padToMaxOutputSize:l}=a;Wu(r,"NonMaxSuppressionPadded");const u=n.data.get(r.dataId).values,d=n.data.get(s.dataId).values,{selectedIndices:h,validOutputs:p}=dm(u,d,o,i,c,l);return[n.makeTensorInfo([h.length],"int32",new Int32Array(h)),n.makeTensorInfo([],"int32",new Int32Array([p]))]}},pm=S.kernel_impls.nonMaxSuppressionV5Impl;const fm={kernelName:S.NonMaxSuppressionV5,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{boxes:r,scores:s}=t,{maxOutputSize:o,iouThreshold:i,scoreThreshold:c,softNmsSigma:l}=a;Wu(r,"NonMaxSuppressionWithScore");const u=n.data.get(r.dataId).values,d=n.data.get(s.dataId).values,h=o,p=i,f=c,m=l,{selectedIndices:g,selectedScores:y}=pm(u,d,h,p,f,m);return[n.makeTensorInfo([g.length],"int32",new Int32Array(g)),n.makeTensorInfo([y.length],"float32",new Float32Array(y))]}},mm=$u(((e,t)=>e!==t?1:0)),gm=vd(S.NotEqual,mm,null,"bool"),ym={kernelName:S.NotEqual,backendName:"cpu",kernelFunc:gm};const bm={kernelName:S.OneHot,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{indices:r}=t,{dtype:s,depth:o,onValue:i,offValue:c}=a;Wu(r,"oneHot");const l=S.util.sizeFromShape(r.shape),u=new Float32Array(l*o);u.fill(c);const d=n.data.get(r.dataId).values;for(let h=0;h<l;++h)d[h]>=0&&d[h]<o&&(u[h*o+d[h]]=i);return n.makeTensorInfo([...r.shape,o],s,u)}};function vm(e){const{inputs:t,backend:n}=e,{x:a}=t;if("string"===a.dtype)throw new Error("zerosLike is not supported for string tensors");if("complex64"===a.dtype){const e=fd({inputs:{input:a},backend:n}),t=vm({inputs:{x:e},backend:n}),r=Ch({inputs:{input:a},backend:n}),s=vm({inputs:{x:r},backend:n}),o=dd({inputs:{real:t,imag:s},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(s),o}return Vp({backend:n,attrs:{shape:a.shape,value:0,dtype:a.dtype}})}const xm={kernelName:S.ZerosLike,backendName:"cpu",kernelFunc:vm};const wm={kernelName:S.OnesLike,backendName:"cpu",kernelFunc:function e(t){const{inputs:n,backend:a}=t,{x:r}=n;if("string"===r.dtype)throw new Error("onesLike is not supported for string tensors");if("complex64"===r.dtype){const t=fd({inputs:{input:r},backend:a}),n=e({inputs:{x:t},backend:a}),s=Ch({inputs:{input:r},backend:a}),o=vm({inputs:{x:s},backend:a}),i=dd({inputs:{real:n,imag:o},backend:a});return a.disposeIntermediateTensorInfo(t),a.disposeIntermediateTensorInfo(n),a.disposeIntermediateTensorInfo(s),a.disposeIntermediateTensorInfo(o),i}return Vp({backend:a,attrs:{shape:r.shape,value:1,dtype:r.dtype}})}};function km(e){const{inputs:t,backend:n,attrs:a}=e,{axis:r}=a;if(1===t.length)return Np({inputs:{input:t[0]},backend:n,attrs:{dim:r}});const s=t[0].shape,o=t[0].dtype;t.forEach((e=>{S.util.assertShapesMatch(s,e.shape,"All tensors passed to stack must have matching shapes"),S.util.assert(o===e.dtype,(()=>"All tensors passed to stack must have matching dtypes"))}));const i=[],c=_h({inputs:t.map((e=>{const t=Np({inputs:{input:e},backend:n,attrs:{dim:r}});return i.push(t),t})),backend:n,attrs:{axis:r}});return i.forEach((e=>n.disposeIntermediateTensorInfo(e))),c}const Sm={kernelName:S.Pack,backendName:"cpu",kernelFunc:km};const Nm={kernelName:S.PadV2,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{paddings:s,constantValue:o}=a;Wu(r,"pad");const i=s.map(((e,t)=>e[0]+r.shape[t]+e[1])),c=s.map((e=>e[0])),l=n.data.get(r.dataId).values,u=S.util.sizeFromShape(r.shape),d=r.shape.length,h=S.util.computeStrides(r.shape),p=S.util.sizeFromShape(i),f=i.length,m=S.util.computeStrides(i),g=S.util.getTypedArrayFromDType(r.dtype,p);0!==o&&g.fill(o);for(let y=0;y<u;y++){const e=S.util.indexToLoc(y,d,h).map(((e,t)=>e+c[t]));g[S.util.locToIndex(e,f,m)]=l[y]}return{dataId:n.write(g,i,r.dtype),shape:i,dtype:r.dtype}}},Im=$u(((e,t)=>Math.pow(e,t))),Tm=vd(S.Pow,Im),Cm={kernelName:S.Pow,backendName:"cpu",kernelFunc:Tm};function Em(e,t,n,a){const[r,s]=S.backend_util.computeOutAndReduceShapes(e,a),o=(0,S.upcastType)(t,"int32"),i=S.util.makeZerosTypedArray(S.util.sizeFromShape(r),o),c=S.util.sizeFromShape(s);for(let l=0;l<i.length;++l){const e=l*c;let t=1;for(let a=0;a<c;++a)t*=n[e+a];i[l]=t}return{outVals:i,outShape:r,outDtype:o}}const _m={kernelName:S.Prod,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s,keepDims:o}=a;Wu(r,"prod");const i=r.shape.length,c=S.util.parseAxisParam(s,r.shape),l=S.backend_util.getAxesPermutation(c,i);let u=c,d=r;const h=[];null!=l&&(d=Bd({inputs:{x:r},backend:n,attrs:{perm:l}}),h.push(d),u=S.backend_util.getInnerMostAxes(u.length,i));const p=n.data.get(d.dataId).values,{outVals:f,outShape:m,outDtype:g}=Em(d.shape,d.dtype,p,u);let y=m;return o&&(y=S.backend_util.expandShapeToKeepDim(m,c)),h.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(y,g,f)}};function Am(e,t,n,a){const r=[];let s=0;const o=t.length-1+n.length,i=new Array(o).fill(null).map((()=>[0]));!function(e,t){for(let n=0;n<e.length;++n){const a=e[n],r=n===e.length-1?t:e[n+1].length;if(0===a.length)throw new Error("Ragged splits may not be empty");if(a[0]<0)throw new Error("Ragged splits must be non-negative");if(a[a.length-1]>r)throw new Error("Ragged splits must not point past values");for(let e=1;e<a.length;++e)if(a[e-1]>a[e])throw new Error("Ragged splits must be sorted in ascending order")}}(n,a);let c=1;for(let l=0;l<t.length-1;++l){c*=t[l];const e=t[l+1];for(let t=1;t<c+1;++t)i[l].push(t*e)}for(let l=0;l<e.length;++l){let a=e[l],o=e[l]+1;for(let e=0;e<n.length;++e){const r=n[e],s=e+t.length-1;if(s>=0){const e=i[s],t=e[e.length-1]-r[a];for(let n=a;n<o;++n)i[s].push(r[n+1]+t)}a=r[a],o=r[o]}o!==a&&(r.push([a,o]),s+=o-a)}return{outSplits:i,valueSlices:r,numValues:s}}function Rm(e,t){const n=e.slice(0,t);for(;n.length<t;)n.push(1);for(let a=t;a<e.length;a++)n[t-1]*=e[a];return n}function Fm(e,t,n,a,r){const s=t.slice();s[0]=r;const o=S.util.getArrayFromDType(n,S.util.sizeFromShape(s)),i=e.length;return function(e,t,n,a,r,s){const o=Rm(t,2)[1],i=Rm(s,2)[1];let c=0;for(const l of n)for(let t=l[0];t<l[1];++t){for(let n=0;n<a;++n)r[c*i+n]=e[t*o+n];++c}}(e,t,a,0===i?0:i/t[0],o,s),[o,s]}function Dm(e,t,n,a,r,s,o,i){if(0===e.length)throw new Error("paramsNestedSplits must be non empty");if(0===t[0].length)throw new Error("Split tensors must not be scalars");if(function(e,t,n){e.forEach(((e,a)=>{if(e<0||e>=n){const r=S.util.indexToLoc(a,t.length,S.util.computeStrides(t)).join(",");throw new Error("indices[".concat(r,"] = ").concat(e," is not in [0, ").concat(n,")"))}}))}(s,o,t[0][0]-1),0===a.length)throw new Error("params.rank must be nonzero");const c=a[0],{outSplits:l,valueSlices:u,numValues:d}=Am(s,o,e,c),h=function(e){const t=[];for(let n=0;n<e.length;++n){const a=e[n].length,r=S.util.getArrayFromDType("int32",a);t.push(r),e[n].forEach(((e,t)=>r[t]=e))}return t}(l),p=Fm(n,a,r,u,d);return[h,p[0],p[1]]}const Om={kernelName:S.RaggedGather,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{paramsNestedSplits:r,paramsDenseValues:s,indices:o}=t,{outputRaggedRank:i}=a,c=r.map((e=>n.data.get(e.dataId).values)),l=r.map((e=>e.shape)),u=n.data.get(s.dataId).values,d=n.data.get(o.dataId).values,[h,p,f]=Dm(c,l,u,s.shape,s.dtype,d,o.shape),m=h.map((e=>n.makeTensorInfo([e.length],"int32",e))),g=n.makeTensorInfo(f,s.dtype,p);return m.concat([g])}},Mm=2147483647;function zm(e,t,n,a,r,s,o){if(t.length>1)throw new Error("starts must be a scalar or vector");if(r.length>1)throw new Error("limits must be a scalar or vector");if(o.length>1)throw new Error("deltas must be a scalar or vector");const i=0===t.length,c=0===r.length,l=0===o.length,u=[];i||u.push(t[0]),c||u.push(r[0]),l||u.push(o[0]);for(let g=1;g<u.length;++g)if(u[g]!==u[g-1])throw new Error("starts, limits, and deltas must have the same shape");const d=0===u.length?1:u[0],h=S.util.getArrayFromDType("int32",d+1);h[0]=0;for(let g=0;g<d;++g){const t=i?e[0]:e[g],n=c?a[0]:a[g],r=l?s[0]:s[g];if(0===r)throw new Error("Requires delta != 0");let o;if(r>0&&n<t||r<0&&n>t)o=0;else if(o=Math.ceil(Math.abs((n-t)/r)),o>Mm)throw new Error("Requires ((limit - start) / delta) <= ".concat(Mm));h[g+1]=h[g]+o}const p=h[d],f=S.util.getArrayFromDType(n,p);let m=0;for(let g=0;g<d;++g){const t=h[g+1]-h[g];let n=i?e[0]:e[g];const a=l?s[0]:s[g];for(let e=0;e<t;++e)f[m++]=n,n+=a}return[h,f]}const Lm={kernelName:S.RaggedRange,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{starts:a,limits:r,deltas:s}=t,o=n.data.get(a.dataId).values,i=n.data.get(r.dataId).values,c=n.data.get(s.dataId).values,[l,u]=zm(o,a.shape,a.dtype,i,r.shape,c,s.shape);return[n.makeTensorInfo([l.length],"int32",l),n.makeTensorInfo([u.length],a.dtype,u)]}};var Bm=S.backend_util.RowPartitionType;class Pm{constructor(e,t,n,a,r,s,o,i,c,l){this.shape=e,this.shapeShape=t,this.values=n,this.valuesShape=a,this.valuesDType=r,this.defaultValue=s,this.defaultValueShape=o,this.rowPartitionValues=i,this.rowPartitionValuesShapes=c,this.rowPartitionTypes=S.backend_util.getRowPartitionTypesHelper(l),this.raggedRank=S.backend_util.getRaggedRank(this.rowPartitionTypes)}getRowPartitionTypeByDimension(e){return this.rowPartitionTypes[0]===Bm.FIRST_DIM_SIZE?this.rowPartitionTypes[e+1]:this.rowPartitionTypes[e]}getRowPartitionTensor(e){return this.rowPartitionTypes[0]===Bm.FIRST_DIM_SIZE?this.rowPartitionValues[e+1]:this.rowPartitionValues[e]}getMaxWidth(e){const t=this.getRowPartitionTensor(e-1);switch(this.getRowPartitionTypeByDimension(e-1)){case Bm.VALUE_ROWIDS:return Pm.getMaxWidthValueRowID(t);case Bm.ROW_SPLITS:return Pm.getMaxWidthRowSplit(t);default:throw new Error("Cannot handle partition type ".concat(Bm[this.getRowPartitionTypeByDimension(e-1)]))}}static getMaxWidthRowSplit(e){const t=e.length;if(0===t||1===t)return 0;let n=0;for(let a=0;a<t-1;++a){const t=e[a+1]-e[a];t>n&&(n=t)}return n}static getMaxWidthValueRowID(e){const t=e.length;if(0===t)return 0;let n=0,a=e[0],r=0;for(let s=1;s<t;++s){const t=e[s];t!==a&&(a=t,r=Math.max(s-n,r),n=s)}return Math.max(t-n,r)}tensorShapeFromTensor(e,t){let n=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];if(0===t.length){if(-1===e[0])return[];throw new Error("The only valid scalar shape tensor is the fully unknown shape specified as -1.")}return Wm(e,n)}calculateOutputSize(e){const t=this.valuesShape,n=this.defaultValueShape;S.backend_util.validateDefaultValueShape(n,t);const a=this.tensorShapeFromTensor(this.shape,this.shapeShape),r=S.backend_util.combineRaggedTensorToTensorShapes(this.raggedRank,a,t);r[0]<0&&(r[0]=e);for(let s=1;s<=this.raggedRank;++s)r[s]<0&&(r[s]=this.getMaxWidth(s));return r}calculateFirstParentOutputIndex(e,t,n){const a=Math.min(e,n),r=[];let s=0;for(let o=0;o<a;++o,s+=t)r.push(s);for(let o=a;o<e;++o)r.push(-1);return S.util.assert(r.length===e,(()=>"Final length of result must be equal to firstDimension.")),r}calculateOutputIndexRowSplit(e,t,n,a){const r=e.length,s=[];for(let o=0;o<r-1;++o){const r=e[o+1]-e[o];let i=Math.min(a,r),c=t[o];-1===c&&(i=0);for(let e=0;e<i;++e)s.push(c),c+=n;for(let e=0;e<r-i;++e)s.push(-1)}if(r>0&&s.length!==e[r-1])throw new Error("Invalid row split size.");return s}calculateOutputIndexValueRowID(e,t,n,a){const r=e.length,s=[];if(0===r)return[];let o=0,i=e[0];if(i>=t.length)throw new Error("Got currentValueRowId=".concat(i,", which is not less than ").concat(t.length));let c=t[i];s.push(c);for(let l=1;l<r;++l){const r=e[l];if(r===i)c>=0&&(++o,o<a?c+=n:c=-1);else{if(o=0,i=r,r>=t.length)throw new Error("Got nextValueRowId=".concat(r," which is not less than ").concat(t.length));c=t[r]}s.push(c)}if(s.length!==e.length)throw new Error("Invalid row ids.");return s}calculateOutputIndex(e,t,n,a){const r=this.getRowPartitionTensor(e),s=this.getRowPartitionTypeByDimension(e);switch(s){case Bm.VALUE_ROWIDS:return this.calculateOutputIndexValueRowID(r,t,n,a);case Bm.ROW_SPLITS:if(r.length-1>t.length)throw new Error("Row partition size is greater than output size: ".concat(r.length-1," > ").concat(t.length));return this.calculateOutputIndexRowSplit(r,t,n,a);default:throw new Error("Unsupported partition type: ".concat(Bm[s]))}}getFirstDimensionSize(){const e=this.rowPartitionValues[0];if(0===this.rowPartitionTypes.length)throw new Error("No row_partition_types given.");const t=this.rowPartitionTypes[0];switch(t){case Bm.FIRST_DIM_SIZE:return e[0];case Bm.VALUE_ROWIDS:throw new Error("Cannot handle VALUE_ROWIDS in first dimension.");case Bm.ROW_SPLITS:return this.rowPartitionValuesShapes[0][0]-1;default:throw new Error("Cannot handle type ".concat(Bm[t]))}}compute(){if(this.rowPartitionValues[0].length<=0)throw new Error("Invalid first partition input. Tensor requires at least one element.");const e=this.getFirstDimensionSize(),t=this.calculateOutputSize(e),n=new Array(this.raggedRank+1);n[n.length-1]=1;for(let s=n.length-2;s>=0;--s)n[s]=n[s+1]*t[s+1];const a=Wm(t,!1),r=S.util.getArrayFromDType(this.valuesDType,S.util.sizeFromShape(a));if(n[0]*t[0]>0){let s=this.calculateFirstParentOutputIndex(e,n[0],t[0]);for(let e=1;e<=this.raggedRank;++e){s=this.calculateOutputIndex(e-1,s,n[e],t[e])}this.setOutput(this.raggedRank,s,r,a)}return[a,r]}setOutput(e,t,n,a){if(0===n.length)return;const r=this.values,s=n;let o=a.slice();o=o.slice(e+1);const i=S.util.sizeFromShape(o),c=t.length;let l=this.defaultValue;if(l.length!==i&&1!==l.length){const e=this.defaultValueShape;(0,S.tidy)((()=>{const t=(0,S.reshape)(l,e),n=(0,S.broadcastTo)(t,o);l=n.dataSync()}))}let u=0,d=0,h=0;for(let p=0;p<=c;++p){let e=p<c?t[p]:-1;if(e!==h){if(d<h){const e=r.subarray(u*i);Vm(s.subarray(d*i),e,(h-d)*i)}if(p>=c){const t=n.length;e=Math.floor(t/i)}if(e>h)if(1===this.defaultValue.length)s.subarray(h*i,e*i).fill(this.defaultValue[0]),h=e;else for(;e>h;){Vm(s.slice(h*i),l,i),++h}e<0?(u=p+1,d=h):(u=p,d=h,h=d+1)}else++h}}}function Vm(e,t,n){for(let a=0;a<n;a++)e[a]=t[a]}function Wm(e,t){const n=[];for(let a of e){if(a<0){if(!t)throw new Error("Dimension ".concat(a," must be >= 0"));if(a<-1)throw new Error("Dimension ".concat(a," must be >= -1"));a=-1}n.push(a)}return n}function Um(e,t,n,a,r,s,o,i,c,l){return new Pm(e,t,n,a,r,s,o,i,c,l).compute()}const Gm={kernelName:S.RaggedTensorToTensor,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{shape:r,values:s,defaultValue:o,rowPartitionTensors:i}=t,{rowPartitionTypes:c}=a,l=n.data.get(r.dataId).values,u=n.data.get(s.dataId).values,d=n.data.get(o.dataId).values,h=i.map((e=>n.data.get(e.dataId).values)),p=i.map((e=>e.shape)),[f,m]=Um(l,r.shape,u,s.shape,s.dtype,d,o.shape,h,p,c);return n.makeTensorInfo(f,s.dtype,m)}};function Hm(e,t,n,a){if(e===t||e<t&&n<0||t<e&&n>1)return S.util.makeZerosTypedArray(0,a);const r=Math.abs(Math.ceil((t-e)/n)),s=S.util.makeZerosTypedArray(r,a);t<e&&1===n&&(n=-1),s[0]=e;for(let o=1;o<s.length;o++)s[o]=s[o-1]+n;return s}const jm={kernelName:S.Range,backendName:"cpu",kernelFunc:function(e){const{backend:t,attrs:n}=e,{start:a,stop:r,dtype:s,step:o}=n,i=Hm(a,r,o,s);return t.makeTensorInfo([i.length],s,i)}},qm=ju(S.Reciprocal,(e=>1/e)),Xm={kernelName:S.Reciprocal,backendName:"cpu",kernelFunc:qm};const Km={kernelName:S.ResizeBilinear,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{images:r}=t,{alignCorners:s,halfPixelCenters:o,size:i}=a;Wu(r,"resizeBilinear");const c=S.util.computeStrides(r.shape),[l,u]=i,[d,h,p,f]=r.shape,m=n.data.get(r.dataId).values,g=new Float32Array(S.util.sizeFromShape([d,l,u,f])),y=[s&&l>1?h-1:h,s&&u>1?p-1:p],b=[s&&l>1?l-1:l,s&&u>1?u-1:u];let v=0;const x=y[0]/b[0],w=y[1]/b[1];for(let k=0;k<d;k++)for(let e=0;e<l;e++){let t;t=o?x*(e+.5)-.5:x*e;const n=Math.max(0,Math.floor(t)),a=t-n,r=Math.min(h-1,Math.ceil(t)),s=k*c[0]+n*c[1],i=k*c[0]+r*c[1];for(let e=0;e<u;e++){let t;t=o?w*(e+.5)-.5:w*e;const n=Math.max(0,Math.floor(t)),r=t-n,l=Math.min(p-1,Math.ceil(t)),u=s+n*c[2],d=i+n*c[2],h=s+l*c[2],y=i+l*c[2];for(let e=0;e<f;e++){const t=m[u+e],n=m[d+e],s=t+(m[h+e]-t)*r,o=s+(n+(m[y+e]-n)*r-s)*a;g[v++]=o}}}return n.makeTensorInfo([d,l,u,f],"float32",g)}};const Qm={kernelName:S.ResizeBilinearGrad,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{images:r,dy:s}=t,{alignCorners:o}=a;Wu([s,r],"resizeBilinearGrad");const i=S.util.computeStrides(r.shape),[c,l,u,d]=r.shape,[,h,p]=s.shape,f=new Float32Array(c*l*u*d),m=[o&&h>1?l-1:l,o&&p>1?u-1:u],g=[o&&h>1?h-1:h,o&&p>1?p-1:p],y=m[0]/g[0],b=m[1]/g[1],v=n.data.get(s.dataId).values;let x=0;for(let w=0;w<c;w++){const e=w*i[0];for(let t=0;t<h;t++){const n=t*y,a=Math.floor(n),r=Math.min(Math.ceil(n),l-1),s=e+a*i[1],o=e+r*i[1],c=n-a,h=1-c;for(let e=0;e<p;e++){const t=e*b,n=Math.floor(t),a=Math.min(Math.ceil(t),u-1),r=t-n,l=1-r,p=s+n*i[2],m=s+a*i[2],g=o+n*i[2],y=o+a*i[2],w=h*l,k=h*r,S=c*l,N=c*r;for(let e=0;e<d;e++){const t=v[x++];f[p+e]+=t*w,f[m+e]+=t*k,f[g+e]+=t*S,f[y+e]+=t*N}}}}return n.makeTensorInfo([c,u,l,d],"float32",f)}};const Ym={kernelName:S.ResizeNearestNeighbor,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{images:r}=t,{alignCorners:s,halfPixelCenters:o,size:i}=a;Wu(r,"resizeNearestNeighbor");const c=S.util.computeStrides(r.shape),[l,u]=i,[d,h,p,f]=r.shape,m=n.data.get(r.dataId).values,g=new Float32Array(d*l*u*f),y=[s&&l>1?h-1:h,s&&u>1?p-1:p],b=[s&&l>1?l-1:l,s&&u>1?u-1:u],v=y[0]/b[0],x=y[1]/b[1];let w=0;for(let k=0;k<d;k++){const e=k*c[0];for(let t=0;t<l;t++){const n=o?v*(t+.5):v*t;let a=Math.min(h-1,s?Math.round(n):Math.floor(n));o&&(a=Math.max(0,a));const r=e+a*c[1];for(let e=0;e<u;e++){const t=o?x*(e+.5):x*e;let n=Math.min(p-1,s?Math.round(t):Math.floor(t));o&&(n=Math.max(0,n));const a=r+n*c[2];for(let e=0;e<f;e++){const t=m[a+e];g[w++]=t}}}}return n.makeTensorInfo([d,l,u,f],r.dtype,g)}};const Zm={kernelName:S.ResizeNearestNeighborGrad,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{images:r,dy:s}=t,{alignCorners:o}=a;Wu([s,r],"resizeNearestNeighborGrad");const i=S.util.computeStrides(r.shape),c=S.util.computeStrides(s.shape),[l,u,d,h]=r.shape,[,p,f]=s.shape,m=new Float32Array(l*u*d*h),g=n.data.get(s.dataId).values,y=[o&&p>1?u-1:u,o&&f>1?d-1:d],b=[o&&p>1?p-1:p,o&&f>1?f-1:f],v=y[0]/b[0],x=y[1]/b[1],w=1/v,k=1/x,N=2*Math.ceil(w)+2,I=2*Math.ceil(k)+2;for(let S=0;S<l;S++){const e=S*i[0];for(let t=0;t<u;t++){const n=e+t*i[1],a=Math.floor(t*w),r=Math.floor(a-N/2);for(let s=0;s<d;s++){const a=n+s*i[2],l=Math.floor(s*k),y=Math.floor(l-I/2);for(let n=0;n<h;n++){let i=0;for(let a=0;a<N;a++){const l=a+r;if(l<0||l>=p)continue;const h=e+l*c[1],m=l*v;if(t===Math.min(u-1,o?Math.round(m):Math.floor(m)))for(let e=0;e<I;e++){const t=e+y;if(t<0||t>=f)continue;const a=h+t*c[2],r=t*x;s===Math.min(d-1,o?Math.round(r):Math.floor(r))&&(i+=g[a+n])}}m[a+n]=i}}}}return n.makeTensorInfo(r.shape,r.dtype,m)}};const Jm={kernelName:S.Reverse,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{dims:s}=a;Wu(r,"reverse");const o=r.shape.length,i=S.util.parseAxisParam(s,r.shape);if(0===o)return Qu({inputs:{x:r},backend:n});const c=new S.TensorBuffer(r.shape,r.dtype),l=n.bufferSync(r);for(let u=0;u<c.size;u++){const e=c.indexToLoc(u),t=e.slice();i.forEach((e=>t[e]=r.shape[e]-1-t[e])),c.set(l.get(...t),...e)}return n.makeTensorInfo(c.shape,c.dtype,c.values)}},$m={kernelName:S.RotateWithOffset,backendName:"cpu",kernelFunc:e=>{let{inputs:t,attrs:n,backend:a}=e;const{image:r}=t,{radians:s,fillValue:o,center:i}=n,c=a,l=S.util.getTypedArrayFromDType(r.dtype,S.util.sizeFromShape(r.shape)),[u,d,h,p]=r.shape,[f,m]=S.backend_util.getImageCenter(i,d,h),g=Math.sin(s),y=Math.cos(s),b=c.data.get(r.dataId).values;for(let v=0;v<u;v++){const e=v*h*d*p;for(let t=0;t<d;t++){const n=t*(h*p);for(let a=0;a<h;a++){const r=a*p;for(let s=0;s<p;s++){const i=[u,t,a,s],c=i[2],v=i[1];let x=(c-f)*y-(v-m)*g,w=(c-f)*g+(v-m)*y;x=Math.round(x+f),w=Math.round(w+m);let k=o;if("number"!==typeof o&&(k=3===s?255:o[s]),x>=0&&x<h&&w>=0&&w<d){k=b[e+w*(h*p)+x*p+s]}l[e+n+r+s]=k}}}}return{dataId:c.write(l,r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},eg=ju(S.Round,(e=>{const t=Math.floor(e);return e-t<.5?Math.floor(e):e-t>.5?Math.ceil(e):t%2===0?t:t+1})),tg={kernelName:S.Round,backendName:"cpu",kernelFunc:eg},ng=Hu((e=>1/Math.sqrt(e))),ag=qu(S.Rsqrt,ng),rg={kernelName:S.Rsqrt,backendName:"cpu",kernelFunc:ag};function sg(e,t,n,a,r,s,o,i,c,l){const u=[a/r,r],d=e.values,h=t.values;if(0===a)return(0,S.buffer)(n,t.dtype);const p=c instanceof S.TensorBuffer?c:(0,S.buffer)(u,t.dtype);"string"===typeof c||"number"===typeof c?p.values.fill(c):"boolean"===typeof c&&p.values.fill(+c);for(let f=0;f<s;f++){const e=[];let s=0;for(let t=0;t<o;t++){const n=d[f*o+t];e.push(n),s+=n*i[t]}if(s<0||s>=a/r)throw new Error("Invalid indices: ".concat(e," does not index into ").concat(n));for(let n=0;n<r;n++)l?p.values[s*r+n]+=h[f*r+n]:p.values[s*r+n]=0===t.rank?h[0]:h[f*r+n]}return p}const og={kernelName:S.ScatterNd,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{indices:r,updates:s}=t,{shape:o}=a,{sliceRank:i,numUpdates:c,sliceSize:l,strides:u,outputSize:d}=S.backend_util.calculateShapes(s,r,o),h=sg(n.bufferSync(r),n.bufferSync(s),o,d,l,c,i,u,0,!0);return n.makeTensorInfo(o,h.dtype,h.values)}};function ig(e,t){let n=0,a=e.length,r=0;for(;n<a;)r=Math.floor((n+a)/2),e[r]<t?n=r+1:a=r;return a}function cg(e,t){let n=0,a=e.length,r=0;for(;n<a;)r=Math.floor((n+a)/2),e[r]<=t?n=r+1:a=r;return a}const lg={kernelName:S.SearchSorted,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{sortedSequence:r,values:s}=t,{side:o}=a,i=function(e,t,n,a,r,s){const o=S.util.getArrayFromDType("int32",n*r);for(let i=0;i<n;++i){const n=e.slice(i*a,(i+1)*a),c=i*r;for(let e=0;e<r;++e)o[c+e]="left"===s?ig(n,t[e+c]):cg(n,t[e+c])}return o}(n.data.get(r.dataId).values,n.data.get(s.dataId).values,r.shape[0],r.shape[1],s.shape[1],o);return n.makeTensorInfo(s.shape,"int32",i)}};const ug={kernelName:S.Select,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{condition:a,t:r,e:s}=t;Wu([a,r,s],"select");const o=a.shape.length,i=n.data.get(a.dataId).values,c=n.data.get(r.dataId).values,l=n.data.get(s.dataId).values,u=(0,S.upcastType)(r.dtype,s.dtype),d=S.util.makeZerosTypedArray(S.util.sizeFromShape(r.shape),u);let h=0;const p=0===o||o>1||1===r.shape.length?1:S.util.sizeFromShape(r.shape.slice(1));for(let f=0;f<i.length;f++)for(let e=0;e<p;e++)1===i[f]?d[h++]=c[f]:d[h++]=l[f];return n.makeTensorInfo(r.shape,u,d)}},dg=S.backend_util.SELU_SCALEALPHA,hg=S.backend_util.SELU_SCALE,pg=ju(S.Selu,(e=>e>=0?hg*e:dg*(Math.exp(e)-1))),fg={kernelName:S.Selu,backendName:"cpu",kernelFunc:pg},mg=ju(S.Sign,(e=>e<0?-1:e>0?1:0)),gg={kernelName:S.Sign,backendName:"cpu",kernelFunc:mg},yg=ju(S.Sin,(e=>Math.sin(e))),bg={kernelName:S.Sin,backendName:"cpu",kernelFunc:yg},vg=ju(S.Sinh,(e=>Math.sinh(e))),xg={kernelName:S.Sinh,backendName:"cpu",kernelFunc:vg},wg=Math.log(1.1920928955078125e-7)+2,kg=ju(S.Softplus,(e=>{const t=e>-wg,n=e<wg,a=Math.exp(e);let r;return r=n?a:t?e:Math.log(1+a),r})),Sg={kernelName:S.Softplus,backendName:"cpu",kernelFunc:kg};const Ng={kernelName:S.SpaceToBatchND,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{blockShape:s,paddings:o}=a;Wu([r],"spaceToBatchND");const i=S.util.sizeFromShape(s),c=[[0,0]];c.push(...o);for(let g=1+s.length;g<r.shape.length;++g)c.push([0,0]);const l=Nm.kernelFunc({inputs:{x:r},backend:n,attrs:{paddings:c,constantValue:0}}),u=S.backend_util.getReshaped(l.shape,s,i,!1),d=S.backend_util.getPermuted(u.length,s.length,!1),h=S.backend_util.getReshapedPermuted(l.shape,s,i,!1),p=Id({inputs:{x:l},backend:n,attrs:{shape:u}}),f=Bd({inputs:{x:p},backend:n,attrs:{perm:d}}),m=Id({inputs:{x:f},backend:n,attrs:{shape:h}});return n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),m}};function Ig(e,t,n,a,r,s,o){const i=t[0],c=s[0],l=new Array(c),u=new Array(i),d=t[1];if(0===c){if(0!==i)throw new Error(S.backend_util.getSparseFillEmptyRowsIndicesDenseShapeMismatch(i));return[S.util.getArrayFromDType(n,0),[0,d],S.util.getArrayFromDType(r,0),l,u]}let h=!0,p=0;const f=new Array(c).fill(0);for(let g=0;g<i;++g){const t=e[g*d];if(t<0)throw new Error(S.backend_util.getSparseFillEmptyRowsNegativeIndexErrorMessage(g,t));if(t>=c)throw new Error(S.backend_util.getSparseFillEmptyRowsOutOfRangeIndexErrorMessage(g,t,c));++f[t],h=h&&t>=p,p=t}let m=!0;for(let g=0;g<c;++g){const e=0===f[g];l[g]=e,m=m&&!e,f[g]=Math.max(f[g],1),g>0&&(f[g]+=f[g-1])}if(m&&h){const t=e,n=a;for(let e=0;e<i;++e)u[e]=e;return[t,[i,d],n,l,u]}{const t=f[c-1],s=S.util.getArrayFromDType(n,t*d),h=S.util.getArrayFromDType(r,t),p=new Array(c).fill(0);for(let n=0;n<i;++n){const t=e[n*d],r=p[t],o=(0===t?0:f[t-1])+r;p[t]++;for(let a=0;a<d;++a)s[o*d+a]=e[n*d+a];h[o]=a[n],u[n]=o}for(let e=0;e<c;++e){if(0===p[e]){const t=0===e?0:f[e-1];s[t*d+0]=e;for(let e=1;e<d;++e)s[t*d+e]=0;h[t]=o}}return[s,[t,d],h,l,u]}}const Tg={kernelName:S.SparseFillEmptyRows,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{indices:a,values:r,denseShape:s,defaultValue:o}=t;if(1!==s.shape.length)throw new Error("Dense shape must be a vector, saw:\n        ".concat(s.shape));if(2!==a.shape.length)throw new Error("Indices must be a matrix, saw:\n        ".concat(a.shape));if(1!==r.shape.length)throw new Error("Values must be a vector, saw:\n        ".concat(r.shape));if(0!==o.shape.length)throw new Error("Default value must be a scalar, saw:\n        ".concat(o.shape));const i=n.data.get(a.dataId).values,c=n.data.get(r.dataId).values,l=n.data.get(s.dataId).values,u=n.data.get(o.dataId).values[0],[d,h,p,f,m]=Ig(i,a.shape,a.dtype,c,r.dtype,l,u);return[n.makeTensorInfo(h,a.dtype,d),n.makeTensorInfo([h[0]],r.dtype,p),n.makeTensorInfo([f.length],"bool",new Uint8Array(f.map((e=>Number(e))))),n.makeTensorInfo([m.length],a.dtype,new Int32Array(m))]}};function Cg(e,t,n,a,r){const s=S.util.sizeFromShape(a),o=t[0],i=r.length,c=[];let l=1,u=-1;for(let m=0;m<i;++m){const e=r[m];if(-1===e){if(-1!==u)throw new Error(S.backend_util.getSparseReshapeMultipleNegativeOneOutputDimErrorMessage(u,m));u=m,c.push(1)}else{if(e<0)throw new Error(S.backend_util.getSparseReshapeNegativeOutputDimErrorMessage(m,e));l*=e,c.push(e)}}if(-1!==u){if(l<=0)throw new Error(S.backend_util.getSparseReshapeEmptyTensorZeroOutputDimErrorMessage());const e=Math.trunc(s/l);if(l*e!==s)throw new Error(S.backend_util.getSparseReshapeInputOutputMultipleErrorMessage(a,c));c[u]=e}if(S.util.sizeFromShape(c)!==s)throw new Error(S.backend_util.getSparseReshapeInputOutputMismatchErrorMessage(a,c));const d=a.length,h=[];if(d>0){h[d-1]=1;for(let e=d-2;e>=0;--e)h[e]=h[e+1]*a[e+1]}const p=[];if(i>0){p[i-1]=1;for(let e=i-2;e>=0;--e)p[e]=p[e+1]*c[e+1]}const f=S.util.getArrayFromDType(n,o*i);for(let m=0;m<o;++m){let t=0;for(let n=0;n<d;++n)t+=e[m*d+n]*h[n];for(let e=0;e<i;++e)f[m*i+e]=Math.trunc(t/p[e]),t%=p[e]}return[f,[o,i],c]}const Eg={kernelName:S.SparseReshape,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{inputIndices:a,inputShape:r,newShape:s}=t;if(2!==a.shape.length)throw new Error("Input indices should be a matrix but received shape\n        ".concat(a.shape));if(1!==r.shape.length)throw new Error("Input shape should be a vector but received shape\n        ".concat(r.shape));if(1!==s.shape.length)throw new Error("Target shape should be a vector but received shape ".concat(s.shape));const o=Array.from(n.data.get(r.dataId).values),i=n.data.get(a.dataId).values,c=Array.from(n.data.get(s.dataId).values),[l,u,d]=Cg(i,a.shape,a.dtype,o,c);return[n.makeTensorInfo(u,a.dtype,l),n.makeTensorInfo([d.length],s.dtype,new Int32Array(d))]}};function _g(e,t,n,a,r){let s=arguments.length>5&&void 0!==arguments[5]&&arguments[5],o=arguments.length>6&&void 0!==arguments[6]?arguments[6]:0;const i=a.length,c=[t[0],e.length/t[0]],l=c[1],u=i>0?r[i-1]+1:0,d=u;if(d<0)throw new Error(S.backend_util.getSparseSegmentReductionNegativeSegmentIdsErrorMessage());const h=t.slice();h[0]=d;const p=h.reduce(((e,t)=>e*t),1),f=S.util.getArrayFromDType(n,p);if(0===i)return d>0&&f.fill(o),[f,h];if(d<=0)throw new Error(S.backend_util.getSparseSegmentReductionNegativeSegmentIdsErrorMessage());let m=0,g=1,y=0,b=r[m];for(;;){let t=0;if(g<i){if(t=r[g],b===t){++g;continue}if(b>=t)throw new Error(S.backend_util.getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage())}if(b<0||b>=d)throw new Error(S.backend_util.getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage(b,d));b>y&&f.fill(o,y*l,b*l);for(let n=m;n<g;++n){const t=a[n];if(t<0||t>=c[0])throw new Error(S.backend_util.getSparseSegmentReductionIndicesOutOfRangeErrorMessage(n,a[n],c[0]));for(let n=0;n<l;n++)f[b*l+n]+=e[t*l+n]}if(s)for(let e=0;e<l;e++)f[b*l+e]/=g-m;if(m=g,++g,y=b+1,b=t,g>i)break}return y<d&&f.fill(o,y*l,d*l),[f,h]}const Ag={kernelName:S.SparseSegmentMean,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:a,indices:r,segmentIds:s}=t;if(a.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==r.shape.length)throw new Error("Indices should be a vector but received shape\n          ".concat(r.shape));if(1!==s.shape.length)throw new Error("Segment ids should be a vector but received shape\n          ".concat(s.shape));if(r.shape[0]!==s.shape[0])throw new Error("segmentIds and indices should have same size.");const o=n.data.get(a.dataId).values,i=n.data.get(r.dataId).values,c=n.data.get(s.dataId).values,[l,u]=_g(o,a.shape,a.dtype,i,c,!0);return n.makeTensorInfo(u,a.dtype,l)}};const Rg={kernelName:S.SparseSegmentSum,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:a,indices:r,segmentIds:s}=t;if(a.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==r.shape.length)throw new Error("Indices should be a vector but received shape\n         ".concat(r.shape));if(1!==s.shape.length)throw new Error("Segment ids should be a vector but received shape\n         ".concat(s.shape));if(r.shape[0]!==s.shape[0])throw new Error("segmentIds and indices should have same size.");const o=n.data.get(a.dataId).values,i=n.data.get(r.dataId).values,c=n.data.get(s.dataId).values,[l,u]=_g(o,a.shape,a.dtype,i,c);return n.makeTensorInfo(u,a.dtype,l)}};const Fg={kernelName:S.SparseToDense,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{sparseIndices:r,sparseValues:s,defaultValue:o}=t,{outputShape:i}=a,{sliceRank:c,numUpdates:l,sliceSize:u,strides:d,outputSize:h}=S.backend_util.calculateShapes(s,r,i),p=!1,f=n.bufferSync(r);let m;switch(s.dtype){case"bool":m=sg(f,n.bufferSync(s),i,h,u,l,c,d,Boolean(n.data.get(o.dataId).values[0]),p);break;case"float32":m=sg(f,n.bufferSync(s),i,h,u,l,c,d,n.data.get(o.dataId).values[0],p);break;case"int32":m=sg(f,n.bufferSync(s),i,h,u,l,c,d,n.data.get(o.dataId).values[0],p);break;case"string":m=sg(f,n.bufferSync(s),i,h,u,l,c,d,S.util.decodeString(n.data.get(o.dataId).values[0]),p);break;default:throw new Error("Unsupported type ".concat(s.dtype))}return n.makeTensorInfo(i,m.dtype,m.values)}};const Dg={kernelName:S.SplitV,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{numOrSizeSplits:s,axis:o}=a,i=S.util.parseAxisParam(o,r.shape)[0],c=S.backend_util.prepareSplitSize(r,s,i),l=new Array(r.shape.length).fill(0),u=r.shape.slice();return c.map((e=>{const t=[...u];t[i]=e;const a=uh({inputs:{x:r},backend:n,attrs:{begin:l,size:t}});return l[i]+=e,a}))}},Og=Hu((e=>Math.sqrt(e))),Mg=ju(S.Sqrt,(e=>Math.sqrt(e))),zg={kernelName:S.Sqrt,backendName:"cpu",kernelFunc:Mg},Lg={kernelName:S.Square,backendName:"cpu",kernelFunc:e=>{let{inputs:t,backend:n}=e;const{x:a}=t,r=n;Wu(a,"square");const s=r.data.get(a.dataId).values,o=new Float32Array(s.length);for(let i=0;i<s.length;++i){const e=s[i];o[i]=e*e}return{dataId:r.write(o,a.shape,a.dtype),shape:a.shape,dtype:a.dtype}}},Bg=$u(((e,t)=>{const n=e-t;return n*n})),Pg=vd(S.SquaredDifference,Bg),Vg={kernelName:S.SquaredDifference,backendName:"cpu",kernelFunc:Pg},Wg=Hu(((e,t)=>{const{pattern:n,replaceGlobal:a,rewrite:r}=t;return e.replace(new RegExp(n,a?"g":""),r)})),Ug=qu(S.StaticRegexReplace,Wg),Gg={kernelName:S.StaticRegexReplace,backendName:"cpu",kernelFunc:Ug},Hg=ju(S.Step,((e,t)=>{const n=t;return isNaN(e)?NaN:e>0?1:n.alpha})),jg={kernelName:S.Step,backendName:"cpu",kernelFunc:Hg};function qg(e,t,n,a){const r=(0,S.buffer)(e,t.dtype);for(let s=0;s<r.size;s++){const e=r.indexToLoc(s),o=new Array(e.length);for(let t=0;t<o.length;t++)o[t]=e[t]*n[t]+a[t];r.set(t.get(...o),...e)}return r}const Xg={kernelName:S.StridedSlice,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{begin:s,end:o,strides:i,beginMask:c,endMask:l,ellipsisMask:u,newAxisMask:d,shrinkAxisMask:h}=a;Wu(r,"stridedSlice");const{finalShapeSparse:p,finalShape:f,isIdentity:m,sliceDim0:g,isSimpleSlice:y,begin:b,end:v,strides:x}=S.slice_util.sliceInfo(r.shape,s,o,i,c,l,u,d,h);let w;if(m)w=Id({inputs:{x:r},backend:n,attrs:{shape:f}});else if(g||y){S.util.assert(r.shape.length>=1,(()=>"Input must have rank at least 1, got: ".concat(r.shape.length)));const e=S.slice_util.computeOutShape(b,v,x),t=uh({inputs:{x:r},backend:n,attrs:{begin:b,size:e}});w=Id({inputs:{x:t},backend:n,attrs:{shape:f}}),n.disposeIntermediateTensorInfo(t)}else{const e=qg(p,n.bufferSync(r),x,b);w=n.makeTensorInfo(f,e.dtype,e.values)}return w}};class Kg{constructor(e,t,n,a,r,s){this.separator=S.util.encodeString(e),this.nGramWidths=t,this.leftPad=S.util.encodeString(n),this.rightPad=S.util.encodeString(a),this.padWidth=r,this.preserveShort=s}getPadWidth(e){return Math.min(this.padWidth<0?e-1:this.padWidth,e-1)}getNumNGrams(e,t){const n=this.getPadWidth(t);return Math.max(0,e+2*n-t+1)}createNGrams(e,t,n,a,r,s){for(let o=0;o<r;++o){const i=this.getPadWidth(s),c=Math.max(0,i-o),l=Math.max(0,i-(r-(o+1))),u=s-(c+l),d=t+(c>0?0:o-i);let h=0;h+=c*this.leftPad.length;for(let t=0;t<u;++t)h+=e[d+t].length;h+=l*this.rightPad.length;h+=(c+l+u-1)*this.separator.length,n[a+o]=new Uint8Array(h);const p=n[a+o];let f=0;const m=e=>e.forEach((e=>p[f++]=e));for(let e=0;e<c;++e)m(this.leftPad),m(this.separator);for(let t=0;t<u-1;++t)m(e[d+t]),m(this.separator);if(u>0){m(e[d+u-1]);for(let e=0;e<l;++e)m(this.separator),m(this.rightPad)}else{for(let e=0;e<l-1;++e)m(this.rightPad),m(this.separator);m(this.rightPad)}}}compute(e,t){const n=e.length,a=t.length;if(a>0){let e=t[0];if(0!==e)throw new Error("First split value must be 0, got ".concat(e));for(let r=1;r<a;++r){let a=t[r]>=e;if(a=a&&t[r]<=n,!a)throw new Error("Invalid split value ".concat(t[r],", must be in [").concat(e,", ").concat(n,"]"));e=t[r]}if(e!==n)throw new Error("Last split value must be data size. Expected ".concat(n,", got ").concat(e))}const r=a-1,s=S.util.getArrayFromDType("int32",a);if(0===n||0===a){const e=new Array(n);for(let t=0;t<=r;++t)s[t]=0;return[e,s]}s[0]=0;for(let i=1;i<=r;++i){const e=t[i]-t[i-1];let n=0;this.nGramWidths.forEach((t=>{n+=this.getNumNGrams(e,t)})),this.preserveShort&&e>0&&0===n&&(n=1),s[i]=s[i-1]+n}const o=new Array(s[r]);for(let i=0;i<r;++i){const n=t[i];let a=s[i];if(this.nGramWidths.forEach((r=>{const s=t[i+1]-t[i],c=this.getNumNGrams(s,r);this.createNGrams(e,n,o,a,c,r),a+=c})),this.preserveShort&&a===s[i]){const r=t[i+1]-t[i];if(0===r)continue;const s=r+2*this.padWidth,c=1;this.createNGrams(e,n,o,a,c,s)}}return[o,s]}}function Qg(e,t,n,a,r,s,o,i){return new Kg(n,a,r,s,o,i).compute(e,t)}const Yg={kernelName:S.StringNGrams,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{separator:r,nGramWidths:s,leftPad:o,rightPad:i,padWidth:c,preserveShortSequences:l}=a,{data:u,dataSplits:d}=t,h=n.data.get(u.dataId).values,p=n.data.get(d.dataId).values,[f,m]=Qg(h,p,r,s,o,i,c,l);return[n.makeTensorInfo([f.length],"string",f),n.makeTensorInfo(d.shape,"int32",m)]}};function Zg(e,t,n,a){if(!e.length)return;if(0===t.length){for(let t=0;t<e.length;++t)a.push(e.subarray(t,t+1));return}if(1===t.length){const r=t[0];let s=e.indexOf(r);for(;-1!==s;){const t=e.subarray(0,s);n&&0===t.length||a.push(t),s=(e=e.subarray(s+1)).indexOf(r)}return void(n&&0===e.length||a.push(e))}let r=0;for(let s=0;s<e.length+1;s++)if(s===e.length||-1!==t.indexOf(e[s])){const t=e.subarray(r,s);n&&0===t.length||a.push(t),r=s+1}}function Jg(e,t,n){const a=e.length,r=[];let s=0,o=0;const i=new Array(a);for(let h=0;h<a;++h){const a=r.length;Zg(e[h],t,n,r);const c=r.length-a;i[h]=c,s+=c,o=Math.max(o,c)}const c=S.util.getArrayFromDType("int32",2*s),l=new Array(s),u=[a,o];let d=0;for(let h=0;h<a;++h)for(let e=0;e<i[h];++e)c[2*d]=h,c[2*d+1]=e,l[d]=r[d],++d;return[c,l,u]}const $g={kernelName:S.StringSplit,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{skipEmpty:r}=a,{input:s,delimiter:o}=t;if("string"!==s.dtype)throw new Error("Input must be of datatype string");if(1!==s.shape.length)throw new Error("Input must be a vector, got shape: ".concat(s.shape));if(0!==o.shape.length)throw new Error("Delimiter must be a scalar, got shape: ".concat(o.shape));const i=n.data.get(s.dataId).values,c=n.data.get(o.dataId).values[0],[l,u,d]=Jg(i,c,r),h=u.length;return[n.makeTensorInfo([h,2],"int32",l),n.makeTensorInfo([h],"string",u),n.makeTensorInfo([2],"int32",new Int32Array(d))]}};function ey(e,t){const n=S.util.getArrayFromDType("int32",e.length);for(let a=0;a<e.length;++a)n[a]=S.util.fingerPrint64(e[a]).modulo(t).getLowBitsUnsigned();return n}const ty={kernelName:S.StringToHashBucketFast,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{numBuckets:r}=a,{input:s}=t;if("string"!==s.dtype)throw new Error("Input must be of datatype string");if(r<=0)throw new Error("Number of buckets must be at least 1");const o=ey(n.data.get(s.dataId).values,r);return n.makeTensorInfo(s.shape,"int32",o)}},ny=ju(S.Tan,(e=>Math.tan(e))),ay={kernelName:S.Tan,backendName:"cpu",kernelFunc:ny},ry=ju(S.Tanh,(e=>Math.tanh(e))),sy={kernelName:S.Tanh,backendName:"cpu",kernelFunc:ry};const oy={kernelName:S.TensorScatterUpdate,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{tensor:a,indices:r,updates:s}=t,{sliceRank:o,numUpdates:i,sliceSize:c,strides:l,outputSize:u}=S.backend_util.calculateShapes(s,r,a.shape),d=n.bufferSync(r),h=n.bufferSync(s),p=n.bufferSync(a),f=sg(d,h,a.shape,u,c,i,o,l,p,!1);return n.makeTensorInfo(a.shape,f.dtype,f.values)}};function iy(e,t){const n=new Array(e.rank);for(let r=0;r<n.length;r++)n[r]=e.shape[r]*t[r];const a=(0,S.buffer)(n,e.dtype);for(let r=0;r<a.values.length;++r){const t=a.indexToLoc(r),n=new Array(e.rank);for(let a=0;a<n.length;a++)n[a]=t[a]%e.shape[a];const s=e.locToIndex(n);a.values[r]=e.values[s]}return a}const cy={kernelName:S.Tile,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{reps:s}=a;Wu(r,"tile");const o=iy(n.bufferSync(r),s);return n.makeTensorInfo(o.shape,o.dtype,o.values)}},ly=(e,t)=>{const n=t.value-e.value;return 0===n?e.index-t.index:n};function uy(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:e.length-1;for(;a>n;){if(a-n>600){const r=a-n+1,s=t-n+1,o=Math.log(r),i=.5*Math.exp(2*o/3),c=.5*Math.sqrt(o*i*(r-i)/r)*Math.sign(s-r/2);uy(e,t,Math.max(n,Math.floor(t-s*i/r+c)),Math.min(a,Math.floor(t+(r-s)*i/r+c)))}const r=e[t];let s=n,o=a;for(S.util.swap(e,n,t),ly(e[a],r)>0&&S.util.swap(e,n,a);s<o;){for(S.util.swap(e,s,o),s++,o--;ly(e[s],r)<0;)s+=1;for(;ly(e[o],r)>0;)o-=1}0===ly(e[n],r)?S.util.swap(e,n,o):(o+=1,S.util.swap(e,o,a)),o<=t&&(n=o+1),t<=o&&(a=o-1)}}function dy(e,t,n,a,r){const s=t[t.length-1],[o,i]=[e.length/s,s],c=S.util.getTypedArrayFromDType(n,o*a),l=S.util.getTypedArrayFromDType("int32",o*a);for(let d=0;d<o;d++){const t=d*i,n=e.subarray(t,t+i);let s=new Array(n.length);n.forEach(((e,t)=>s[t]={value:e,index:t})),a<s.length&&(uy(s,a),s=s.slice(0,a)),r&&s.sort(ly);const o=d*a,u=c.subarray(o,o+a),h=l.subarray(o,o+a);for(let e=0;e<a;e++)u[e]=s[e].value,h[e]=s[e].index}const u=t.slice();return u[u.length-1]=a,[(0,S.buffer)(u,n,c),(0,S.buffer)(u,"int32",l)]}const hy={kernelName:S.TopK,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{k:s,sorted:o}=a;Wu(r,"topk");const i=n.data.get(r.dataId).values,[c,l]=dy(i,r.shape,r.dtype,s,o);return[n.makeTensorInfo(c.shape,c.dtype,c.values),n.makeTensorInfo(l.shape,l.dtype,l.values)]}};const py={kernelName:S.Transform,backendName:"cpu",kernelFunc:function(e){const{inputs:t,attrs:n,backend:a}=e,{image:r,transforms:s}=t,{interpolation:o,fillMode:i,fillValue:c,outputShape:l}=n,[u,d,h,p]=r.shape,[f,m]=null!=l?l:[d,h],g=[u,f,m,p],y=S.util.computeStrides(r.shape),b=y[0],v=y[1],x=y[2],w=S.util.computeStrides(g),k=w[0],N=w[1],I=w[2],T=S.util.getTypedArrayFromDType(r.dtype,S.util.sizeFromShape(g));T.fill(c);const C=a.data.get(r.dataId).values,E=a.data.get(s.dataId).values;for(let S=0;S<u;++S){const e=1===s.shape[0]?E:E.subarray(8*S,8*S+8);for(let t=0;t<f;++t)for(let n=0;n<m;++n)for(let a=0;a<p;++a){let r;const s=e[6]*n+e[7]*t+1;if(0===s)continue;const l=(e[0]*n+e[1]*t+e[2])/s,u=(e[3]*n+e[4]*t+e[5])/s,p=fy(l,h,i),f=fy(u,d,i);switch(o){case"nearest":r=gy(C,d,h,b,v,x,S,f,p,a,c);break;case"bilinear":r=yy(C,d,h,b,v,x,S,f,p,a,c);break;default:throw new Error("Error in Transform: Expect 'nearest' or "+"'bilinear', but got ".concat(o))}T[S*k+t*N+n*I+a]=r}return a.makeTensorInfo(g,r.dtype,T)}return{dataId:a.write(T,g,r.dtype),shape:r.shape,dtype:r.dtype}}};function fy(e,t,n){switch(n){case"reflect":return function(e,t){let n=e;if(n<0)if(t<=1)n=0;else{const e=2*t;n<e&&(n=e*Math.trunc(-n/e)+n),n=n<-t?n+e:-n-1}else if(n>t-1)if(t<=1)n=0;else{const e=2*t;n-=e*Math.trunc(n/e),n>=t&&(n=e-n-1)}return S.util.clamp(0,n,t-1)}(e,t);case"wrap":return function(e,t){let n=e;if(n<0)if(t<=1)n=0;else{const e=t-1;n+=t*(Math.trunc(-n/e)+1)}else if(n>t-1)if(t<=1)n=0;else{const e=t-1;n-=t*Math.trunc(n/e)}return S.util.clamp(0,n,t-1)}(e,t);case"nearest":return function(e,t){return S.util.clamp(0,e,t-1)}(e,t);default:return function(e,t){return e}(e)}}function my(e,t,n,a,r,s,o,i,c,l,u){return 0<=i&&i<t&&0<=c&&c<n?e[o*a+i*r+c*s+l]:u}function gy(e,t,n,a,r,s,o,i,c,l,u){return my(e,t,n,a,r,s,o,Math.round(i),Math.round(c),l,u)}function yy(e,t,n,a,r,s,o,i,c,l,u){const d=Math.floor(i),h=Math.floor(c),p=d+1,f=h+1;return(p-i)*((f-c)*my(e,t,n,a,r,s,o,d,h,l,u)+(c-h)*my(e,t,n,a,r,s,o,d,f,l,u))+(i-d)*((f-c)*my(e,t,n,a,r,s,o,p,h,l,u)+(c-h)*my(e,t,n,a,r,s,o,p,f,l,u))}function by(e,t,n,a){const r=S.util.parseAxisParam(t,n)[0],s=[1,n[0],1];for(let f=0;f<r;f++)s[0]*=n[f];s[1]=n[r];for(let f=r+1;f<n.length;f++)s[2]*=n[f];const o=new Map,i=new Int32Array(n[r]),c=new S.TensorBuffer(s,a,e),l=[],u=1===s[0]&&1===s[2];for(let f=0;f<n[r];f++){let t;if(u)t=e[f].toString();else{const e=[];for(let t=0;t<s[0];t++)for(let n=0;n<s[2];n++)e.push(c.get(t,f,n));t=e.join(",")}const n=o.get(t);if(null!=n)i[f]=n;else{const e=o.size;o.set(t,e),i[f]=e,l.push(f)}}const d=s.slice();d[1]=o.size;const h=new S.TensorBuffer(d,a);l.forEach(((e,t)=>{for(let n=0;n<s[0];n++)for(let a=0;a<s[2];a++)h.set(c.get(n,e,a),n,t,a)}));const p=n.slice();return p[r]=d[1],{outputValues:h.values,outputShape:p,indices:i}}const vy={kernelName:S.Unique,backendName:"cpu",kernelFunc:function(e){const{inputs:t,attrs:n,backend:a}=e,{axis:r}=n,{x:s}=t;Wu(s,"unique");const o=a.data.get(s.dataId).values,{outputValues:i,outputShape:c,indices:l}=by(o,r,s.shape,s.dtype);return[a.makeTensorInfo(c,s.dtype,i),a.makeTensorInfo([l.length],"int32",l)]}};const xy={kernelName:S.Unpack,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{value:r}=t;let{axis:s}=a;s<0&&(s+=r.shape.length);const o=r.shape.length,i=r.shape[s],c=new Array(o-1);let l=0;for(let p=0;p<o;p++)p!==s&&(c[l++]=r.shape[p]);const u=new Array(o).fill(0),d=r.shape.slice();d[s]=1;const h=new Array(i);for(let p=0;p<h.length;p++){u[s]=p;const e=uh({inputs:{x:r},backend:n,attrs:{begin:u,size:d}});h[p]=Id({inputs:{x:e},backend:n,attrs:{shape:c}}),n.disposeIntermediateTensorInfo(e)}return h}};const wy={kernelName:S.UnsortedSegmentSum,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,segmentIds:s}=t,{numSegments:o}=a;Wu(r,"unsortedSegmentSum");const i=[],c=[],l=r.shape.length-s.shape.length;let u=s;for(let h=0;h<l;++h){const e=Np({inputs:{input:u},backend:n,attrs:{dim:h+1}});u=e,c.push(e)}for(let h=0;h<o;++h){const e=S.util.createScalarValue(h,"int32"),t=n.makeTensorInfo([],"int32",e),a=dp({inputs:{a:t,b:u},backend:n}),s=yd({inputs:{x:a},backend:n,attrs:{dtype:"float32"}}),o=rp({inputs:{a:s,b:r},backend:n}),l=op({inputs:{x:o},backend:n,attrs:{axis:0,keepDims:!1}});i.push(l),c.push(t),c.push(a),c.push(s),c.push(o),c.push(l)}const d=km({inputs:i,backend:n,attrs:{axis:0}});return c.forEach((e=>n.disposeIntermediateTensorInfo(e))),d}},ky=[_d,Rd,Dd,Md,Nd,zd,Vd,Wd,Ud,Gd,jd,Xd,Qd,Jd,eh,rh,sh,oh,ih,Ed,ch,hh,mh,bh,vh,bd,kh,Nh,hd,Ih,Ah,Fh,Dh,Oh,Mh,zh,Lh,Ph,Wh,Uh,Gh,Hh,jh,qh,Kh,Qh,Yh,Zh,Jh,$h,ep,tp,cp,Ku,lp,hp,xp,Sp,Ip,Ep,Pp,Wp,Up,jp,Kp,Qp,Yp,Jp,ef,af,of,Yu,cf,Eh,uf,hf,ff,Ju,yf,xf,kf,If,Cf,Af,Ff,Mf,zf,Lf,Vf,Gf,Hf,jf,qf,Xf,Kf,Qf,Yf,$f,em,am,om,sp,cm,um,hm,fm,ym,bm,wm,Sm,Nm,Cm,nd,_m,Om,Lm,Gm,jm,md,Rp,Xm,rd,od,Td,Km,Qm,Ym,Zm,Jm,$m,tg,rg,og,lg,ug,fg,ld,gg,bg,xg,dh,sm,Sg,Ng,Tg,Eg,Ag,Rg,Fg,Dg,zg,Lg,Vg,Gg,jg,Xg,Yg,$g,ty,Mp,ip,ay,sy,oy,cy,hy,py,Pd,vy,xy,wy,xm];for(const n of ky)(0,S.registerKernel)(n);const Sy={},Ny={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function Iy(e,t){if(!(e in Sy)||null!=t){const n=function(e,t){if(1!==e&&2!==e)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");const n=null==t?function(e){if((0,S.env)().getBool("IS_SAFARI")||"undefined"===typeof OffscreenCanvas||2!==e){if("undefined"!==typeof document)return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}return new OffscreenCanvas(300,150)}(e):t;n.addEventListener("webglcontextlost",(t=>{t.preventDefault(),delete Sy[e]}),!1),(0,S.env)().getBool("SOFTWARE_WEBGL_ENABLED")&&(Ny.failIfMajorPerformanceCaveat=!1);if(1===e)return n.getContext("webgl",Ny)||n.getContext("experimental-webgl",Ny);return n.getContext("webgl2",Ny)}(e,t);if(null===n)return console.log("Could not get context for WebGL version",e),null;Sy[e]=n}const n=Sy[e];return null==n||n.isContextLost()?(delete Sy[e],Iy(e)):(n.disable(n.DEPTH_TEST),n.disable(n.STENCIL_TEST),n.disable(n.BLEND),n.disable(n.DITHER),n.disable(n.POLYGON_OFFSET_FILL),n.disable(n.SAMPLE_COVERAGE),n.enable(n.SCISSOR_TEST),n.enable(n.CULL_FACE),n.cullFace(n.BACK),Sy[e])}var Ty,Cy,Ey;function _y(e,t){return[t,e]}function Ay(e){const t=S.util.sizeFromShape(e),n=Math.ceil(t/4);return S.util.sizeToSquarishShape(n)}function Ry(e,t){return[Math.max(1,Math.ceil(t/2)),Math.max(1,Math.ceil(e/2))]}function Fy(e,t){const n=e;let a,r,s,o,i,c,l,u,d,h;return 2===(0,S.env)().getNumber("WEBGL_VERSION")?(a=n.R32F,r=n.R16F,s=n.RGBA16F,o=n.RGBA32F,i=n.RED,l=4,u=1,d=n.HALF_FLOAT,h=n.FLOAT,c=n.RGBA8):(a=e.RGBA,r=e.RGBA,s=e.RGBA,o=n.RGBA,i=e.RGBA,l=4,u=4,d=null!=t?t.HALF_FLOAT_OES:null,h=e.FLOAT,c=e.RGBA),{internalFormatFloat:a,internalFormatHalfFloat:r,internalFormatPackedHalfFloat:s,internalFormatPackedFloat:o,textureFormatFloat:i,downloadTextureFormat:c,downloadUnpackNumChannels:l,defaultNumChannels:u,textureTypeHalfFloat:d,textureTypeFloat:h}}function Dy(e,t){const n=t();return(0,S.env)().getBool("DEBUG")&&function(e){const t=e.getError();if(t!==e.NO_ERROR)throw new Error("WebGL Error: "+function(e,t){switch(t){case e.NO_ERROR:return"NO_ERROR";case e.INVALID_ENUM:return"INVALID_ENUM";case e.INVALID_VALUE:return"INVALID_VALUE";case e.INVALID_OPERATION:return"INVALID_OPERATION";case e.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case e.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case e.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return"Unknown error code ".concat(t)}}(e,t))}(e),n}!function(e){e[e.DENSE=0]="DENSE",e[e.SHARED_BATCH=1]="SHARED_BATCH"}(Ty||(Ty={})),function(e){e[e.RENDER=0]="RENDER",e[e.UPLOAD=1]="UPLOAD",e[e.PIXELS=2]="PIXELS",e[e.DOWNLOAD=3]="DOWNLOAD"}(Cy||(Cy={})),function(e){e[e.UNPACKED_FLOAT16=0]="UNPACKED_FLOAT16",e[e.UNPACKED_FLOAT32=1]="UNPACKED_FLOAT32",e[e.PACKED_4X1_UNSIGNED_BYTE=2]="PACKED_4X1_UNSIGNED_BYTE",e[e.PACKED_2X2_FLOAT32=3]="PACKED_2X2_FLOAT32",e[e.PACKED_2X2_FLOAT16=4]="PACKED_2X2_FLOAT16"}(Ey||(Ey={}));function Oy(e){return!!((0,S.env)().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||0===e||5.96e-8<Math.abs(e)&&Math.abs(e)<65504)}function My(e,t){return Hy(e,(()=>e.getExtension(t)),'Extension "'+t+'" not supported on this browser.')}const zy=/ERROR: [0-9]+:([0-9]+):/g;function Ly(e,t){const n=zy.exec(t);if(null==n)return console.log("Couldn't parse line number in error: ".concat(t)),void console.log(e);const a=+n[1],r=e.split("\n"),s=r.length.toString().length+2,o=r.map(((e,t)=>S.util.rightPad((t+1).toString(),s)+e));let i=0;for(let d=0;d<o.length;d++)i=Math.max(o[d].length,i);const c=o.slice(0,a-1),l=o.slice(a-1,a),u=o.slice(a);console.log(c.join("\n")),console.log(t.split("\n")[0]),console.log("%c ".concat(S.util.rightPad(l[0],i)),"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(u.join("\n"))}function By(e,t){if(Dy(e,(()=>e.validateProgram(t))),!1===e.getProgramParameter(t,e.VALIDATE_STATUS))throw console.log(e.getProgramInfoLog(t)),new Error("Shader program validation failed.")}function Py(e,t,n,a,r,s,o){const i=e.getAttribLocation(t,n);return-1!==i&&(Dy(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,a))),Dy(e,(()=>e.vertexAttribPointer(i,r,e.FLOAT,!1,s,o))),Dy(e,(()=>e.enableVertexAttribArray(i))),!0)}function Vy(e,t,n,a){Dy(e,(()=>function(e,t,n){jy(e,n),Dy(e,(()=>e.activeTexture(e.TEXTURE0+n))),Dy(e,(()=>e.bindTexture(e.TEXTURE_2D,t)))}(e,t,a))),Dy(e,(()=>e.uniform1i(n,a)))}function Wy(e,t,n){Dy(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,n))),Dy(e,(()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,t,0)))}function Uy(e,t){Dy(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,t))),Dy(e,(()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,null,0)))}function Gy(e){const t=e.checkFramebufferStatus(e.FRAMEBUFFER);if(t!==e.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+function(e,t){switch(t){case e.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case e.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return"unknown error ".concat(t)}}(e,t))}function Hy(e,t,n){const a=Dy(e,(()=>t()));if(null==a)throw new Error(n);return a}function jy(e,t){const n=e.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,a=t+e.TEXTURE0;if(a<e.TEXTURE0||a>n){const e="[gl.TEXTURE0, gl.TEXTURE".concat(n,"]");throw new Error("textureUnit must be in ".concat(e,"."))}}function qy(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:2;return S.util.sizeFromShape(e.slice(0,e.length-t))}function Xy(e){if(0===e.length)throw Error("Cannot get rows and columns of an empty shape array.");return[e.length>1?e[e.length-2]:1,e[e.length-1]]}function Ky(e){let t=[1,1,1];return 0===e.length||1===e.length&&1===e[0]||(t=[qy(e),...Xy(e)]),t}function Qy(e){return e%2===0}function Yy(e,t){if(e=e.slice(-2),t=t.slice(-2),S.util.arraysEqual(e,t))return!0;if(!e.length||!t.length)return!0;if(0===e[0]||0===e[1]||0===t[0]||0===t[1])return!0;if(e.length!==t.length){const n=e[e.length-1],a=t[t.length-1];if(n===a)return!0;if(Qy(n)&&Qy(a)&&(1===e[0]||1===t[0]))return!0}return e[1]===t[1]&&Qy(e[0])&&Qy(t[0])}let Zy,Jy;function $y(e,t){return null!=e.getExtension(t)}function eb(e){try{if(null!=Iy(e))return!0}catch(t){return console.log("Error when getting WebGL context: ",t),!1}return!1}function tb(e){if(0===e)return!1;const t=Iy(e);if(1!==e){if($y(t,"EXT_color_buffer_float"))return nb(t);const e="EXT_color_buffer_half_float";if($y(t,e)){const n=t.getExtension(e);return function(e,t){const n=Fy(e,t),a=e.createTexture();e.bindTexture(e.TEXTURE_2D,a);const r=1,s=1;e.texImage2D(e.TEXTURE_2D,0,n.internalFormatHalfFloat,r,s,0,n.textureFormatFloat,n.textureTypeHalfFloat,null);const o=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,o),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,a,0);const i=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(a),e.deleteFramebuffer(o),i}(t,n)}return!1}if(!$y(t,"OES_texture_float"))return!1;if(!$y(t,"WEBGL_color_buffer_float"))return!1;return nb(t)}function nb(e){const t=Fy(e),n=e.createTexture();e.bindTexture(e.TEXTURE_2D,n);e.texImage2D(e.TEXTURE_2D,0,t.internalFormatFloat,1,1,0,t.textureFormatFloat,t.textureTypeFloat,null);const a=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,a),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,n,0);const r=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(n),e.deleteFramebuffer(a),r}function ab(e,t){Array.isArray(e)||(e=[e]),e.forEach((e=>{null!=e&&S.util.assert("complex64"!==e.dtype,(()=>"".concat(t," does not support complex64 tensors ")+"in the WebGL backend."))}))}const rb=(0,S.env)();function sb(){let e,t,n,a,r,s,o,i,c,l;return 2===(0,S.env)().getNumber("WEBGL_VERSION")?(e="#version 300 es",t="in",n="out",a="in",r="texture",s="outputColor",o="out vec4 outputColor;",i=(0,S.env)().getBool("WEBGL2_ISNAN_CUSTOM")?"\n      bool isnan_custom(float val) {\n        uint floatToUint = floatBitsToUint(val);\n        return (floatToUint & 0x7fffffffu) > 0x7f800000u;\n      }\n\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan_custom(val.x),\n          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));\n      }\n\n      #define isnan(value) isnan_custom(value)\n    ":"",c="",l="\n      #define round(value) newRound(value)\n      int newRound(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 newRound(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "):(e="",t="attribute",n="varying",a="varying",r="texture2D",s="gl_FragColor",o="",i="\n      #define isnan(value) isnan_custom(value)\n      bool isnan_custom(float val) {\n        return (val > 0. || val < 1. || val == 0.) ? false : true;\n      }\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));\n      }\n    ",c="\n      uniform float INFINITY;\n\n      bool isinf(float val) {\n        return abs(val) == INFINITY;\n      }\n      bvec4 isinf(vec4 val) {\n        return equal(abs(val), vec4(INFINITY));\n      }\n    ",l="\n      int round(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 round(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "),{version:e,attribute:t,varyingVs:n,varyingFs:a,texture2D:r,output:s,defineOutput:o,defineSpecialNaN:i,defineSpecialInf:c,defineRound:l}}function ob(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"index";const a=S.util.computeStrides(t);return a.map(((t,r)=>{const s="int ".concat(e[r]," = ").concat(n," / ").concat(t),o=r===a.length-1?"int ".concat(e[r+1]," = ").concat(n," - ").concat(e[r]," * ").concat(t):"index -= ".concat(e[r]," * ").concat(t);return"".concat(s,"; ").concat(o,";")})).join("")}function ib(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"index";const a=S.util.computeStrides(t);return a.map(((t,r)=>{const s="int ".concat(e[r]," = ").concat(n," / outShapeStrides[").concat(r,"]"),o=r===a.length-1?"int ".concat(e[r+1]," = ").concat(n," - ").concat(e[r]," * outShapeStrides[").concat(r,"]"):"index -= ".concat(e[r]," * outShapeStrides[").concat(r,"]");return"".concat(s,"; ").concat(o,";")})).join("")}function cb(e,t){const n=e.length,a=e.map((e=>"".concat(t,"[").concat(e,"]"))),r=new Array(n-1);r[n-2]=a[n-1];for(let s=n-3;s>=0;--s)r[s]="(".concat(r[s+1]," * ").concat(a[s+1],")");return r}function lb(e){const t=S.util.computeStrides(e).map((e=>e.toString()));return"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * ".concat(t[0]," + coords.y * ").concat(t[1]," + coords.z;\n  }\n")}rb.registerFlag("HAS_WEBGL",(()=>rb.getNumber("WEBGL_VERSION")>0)),rb.registerFlag("WEBGL_VERSION",(()=>eb(2)?2:eb(1)?1:0)),rb.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",(()=>!1)),rb.registerFlag("WEBGL_BUFFER_SUPPORTED",(()=>2===rb.get("WEBGL_VERSION"))),rb.registerFlag("WEBGL_CPU_FORWARD",(()=>!0)),rb.registerFlag("WEBGL_FORCE_F16_TEXTURES",(()=>!1)),rb.registerFlag("WEBGL_PACK",(()=>rb.getBool("HAS_WEBGL"))),rb.registerFlag("WEBGL_PACK_NORMALIZATION",(()=>rb.getBool("WEBGL_PACK"))),rb.registerFlag("WEBGL_PACK_CLIP",(()=>rb.getBool("WEBGL_PACK"))),rb.registerFlag("WEBGL_PACK_DEPTHWISECONV",(()=>rb.getBool("WEBGL_PACK"))),rb.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",(()=>rb.getBool("WEBGL_PACK"))),rb.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",(()=>rb.getBool("WEBGL_PACK"))),rb.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",(()=>rb.getBool("WEBGL_PACK"))),rb.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",(()=>rb.getBool("WEBGL_PACK"))),rb.registerFlag("WEBGL_PACK_REDUCE",(()=>rb.getBool("WEBGL_PACK"))),rb.registerFlag("WEBGL_LAZILY_UNPACK",(()=>rb.getBool("WEBGL_PACK"))),rb.registerFlag("WEBGL_CONV_IM2COL",(()=>rb.getBool("WEBGL_PACK"))),rb.registerFlag("WEBGL_PACK_CONV2DTRANSPOSE",(()=>rb.getBool("WEBGL_PACK"))),rb.registerFlag("WEBGL_MAX_TEXTURE_SIZE",(()=>function(e){if(null==Zy){const t=Iy(e);Zy=t.getParameter(t.MAX_TEXTURE_SIZE)}return Zy}(rb.getNumber("WEBGL_VERSION")))),rb.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",(()=>function(e){if(null==Jy){const t=Iy(e);Jy=t.getParameter(t.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,Jy)}(rb.getNumber("WEBGL_VERSION")))),rb.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",(()=>{const e=rb.getNumber("WEBGL_VERSION");return 0===e?0:function(e){if(0===e)return 0;let t;const n=Iy(e);return t=$y(n,"EXT_disjoint_timer_query_webgl2")&&2===e?2:$y(n,"EXT_disjoint_timer_query")?1:0,t}(e)})),rb.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",(()=>rb.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!S.device_util.isMobile())),rb.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",(()=>function(e){if(0===e)return!1;const t=Iy(e);if(1===e){if(!$y(t,"OES_texture_float"))return!1}else if(!$y(t,"EXT_color_buffer_float"))return!1;return nb(t)}(rb.getNumber("WEBGL_VERSION")))),rb.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",(()=>!rb.getBool("WEBGL_FORCE_F16_TEXTURES")&&rb.getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))),rb.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",(()=>tb(rb.getNumber("WEBGL_VERSION")))),rb.registerFlag("WEBGL_FENCE_API_ENABLED",(()=>{return 2===(e=rb.getNumber("WEBGL_VERSION"))&&null!=Iy(e).fenceSync;var e})),rb.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",(()=>rb.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0)),rb.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",(()=>-1),(e=>{if("number"!==typeof e)throw new Error("WEBGL_DELETE_TEXTURE_THRESHOLD must be a number but "+"got ".concat(e,"."));if(e<0&&-1!==e)throw new Error("WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never "+"delete) or at least 0, but got ".concat(e,"."))})),rb.registerFlag("WEBGL_FLUSH_THRESHOLD",(()=>S.device_util.isMobile()?1:-1),(e=>{if("number"!==typeof e)throw new Error("WEBGL_FLUSH_THRESHOLD must be a number but got "+"".concat(e,"."));if(e<0&&-1!==e)throw new Error("WEBGL_FLUSH_THRESHOLD must be -1 (indicating never "+"manual flush) or at least 0, but got ".concat(e,"."))})),rb.registerFlag("CPU_HANDOFF_SIZE_THRESHOLD",(()=>128)),rb.registerFlag("WEBGL_USE_SHAPES_UNIFORMS",(()=>!1)),rb.registerFlag("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD",(()=>1e5)),rb.registerFlag("TOPK_K_CPU_HANDOFF_THRESHOLD",(()=>128)),rb.registerFlag("WEBGL_EXP_CONV",(()=>!1)),rb.registerFlag("SOFTWARE_WEBGL_ENABLED",(()=>rb.getBool("IS_TEST"))),rb.registerFlag("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE",(()=>1/0)),rb.registerFlag("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE",(()=>!1)),rb.registerFlag("WEBGL2_ISNAN_CUSTOM",(()=>!1)),rb.registerFlag("ENGINE_COMPILE_ONLY",(()=>!1));const ub="\n  const float FLOAT_MAX = 1.70141184e38;\n  const float FLOAT_MIN = 1.17549435e-38;\n\n  lowp vec4 encode_float(highp float v) {\n    if (isnan(v)) {\n      return vec4(255, 255, 255, 255);\n    }\n\n    highp float av = abs(v);\n\n    if(av < FLOAT_MIN) {\n      return vec4(0.0, 0.0, 0.0, 0.0);\n    } else if(v > FLOAT_MAX) {\n      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;\n    } else if(v < -FLOAT_MAX) {\n      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;\n    }\n\n    highp vec4 c = vec4(0,0,0,0);\n\n    highp float e = floor(log2(av));\n    highp float m = exp2(fract(log2(av))) - 1.0;\n\n    c[2] = floor(128.0 * m);\n    m -= c[2] / 128.0;\n    c[1] = floor(32768.0 * m);\n    m -= c[1] / 32768.0;\n    c[0] = floor(8388608.0 * m);\n\n    highp float ebias = e + 127.0;\n    c[3] = floor(ebias / 2.0);\n    ebias -= c[3] * 2.0;\n    c[2] += floor(ebias) * 128.0;\n\n    c[3] += 128.0 * step(0.0, -v);\n\n    return c / 255.0;\n  }\n",{getBroadcastDims:db}=S.backend_util;function hb(e,t,n){const a=[];if(e.forEach((e=>{const t=S.util.sizeFromShape(e.shapeInfo.logicalShape);if(e.shapeInfo.isUniform?a.push("uniform float ".concat(e.name).concat(t>1?"[".concat(t,"]"):"",";")):(a.push("uniform sampler2D ".concat(e.name,";")),a.push("uniform int offset".concat(e.name,";"))),n.enableShapeUniforms){const{uniformShape:t}=Rb(n.packedInputs,e.shapeInfo.logicalShape,e.shapeInfo.texShape);switch(t.length){case 1:a.push("uniform int ".concat(e.name,"Shape;"));break;case 2:a.push("uniform ivec2 ".concat(e.name,"Shape;"));break;case 3:a.push("uniform ivec3 ".concat(e.name,"Shape;"));break;case 4:a.push("uniform ivec4 ".concat(e.name,"Shape;"))}a.push("uniform ivec2 ".concat(e.name,"TexShape;"))}})),n.enableShapeUniforms){switch(t.logicalShape.length){case 1:a.push("uniform int outShape;");break;case 2:a.push("uniform ivec2 outShape;"),a.push("uniform int outShapeStrides;");break;case 3:a.push("uniform ivec3 outShape;"),a.push("uniform ivec2 outShapeStrides;");break;case 4:a.push("uniform ivec4 outShape;"),a.push("uniform ivec3 outShapeStrides;")}a.push("uniform ivec2 outTexShape;")}n.customUniforms&&n.customUniforms.forEach((e=>{a.push("uniform ".concat(e.type," ").concat(e.name).concat(e.arrayIndex?"[".concat(e.arrayIndex,"]"):"",";"))}));const r=a.join("\n"),s=e.map((e=>function(e,t){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],a=arguments.length>3?arguments[3]:void 0,r="";r+=n?fb(e,a):pb(e,a);const s=e.shapeInfo.logicalShape,o=t.logicalShape;s.length<=o.length&&(r+=n?Eb(e,t):_b(e,t));return r}(e,t,n.packedInputs,n.enableShapeUniforms))).join("\n"),o=t.texShape,i=sb(),c=function(e){return"\n    float sampleTexture(sampler2D textureSampler, vec2 uv) {\n      return ".concat(e.texture2D,"(textureSampler, uv).r;\n    }\n  ")}(i);let l,u,d=function(e){return"".concat(e.version,"\n    precision highp float;\n    precision highp int;\n    precision highp sampler2D;\n    ").concat(e.varyingFs," vec2 resultUV;\n    ").concat(e.defineOutput,"\n    const vec2 halfCR = vec2(0.5, 0.5);\n\n    struct ivec5\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n    };\n\n    struct ivec6\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n      int v;\n    };\n\n    uniform float NAN;\n    ").concat(e.defineSpecialNaN,"\n    ").concat(e.defineSpecialInf,"\n    ").concat(e.defineRound,"\n\n    int imod(int x, int y) {\n      return x - y * (x / y);\n    }\n\n    int idiv(int a, int b, float sign) {\n      int res = a / b;\n      int mod = imod(a, b);\n      if (sign < 0. && mod != 0) {\n        res -= 1;\n      }\n      return res;\n    }\n\n    //Based on the work of Dave Hoskins\n    //https://www.shadertoy.com/view/4djSRW\n    #define HASHSCALE1 443.8975\n    float random(float seed){\n      vec2 p = resultUV * seed;\n      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);\n      p3 += dot(p3, p3.yzx + 19.19);\n      return fract((p3.x + p3.y) * p3.z);\n    }\n\n    ").concat(mb,"\n    ").concat(gb,"\n    ").concat(yb,"\n  ")}(i);t.isPacked?(l=function(e,t,n){switch(e.length){case 0:return"\n    int getOutputCoords() {\n      return 0;\n    }\n  ";case 1:return function(e,t,n){const a=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];if(1===a[0])return n?"\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ceil(float(outTexShape[1]) / 2.0));\n      }\n    ":"\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ".concat(a[1],".0);\n      }\n    ");if(1===a[1])return n?"\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ceil(float(outTexShape[0]) / 2.0));\n      }\n    ":"\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ".concat(a[0],".0);\n      }\n    ");if(n)return"\n    int getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      return 2 * (resTexRC.x * packedTexShape[1] + resTexRC.y);\n    }\n  ";return"\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(".concat(a[0],", ").concat(a[1],"));\n      return 2 * (resTexRC.x * ").concat(a[1]," + resTexRC.y);\n    }\n  ")}(0,t,n);case 2:return function(e,t,n){const a=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];if(S.util.arraysEqual(e,t))return n?"\n      ivec2 getOutputCoords() {\n        ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n        return 2 * ivec2(resultUV.yx * vec2(packedTexShape[0], packedTexShape[1]));\n      }\n    ":"\n      ivec2 getOutputCoords() {\n        return 2 * ivec2(resultUV.yx * vec2(".concat(a[0],", ").concat(a[1],"));\n      }\n    ");const r=Math.ceil(e[1]/2);if(n)return"\n    ivec2 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      int texelsInLogicalRow = int(ceil(float(outShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec2(r, c);\n    }\n  ";return"\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(".concat(a[0],", ").concat(a[1],"));\n\n      int index = resTexRC.x * ").concat(a[1]," + resTexRC.y;\n      int r = 2 * (index / ").concat(r,");\n      int c = imod(index, ").concat(r,") * 2;\n\n      return ivec2(r, c);\n    }\n  ")}(e,t,n);case 3:return function(e,t,n){if(n)return"\n    ivec3 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      int texelsInLogicalRow = int(ceil(float(outShape[2]) / 2.0));\n      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n\n      int b = index / texelsInBatch;\n      index -= b * texelsInBatch;\n\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec3(b, r, c);\n    }\n  ";const a=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],r=Math.ceil(e[2]/2),s=r*Math.ceil(e[1]/2);return"\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(".concat(a[0],", ").concat(a[1],"));\n      int index = resTexRC.x * ").concat(a[1]," + resTexRC.y;\n\n      int b = index / ").concat(s,";\n      index -= b * ").concat(s,";\n\n      int r = 2 * (index / ").concat(r,");\n      int c = imod(index, ").concat(r,") * 2;\n\n      return ivec3(b, r, c);\n    }\n  ")}(e,t,n);default:return function(e,t,n){if(n)return"\n    ivec4 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n\n      int texelsInLogicalRow = int(ceil(float(outShape[3]) / 2.0));\n      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[2]) / 2.0));\n      int texelsInBatchN = texelsInBatch * outShape[1];\n\n      int b2 = index / texelsInBatchN;\n      index -= b2 * texelsInBatchN;\n\n      int b = index / texelsInBatch;\n      index -= b * texelsInBatch;\n\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec4(b2, b, r, c);\n    }\n  ";const a=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],r=Math.ceil(e[e.length-1]/2),s=r*Math.ceil(e[e.length-2]/2);let o=s,i="",c="b, r, c";for(let l=2;l<e.length-1;l++)o*=e[e.length-l-1],i="\n      int b".concat(l," = index / ").concat(o,";\n      index -= b").concat(l," * ").concat(o,";\n    ")+i,c="b".concat(l,", ")+c;return"\n    ivec".concat(e.length," getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(").concat(a[0],", ").concat(a[1],"));\n      int index = resTexRC.x * ").concat(a[1]," + resTexRC.y;\n\n      ").concat(i,"\n\n      int b = index / ").concat(s,";\n      index -= b * ").concat(s,";\n\n      int r = 2 * (index / ").concat(r,");\n      int c = imod(index, ").concat(r,") * 2;\n\n      return ivec").concat(e.length,"(").concat(c,");\n    }\n  ")}(e,t,n)}}(t.logicalShape,o,n.enableShapeUniforms),u=function(e){return"\n    void setOutput(vec4 val) {\n      ".concat(e.output," = val;\n    }\n  ")}(i)):(l=function(e,t,n){switch(e.length){case 0:return"\n    int getOutputCoords() {\n      return 0;\n    }\n  ";case 1:return function(e,t,n){if(1===t[0])return n?"\n      int getOutputCoords() {\n        return int(resultUV.x * float(outTexShape[1]));\n      }\n    ":"\n      int getOutputCoords() {\n        return int(resultUV.x * ".concat(t[1],".0);\n      }\n    ");if(1===t[1])return n?"\n      int getOutputCoords() {\n        return int(resultUV.y * float(outTexShape[0]));\n      }\n    ":"\n      int getOutputCoords() {\n        return int(resultUV.y * ".concat(t[0],".0);\n      }\n    ");if(n)return"\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(outTexShape[0], outTexShape[1]));\n      return resTexRC.x * outTexShape[1] + resTexRC.y;\n    }\n  ";return"\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(".concat(t[0],", ").concat(t[1],"));\n      return resTexRC.x * ").concat(t[1]," + resTexRC.y;\n    }\n  ")}(0,t,n);case 2:return function(e,t,n){if(S.util.arraysEqual(e,t))return n?"\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(outTexShape[0], outTexShape[1]));\n      }\n    ":"\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(".concat(t[0],", ").concat(t[1],"));\n      }\n    ");if(1===e[1])return n?"\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(outTexShape[0], outTexShape[1]));\n        int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    ":"\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(".concat(t[0],", ").concat(t[1],"));\n        int index = resTexRC.x * ").concat(t[1]," + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    ");if(1===e[0])return n?"\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(outTexShape[0], outTexShape[1]));\n        int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n        return ivec2(0, index);\n      }\n    ":"\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(".concat(t[0],", ").concat(t[1],"));\n        int index = resTexRC.x * ").concat(t[1]," + resTexRC.y;\n        return ivec2(0, index);\n      }\n    ");if(n)return"\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(outTexShape[0], outTexShape[1]));\n      int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n      int r = index / outShape[1];\n      int c = index - r * outShape[1];\n      return ivec2(r, c);\n    }\n  ";return"\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(".concat(t[0],", ").concat(t[1],"));\n      int index = resTexRC.x * ").concat(t[1]," + resTexRC.y;\n      int r = index / ").concat(e[1],";\n      int c = index - r * ").concat(e[1],";\n      return ivec2(r, c);\n    }\n  ")}(e,t,n);case 3:return function(e,t,n){if(n){const t=ib(["r","c","d"],e);return"\n  ivec3 getOutputCoords() {\n    ivec2 resTexRC = ivec2(resultUV.yx *\n                           vec2(outTexShape[0], outTexShape[1]));\n    int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n    ".concat(t,"\n    return ivec3(r, c, d);\n  }\n")}const a=ob(["r","c","d"],e);return"\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(".concat(t[0],", ").concat(t[1],"));\n      int index = resTexRC.x * ").concat(t[1]," + resTexRC.y;\n      ").concat(a,"\n      return ivec3(r, c, d);\n    }\n  ")}(e,t,n);case 4:return function(e,t,n){if(n){const t=ib(["r","c","d","d2"],e);return"\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(outTexShape[0], outTexShape[1]));\n      int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n      ".concat(t,"\n      return ivec4(r, c, d, d2);\n    }\n  ")}const a=ob(["r","c","d","d2"],e);return"\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(".concat(t[0],", ").concat(t[1],"));\n      int index = resTexRC.x * ").concat(t[1]," + resTexRC.y;\n      ").concat(a,"\n      return ivec4(r, c, d, d2);\n    }\n  ")}(e,t,n);case 5:return function(e,t){const n=ob(["r","c","d","d2","d3"],e);return"\n    ivec5 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx * vec2(".concat(t[0],",\n                             ").concat(t[1],"));\n\n      int index = resTexRC.x * ").concat(t[1]," + resTexRC.y;\n\n      ").concat(n,"\n\n      ivec5 outShape = ivec5(r, c, d, d2, d3);\n      return outShape;\n    }\n  ")}(e,t);case 6:return function(e,t){const n=ob(["r","c","d","d2","d3","d4"],e);return"\n    ivec6 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(".concat(t[0],", ").concat(t[1],"));\n      int index = resTexRC.x * ").concat(t[1]," + resTexRC.y;\n\n      ").concat(n,"\n\n      ivec6 result = ivec6(r, c, d, d2, d3, d4);\n      return result;\n    }\n  ")}(e,t);default:throw new Error("".concat(e.length,"-D output sampling is not yet supported"))}}(t.logicalShape,o,n.enableShapeUniforms),u=function(e){return"\n    void setOutput(float val) {\n      ".concat(e.output," = vec4(val, 0, 0, 0);\n    }\n  ")}(i)),n.packedInputs&&(d+=bb);return[d,c,u,r,l,s,n.userCode].join("\n")}function pb(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];const n=e.shapeInfo.logicalShape;switch(n.length){case 0:return xb(e,t);case 1:return wb(e,t);case 2:return kb(e,t);case 3:return Sb(e,t);case 4:return Nb(e,t);case 5:return Ib(e);case 6:return Tb(e);default:throw new Error("".concat(n.length,"-D input sampling")+" is not yet supported")}}function fb(e,t){switch(e.shapeInfo.logicalShape.length){case 0:return function(e){const t=e.name,n="get"+t.charAt(0).toUpperCase()+t.slice(1),a=sb();return"\n    vec4 ".concat(n,"() {\n      return ").concat(a.texture2D,"(").concat(t,", halfCR);\n    }\n  ")}(e);case 1:return function(e,t){const n=e.name,a="get"+n.charAt(0).toUpperCase()+n.slice(1),r=e.shapeInfo.texShape,s=sb();if(t)return"\n    vec4 ".concat(a,"(int index) {\n      ivec2 packedTexShape = ivec2(ceil(float(").concat(n,"TexShape[0]) / 2.0), ceil(float(").concat(n,"TexShape[1]) / 2.0));\n      vec2 uv = packedUVfrom1D(\n        packedTexShape[0], packedTexShape[1], index);\n      return ").concat(s.texture2D,"(").concat(n,", uv);\n    }\n  ");const o=[Math.ceil(r[0]/2),Math.ceil(r[1]/2)];return"\n    vec4 ".concat(a,"(int index) {\n      vec2 uv = packedUVfrom1D(\n        ").concat(o[0],", ").concat(o[1],", index);\n      return ").concat(s.texture2D,"(").concat(n,", uv);\n    }\n  ")}(e,t);case 2:return function(e,t){const n=e.shapeInfo.logicalShape,a=e.name,r="get"+a.charAt(0).toUpperCase()+a.slice(1),s=e.shapeInfo.texShape,o=s[0],i=s[1],c=sb();if(null!=s&&S.util.arraysEqual(n,s))return t?"\n      vec4 ".concat(r,"(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(").concat(a,"TexShape[1], ").concat(a,"TexShape[0]);\n\n        return ").concat(c.texture2D,"(").concat(a,", uv);\n      }\n    "):"\n      vec4 ".concat(r,"(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(").concat(i,".0, ").concat(o,".0);\n\n        return ").concat(c.texture2D,"(").concat(a,", uv);\n      }\n    ");if(t)return"\n    vec4 ".concat(r,"(int row, int col) {\n      ivec2 packedTexShape = ivec2(ceil(float(").concat(a,"TexShape[0]) / 2.0), ceil(float(").concat(a,"TexShape[1]) / 2.0));\n      int valuesPerRow = int(ceil(float(").concat(a,"Shape[1]) / 2.0));\n      vec2 uv = packedUVfrom2D(valuesPerRow, packedTexShape[0], packedTexShape[1], row, col);\n      return ").concat(c.texture2D,"(").concat(a,", uv);\n    }\n  ");const l=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)],u=Math.ceil(n[1]/2);return"\n    vec4 ".concat(r,"(int row, int col) {\n      vec2 uv = packedUVfrom2D(").concat(u,", ").concat(l[0],", ").concat(l[1],", row, col);\n      return ").concat(c.texture2D,"(").concat(a,", uv);\n    }\n  ")}(e,t);case 3:return function(e,t){const n=e.shapeInfo.logicalShape,a=e.name,r="get"+a.charAt(0).toUpperCase()+a.slice(1),s=e.shapeInfo.texShape,o=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)];if(1===n[0]){const a=[1,2],s=Fb(e,n.slice(1)),o=["b","row","col"];return"\n        ".concat(fb(s,t),"\n        vec4 ").concat(r,"(int b, int row, int col) {\n          return ").concat(r,"(").concat(Db(o,a),");\n        }\n      ")}const i=sb();if(t)return"\n    vec4 ".concat(r,"(int b, int row, int col) {\n      ivec2 packedTexShape = ivec2(ceil(float(").concat(a,"TexShape[0]) / 2.0), ceil(float(").concat(a,"TexShape[1]) / 2.0));\n      int valuesPerRow = int(ceil(float(").concat(a,"Shape[2]) / 2.0));\n      int texelsInBatch = valuesPerRow * int(ceil(float(").concat(a,"Shape[1]) / 2.0));\n      vec2 uv = packedUVfrom3D(\n        packedTexShape[0], packedTexShape[1], texelsInBatch, valuesPerRow, b, row, col);\n      return ").concat(i.texture2D,"(").concat(a,", uv);\n    }\n  ");const c=o[0],l=o[1],u=Math.ceil(n[2]/2),d=u*Math.ceil(n[1]/2);return"\n    vec4 ".concat(r,"(int b, int row, int col) {\n      vec2 uv = packedUVfrom3D(\n        ").concat(c,", ").concat(l,", ").concat(d,", ").concat(u,", b, row, col);\n      return ").concat(i.texture2D,"(").concat(a,", uv);\n    }\n  ")}(e,t);default:return function(e,t){const n=e.name,a="get"+n.charAt(0).toUpperCase()+n.slice(1),r=sb();if(t)return"\n    vec4 ".concat(a,"(int b2, int b, int row, int col) {\n      int valuesPerRow = int(ceil(float(").concat(n,"Shape[3]) / 2.0));\n      int texelsInBatch = valuesPerRow * int(ceil(float(").concat(n,"Shape[2]) / 2.0));\n      int index = b * texelsInBatch + (row / 2) * valuesPerRow + (col / 2);\n      texelsInBatch *= ").concat(n,"Shape[1];\n      index = b2 * texelsInBatch + index;\n      ivec2 packedTexShape = ivec2(ceil(float(").concat(n,"TexShape[0]) / 2.0), ceil(float(").concat(n,"TexShape[1]) / 2.0));\n      int texR = index / packedTexShape[1];\n      int texC = index - texR * packedTexShape[1];\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(packedTexShape[1], packedTexShape[0]); return ").concat(r.texture2D,"(").concat(n,", uv);\n    }\n  ");const s=e.shapeInfo.logicalShape,o=s.length,i=e.shapeInfo.texShape,c=[Math.ceil(i[0]/2),Math.ceil(i[1]/2)],l=c[0],u=c[1],d=Math.ceil(s[o-1]/2);let h=d*Math.ceil(s[o-2]/2),p="int b, int row, int col",f="b * ".concat(h," + (row / 2) * ").concat(d," + (col / 2)");for(let m=2;m<o-1;m++)p="int b".concat(m,", ")+p,h*=s[o-m-1],f="b".concat(m," * ").concat(h," + ")+f;return"\n    vec4 ".concat(a,"(").concat(p,") {\n      int index = ").concat(f,";\n      int texR = index / ").concat(u,";\n      int texC = index - texR * ").concat(u,";\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(").concat(u,", ").concat(l,");\n      return ").concat(r.texture2D,"(").concat(n,", uv);\n    }\n  ")}(e,t)}}const mb="\nvec2 uvFromFlat(int texNumR, int texNumC, int index) {\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\nvec2 packedUVfrom1D(int texNumR, int texNumC, int index) {\n  int texelIndex = index / 2;\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",gb="\nvec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,\n  int texNumC, int row, int col) {\n  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",yb="\nvec2 packedUVfrom3D(int texNumR, int texNumC,\n    int texelsInBatch, int texelsInLogicalRow, int b,\n    int row, int col) {\n  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",bb="\n  float getChannel(vec4 frag, vec2 innerDims) {\n    vec2 modCoord = mod(innerDims, 2.);\n    return modCoord.x == 0. ?\n      (modCoord.y == 0. ? frag.r : frag.g) :\n      (modCoord.y == 0. ? frag.b : frag.a);\n  }\n  float getChannel(vec4 frag, int dim) {\n    float modCoord = mod(float(dim), 2.);\n    return modCoord == 0. ? frag.r : frag.g;\n  }\n";function vb(e){return"offset".concat(e)}function xb(e,t){const n=e.name,a="get"+n.charAt(0).toUpperCase()+n.slice(1);if(e.shapeInfo.isUniform)return"float ".concat(a,"() {return ").concat(n,";}");const[r,s]=e.shapeInfo.texShape;if(1===r&&1===s)return"\n      float ".concat(a,"() {\n        return sampleTexture(").concat(n,", halfCR);\n      }\n    ");const o=vb(n);if(t)return"\n    float ".concat(a,"() {\n      vec2 uv = uvFromFlat(").concat(n,"TexShape[0], ").concat(n,"TexShape[1], ").concat(o,");\n      return sampleTexture(").concat(n,", uv);\n    }\n  ");const[i,c]=e.shapeInfo.texShape;return"\n    float ".concat(a,"() {\n      vec2 uv = uvFromFlat(").concat(i,", ").concat(c,", ").concat(o,");\n      return sampleTexture(").concat(n,", uv);\n    }\n  ")}function wb(e,t){const n=e.name,a="get"+n.charAt(0).toUpperCase()+n.slice(1);if(e.shapeInfo.isUniform)return"\n      float ".concat(a,"(int index) {\n        ").concat(Cb(e),"\n      }\n    ");const r=e.shapeInfo.texShape,s=r[0],o=r[1];if(1===o&&1===s)return"\n      float ".concat(a,"(int index) {\n        return sampleTexture(").concat(n,", halfCR);\n      }\n    ");const i=vb(n);return 1===o?t?"\n      float ".concat(a,"(int index) {\n        vec2 uv = vec2(0.5, (float(index + ").concat(i,") + 0.5) / float(").concat(n,"TexShape[0]));\n        return sampleTexture(").concat(n,", uv);\n      }\n    "):"\n      float ".concat(a,"(int index) {\n        vec2 uv = vec2(0.5, (float(index + ").concat(i,") + 0.5) / ").concat(s,".0);\n        return sampleTexture(").concat(n,", uv);\n      }\n    "):1===s?t?"\n      float ".concat(a,"(int index) {\n        vec2 uv = vec2((float(index + ").concat(i,") + 0.5) / float(").concat(n,"TexShape[1]), 0.5);\n        return sampleTexture(").concat(n,", uv);\n      }\n    "):"\n      float ".concat(a,"(int index) {\n        vec2 uv = vec2((float(index + ").concat(i,") + 0.5) / ").concat(o,".0, 0.5);\n        return sampleTexture(").concat(n,", uv);\n      }\n    "):t?"\n    float ".concat(a,"(int index) {\n      vec2 uv = uvFromFlat(").concat(n,"TexShape[0], ").concat(n,"TexShape[1], index + ").concat(i,");\n      return sampleTexture(").concat(n,", uv);\n    }\n  "):"\n    float ".concat(a,"(int index) {\n      vec2 uv = uvFromFlat(").concat(s,", ").concat(o,", index + ").concat(i,");\n      return sampleTexture(").concat(n,", uv);\n    }\n  ")}function kb(e,t){const n=e.shapeInfo.logicalShape,a=e.name,r="get"+a.charAt(0).toUpperCase()+a.slice(1),s=e.shapeInfo.texShape;if(null!=s&&S.util.arraysEqual(n,s)){if(t)return"\n      float ".concat(r,"(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(").concat(a,"TexShape[1], ").concat(a,"TexShape[0]);\n        return sampleTexture(").concat(a,", uv);\n      }\n    ");const e=s[0],n=s[1];return"\n    float ".concat(r,"(int row, int col) {\n      vec2 uv = (vec2(col, row) + halfCR) / vec2(").concat(n,".0, ").concat(e,".0);\n      return sampleTexture(").concat(a,", uv);\n    }\n  ")}const{newShape:o,keptDims:i}=S.util.squeezeShape(n),c=o;if(c.length<n.length){const n=Fb(e,c),a=["row","col"];return"\n      ".concat(pb(n,t),"\n      float ").concat(r,"(int row, int col) {\n        return ").concat(r,"(").concat(Db(a,i),");\n      }\n    ")}if(e.shapeInfo.isUniform)return"\n      float ".concat(r,"(int row, int col) {\n        int index = round(dot(vec2(row, col), vec2(").concat(n[1],", 1)));\n        ").concat(Cb(e),"\n      }\n    ");const l=s[0],u=s[1],d=vb(a);return 1===u?t?"\n      float ".concat(r,"(int row, int col) {\n        float index = dot(vec3(row, col, ").concat(d,"), vec3(").concat(a,"Shape[1], 1, 1));\n        vec2 uv = vec2(0.5, (index + 0.5) / float(").concat(a,"TexShape[0]));\n        return sampleTexture(").concat(a,", uv);\n      }\n    "):"\n    float ".concat(r,"(int row, int col) {\n      float index = dot(vec3(row, col, ").concat(d,"), vec3(").concat(n[1],", 1, 1));\n      vec2 uv = vec2(0.5, (index + 0.5) / ").concat(l,".0);\n      return sampleTexture(").concat(a,", uv);\n    }\n  "):1===l?t?"\n      float ".concat(r,"(int row, int col) {\n        float index = dot(vec3(row, col, ").concat(d,"), vec3(").concat(a,"Shape[1], 1, 1));\n        vec2 uv = vec2((index + 0.5) / float(").concat(a,"TexShape[1]), 0.5);\n        return sampleTexture(").concat(a,", uv);\n      }\n    "):"\n    float ".concat(r,"(int row, int col) {\n      float index = dot(vec3(row, col, ").concat(d,"), vec3(").concat(n[1],", 1, 1));\n      vec2 uv = vec2((index + 0.5) / ").concat(u,".0, 0.5);\n      return sampleTexture(").concat(a,", uv);\n    }\n  "):t?"\n      float ".concat(r,"(int row, int col) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ").concat(a,"Shape[1] + col + ").concat(d,";\n        vec2 uv = uvFromFlat(").concat(a,"TexShape[0], ").concat(a,"TexShape[1], index);\n        return sampleTexture(").concat(a,", uv);\n      }\n    "):"\n  float ".concat(r,"(int row, int col) {\n    // Explicitly use integer operations as dot() only works on floats.\n    int index = row * ").concat(n[1]," + col + ").concat(d,";\n    vec2 uv = uvFromFlat(").concat(l,", ").concat(u,", index);\n    return sampleTexture(").concat(a,", uv);\n  }\n")}function Sb(e,t){const n=e.shapeInfo.logicalShape,a=e.name,r="get"+a.charAt(0).toUpperCase()+a.slice(1),s=n[1]*n[2],o=n[2],{newShape:i,keptDims:c}=S.util.squeezeShape(n),l=i;if(l.length<n.length){const n=Fb(e,l),a=["row","col","depth"];return"\n        ".concat(pb(n,t),"\n        float ").concat(r,"(int row, int col, int depth) {\n          return ").concat(r,"(").concat(Db(a,c),");\n        }\n      ")}if(e.shapeInfo.isUniform)return"\n      float ".concat(r,"(int row, int col, int depth) {\n        int index = round(dot(vec3(row, col, depth),\n                          vec3(").concat(s,", ").concat(o,", 1)));\n        ").concat(Cb(e),"\n      }\n    ");const u=e.shapeInfo.texShape,d=u[0],h=u[1],p=e.shapeInfo.flatOffset;if(h===s&&null==p)return t?"\n      float ".concat(r,"(int row, int col, int depth) {\n        int stride1 = ").concat(a,"Shape[2];\n        float texR = float(row);\n        float texC = dot(vec2(col, depth), vec2(stride1, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(").concat(a,"TexShape[1], ").concat(a,"TexShape[0]);\n        return sampleTexture(").concat(a,", uv);\n      }\n    "):"\n        float ".concat(r,"(int row, int col, int depth) {\n          float texR = float(row);\n          float texC = dot(vec2(col, depth), vec2(").concat(o,", 1));\n          vec2 uv = (vec2(texC, texR) + halfCR) /\n                     vec2(").concat(h,".0, ").concat(d,".0);\n          return sampleTexture(").concat(a,", uv);\n        }\n      ");if(h===o&&null==p)return t?"\n      float ".concat(r,"(int row, int col, int depth) {\n        float texR = dot(vec2(row, col), vec2(").concat(a,"Shape[1], 1));\n        float texC = float(depth);\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(").concat(a,"TexShape[1], ").concat(a,"TexShape[0]);\n        return sampleTexture(").concat(a,", uv);\n      }\n    "):"\n    float ".concat(r,"(int row, int col, int depth) {\n      float texR = dot(vec2(row, col), vec2(").concat(n[1],", 1));\n      float texC = float(depth);\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(").concat(h,".0, ").concat(d,".0);\n      return sampleTexture(").concat(a,", uv);\n    }\n  ");const f=vb(a);return t?"\n    float ".concat(r,"(int row, int col, int depth) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int stride0 = ").concat(a,"Shape[1] * ").concat(a,"Shape[2];\n      int stride1 = ").concat(a,"Shape[2];\n      int index = row * stride0 + col * stride1 + depth + ").concat(f,";\n      vec2 uv = uvFromFlat(").concat(a,"TexShape[0], ").concat(a,"TexShape[1], index);\n      return sampleTexture(").concat(a,", uv);\n    }\n    "):"\n      float ".concat(r,"(int row, int col, int depth) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ").concat(s," + col * ").concat(o," + depth + ").concat(f,";\n        vec2 uv = uvFromFlat(").concat(d,", ").concat(h,", index);\n        return sampleTexture(").concat(a,", uv);\n      }\n  ")}function Nb(e,t){const n=e.shapeInfo.logicalShape,a=e.name,r="get"+a.charAt(0).toUpperCase()+a.slice(1),s=n[3],o=n[2]*s,i=n[1]*o,{newShape:c,keptDims:l}=S.util.squeezeShape(n);if(c.length<n.length){const n=Fb(e,c),a=["row","col","depth","depth2"];return"\n      ".concat(pb(n,t),"\n      float ").concat(r,"(int row, int col, int depth, int depth2) {\n        return ").concat(r,"(").concat(Db(a,l),");\n      }\n    ")}if(e.shapeInfo.isUniform)return"\n      float ".concat(r,"(int row, int col, int depth, int depth2) {\n        int index = round(dot(vec4(row, col, depth, depth2),\n                          vec4(").concat(i,", ").concat(o,", ").concat(s,", 1)));\n        ").concat(Cb(e),"\n      }\n    ");const u=e.shapeInfo.flatOffset,d=e.shapeInfo.texShape,h=d[0],p=d[1],f="int stride2 = ".concat(a,"Shape[3];"),m="int stride1 = ".concat(a,"Shape[2] * stride2;"),g="int stride0 = ".concat(a,"Shape[1] * stride1;");if(p===i&&null==u)return t?"\n      float ".concat(r,"(int row, int col, int depth, int depth2) {\n        ").concat(f,"\n        ").concat(m,"\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(stride1, stride2, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(").concat(a,"TexShape[1], ").concat(a,"TexShape[0]);\n        return sampleTexture(").concat(a,", uv);\n      }\n    "):"\n      float ".concat(r,"(int row, int col, int depth, int depth2) {\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(").concat(o,", ").concat(s,", 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(").concat(p,".0, ").concat(h,".0);\n        return sampleTexture(").concat(a,", uv);\n      }\n    ");if(p===s&&null==u)return t?"\n      float ".concat(r,"(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(").concat(a,"Shape[1] * ").concat(a,"Shape[2], ").concat(a,"Shape[2], 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(").concat(a,"TexShape[1], ").concat(a,"TexShape[0]);\n        return sampleTexture(").concat(a,", uv);\n      }\n    "):"\n      float ".concat(r,"(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(").concat(n[1]*n[2],", ").concat(n[2],", 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(").concat(p,".0, ").concat(h,".0);\n        return sampleTexture(").concat(a,", uv);\n      }\n    ");const y=vb(a);return t?"\n    float ".concat(r,"(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      ").concat(f,"\n      ").concat(m,"\n      ").concat(g,"\n      int index = row * stride0 + col * stride1 +\n          depth * stride2 + depth2;\n      vec2 uv = uvFromFlat(").concat(a,"TexShape[0], ").concat(a,"TexShape[1], index + ").concat(y,");\n      return sampleTexture(").concat(a,", uv);\n    }\n  "):"\n    float ".concat(r,"(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ").concat(i," + col * ").concat(o," +\n          depth * ").concat(s," + depth2;\n      vec2 uv = uvFromFlat(").concat(h,", ").concat(p,", index + ").concat(y,");\n      return sampleTexture(").concat(a,", uv);\n    }\n  ")}function Ib(e){const t=e.shapeInfo.logicalShape,n=e.name,a="get"+n.charAt(0).toUpperCase()+n.slice(1),r=t[4],s=t[3]*r,o=t[2]*s,i=t[1]*o,{newShape:c,keptDims:l}=S.util.squeezeShape(t);if(c.length<t.length){const t=Fb(e,c),n=["row","col","depth","depth2","depth3"];return"\n      ".concat(pb(t),"\n      float ").concat(a,"(int row, int col, int depth, int depth2, int depth3) {\n        return ").concat(a,"(").concat(Db(n,l),");\n      }\n    ")}if(e.shapeInfo.isUniform)return"\n      float ".concat(a,"(int row, int col, int depth, int depth2, int depth3) {\n        float index = dot(\n          vec4(row, col, depth, depth2),\n          vec4(").concat(i,", ").concat(o,", ").concat(s,", ").concat(r,")) +\n          depth3;\n        ").concat(Cb(e),"\n      }\n    ");const u=e.shapeInfo.flatOffset,d=e.shapeInfo.texShape,h=d[0],p=d[1];if(p===i&&null==u)return"\n      float ".concat(a,"(int row, int col, int depth, int depth2, int depth3) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n                         vec4(").concat(o,", ").concat(s,", ").concat(r,", 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(").concat(p,".0, ").concat(h,".0);\n        return sampleTexture(").concat(n,", uv);\n      }\n    ");if(p===r&&null==u)return"\n      float ".concat(a,"(int row, int col, int depth, int depth2, int depth3) {\n        float texR = dot(\n          vec4(row, col, depth, depth2),\n          vec4(").concat(t[1]*t[2]*t[3],",\n               ").concat(t[2]*t[3],", ").concat(t[3],", 1));\n        int texC = depth3;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(").concat(p,".0, ").concat(h,".0);\n        return sampleTexture(").concat(n,", uv);\n      }\n    ");const f=vb(n);return"\n    float ".concat(a,"(int row, int col, int depth, int depth2, int depth3) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ").concat(i," + col * ").concat(o," + depth * ").concat(s," +\n          depth2 * ").concat(r," + depth3 + ").concat(f,";\n      vec2 uv = uvFromFlat(").concat(h,", ").concat(p,", index);\n      return sampleTexture(").concat(n,", uv);\n    }\n  ")}function Tb(e){const t=e.shapeInfo.logicalShape,n=e.name,a="get"+n.charAt(0).toUpperCase()+n.slice(1),{newShape:r,keptDims:s}=S.util.squeezeShape(t);if(r.length<t.length){const t=Fb(e,r),n=["row","col","depth","depth2","depth3","depth4"];return"\n      ".concat(pb(t),"\n      float ").concat(a,"(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        return ").concat(a,"(").concat(Db(n,s),");\n      }\n    ")}const o=t[5],i=t[4]*o,c=t[3]*i,l=t[2]*c,u=t[1]*l;if(e.shapeInfo.isUniform)return"\n      float ".concat(a,"(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n        int index = round(dot(\n          vec4(row, col, depth, depth2),\n          vec4(").concat(u,", ").concat(l,", ").concat(c,", ").concat(i,")) +\n          dot(\n            vec2(depth3, depth4),\n            vec2(").concat(o,", 1)));\n        ").concat(Cb(e),"\n      }\n    ");const d=e.shapeInfo.flatOffset,h=e.shapeInfo.texShape,p=h[0],f=h[1];if(f===u&&null==d)return"\n      float ".concat(a,"(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n          vec4(").concat(l,", ").concat(c,", ").concat(i,", ").concat(o,")) +\n               float(depth4);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(").concat(f,".0, ").concat(p,".0);\n        return sampleTexture(").concat(n,", uv);\n      }\n    ");if(f===o&&null==d)return"\n      float ".concat(a,"(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        float texR = dot(vec4(row, col, depth, depth2),\n          vec4(").concat(t[1]*t[2]*t[3]*t[4],",\n               ").concat(t[2]*t[3]*t[4],",\n               ").concat(t[3]*t[4],",\n               ").concat(t[4],")) + float(depth3);\n        int texC = depth4;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(").concat(f,".0, ").concat(p,".0);\n        return sampleTexture(").concat(n,", uv);\n      }\n    ");const m=vb(n);return"\n    float ".concat(a,"(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ").concat(u," + col * ").concat(l," + depth * ").concat(c," +\n          depth2 * ").concat(i," + depth3 * ").concat(o," + depth4 + ").concat(m,";\n      vec2 uv = uvFromFlat(").concat(p,", ").concat(f,", index);\n      return sampleTexture(").concat(n,", uv);\n    }\n  ")}function Cb(e){const t=e.name,n=S.util.sizeFromShape(e.shapeInfo.logicalShape);return n<2?"return ".concat(t,";"):"\n    for (int i = 0; i < ".concat(n,"; i++) {\n      if (i == index) {\n        return ").concat(t,"[i];\n      }\n    }\n  ")}function Eb(e,t){const n=e.name,a=n.charAt(0).toUpperCase()+n.slice(1),r="get"+a+"AtOutCoords",s=e.shapeInfo.logicalShape.length,o=t.logicalShape.length,i=db(e.shapeInfo.logicalShape,t.logicalShape),c=Ab(o),l=o-s;let u;const d=["x","y","z","w","u","v"];u=0===s?"":o<2&&i.length>=1?"coords = 0;":i.map((e=>"coords.".concat(d[e+l]," = 0;"))).join("\n");let h="";h=o<2&&s>0?"coords":e.shapeInfo.logicalShape.map(((e,t)=>"coords.".concat(d[t+l]))).join(", ");let p="return outputValue;";const f=1===S.util.sizeFromShape(e.shapeInfo.logicalShape),m=1===S.util.sizeFromShape(t.logicalShape);if(1!==s||f||m){if(f&&!m)p=1===o?"\n        return vec4(outputValue.x, outputValue.x, 0., 0.);\n      ":"\n        return vec4(outputValue.x);\n      ";else if(i.length){const e=s-2,t=s-1;i.indexOf(e)>-1&&i.indexOf(t)>-1?p="return vec4(outputValue.x);":i.indexOf(e)>-1?p="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":i.indexOf(t)>-1&&(p="return vec4(outputValue.xx, outputValue.zz);")}}else p="\n      return vec4(outputValue.xy, outputValue.xy);\n    ";return"\n    vec4 ".concat(r,"() {\n      ").concat(c," coords = getOutputCoords();\n      ").concat(u,"\n      vec4 outputValue = get").concat(a,"(").concat(h,");\n      ").concat(p,"\n    }\n  ")}function _b(e,t){const n=e.name,a=n.charAt(0).toUpperCase()+n.slice(1),r="get"+a+"AtOutCoords",s=t.texShape,o=e.shapeInfo.texShape,i=e.shapeInfo.logicalShape.length,c=t.logicalShape.length;if(!e.shapeInfo.isUniform&&i===c&&null==e.shapeInfo.flatOffset&&S.util.arraysEqual(o,s))return"\n      float ".concat(r,"() {\n        return sampleTexture(").concat(n,", resultUV);\n      }\n    ");const l=Ab(c),u=db(e.shapeInfo.logicalShape,t.logicalShape),d=c-i;let h;const p=["x","y","z","w","u","v"];h=0===i?"":c<2&&u.length>=1?"coords = 0;":u.map((e=>"coords.".concat(p[e+d]," = 0;"))).join("\n");let f="";return f=c<2&&i>0?"coords":e.shapeInfo.logicalShape.map(((e,t)=>"coords.".concat(p[t+d]))).join(", "),"\n    float ".concat(r,"() {\n      ").concat(l," coords = getOutputCoords();\n      ").concat(h,"\n      return get").concat(a,"(").concat(f,");\n    }\n  ")}function Ab(e){if(e<=1)return"int";if(2===e)return"ivec2";if(3===e)return"ivec3";if(4===e)return"ivec4";if(5===e)return"ivec5";if(6===e)return"ivec6";throw Error("GPU for rank ".concat(e," is not yet supported"))}function Rb(e,t,n){const{newShape:a,keptDims:r}=S.util.squeezeShape(t),s=t.length,o=e&&3===s&&1===t[0],i=o?t.slice(1):a,c=!e&&s>1&&!S.util.arraysEqual(t,n)&&a.length<s||o;return{useSqueezeShape:c,uniformShape:c?i:t,keptDims:r}}function Fb(e,t){const n=JSON.parse(JSON.stringify(e));return n.shapeInfo.logicalShape=t,n}function Db(e,t){return t.map((t=>e[t])).join(", ")}function Ob(e,t,n,a){const r=n.map(((e,n)=>{const a={logicalShape:e.shape,texShape:e.isUniform?null:e.texData.texShape,isUniform:e.isUniform,isPacked:!e.isUniform&&e.texData.isPacked,flatOffset:null};return null!=e.texData&&null!=e.texData.slice&&e.texData.slice.flatOffset>0&&(a.flatOffset=e.texData.slice.flatOffset),{name:t.variableNames[n],shapeInfo:a}})),s=r.map((e=>e.shapeInfo)),o={logicalShape:a.shape,texShape:a.texData.texShape,isUniform:!1,isPacked:a.texData.isPacked,flatOffset:null},i=hb(r,o,t),c=function(e,t){const n=Hy(e,(()=>e.createShader(e.FRAGMENT_SHADER)),"Unable to create fragment WebGLShader.");if(Dy(e,(()=>e.shaderSource(n,t))),Dy(e,(()=>e.compileShader(n))),(0,S.env)().get("ENGINE_COMPILE_ONLY"))return n;if(!1===e.getShaderParameter(n,e.COMPILE_STATUS))throw Ly(t,e.getShaderInfoLog(n)),new Error("Failed to compile fragment shader.");return n}(e.gl,i),l=e.createProgram(c);return(0,S.env)().get("ENGINE_COMPILE_ONLY")?{program:t,fragmentShader:c,source:i,webGLProgram:l,inShapeInfos:s,outShapeInfo:o,variablesLocations:null,customUniformLocations:null,infLoc:null,nanLoc:null,outShapeLocation:null,outShapeStridesLocation:null,outTexShapeLocation:null}:(e.buildVao(l),Object.assign({program:t,fragmentShader:c,source:i,webGLProgram:l,inShapeInfos:s,outShapeInfo:o},Mb(e,t,l)))}function Mb(e,t,n){const a=[],r=[];let s,o,i,c=null,l=null;l=e.getUniformLocation(n,"NAN",!1),1===(0,S.env)().getNumber("WEBGL_VERSION")&&(c=e.getUniformLocation(n,"INFINITY",!1));const u=!1;for(const d of t.variableNames){const r={name:d,uniform:e.getUniformLocation(n,d,u),offset:e.getUniformLocation(n,"offset".concat(d),u)};t.enableShapeUniforms&&(r.shape=e.getUniformLocation(n,"".concat(d,"Shape"),u),r.texShape=e.getUniformLocation(n,"".concat(d,"TexShape"),u)),a.push(r)}if(t.enableShapeUniforms&&(s=e.getUniformLocation(n,"outShape",u),i=e.getUniformLocation(n,"outShapeStrides",u),o=e.getUniformLocation(n,"outTexShape",u)),t.customUniforms)for(const d of t.customUniforms)r.push(e.getUniformLocation(n,d.name,u));return{variablesLocations:a,customUniformLocations:r,infLoc:c,nanLoc:l,outShapeLocation:s,outShapeStridesLocation:i,outTexShapeLocation:o}}function zb(e,t){if(e.length!==t.length)throw Error("Binary was compiled with ".concat(e.length," inputs, but ")+"was executed with ".concat(t.length," inputs"));e.forEach(((e,n)=>{const a=e.logicalShape,r=t[n],s=r.shape;if(!S.util.arraysEqual(a,s))throw Error("Binary was compiled with different shapes than "+"the current args. Shapes ".concat(a," and ").concat(s," must match"));if(e.isUniform&&r.isUniform)return;const o=e.texShape,i=r.isUniform?null:r.texData.texShape;if(!S.util.arraysEqual(o,i))throw Error("Binary was compiled with different texture shapes than the"+" current args. Shape ".concat(o," and ").concat(i," must match"))}))}function Lb(e){return(0,S.env)().getBool("WEBGL_USE_SHAPES_UNIFORMS")&&e<=4}class Bb{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=Ty.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const t=sb();this.outputShape=e,this.enableShapeUniforms=Lb(this.outputShape.length),this.userCode="\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ".concat(this.enableShapeUniforms?ib(["r","c","d"],e):ob(["r","c","d"],e),"\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));\n        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getA(rc.x, rc.y, rc.z);\n        }\n\n        ").concat(t.output," = result;\n      }\n    ")}}class Pb{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=Ty.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const t=sb();this.outputShape=e,this.enableShapeUniforms=Lb(this.outputShape.length),this.userCode="\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ".concat(this.enableShapeUniforms?ib(["r","c","d"],e):ob(["r","c","d"],e),"\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));\n        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));\n        }\n\n        ").concat(t.output," = result;\n      }\n    ")}}class Vb{constructor(e){this.variableNames=["A"],this.outTexUsage=Cy.DOWNLOAD;const t=sb();this.outputShape=e,this.userCode="\n      ".concat(ub,"\n\n      void main() {\n        float x = getAAtOutCoords();\n        ").concat(t.output," = encode_float(x);\n      }\n    ")}}class Wb{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=Cy.DOWNLOAD;const t=sb();this.outputShape=e,this.userCode="\n      ".concat(ub,"\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));\n        ").concat(t.output," = encode_float(x);\n      }\n    ")}}const Ub={R:0,G:1,B:2,A:3};class Gb{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"RGBA";this.variableNames=["A"],this.customUniforms=[{name:"texShape",type:"ivec2"}];const a=sb();this.outputShape=e,this.enableShapeUniforms=Lb(this.outputShape.length);let r="result";t&&(r="floor(result * 255. + 0.5)");let s="";for(let o=0;o<n.length;o++){const e=n[o];s+="\n          if(offset == ".concat(o,") {\n            result = values[").concat(Ub[e],"];\n          }")}this.userCode="\n      ".concat(this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":lb(e),"\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int flatIndex = getFlatIndex(coords);\n        float result = 0.;\n        int offset = imod(flatIndex, ").concat(n.length,");\n\n        flatIndex = idiv(flatIndex, ").concat(n.length,", 1.);\n\n        int r = flatIndex / texShape[1];\n        if (r < texShape[0]) {\n          int c = imod(flatIndex, texShape[1]);\n          vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);\n          vec4 values = ").concat(a.texture2D,"(A, uv);\n          ").concat(s,"\n        }\n        ").concat(a.output," = vec4(").concat(r,", 0., 0., 0.);\n      }\n    ")}}class Hb{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.customUniforms=[{name:"texShape",type:"ivec2"}];const n=sb();this.outputShape=e,this.enableShapeUniforms=Lb(this.outputShape.length);let a="",r="result";t&&(r="floor(result * 255. + 0.5)");for(let s=0;s<=1;s++)for(let t=0;t<=1;t++){const r=2*s+t;a+="\n          localCoords = coords;\n          if(localCoords[2] + ".concat(t," < ").concat(this.enableShapeUniforms?"outShape[2]":"".concat(e[2]),") {\n          localCoords[2] += ").concat(t,";\n          if (localCoords[1] + ").concat(s," < ").concat(this.enableShapeUniforms?"outShape[1]":"".concat(e[1]),") {\n            localCoords[1] += ").concat(s,";\n\n            flatIndex = getFlatIndex(localCoords);\n            offset = imod(flatIndex, 4);\n\n            flatIndex = idiv(flatIndex, 4, 1.);\n\n            int r = flatIndex / texShape[1];\n            int c = imod(flatIndex, texShape[1]);\n            vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);\n            values = ").concat(n.texture2D,"(A, uv);\n\n            if (offset == 0) {\n              result[").concat(r,"] = values[0];\n            } else if (offset == 1) {\n              result[").concat(r,"] = values[1];\n            } else if (offset == 2) {\n              result[").concat(r,"] = values[2];\n            } else {\n              result[").concat(r,"] = values[3];\n            }\n          }\n        }\n        ")}this.userCode="\n        ".concat(this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":lb(e),"\n\n        void main() {\n          ivec3 coords = getOutputCoords();\n\n          vec4 result = vec4(0.);\n          int flatIndex, r, c, offset;\n          ivec3 localCoords;\n          vec2 uv;\n          vec4 values;\n\n          ").concat(a,"\n\n          ").concat(n.output," = ").concat(r,";\n        }\n    ")}}function jb(e){const t=sb();return function(e,t){const n=Hy(e,(()=>e.createShader(e.VERTEX_SHADER)),"Unable to create vertex WebGLShader.");if(Dy(e,(()=>e.shaderSource(n,t))),Dy(e,(()=>e.compileShader(n))),!1===e.getShaderParameter(n,e.COMPILE_STATUS))throw console.log(e.getShaderInfoLog(n)),new Error("Failed to compile vertex shader.");return n}(e,"".concat(t.version,"\n    precision highp float;\n    ").concat(t.attribute," vec3 clipSpacePos;\n    ").concat(t.attribute," vec2 uv;\n    ").concat(t.varyingVs," vec2 resultUV;\n\n    void main() {\n      gl_Position = vec4(clipSpacePos, 1);\n      resultUV = uv;\n    }"))}function qb(e){return function(e,t){const n=Hy(e,(()=>e.createBuffer()),"Unable to create WebGLBuffer");return Dy(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,n))),Dy(e,(()=>e.bufferData(e.ARRAY_BUFFER,t,e.STATIC_DRAW))),n}(e,new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]))}function Xb(e){return function(e,t){const n=Hy(e,(()=>e.createBuffer()),"Unable to create WebGLBuffer");return Dy(e,(()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,n))),Dy(e,(()=>e.bufferData(e.ELEMENT_ARRAY_BUFFER,t,e.STATIC_DRAW))),n}(e,new Uint16Array([0,1,2,2,1,3]))}function Kb(e,t,n,a,r,s){!function(e,t){const n=(0,S.env)().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(e<=0||t<=0){const n="[".concat(e,"x").concat(t,"]");throw new Error("Requested texture size "+n+" is invalid.")}if(e>n||t>n){const a="[".concat(e,"x").concat(t,"]"),r="[".concat(n,"x").concat(n,"]");throw new Error("Requested texture size "+a+" greater than WebGL maximum on this browser / GPU "+r+".")}}(t,n);const o=function(e){return Hy(e,(()=>e.createTexture()),"Unable to create WebGLTexture.")}(e),i=e.TEXTURE_2D;return Dy(e,(()=>e.bindTexture(i,o))),Dy(e,(()=>e.texParameteri(i,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE))),Dy(e,(()=>e.texParameteri(i,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE))),Dy(e,(()=>e.texParameteri(i,e.TEXTURE_MIN_FILTER,e.NEAREST))),Dy(e,(()=>e.texParameteri(i,e.TEXTURE_MAG_FILTER,e.NEAREST))),1===(0,S.env)().getNumber("WEBGL_VERSION")?Dy(e,(()=>e.texImage2D(i,0,a,t,n,0,r,s,null))):Dy(e,(()=>e.texStorage2D(i,1,a,t,n))),Dy(e,(()=>e.bindTexture(e.TEXTURE_2D,null))),{texture:o,texShape:[n,t]}}function Qb(e){return e.internalFormatFloat}function Yb(e){return e.internalFormatHalfFloat}function Zb(e){return e.downloadTextureFormat}function Jb(e){return e.internalFormatPackedFloat}function $b(e){return e.internalFormatPackedHalfFloat}function ev(e,t,n,a,r,s,o,i){const c=e,l=new Float32Array(function(e,t){const[n,a]=Ry(e,t);return n*a*4}(s,o));return c.bindBuffer(c.PIXEL_PACK_BUFFER,t),c.getBufferSubData(c.PIXEL_PACK_BUFFER,0,l),c.bindBuffer(c.PIXEL_PACK_BUFFER,null),l}class tv{constructor(e){this.outputTexture=null,this.program=null,this.disposed=!1,this.itemsToPoll=[];const t=(0,S.env)().getNumber("WEBGL_VERSION");if(null!=e?(this.gl=e,function(e,t){Sy[e]=t}(t,e)):this.gl=Iy(t),e=this.gl,2===(0,S.env)().getNumber("WEBGL_VERSION")){const t=e;this.createVertexArray=()=>Dy(t,(()=>t.createVertexArray())),this.bindVertexArray=e=>Dy(t,(()=>t.bindVertexArray(e))),this.deleteVertexArray=e=>Dy(t,(()=>t.deleteVertexArray(e))),this.getVertexArray=()=>Dy(t,(()=>t.getParameter(t.VERTEX_ARRAY_BINDING)))}else if(null!=e){const t=e.getExtension("OES_vertex_array_object");if(null==t)throw new Error("All WebGL1 implementations are expected to offer OES_vertex_array_object.");this.createVertexArray=()=>Dy(e,(()=>t.createVertexArrayOES())),this.bindVertexArray=n=>Dy(e,(()=>t.bindVertexArrayOES(n))),this.deleteVertexArray=n=>Dy(e,(()=>t.deleteVertexArrayOES(n))),this.getVertexArray=()=>Dy(e,(()=>e.getParameter(t.VERTEX_ARRAY_BINDING_OES)))}let n="WEBGL_color_buffer_float";const a="EXT_color_buffer_half_float";if(this.parallelCompilationExtension=this.gl.getExtension("KHR_parallel_shader_compile"),1===(0,S.env)().getNumber("WEBGL_VERSION")){const e="OES_texture_float",t="OES_texture_half_float";if(this.textureFloatExtension=My(this.gl,e),$y(this.gl,t))this.textureHalfFloatExtension=My(this.gl,t);else if((0,S.env)().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(n),$y(this.gl,a))this.colorBufferHalfFloatExtension=My(this.gl,a);else if((0,S.env)().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(n="EXT_color_buffer_float",$y(this.gl,n))this.colorBufferFloatExtension=this.gl.getExtension(n);else{if(!$y(this.gl,a))throw new Error("GL context does not support color renderable floats");this.colorBufferHalfFloatExtension=this.gl.getExtension(a)}this.vertexBuffer=qb(this.gl),this.indexBuffer=Xb(this.gl),this.framebuffer=function(e){return Hy(e,(()=>e.createFramebuffer()),"Unable to create WebGLFramebuffer.")}(this.gl),this.textureConfig=Fy(this.gl,this.textureHalfFloatExtension)}get debug(){return(0,S.env)().getBool("DEBUG")}dispose(){if(this.disposed)return;null!=this.program&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),null!=this.outputTexture&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");const e=this.gl;Dy(e,(()=>e.finish())),Dy(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,null))),Dy(e,(()=>e.deleteFramebuffer(this.framebuffer))),Dy(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,null))),Dy(e,(()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,null))),Dy(e,(()=>e.deleteBuffer(this.indexBuffer))),this.disposed=!0}createFloat32MatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,a){const[r,s]=_y(t,n);return Kb(e,r,s,Qb(a),a.textureFormatFloat,e.FLOAT)}(this.gl,e,t,this.textureConfig)}createFloat16MatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,a){const[r,s]=_y(t,n);return Kb(e,r,s,Yb(a),a.textureFormatFloat,a.textureTypeHalfFloat)}(this.gl,e,t,this.textureConfig)}createUnsignedBytesMatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,a){const[r,s]=_y(t,n);return Kb(e,r,s,Zb(a),e.RGBA,e.UNSIGNED_BYTE)}(this.gl,e,t,this.textureConfig)}uploadPixelDataToTexture(e,t){this.throwIfDisposed(),function(e,t,n){Dy(e,(()=>e.bindTexture(e.TEXTURE_2D,t))),n.data instanceof Uint8Array?2===(0,S.env)().getNumber("WEBGL_VERSION")?Dy(e,(()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,n.width,n.height,e.RGBA,e.UNSIGNED_BYTE,n.data))):Dy(e,(()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,n.width,n.height,0,e.RGBA,e.UNSIGNED_BYTE,n.data))):2===(0,S.env)().getNumber("WEBGL_VERSION")?Dy(e,(()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,e.RGBA,e.UNSIGNED_BYTE,n))):Dy(e,(()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,e.RGBA,e.UNSIGNED_BYTE,n))),Dy(e,(()=>e.bindTexture(e.TEXTURE_2D,null)))}(this.gl,e,t)}uploadDenseMatrixToTexture(e,t,n,a){this.throwIfDisposed(),function(e,t,n,a,r,s){let o,i,c;Dy(e,(()=>e.bindTexture(e.TEXTURE_2D,t))),r instanceof Uint8Array?(o=new Uint8Array(n*a*4),i=e.UNSIGNED_BYTE,c=e.RGBA):(o=new Float32Array(n*a*4),i=e.FLOAT,c=s.internalFormatPackedFloat),o.set(r),2===(0,S.env)().getNumber("WEBGL_VERSION")?Dy(e,(()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,n,a,e.RGBA,i,o))):Dy(e,(()=>e.texImage2D(e.TEXTURE_2D,0,c,n,a,0,e.RGBA,i,o))),Dy(e,(()=>e.bindTexture(e.TEXTURE_2D,null)))}(this.gl,e,t,n,a,this.textureConfig)}createFloat16PackedMatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,a){const[r,s]=Ry(t,n);return Kb(e,r,s,$b(a),e.RGBA,a.textureTypeHalfFloat)}(this.gl,e,t,this.textureConfig)}createPackedMatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,a){const[r,s]=Ry(t,n);return Kb(e,r,s,Jb(a),e.RGBA,e.FLOAT)}(this.gl,e,t,this.textureConfig)}deleteMatrixTexture(e){this.throwIfDisposed(),this.outputTexture===e&&(Uy(this.gl,this.framebuffer),this.outputTexture=null),Dy(this.gl,(()=>this.gl.deleteTexture(e)))}downloadByteEncodedFloatMatrixFromOutputTexture(e,t,n){return this.downloadMatrixDriver(e,(()=>function(e,t,n,a){const[r,s]=_y(t,n),o=new Uint8Array(t*n*4);return Dy(e,(()=>e.readPixels(0,0,r,s,a.downloadTextureFormat,e.UNSIGNED_BYTE,o))),new Float32Array(o.buffer)}(this.gl,t,n,this.textureConfig)))}downloadPackedMatrixFromBuffer(e,t,n,a,r,s){return ev(this.gl,e,0,0,0,r,s,this.textureConfig)}downloadFloat32MatrixFromBuffer(e,t){return function(e,t,n){const a=e,r=new Float32Array(n);return a.bindBuffer(a.PIXEL_PACK_BUFFER,t),a.getBufferSubData(a.PIXEL_PACK_BUFFER,0,r),a.bindBuffer(a.PIXEL_PACK_BUFFER,null),r}(this.gl,e,t)}createBufferFromTexture(e,t,n){this.bindTextureToFrameBuffer(e);const a=function(e,t,n,a){const r=e.createBuffer();Dy(e,(()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,r)));const s=16*t*n;return Dy(e,(()=>e.bufferData(e.PIXEL_PACK_BUFFER,s,e.STREAM_READ))),Dy(e,(()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,0))),Dy(e,(()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,null))),r}(this.gl,t,n,this.textureConfig);return this.unbindTextureToFrameBuffer(),a}createAndWaitForFence(){const e=this.createFence(this.gl);return this.pollFence(e)}createFence(e){let t,n;if((0,S.env)().getBool("WEBGL_FENCE_API_ENABLED")){const a=e,r=a.fenceSync(a.SYNC_GPU_COMMANDS_COMPLETE,0);e.flush(),n=()=>{const e=a.clientWaitSync(r,0,0);return e===a.ALREADY_SIGNALED||e===a.CONDITION_SATISFIED},t=r}else(0,S.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(t=this.beginQuery(),this.endQuery(),n=()=>this.isQueryAvailable(t,(0,S.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):n=()=>!0;return{query:t,isFencePassed:n}}downloadMatrixFromPackedTexture(e,t,n){return this.downloadMatrixDriver(e,(()=>function(e,t,n){const a=new Float32Array(t*n*4);return Dy(e,(()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,a))),a}(this.gl,t,n)))}createProgram(e){this.throwIfDisposed();const t=this.gl;null==this.vertexShader&&(this.vertexShader=jb(t));const n=function(e){return Hy(e,(()=>e.createProgram()),"Unable to create WebGLProgram.")}(t);Dy(t,(()=>t.attachShader(n,this.vertexShader))),Dy(t,(()=>t.attachShader(n,e))),function(e,t){if(Dy(e,(()=>e.linkProgram(t))),!(0,S.env)().get("ENGINE_COMPILE_ONLY")&&!1===e.getProgramParameter(t,e.LINK_STATUS))throw console.log(e.getProgramInfoLog(t)),new Error("Failed to link vertex and fragment shaders.")}(t,n);const a=Object.assign(n,{vao:this.createVertexArray()});return this.debug&&By(t,a),a}buildVao(e){this.setProgram(e),this.bindVertexArray(e.vao);const t=this.gl;Dy(t,(()=>t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,this.indexBuffer))),function(e,t,n){Dy(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,n))),Py(e,t,"clipSpacePos",n,3,20,0)&&Py(e,t,"uv",n,2,20,12)}(t,e,this.vertexBuffer)}deleteProgram(e){this.throwIfDisposed(),e===this.program&&(this.program=null),null!=e&&(Dy(this.gl,(()=>this.gl.deleteProgram(e))),this.deleteVertexArray(e.vao))}setProgram(e){this.throwIfDisposed(),this.program=e,null!=this.program&&this.debug&&By(this.gl,this.program),Dy(this.gl,(()=>this.gl.useProgram(e)))}getUniformLocation(e,t){let n=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];return this.throwIfDisposed(),n?function(e,t,n){return Hy(e,(()=>e.getUniformLocation(t,n)),'uniform "'+n+'" not present in program.')}(this.gl,e,t):function(e,t,n){return e.getUniformLocation(t,n)}(this.gl,e,t)}getAttributeLocation(e,t){return this.throwIfDisposed(),Dy(this.gl,(()=>this.gl.getAttribLocation(e,t)))}getUniformLocationNoThrow(e,t){return this.throwIfDisposed(),this.gl.getUniformLocation(e,t)}setInputMatrixTexture(e,t,n){this.throwIfDisposed(),this.throwIfNoProgram(),Vy(this.gl,e,t,n)}setOutputMatrixTexture(e,t,n){this.setOutputMatrixTextureDriver(e,n,t)}setOutputPackedMatrixTexture(e,t,n){this.throwIfDisposed();const[a,r]=Ry(t,n);this.setOutputMatrixTextureDriver(e,a,r)}setOutputMatrixWriteRegion(e,t,n,a){this.setOutputMatrixWriteRegionDriver(n,e,a,t)}setOutputPackedMatrixWriteRegion(e,t,n,a){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){null!=this.program&&By(this.gl,this.program),Gy(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();const e=this.gl;if(this.debug){const e=this.getVertexArray();console.assert(e===this.program.vao,"VAO changed between setProgram and executeProgram!"),this.debugValidate()}Dy(e,(()=>e.drawElements(e.TRIANGLES,6,e.UNSIGNED_SHORT,0)))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),Dy(this.gl,(()=>this.gl.finish()))}getQueryTimerExtension(){return null==this.disjointQueryTimerExtension&&(this.disjointQueryTimerExtension=My(this.gl,2===(0,S.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(2===(0,S.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const e=this.gl,t=this.getQueryTimerExtensionWebGL2(),n=e.createQuery();return e.beginQuery(t.TIME_ELAPSED_EXT,n),n}const e=this.getQueryTimerExtensionWebGL1(),t=e.createQueryEXT();return e.beginQueryEXT(e.TIME_ELAPSED_EXT,t),t}endQuery(){if(2===(0,S.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const e=this.gl,t=this.getQueryTimerExtensionWebGL2();return void e.endQuery(t.TIME_ELAPSED_EXT)}const e=this.getQueryTimerExtensionWebGL1();e.endQueryEXT(e.TIME_ELAPSED_EXT)}async waitForQueryAndGetTime(e){return await S.util.repeatedTry((()=>this.disposed||this.isQueryAvailable(e,(0,S.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")))),this.getQueryTime(e,(0,S.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}getQueryTime(e,t){if(0===t)return null;if(2===t){const t=this.gl;return t.getQueryParameter(e,t.QUERY_RESULT)/1e6}{const t=this.getQueryTimerExtensionWebGL1();return t.getQueryObjectEXT(e,t.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(e,t){if(0===t)return!0;if(2===t){const t=this.gl,n=this.getQueryTimerExtensionWebGL2(),a=t.getQueryParameter(e,t.QUERY_RESULT_AVAILABLE);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(n.GPU_DISJOINT_EXT)),a&&!this.disjoint}{const t=this.getQueryTimerExtensionWebGL1(),n=t.getQueryObjectEXT(e,t.QUERY_RESULT_AVAILABLE_EXT);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(t.GPU_DISJOINT_EXT)),n&&!this.disjoint}}pollFence(e){return new Promise((t=>{this.addItemToPoll((()=>e.isFencePassed()),(()=>t()))}))}pollItems(){const e=function(e){let t=0;for(;t<e.length;++t){if(!e[t]())break}return t-1}(this.itemsToPoll.map((e=>e.isDoneFn)));for(let t=0;t<=e;++t){const{resolveFn:e}=this.itemsToPoll[t];e()}this.itemsToPoll=this.itemsToPoll.slice(e+1)}addItemToPoll(e,t){if(this.itemsToPoll.push({isDoneFn:e,resolveFn:t}),this.itemsToPoll.length>1)return;let n;"setTimeoutCustom"in(0,S.env)().platform&&(n=(0,S.env)().platform.setTimeoutCustom.bind((0,S.env)().platform)),S.util.repeatedTry((()=>(this.pollItems(),0===this.itemsToPoll.length)),(()=>0),null,n)}bindTextureToFrameBuffer(e){this.throwIfDisposed(),Wy(this.gl,e,this.framebuffer),this.debug&&Gy(this.gl)}unbindTextureToFrameBuffer(){null!=this.outputTexture?(Wy(this.gl,this.outputTexture,this.framebuffer),this.debug&&Gy(this.gl)):Uy(this.gl,this.framebuffer)}downloadMatrixDriver(e,t){this.bindTextureToFrameBuffer(e);const n=t();return this.unbindTextureToFrameBuffer(),n}setOutputMatrixTextureDriver(e,t,n){this.throwIfDisposed();const a=this.gl;Wy(a,e,this.framebuffer),this.debug&&Gy(a),this.outputTexture=e,Dy(a,(()=>a.viewport(0,0,t,n))),Dy(a,(()=>a.scissor(0,0,t,n)))}setOutputMatrixWriteRegionDriver(e,t,n,a){this.throwIfDisposed(),Dy(this.gl,(()=>this.gl.scissor(e,t,n,a)))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(null==this.program)throw new Error("No GPU program is currently set.")}}const{addImpl:nv,bincountImpl:av,bincountReduceImpl:rv,bitwiseAndImpl:sv,castImpl:ov,ceilImpl:iv,concatImpl:cv,equalImpl:lv,expImpl:uv,expm1Impl:dv,floorImpl:hv,gatherNdImpl:pv,gatherV2Impl:fv,greaterImpl:mv,greaterEqualImpl:gv,lessImpl:yv,lessEqualImpl:bv,linSpaceImpl:vv,logImpl:xv,maxImpl:wv,maximumImpl:kv,minimumImpl:Sv,multiplyImpl:Nv,negImpl:Iv,notEqualImpl:Tv,prodImpl:Cv,raggedGatherImpl:Ev,raggedRangeImpl:_v,raggedTensorToTensorImpl:Av,rangeImpl:Rv,rsqrtImpl:Fv,scatterImpl:Dv,sigmoidImpl:Ov,simpleAbsImpl:Mv,sliceImpl:zv,sparseFillEmptyRowsImpl:Lv,sparseReshapeImpl:Bv,sparseSegmentReductionImpl:Pv,sqrtImpl:Vv,staticRegexReplaceImpl:Wv,stridedSliceImpl:Uv,stringNGramsImpl:Gv,stringSplitImpl:Hv,stringToHashBucketFastImpl:jv,subImpl:qv,tileImpl:Xv,topKImpl:Kv,transposeImpl:Qv,uniqueImpl:Yv}=e;function Zv(e,t){return["x","y","z","w","u","v"].slice(0,t).map((t=>"".concat(e,".").concat(t)))}function Jv(e,t){return 1===t?[e]:Zv(e,t)}class $v{constructor(e){if(this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.enableShapeUniforms=Lb(this.outputShape.length),0===this.rank)this.userCode="\n        void main() {\n          setOutput(vec4(getA(), 0., 0., 0.));\n        }\n      ";else{const e=Jv("rc",this.rank),t=Ab(this.rank),n=this.getOutOfBoundsCondition(e),a=this.getSetup(e),r=this.getOutput(e);this.userCode="\n        void main() {\n          ".concat(t," rc = getOutputCoords();\n\n          if(").concat(n,") {\n            setOutput(vec4(0));\n          } else {\n            ").concat(a,"\n\n            setOutput(vec4(").concat(r,"));\n          }\n        }\n      ")}}getSourceCoordsArr(e){const t=[];for(let n=0;n<=1;n++)for(let a=0;a<=1;a++){let r="".concat(0===n?"r":"rp1",", ").concat(0===a?"c":"cp1");for(let t=2;t<this.rank;t++)r="".concat(e[e.length-1-t],",")+r;t.push(r)}return t}getOutOfBoundsCondition(e){if(1===this.rank)return"rc > ".concat(this.enableShapeUniforms?"outShape":this.outputShape[0]);let t="";for(let n=this.rank-2;n<this.rank;n++)t+="".concat(e[n]," >= ").concat(this.enableShapeUniforms?"outShape[".concat(n,"]"):this.outputShape[n]),n<this.rank-1&&(t+="||");return t}getSetup(e){if(1===this.rank)return"";const t=e.slice(-2),n=this.enableShapeUniforms?"outShape[".concat(this.rank," - 1]"):this.outputShape[this.rank-1],a=this.enableShapeUniforms?"outShape[".concat(this.rank," - 2]"):this.outputShape[this.rank-2];return"\n      int r = ".concat(t[0],";\n      int c = ").concat(t[1],";\n      int rp1 = r + 1;\n      int cp1 = c + 1;\n\n      bool cEdge = cp1 >= ").concat(n,";\n      bool rEdge = rp1 >= ").concat(a,";\n    ")}getOutput(e){const t=this.getSourceCoordsArr(e);if(1===this.rank){const e=this.enableShapeUniforms?"outShape":this.outputShape[0];return"getA(rc), (rc + 1 >= ".concat(e," ? 0. : getA(rc + 1)), 0, 0")}return"getA(".concat(t[0],"),\n            cEdge ? 0. : getA(").concat(t[1],"),\n            rEdge ? 0. : getA(").concat(t[2],"),\n            rEdge || cEdge ? 0. : getA(").concat(t[3],")")}}class ex{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec3"}],this.outputShape=e,this.enableShapeUniforms=Lb(this.outputShape.length);let n="";for(let a=0;a<4;a++){let e="thisRC = rc;";a%2===1&&(e+="thisRC.z += 1;"),a>1&&(e+="thisRC.y += 1;"),n+="\n        ".concat(e,"\n        ").concat(a>0?"if(thisRC.y < rows && thisRC.z < cols){":"","\n          int flatIndex = getFlatIndex(thisRC);\n\n          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);\n          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));\n\n          result[").concat(a,"] =\n            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);\n        ").concat(a>0?"}":"","\n      ")}this.userCode="\n      ".concat(function(e,t){const n=t?function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"index";const a=cb(e.map(((e,t)=>t)),t);return a.map(((t,r)=>{const s="int ".concat(e[r]," = ").concat(n," / ").concat(a[r]),o=r===a.length-1?"int ".concat(e[r+1]," = ").concat(n," - ").concat(e[r]," * ").concat(a[r]):"index -= ".concat(e[r]," * ").concat(a[r]);return"".concat(s,"; ").concat(o,";")})).join("")}(["r","c","d"],"inputShape"):ob(["r","c","d"],e);return"\n    ivec3 inputCoordsFromReshapedOutCoords(int index) {\n      ".concat(n,"\n      return ivec3(r, c, d);\n    }\n  ")}(t,this.enableShapeUniforms),"\n      ").concat(this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":lb(e),"\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n\n        vec4 result = vec4(0.);\n\n        ivec3 thisRC;\n        int rows = ").concat(this.enableShapeUniforms?"outShape[1]":e[1],";\n        int cols = ").concat(this.enableShapeUniforms?"outShape[2]":e[2],";\n\n        ").concat(n,"\n\n        setOutput(result);\n      }\n    ")}}class tx{constructor(e){this.gpgpu=e,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0,this.freeTextures={},this.usedTextures={},this.logEnabled=!1}acquireTexture(e,t,n){const a=ax(t,n),r=rx(e,a,n);r in this.freeTextures||(this.freeTextures[r]=[]),r in this.usedTextures||(this.usedTextures[r]=[]);const s=nx(e,a,this.gpgpu.gl,this.gpgpu.textureConfig,n);if(this.freeTextures[r].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=s,this.log();const e=this.freeTextures[r].pop();return this.usedTextures[r].push(e),e}let o;return a===Ey.PACKED_2X2_FLOAT32?o=this.gpgpu.createPackedMatrixTexture(e[0],e[1]):a===Ey.PACKED_2X2_FLOAT16?o=this.gpgpu.createFloat16PackedMatrixTexture(e[0],e[1]):a===Ey.UNPACKED_FLOAT32?o=this.gpgpu.createFloat32MatrixTexture(e[0],e[1]):a===Ey.UNPACKED_FLOAT16?o=this.gpgpu.createFloat16MatrixTexture(e[0],e[1]):a===Ey.PACKED_4X1_UNSIGNED_BYTE&&(o=this.gpgpu.createUnsignedBytesMatrixTexture(e[0],e[1])),this.usedTextures[r].push(o),this.numUsedTextures++,this._numBytesAllocated+=s,this.log(),o}releaseTexture(e,t,n,a){if(null==this.freeTextures)return;const r=ax(n,a),s=rx(t,r,a);s in this.freeTextures||(this.freeTextures[s]=[]);const o=nx(t,r,this.gpgpu.gl,this.gpgpu.textureConfig,a),i=(0,S.env)().getNumber("WEBGL_DELETE_TEXTURE_THRESHOLD");-1!==i&&this._numBytesAllocated>i?(this.gpgpu.deleteMatrixTexture(e.texture),this._numBytesAllocated-=o):(this.freeTextures[s].push(e),this.numFreeTextures++,this._numBytesFree+=o),this.numUsedTextures--;const c=this.usedTextures[s],l=c&&c.indexOf(e);if(null==l||l<0)throw new Error("Cannot release a texture that was never provided by this texture manager");c[l]=c[c.length-1],c.pop(),this.log()}log(){if(!this.logEnabled)return;const e=this.numFreeTextures+this.numUsedTextures;console.log("Free/Used","".concat(this.numFreeTextures," / ").concat(this.numUsedTextures),"(".concat(e,")"));const t=this._numBytesFree/this._numBytesAllocated;console.log("Bytes allocated: ".concat(this._numBytesAllocated)),console.log("Bytes unused: ".concat(this._numBytesFree," (").concat(Math.round(100*t),"%)"))}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(null!=this.freeTextures){for(const e in this.freeTextures)this.freeTextures[e].forEach((e=>{this.gpgpu.deleteMatrixTexture(e.texture)}));for(const e in this.usedTextures)this.usedTextures[e].forEach((e=>{this.gpgpu.deleteMatrixTexture(e.texture)}));this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}}function nx(e,t,n,a,r){const s=function(e,t){switch(e){case Ey.PACKED_2X2_FLOAT32:return Jb(t);case Ey.PACKED_2X2_FLOAT16:return $b(t);case Ey.UNPACKED_FLOAT32:return Qb(t);case Ey.UNPACKED_FLOAT16:return Yb(t);case Ey.PACKED_4X1_UNSIGNED_BYTE:return Zb(t);default:throw new Error("Unknown physical texture type ".concat(e))}}(t,a);let o;if(r){const[t,n]=Ry(e[0],e[1]);o=t*n}else{const[t,n]=_y(e[0],e[1]);o=t*n}const i=function(e,t){const n=e;if(t===n.R32F)return 4;if(t===n.R16F)return 2;if(t===n.RGBA32F)return 16;if(t===e.RGBA)return 16;if(t===n.RGBA16F)return 8;if(t===n.RGBA8)return 4;throw new Error("Unknown internal format ".concat(t))}(n,s);return o*i}function ax(e,t){if(e===Cy.UPLOAD)return Ey.PACKED_2X2_FLOAT32;if(e===Cy.RENDER||null==e)return function(e){return(0,S.env)().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?e?Ey.PACKED_2X2_FLOAT32:Ey.UNPACKED_FLOAT32:e?Ey.PACKED_2X2_FLOAT16:Ey.UNPACKED_FLOAT16}(t);if(e===Cy.DOWNLOAD||e===Cy.PIXELS)return Ey.PACKED_4X1_UNSIGNED_BYTE;throw new Error("Unknown logical texture type ".concat(e))}function rx(e,t,n){return"".concat(e[0],"_").concat(e[1],"_").concat(t,"_").concat(n)}class sx{constructor(e,t){this.variableNames=["A"],this.outputShape=e,this.enableShapeUniforms=Lb(this.outputShape.length),this.userCode="\n      float unaryOperation(float x) {\n        ".concat(t,"\n      }\n\n      void main() {\n        float x = getAAtOutCoords();\n        float y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    ")}}const ox="if (isnan(x)) return x;",ix="return x;",cx="return abs(x);";const lx="return (x >= 0.0) ? x : (exp(x) - 1.0);",ux=ox+"\n  return (x < 0.0) ? 0.0 : x;\n",dx=ox+"\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n",hx="return x;",px="return 1.0 / (1.0 + exp(-1.0 * x));",fx="return x;",mx="\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n",gx="\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",yx="\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",bx="return 1.0 / (1.0 + exp(-1.0 * x));";class vx{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.enableShapeUniforms=Lb(this.outputShape.length),this.userCode="\n      vec4 unaryOperation(vec4 x) {\n        ".concat(t,"\n      }\n\n      void main() {\n        vec4 x = getAAtOutCoords();\n        vec4 y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    ")}}class xx{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=e,this.enableShapeUniforms=Lb(this.outputShape.length);const t=e.length,n=Jv("rc",t),a=Ab(t),r=function(e,t){if(1===e)return"rc";let n="";for(let a=0;a<e;a++)n+=t[a],a<e-1&&(n+=",");return n}(t,n),s=n.slice(-2),o=t<=1?"rc":"vec2(".concat(s.join(","),")");this.userCode="\n      void main() {\n        ".concat(a," rc = getOutputCoords();\n        vec4 packedInput = getA(").concat(r,");\n\n        setOutput(getChannel(packedInput, ").concat(o,"));\n      }\n    ")}}const wx=S.kernel_impls.whereImpl,kx={};const Sx=(0,S.env)().getNumber("CPU_HANDOFF_SIZE_THRESHOLD");class Nx extends S.KernelBackend{nextDataId(){return Nx.nextDataId++}constructor(e){if(super(),this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.lastGlFlushTime=0,this.warnedAboutMemory=!1,this.pendingDeletes=0,this.disposed=!1,!(0,S.env)().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");let t;if(null!=e){if(e instanceof tv)t=e;else{const n=Iy((0,S.env)().getNumber("WEBGL_VERSION"),e);t=new tv(n)}this.binaryCache={},this.gpgpuCreatedLocally=!1}else{const e=Iy((0,S.env)().getNumber("WEBGL_VERSION"));t=new tv(e),this.binaryCache=((n=(0,S.env)().getNumber("WEBGL_VERSION"))in kx||(kx[n]={}),kx[n]),this.gpgpuCreatedLocally=!0}var n;this.gpgpu=t,this.canvas=this.gpgpu.gl.canvas,this.textureManager=new tx(this.gpgpu),this.numMBBeforeWarning=null==(0,S.env)().global.screen?1024:(0,S.env)().global.screen.height*(0,S.env)().global.screen.width*window.devicePixelRatio*600/1024/1024,this.texData=new S.DataStorage(this,(0,S.engine)())}numDataIds(){return this.texData.numDataIds()-this.pendingDeletes}writeTexture(e,t,n,a,r,s){const o=this.makeTensorInfo(t,n),i=this.texData.get(o.dataId);i.isPacked=!1,i.texture={texture:e,texShape:[a,r]},i.texShape=[a,r];const c=Ky(t),l=new Gb(c,!1,s),u=this.runWebGLProgram(l,[o],n,[[a,r]]);return u.shape=t,i.texture=null,this.disposeIntermediateTensorInfo(o),u.dataId}write(e,t,n){if(((0,S.env)().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||(0,S.env)().getBool("DEBUG"))&&this.checkNumericalProblems(e),"complex64"===n&&null!=e)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");const a={id:this.nextDataId()};return this.texData.set(a,{shape:t,dtype:n,values:e,usage:Cy.UPLOAD,refCount:1}),a}refCount(e){if(this.texData.has(e)){return this.texData.get(e).refCount}return 0}incRef(e){this.texData.get(e).refCount++}decRef(e){if(this.texData.has(e)){this.texData.get(e).refCount--}}move(e,t,n,a,r){if((0,S.env)().getBool("DEBUG")&&this.checkNumericalProblems(t),"complex64"===a)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(e,{shape:n,dtype:a,values:t,usage:Cy.UPLOAD,refCount:r})}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}readSync(e){const t=this.texData.get(e),{values:n,dtype:a,complexTensorInfos:r,slice:s,shape:o,isPacked:i}=t;if(null!=s){let t;t=i?new vx(o,hx):new sx(o,hx);const n=this.runWebGLProgram(t,[{dataId:e,shape:o,dtype:a}],a),r=this.readSync(n.dataId);return this.disposeIntermediateTensorInfo(n),r}if(null!=n)return this.convertAndCacheOnCPU(e);if("string"===a)return n;const c=null!=this.activeTimers;let l,u;if(c&&(l=S.util.now()),"complex64"===a){const e=this.readSync(r.real.dataId),t=this.readSync(r.imag.dataId);u=S.backend_util.mergeRealAndImagArrays(e,t)}else u=this.getValuesFromTexture(e);return c&&(this.downloadWaitMs+=S.util.now()-l),this.convertAndCacheOnCPU(e,u)}async read(e){if(this.pendingRead.has(e)){const t=this.pendingRead.get(e);return new Promise((e=>t.push(e)))}const t=this.texData.get(e),{values:n,shape:a,slice:r,dtype:s,complexTensorInfos:o,isPacked:i}=t;if(null!=r){let t;t=i?new vx(a,hx):new sx(a,hx);const n=this.runWebGLProgram(t,[{dataId:e,shape:a,dtype:s}],s),r=this.read(n.dataId);return this.disposeIntermediateTensorInfo(n),r}if(null!=n)return this.convertAndCacheOnCPU(e);if((0,S.env)().getBool("DEBUG")&&!(0,S.env)().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&2===(0,S.env)().getNumber("WEBGL_VERSION"))throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let c,l,u=null;if("complex64"!==s&&(0,S.env)().get("WEBGL_BUFFER_SUPPORTED")){c=this.decode(e);const t=this.texData.get(c.dataId);u=this.gpgpu.createBufferFromTexture(t.texture.texture,...Ay(a))}if(this.pendingRead.set(e,[]),"complex64"!==s&&await this.gpgpu.createAndWaitForFence(),"complex64"===s){const e=await Promise.all([this.read(o.real.dataId),this.read(o.imag.dataId)]),t=e[0],n=e[1];l=S.backend_util.mergeRealAndImagArrays(t,n)}else if(null==u)l=this.getValuesFromTexture(e);else{const e=S.util.sizeFromShape(a);l=this.gpgpu.downloadFloat32MatrixFromBuffer(u,e)}if(null!=c&&this.disposeIntermediateTensorInfo(c),null!=u){const e=this.gpgpu.gl;Dy(e,(()=>e.deleteBuffer(u)))}const d=this.convertAndCacheOnCPU(e,l),h=this.pendingRead.get(e);return this.pendingRead.delete(e),h.forEach((e=>e(d))),this.pendingDisposal.has(e)&&(this.pendingDisposal.delete(e),this.disposeData(e)&&(0,S.engine)().removeDataId(e,this),this.pendingDeletes--),d}readToGPU(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};const n=this.texData.get(e),{values:a,shape:r,slice:s,dtype:o,isPacked:i,texture:c}=n;if("complex64"===o)throw new Error("Does not support reading texture for complex64 dtype.");if(null!=s){let n;n=i?new vx(r,hx):new sx(r,hx);const a=this.runWebGLProgram(n,[{dataId:e,shape:r,dtype:o}],o),s=this.readToGPU(a,t);return this.disposeIntermediateTensorInfo(a),s}if(null==c)throw null!=a?new Error("Data is not on GPU but on CPU."):new Error("There is no data on GPU or CPU.");const l=this.decode(e,t.customTexShape),u=(0,S.engine)().makeTensorFromTensorInfo(l),d=this.texData.get(l.dataId);return Object.assign({tensorRef:u},d.texture)}bufferSync(e){const t=this.readSync(e.dataId);if("string"===e.dtype)try{const n=t.map((e=>S.util.decodeString(e)));return(0,S.buffer)(e.shape,e.dtype,n)}catch(n){throw new Error("Failed to decode encoded string bytes into utf-8")}return(0,S.buffer)(e.shape,e.dtype,t)}checkNumericalProblems(e){if(null!=e)for(let t=0;t<e.length;t++){const n=e[t];if(!Oy(n)){if((0,S.env)().getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))throw Error("The value ".concat(n," cannot be represented with your ")+"current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'");throw Error("The value ".concat(n," cannot be represented on this device."))}}}getValuesFromTexture(e){const{shape:t,dtype:n,isPacked:a}=this.texData.get(e),r=S.util.sizeFromShape(t);if((0,S.env)().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){const n=this.decode(e),a=this.texData.get(n.dataId),s=this.gpgpu.downloadMatrixFromPackedTexture(a.texture.texture,...Ay(t)).subarray(0,r);return this.disposeIntermediateTensorInfo(n),s}const s=(0,S.env)().getBool("WEBGL_PACK")&&!0===a,o=s?Ky(t):t,i=s?new Wb(o):new Vb(o),c=this.runWebGLProgram(i,[{shape:o,dtype:n,dataId:e}],"float32"),l=this.texData.get(c.dataId),u=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(l.texture.texture,l.texShape[0],l.texShape[1]).subarray(0,r);return this.disposeIntermediateTensorInfo(c),u}timerAvailable(){return(0,S.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0}time(e){const t=this.activeTimers,n=[];let a=!1;null==this.programTimersStack?(this.programTimersStack=n,a=!0):this.activeTimers.push(n),this.activeTimers=n,e();const r=S.util.flatten(this.activeTimers.map((e=>e.query))).filter((e=>null!=e)),s=S.util.flatten(this.activeTimers.map((e=>e.name))).filter((e=>null!=e));this.activeTimers=t,a&&(this.programTimersStack=null);const o={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};return(async()=>{if((0,S.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){const e=await Promise.all(r);o.kernelMs=S.util.sum(e),o.getExtraProfileInfo=()=>e.map(((e,t)=>({name:s[t],ms:e}))).map((e=>"".concat(e.name,": ").concat(e.ms))).join(", ")}else o.kernelMs={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,o})()}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return(0,S.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:S.util.now(),endMs:null}}endTimer(e){return(0,S.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),e):(e.endMs=S.util.now(),e)}async getQueryTime(e){if((0,S.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0)return this.gpgpu.waitForQueryAndGetTime(e);const t=e;return t.endMs-t.startMs}disposeData(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];if(this.pendingDisposal.has(e))return!1;if(!this.texData.has(e))return!0;if(t?this.texData.get(e).refCount=0:this.texData.get(e).refCount--,!t&&this.texData.get(e).refCount>0)return!1;if(this.pendingRead.has(e))return this.pendingDisposal.add(e),this.pendingDeletes++,!1;this.releaseGPUData(e);const{complexTensorInfos:n}=this.texData.get(e);return null!=n&&(this.disposeData(n.real.dataId,t),this.disposeData(n.imag.dataId,t)),this.texData.delete(e),!0}releaseGPUData(e){const{texture:t,dtype:n,texShape:a,usage:r,isPacked:s,slice:o}=this.texData.get(e),i=o&&o.origDataId||e,c=this.dataRefCount.get(i);c>1?this.dataRefCount.set(i,c-1):(this.dataRefCount.delete(i),null!=t&&(this.numBytesInGPU-=this.computeBytes(a,n),this.textureManager.releaseTexture(t,a,r,s)));const l=this.texData.get(e);l.texture=null,l.texShape=null,l.isPacked=!1,l.slice=null}getTexture(e){return this.uploadToGPU(e),this.texData.get(e).texture.texture}getDataInfo(e){return this.texData.get(e)}shouldExecuteOnCPU(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:Sx;return(0,S.env)().getBool("WEBGL_CPU_FORWARD")&&e.every((e=>null==this.texData.get(e.dataId).texture&&S.util.sizeFromShape(e.shape)<t))}getGPGPUContext(){return this.gpgpu}where(e){S.backend_util.warn("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");const t=e.dataSync();return wx(e.shape,t)}packedUnaryOp(e,t,n){const a=new vx(e.shape,t),r=this.compileAndRun(a,[e],n);return(0,S.engine)().makeTensorFromTensorInfo(r)}abs(e){if(this.shouldExecuteOnCPU([e])&&"complex64"!==e.dtype){const t=Mv(this.texData.get(e.dataId).values);return this.makeOutput(e.shape,e.dtype,t)}if((0,S.env)().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(e,cx,e.dtype);const t=new sx(e.shape,cx),n=this.compileAndRun(t,[e]);return(0,S.engine)().makeTensorFromTensorInfo(n)}makeTensorInfo(e,t,n){let a;if("string"===t&&null!=n&&n.length>0&&S.util.isString(n[0])){const r=n.map((e=>S.util.encodeString(e)));a=this.write(r,e,t)}else a=this.write(n,e,t);return this.texData.get(a).usage=null,{dataId:a,shape:e,dtype:t}}makeOutput(e,t,n){return(0,S.engine)().makeTensorFromTensorInfo(this.makeTensorInfo(e,t,n),this)}unpackTensor(e){const t=new xx(e.shape);return this.runWebGLProgram(t,[e],e.dtype)}packTensor(e){const t=new $v(e.shape);return this.runWebGLProgram(t,[e],e.dtype,null,!0)}packedReshape(e,t){const n=[qy(e.shape),...Xy(e.shape)],a={dtype:e.dtype,shape:n,dataId:e.dataId},r=[qy(t),...Xy(t)],s=new ex(r,n),o=[n],i=this.runWebGLProgram(s,[a],e.dtype,o,!0);return{dataId:i.dataId,shape:t,dtype:i.dtype}}decode(e,t){const n=this.texData.get(e),{isPacked:a,shape:r,dtype:s}=n;if(null!=t){const e=S.util.sizeFromShape(r),n=t[0]*t[1]*4;S.util.assert(e<=n,(()=>"customTexShape is too small. Row * Column * 4 should be equal or larger than the size of the tensor data."))}const o=Ky(r);let i;i=a?new Pb(o):new Bb(o);const c=[null!=t?t:Ay(o)];return{dtype:s,shape:r,dataId:this.runWebGLProgram(i,[{shape:o,dtype:s,dataId:e}],s,c,!0,t).dataId}}runWebGLProgram(e,t,n,a){let r=arguments.length>4&&void 0!==arguments[4]&&arguments[4],s=arguments.length>5?arguments[5]:void 0;const o=this.makeTensorInfo(e.outputShape,n),i=this.texData.get(o.dataId);if(e.packedOutput&&(i.isPacked=!0),e.outPackingScheme===Ty.DENSE){const t=null!=s?s:Ay(e.outputShape);i.texShape=t.map((e=>2*e))}if(null!=e.outTexUsage&&(i.usage=e.outTexUsage),0===S.util.sizeFromShape(o.shape))return i.values=S.util.getTypedArrayFromDType(o.dtype,0),o;const c=[],l=t.map((t=>{if("complex64"===t.dtype)throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let n=this.texData.get(t.dataId);if(null==n.texture){if(!e.packedInputs&&S.util.sizeFromShape(t.shape)<=(0,S.env)().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:t.shape,texData:null,isUniform:!0,uniformValues:n.values};e.packedInputs&&(n.isPacked=!0,n.shape=t.shape)}if(this.uploadToGPU(t.dataId),!!n.isPacked!==!!e.packedInputs)t=n.isPacked?this.unpackTensor(t):this.packTensor(t),c.push(t),n=this.texData.get(t.dataId);else if(n.isPacked&&!Yy(n.shape,t.shape)){const e=t,a=t.shape;t.shape=n.shape,t=this.packedReshape(t,a),c.push(t),n=this.texData.get(t.dataId),e.shape=a}return{shape:t.shape,texData:n,isUniform:!1}}));this.uploadToGPU(o.dataId);const u={shape:o.shape,texData:i,isUniform:!1},d=function(e,t,n){let a="";t.concat(n).forEach((t=>{const r=null!=t.texData&&null!=t.texData.slice&&t.texData.slice.flatOffset>0;if(e.enableShapeUniforms&&!t.isUniform){const s=t.texData.texShape,{useSqueezeShape:o,uniformShape:i,keptDims:c}=Rb(e.packedInputs,t.shape,s);let l="",u="",d="";if(1===i.length&&e.packedInputs){const e=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)];l="".concat(e[0]>1,"_").concat(e[1]>1)}else if(2!==i.length||e.packedInputs){if(i.length>2&&!e.packedInputs){const e=S.util.computeStrides(i);d="".concat(e[0]===s[1],"_").concat(e[e.length-1]===s[1])}}else u="".concat(i[0]>1,"_").concat(i[1]>1);const h=t.shape.length,p=2===i.length&&S.util.arraysEqual(t.shape,s),f=1===S.util.sizeFromShape(t.shape),m=S.backend_util.getBroadcastDims(t.shape,n.shape),g=!e.packedInputs&&h===n.shape.length&&S.util.arraysEqual(s,n.texData.texShape),y=e.packedInputs||i.length>2?"":"".concat(s[0]>1,"_").concat(s[1]>1);a+="".concat(h,"_").concat(g,"_").concat(o?c:"","_").concat(i.length,"_").concat(f,"_").concat(m,"_").concat(p,"_").concat(l,"_").concat(u,"_").concat(d,"_").concat(y,"_").concat(r)}else{const e=t.isUniform?"uniform":t.texData.texShape;a+="".concat(t.shape,"_").concat(e,"_").concat(r)}}));const r=e.userCode;let s=e.constructor.name;return s+="_"+a+"_"+r+"".concat((0,S.env)().getNumber("WEBGL_VERSION")),s}(e,l,u),h=this.getAndSaveBinary(d,(()=>Ob(this.gpgpu,e,l,u))),p=null!=this.activeTimers;let f;p&&(f=this.startTimer()),(0,S.env)().get("ENGINE_COMPILE_ONLY")||function(e,t,n,a,r){t.program.enableShapeUniforms||(zb(t.inShapeInfos,n),zb([t.outShapeInfo],[a]));const s=a.texData.texture,o=a.texData.texShape;a.texData.isPacked?e.setOutputPackedMatrixTexture(s.texture,o[0],o[1]):e.setOutputMatrixTexture(s.texture,o[0],o[1]),e.setProgram(t.webGLProgram),e.bindVertexArray(t.webGLProgram.vao),1===(0,S.env)().getNumber("WEBGL_VERSION")&&null!==t.infLoc&&e.gl.uniform1f(t.infLoc,1/0),null!==t.nanLoc&&e.gl.uniform1f(t.nanLoc,NaN);for(let c=0;c<n.length;++c){const a=n[c],{uniform:r,offset:s,shape:o,texShape:i}=t.variablesLocations[c];if(o){const{uniformShape:n}=Rb(t.program.packedInputs,a.shape,a.texData.texShape);switch(n.length){case 1:e.gl.uniform1iv(o,new Int32Array(n));break;case 2:e.gl.uniform2iv(o,new Int32Array(n));break;case 3:e.gl.uniform3iv(o,new Int32Array(n));break;case 4:e.gl.uniform4iv(o,new Int32Array(n))}}if(i&&e.gl.uniform2i(i,a.texData.texShape[0],a.texData.texShape[1]),null!=r)if(a.isUniform)if(S.util.sizeFromShape(a.shape)<2)e.gl.uniform1f(r,a.uniformValues[0]);else{let t=a.uniformValues;t instanceof Float32Array||(t=new Float32Array(t)),e.gl.uniform1fv(r,t)}else null!=a.texData.slice&&null!=s&&e.gl.uniform1i(s,a.texData.slice.flatOffset),e.setInputMatrixTexture(a.texData.texture.texture,r,c)}const i=t.outShapeLocation;if(i)switch(a.shape.length){case 1:e.gl.uniform1iv(i,new Int32Array(a.shape));break;case 2:e.gl.uniform2iv(i,new Int32Array(a.shape));break;case 3:e.gl.uniform3iv(i,new Int32Array(a.shape));break;case 4:e.gl.uniform4iv(i,new Int32Array(a.shape))}if(t.outShapeStridesLocation){const n=S.util.computeStrides(a.shape);switch(a.shape.length){case 2:e.gl.uniform1iv(t.outShapeStridesLocation,new Int32Array(n));break;case 3:e.gl.uniform2iv(t.outShapeStridesLocation,new Int32Array(n));break;case 4:e.gl.uniform3iv(t.outShapeStridesLocation,new Int32Array(n))}}if(t.outTexShapeLocation&&e.gl.uniform2i(t.outTexShapeLocation,a.texData.texShape[0],a.texData.texShape[1]),t.program.customUniforms&&r)for(let c=0;c<t.program.customUniforms.length;++c){const n=t.program.customUniforms[c],a=t.customUniformLocations[c],s=r[c];if("float"===n.type)e.gl.uniform1fv(a,s);else if("vec2"===n.type)e.gl.uniform2fv(a,s);else if("vec3"===n.type)e.gl.uniform3fv(a,s);else if("vec4"===n.type)e.gl.uniform4fv(a,s);else if("int"===n.type)e.gl.uniform1iv(a,s);else if("ivec2"===n.type)e.gl.uniform2iv(a,s);else if("ivec3"===n.type)e.gl.uniform3iv(a,s);else{if("ivec4"!==n.type)throw Error("uniform type ".concat(n.type," is not supported yet."));e.gl.uniform4iv(a,s)}}e.executeProgram()}(this.gpgpu,h,l,u,a),c.forEach((e=>this.disposeIntermediateTensorInfo(e))),p&&(f=this.endTimer(f),this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime(f)}));const m=(0,S.env)().getNumber("WEBGL_FLUSH_THRESHOLD");if(m>0){const e=S.util.now();e-this.lastGlFlushTime>m&&(this.gpgpu.gl.flush(),this.lastGlFlushTime=e)}if(!(0,S.env)().getBool("WEBGL_LAZILY_UNPACK")&&i.isPacked&&!1===r){const e=this.unpackTensor(o);return this.disposeIntermediateTensorInfo(o),e}return o}compileAndRun(e,t,n,a){let r=arguments.length>4&&void 0!==arguments[4]&&arguments[4];n=n||t[0].dtype;return this.runWebGLProgram(e,t,n,a,r)}getAndSaveBinary(e,t){return e in this.binaryCache||(this.binaryCache[e]=t()),this.binaryCache[e]}getTextureManager(){return this.textureManager}dispose(){if(!this.disposed){if(!(0,S.env)().getBool("IS_TEST")){Object.keys(this.binaryCache).forEach((e=>{this.gpgpu.deleteProgram(this.binaryCache[e].webGLProgram),delete this.binaryCache[e]}))}this.textureManager.dispose(),null!=this.canvas&&"undefined"!==typeof HTMLCanvasElement&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0}}floatPrecision(){return null==this.floatPrecisionValue&&(this.floatPrecisionValue=(0,S.tidy)((()=>{if(!(0,S.env)().get("WEBGL_RENDER_FLOAT32_ENABLED")){const e=(0,S.env)().getBool("DEBUG");(0,S.env)().set("DEBUG",!1);const t=this.abs((0,S.scalar)(1e-8)).dataSync()[0];if((0,S.env)().set("DEBUG",e),t>0)return 32}return 16}))),this.floatPrecisionValue}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}uploadToGPU(e){const t=this.texData.get(e),{shape:n,dtype:a,values:r,texture:s,usage:o,isPacked:i}=t;if(null!=s)return;const c=null!=this.activeTimers;let l;c&&(l=S.util.now());let u=t.texShape;if(null==u&&(u=function(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=(0,S.env)().getNumber("WEBGL_MAX_TEXTURE_SIZE"),a=(0,S.env)().getNumber("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE");if(a===1/0&&(0,S.env)().getBool("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE")&&(a=n/2),t&&(n*=2,a*=2,1===(e=e.map(((t,n)=>n>=e.length-2?S.util.nearestLargerEven(e[n]):e[n]))).length&&(e=[2,e[0]])),2!==e.length){const t=S.util.squeezeShape(e);e=t.newShape}let r=S.util.sizeFromShape(e),s=null;e.length<=1&&r<=n?s=[1,r]:2===e.length&&e[0]<=n&&e[1]<=n?s=e:3===e.length&&e[0]*e[1]<=n&&e[2]<=n?s=[e[0]*e[1],e[2]]:3===e.length&&e[0]<=n&&e[1]*e[2]<=n?s=[e[0],e[1]*e[2]]:4===e.length&&e[0]*e[1]*e[2]<=n&&e[3]<=n?s=[e[0]*e[1]*e[2],e[3]]:4===e.length&&e[0]<=n&&e[1]*e[2]*e[3]<=n&&(s=[e[0],e[1]*e[2]*e[3]]);const o=null!=s&&Math.max(...s)>a&&Math.min(...s)<=(t?2:1)&&Math.min(...s)>0;if(null==s||o)if(t){const t=qy(e);let n=2,a=2;e.length&&([n,a]=Xy(e)),r=t*(n/2)*(a/2),s=S.util.sizeToSquarishShape(r).map((e=>2*e))}else s=S.util.sizeToSquarishShape(r);return s}(n,i),t.texShape=u),null!=r){const e=Ky(n);let s,o=u[1],d=u[0];const h=r instanceof Uint8Array||r instanceof Uint8ClampedArray;!i&&h||([o,d]=Ry(u[0],u[1])),s=i?new Hb(e,h):new Gb(e,h);const p=h?[d,o]:u,f=this.makeTensorInfo(p,a),m=this.texData.get(f.dataId);m.usage=h?Cy.PIXELS:Cy.UPLOAD,m.texShape=p,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(f.dataId),o,d,r);const g=[[d,o]],y=!0,b=this.runWebGLProgram(s,[f],a,g,y),v=this.texData.get(b.dataId);t.texShape=v.texShape,t.isPacked=v.isPacked,t.usage=v.usage,(0,S.env)().get("ENGINE_COMPILE_ONLY")?this.disposeData(b.dataId):(t.texture=v.texture,t.values=null,this.texData.delete(b.dataId)),this.disposeIntermediateTensorInfo(f),c&&(this.uploadWaitMs+=S.util.now()-l)}else{const e=this.acquireTexture(u,o,a,i);t.texture=e}}convertAndCacheOnCPU(e,t){const n=this.texData.get(e),{dtype:a}=n;return null!=t&&(n.values=function(e,t){if("float32"===t||"complex64"===t)return e;if("int32"===t||"bool"===t){const n="int32"===t?new Int32Array(e.length):new Uint8Array(e.length);for(let t=0;t<n.length;++t)n[t]=Math.round(e[t]);return n}throw new Error("Unknown dtype ".concat(t))}(t,a)),n.values}acquireTexture(e,t,n,a){if(this.numBytesInGPU+=this.computeBytes(e,n),!this.warnedAboutMemory&&this.numBytesInGPU>1024*this.numMBBeforeWarning*1024){const e=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn("High memory usage in GPU: ".concat(e," MB, ")+"most likely due to a memory leak")}return this.textureManager.acquireTexture(e,t,a)}computeBytes(e,t){return e[0]*e[1]*S.util.bytesPerElement(t)}checkCompileCompletion(){for(const[,e]of Object.entries(this.binaryCache))this.checkCompletion_(e)}async checkCompileCompletionAsync(){const e=[];if(this.gpgpu.parallelCompilationExtension){for(const[,t]of Object.entries(this.binaryCache))e.push(this.checkCompletionAsync_(t));return Promise.all(e)}for(const[,t]of Object.entries(this.binaryCache)){const n=new Promise((e=>{try{this.checkCompletion_(t),e(!0)}catch(n){throw n}}));e.push(n)}return Promise.all(e)}async checkCompletionAsync_(e){return this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.parallelCompilationExtension.COMPLETION_STATUS_KHR)?this.checkCompletion_(e):(await(0,S.nextFrame)(),this.checkCompletionAsync_(e))}checkCompletion_(e){if(!1===this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.gl.LINK_STATUS)){if(console.log(this.gpgpu.gl.getProgramInfoLog(e.webGLProgram)),!1===this.gpgpu.gl.getShaderParameter(e.fragmentShader,this.gpgpu.gl.COMPILE_STATUS))throw Ly(e.source,this.gpgpu.gl.getShaderInfoLog(e.fragmentShader)),new Error("Failed to compile fragment shader.");throw new Error("Failed to link vertex and fragment shaders.")}return!0}getUniformLocations(){for(const e of Object.values(this.binaryCache)){this.gpgpu.buildVao(e.webGLProgram);const{variablesLocations:t,customUniformLocations:n,infLoc:a,nanLoc:r,outShapeLocation:s,outShapeStridesLocation:o,outTexShapeLocation:i}=Mb(this.gpgpu,e.program,e.webGLProgram);e.variablesLocations=t,e.customUniformLocations=n,e.infLoc=a,e.nanLoc=r,e.outShapeLocation=s,e.outShapeStridesLocation=o,e.outTexShapeLocation=i}}createTensorFromGPUData(e,t,n){e.channels=e.channels||"RGBA";const{texture:a,height:r,width:s,channels:o}=e,i=(0,S.engine)().backend;if(!i.gpgpu.gl.isTexture(a))throw new Error("The texture is invalid. Also, please make sure the texture and the TFJS WebGL backend are using the same canvas. If you want to use your own custom canvas, you have to create and use the custom TFJS WebGL backend created from the canvas through 'new tf.MathBackendWebGL(customCanvas)'.");const c=i.writeTexture(a,t,n,r,s,o);return(0,S.engine)().makeTensorFromDataId(c,t,n,i)}}Nx.nextDataId=0;S.device_util.isBrowser()&&(0,S.registerBackend)("webgl",(()=>new Nx),2);class Ix{constructor(e,t,n){this.variableNames=["A","B"],this.outputShape=S.backend_util.assertAndGetBroadcastShape(t,n),this.enableShapeUniforms=Lb(this.outputShape.length),this.userCode="\n      float binaryOperation(float a, float b) {\n        ".concat(e,"\n      }\n\n      void main() {\n        float a = getAAtOutCoords();\n        float b = getBAtOutCoords();\n        setOutput(binaryOperation(a, b));\n      }\n    ")}}const Tx="\n  result.r = isNaN.r ? NAN : result.r;\n  result.g = isNaN.g ? NAN : result.g;\n  result.b = isNaN.b ? NAN : result.b;\n  result.a = isNaN.a ? NAN : result.a;\n";class Cx{constructor(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]&&arguments[3];this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=S.backend_util.assertAndGetBroadcastShape(t,n);const r=this.outputShape.length;this.enableShapeUniforms=Lb(r);let s="";if(a)if(0===r||1===S.util.sizeFromShape(this.outputShape))s="\n          result.y = 0.;\n          result.z = 0.;\n          result.w = 0.;\n        ";else{const e=Ab(r);if(s="\n          ".concat(e," coords = getOutputCoords();\n        "),1===r)this.enableShapeUniforms?s+="\n            result.y = (coords + 1) >= outShape ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          ":s+="\n            result.y = (coords + 1) >= ".concat(this.outputShape[0]," ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          ");else{const e=Jv("coords",r);this.enableShapeUniforms?s+="\n            bool nextRowOutOfBounds =\n              (".concat(e[r-2]," + 1) >= outShape[").concat(r," - 2];\n            bool nextColOutOfBounds =\n              (").concat(e[r-1]," + 1) >= outShape[").concat(r," - 1];\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          "):s+="\n            bool nextRowOutOfBounds =\n              (".concat(e[r-2]," + 1) >= ").concat(this.outputShape[r-2],";\n            bool nextColOutOfBounds =\n              (").concat(e[r-1]," + 1) >= ").concat(this.outputShape[r-1],";\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          ")}}this.userCode="\n      vec4 binaryOperation(vec4 a, vec4 b) {\n        ".concat(e,"\n      }\n\n      void main() {\n        vec4 a = getAAtOutCoords();\n        vec4 b = getBAtOutCoords();\n\n        vec4 result = binaryOperation(a, b);\n        ").concat(s,"\n\n        setOutput(result);\n      }\n    ")}}function Ex(e){const{inputs:t,backend:n}=e,{x:a}=t;return n.incRef(a.dataId),{dataId:a.dataId,shape:a.shape,dtype:a.dtype}}const _x={kernelName:S.Identity,backendName:"webgl",kernelFunc:Ex};function Ax(e){const{inputs:t,backend:n}=e,{real:a,imag:r}=t,s=n.makeTensorInfo(a.shape,"complex64"),o=n.texData.get(s.dataId),i=Ex({inputs:{x:a},backend:n}),c=Ex({inputs:{x:r},backend:n});return o.complexTensorInfos={real:i,imag:c},s}const Rx={kernelName:S.Complex,backendName:"webgl",kernelFunc:Ax},Fx="return (a < 0.) ? b * a : a;",Dx="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n";const Ox={kernelName:S.LeakyRelu,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{alpha:s}=a,o=n.makeTensorInfo([],"float32",S.util.createScalarValue(s,"float32")),i=(0,S.env)().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Cx(Dx,r.shape,o.shape):new Ix(Fx,r.shape,o.shape),c=n.runWebGLProgram(i,[r,o],"float32");return n.disposeIntermediateTensorInfo(o),c}},Mx="return (a < 0.) ? b * a : a;",zx="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n";const Lx={kernelName:S.Prelu,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:a,alpha:r}=t,s=(0,S.env)().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Cx(zx,a.shape,r.shape):new Ix(Mx,a.shape,r.shape);return n.runWebGLProgram(s,[a,r],"float32")}};function Bx(e){let{opSnippet:t,packedOpSnippet:n,cpuKernelImpl:a,dtype:r}=e;return e=>{let{inputs:s,backend:o}=e;const{x:i}=s,c=o,l=r||i.dtype;if(c.shouldExecuteOnCPU([i])&&null!=a){const e=c.texData.get(i.dataId),t=a(e.values,l);return c.makeTensorInfo(i.shape,l,t)}let u;return u=(0,S.env)().getBool("WEBGL_PACK_UNARY_OPERATIONS")&&null!=n?new vx(i.shape,n):new sx(i.shape,t),c.runWebGLProgram(u,[i],l)}}function Px(e){let{opSnippet:t,packedOpSnippet:n,checkOutOfBounds:a=!1,supportsComplex:r=!1,cpuKernelImpl:s,dtype:o}=e;return e=>{let{inputs:i,backend:c}=e;const{a:l,b:u}=i,d=c;if(r&&"complex64"===l.dtype){const e=d.texData.get(l.dataId),n=d.texData.get(u.dataId),[a,r]=[[e.complexTensorInfos.real,n.complexTensorInfos.real],[e.complexTensorInfos.imag,n.complexTensorInfos.imag]].map((e=>{const[n,a]=e,r={dataId:n.dataId,dtype:n.dtype,shape:l.shape},s={dataId:a.dataId,dtype:a.dtype,shape:u.shape},o=new Ix(t,l.shape,u.shape);return d.runWebGLProgram(o,[r,s],(0,S.upcastType)(n.dtype,a.dtype))})),s=Ax({inputs:{real:a,imag:r},backend:d});return d.disposeIntermediateTensorInfo(a),d.disposeIntermediateTensorInfo(r),s}const h=o||(0,S.upcastType)(l.dtype,u.dtype);if(("string"===l.dtype||"string"===u.dtype||d.shouldExecuteOnCPU([l,u]))&&null!=s){const e=d.texData.get(l.dataId).values,t=d.texData.get(u.dataId).values,n="string"===l.dtype?S.backend_util.fromUint8ToStringArray(e):e,a="string"===l.dtype?S.backend_util.fromUint8ToStringArray(t):t,[r,o]=s(l.shape,u.shape,n,a,h),i=d.makeTensorInfo(o,h);return d.texData.get(i.dataId).values=r,i}let p;return p=(0,S.env)().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&null!=n?new Cx(n,l.shape,u.shape,a):new Ix(t,l.shape,u.shape),d.runWebGLProgram(p,[l,u],h)}}function Vx(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];if("linear"===e)return t?fx:ix;if("relu"===e)return t?gx:ux;if("elu"===e)return t?mx:lx;if("relu6"===e)return t?yx:dx;if("prelu"===e)return t?zx:Mx;if("leakyrelu"===e)return t?Dx:Fx;if("sigmoid"===e)return t?bx:px;throw new Error("Activation ".concat(e," has not been implemented for the WebGL backend."))}class Wx{constructor(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]&&arguments[3],r=arguments.length>4&&void 0!==arguments[4]&&arguments[4],s=arguments.length>5&&void 0!==arguments[5]&&arguments[5],o=arguments.length>6&&void 0!==arguments[6]?arguments[6]:null,i=arguments.length>7&&void 0!==arguments[7]&&arguments[7],c=arguments.length>8&&void 0!==arguments[8]&&arguments[8];this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=n,this.enableShapeUniforms=Lb(this.outputShape.length);const l=a?e[1]:e[2],u=Math.ceil(l/2),d=a?"i * 2, rc.y":"rc.y, i * 2",h=r?"rc.z, i * 2":"i * 2, rc.z",p=a?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],f=r?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"];let m="",g="";o&&(m=i?"vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ".concat(o,"\n        }"):c?"vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ".concat(o,"\n        }"):"vec4 activation(vec4 x) {\n          ".concat(o,"\n        }"),g="result = activation(result);");const y=s?"result += getBiasAtOutCoords();":"";s&&this.variableNames.push("bias"),i&&this.variableNames.push("preluActivationWeights"),c&&this.variableNames.push("leakyreluAlpha");let b="rc.x",v="rc.x";e[0]<t[0]?b="imod(rc.x, ".concat(e[0],")"):t[0]<e[0]&&(v="imod(rc.x, ".concat(t[0],")")),this.userCode="\n      ".concat(m,"\n      // Don't use uniform for sharedDimensionPacked for performance.\n      const float sharedDimension = ").concat(u,".0;\n\n      vec4 dot2x2ARowBCol(ivec3 rc) {\n        vec4 result = vec4(0);\n        int batchA = ").concat(b,";\n        int batchB = ").concat(v,";\n        for (int i = 0; i < ").concat(u,"; i++) {\n          vec4 a = getMatrixA(batchA, ").concat(d,");\n          vec4 b = getMatrixB(batchB, ").concat(h,");\n\n          // These swizzled products need to be separately added.\n          // See: https://github.com/tensorflow/tfjs/issues/1735\n          result += (").concat(p[0]," * ").concat(f[0],");\n          result += (").concat(p[1]," * ").concat(f[1],");\n        }\n        return result;\n      }\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n        vec4 result = dot2x2ARowBCol(rc);\n\n        ").concat(y,"\n\n        ").concat(g,"\n\n        setOutput(result);\n      }\n    ")}}const Ux="return areal * breal - aimag * bimag;",Gx="return areal * bimag + aimag * breal;";class Hx{constructor(e,t,n){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=S.backend_util.assertAndGetBroadcastShape(t,n),this.userCode="\n      float binaryOpComplex(\n          float areal, float aimag, float breal, float bimag) {\n        ".concat(e,"\n      }\n\n      void main() {\n        float areal = getARealAtOutCoords();\n        float aimag = getAImagAtOutCoords();\n        float breal = getBRealAtOutCoords();\n        float bimag = getBImagAtOutCoords();\n        setOutput(binaryOpComplex(areal, aimag, breal, bimag));\n      }\n    ")}}const jx="return a * b;";function qx(e){const{inputs:t,backend:n}=e,{a:a,b:r}=t,s=S.backend_util.upcastType(a.dtype,r.dtype);if("complex64"===a.dtype){const e=n.texData.get(a.dataId),t=n.texData.get(r.dataId),s=new Hx(Ux,a.shape,r.shape),o=new Hx(Gx,a.shape,r.shape),i=[{dataId:e.complexTensorInfos.real.dataId,dtype:e.complexTensorInfos.real.dtype,shape:a.shape},{dataId:e.complexTensorInfos.imag.dataId,dtype:e.complexTensorInfos.imag.dtype,shape:a.shape},{dataId:t.complexTensorInfos.real.dataId,dtype:t.complexTensorInfos.real.dtype,shape:r.shape},{dataId:t.complexTensorInfos.imag.dataId,dtype:t.complexTensorInfos.imag.dtype,shape:r.shape}],c=n.runWebGLProgram(s,i,"float32"),l=n.runWebGLProgram(o,i,"float32"),u=Ax({inputs:{real:c,imag:l},backend:n});return n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(l),u}if(n.shouldExecuteOnCPU([a,r])){const e=n.texData.get(a.dataId),t=n.texData.get(r.dataId),[o,i]=Nv(a.shape,r.shape,e.values,t.values,s),c=n.makeTensorInfo(i,s);return n.texData.get(c.dataId).values=o,c}let o;return o=(0,S.env)().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Cx(jx,a.shape,r.shape):new Ix(jx,a.shape,r.shape),n.runWebGLProgram(o,[a,r],s)}const Xx={kernelName:S.Multiply,backendName:"webgl",kernelFunc:qx};function Kx(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{shape:s}=a,o=n,i=S.util.sizeFromShape(r.shape),c=S.util.inferFromImplicitShape(s,i),l=S.util.sizeFromShape(c);S.util.assert(i===l,(()=>"The new shape (".concat(c,") has ").concat(l," elements and the old ")+"shape (".concat(r.shape,") has ").concat(i," elements. The new shape and old ")+"shape must have the same number of elements."));const u=o.texData.get(r.dataId);return!u.isPacked||Yy(r.shape,c)||null!==u.texture&&Yy(u.shape,c)?(o.incRef(r.dataId),{dataId:r.dataId,shape:c,dtype:r.dtype}):function(e,t,n){const a=[qy(e.shape),...Xy(e.shape)],r={dtype:e.dtype,shape:a,dataId:e.dataId},s=[qy(t),...Xy(t)],o=new ex(s,a),i=[a],c=n.runWebGLProgram(o,[r],e.dtype,i,!0);return{dataId:c.dataId,shape:t,dtype:c.dtype}}(r,c,o)}const Qx={kernelName:S.Reshape,backendName:"webgl",kernelFunc:Kx};class Yx{constructor(e,t){this.variableNames=["x"];const{windowSize:n,batchSize:a,inSize:r,outSize:s}=e;this.outputShape=[a,s];const o=4*Math.floor(n/4),i=n%4;let c="sumValue += dot(values, ones);";if(null!=t){const e=1/t;c="sumValue += dot(values * ".concat(S.util.isInt(e)?e.toPrecision(2):e,", ones);")}let l="";r%n>0&&(l="\n        if (inIdx < 0 || inIdx >= ".concat(r,") {\n          return 0.0;\n        }\n      ")),this.userCode="\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ".concat(l,"\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ").concat(n,";\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ").concat(o,"; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ").concat(c,"\n        }\n\n        int inIdx = inOffset + ").concat(o,";\n        if (").concat(1===i,") {\n          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);\n\n          ").concat(c,"\n        } else if (").concat(2===i,") {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1), 0.0, 0.0);\n\n          ").concat(c,"\n        } else if (").concat(3===i,") {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2), 0.0);\n\n          ").concat(c,"\n        }\n        setOutput(sumValue);\n      }\n    ")}}class Zx{constructor(e,t){this.variableNames=["x"];const{windowSize:n,batchSize:a,inSize:r,outSize:s}=e;this.outputShape=[a,s];let o="0.0",i="";"prod"===t?o="1.0":"min"===t?(o="1.0 / 1e-20",i="min"):"max"===t&&(o="-1.0 / 1e-20",i="max");let c="".concat(t,"(").concat(t,"(").concat(t,"(")+"minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])";"sum"===t?c="sumValue":"prod"===t?c="prodValue":"all"===t?c="allValue":"any"===t&&(c="anyValue");const l=4*Math.floor(n/4),u=n%4;let d="\n      if (".concat("sum"===t,") {\n        sumValue += dot(values, ones);\n      } else if (").concat("prod"===t,") {\n        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);\n        prodValue *= tmp[0] * tmp[1];\n      } else {\n        minMaxValue = ").concat(i,"(values, minMaxValue);\n        if (").concat("min"===t," || ").concat("max"===t,") {\n          minMaxValue = ").concat(i,"(values, minMaxValue);\n          bvec4 isNaN = isnan(values);\n          if (isNaN.r || isNaN.g || isNaN.b || isNaN.a) {\n            minMaxValue = vec4(NAN);\n          }\n        }\n      }\n    "),h="vec4";"all"===t?(o="1.0",d="\n        bool reducedAllValue = all(values);\n        float floatedReducedAllValue = float(reducedAllValue);\n        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);\n      ",h="bvec4"):"any"===t&&(o="0.0",d="\n        bool reducedAnyValue = any(values);\n        float floatedReducedAnyValue = float(reducedAnyValue);\n        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);\n      ",h="bvec4");let p="";r%n>0&&(p="\n        if (inIdx < 0 || inIdx >= ".concat(r,") {\n          return initializationValue;\n        }\n      ")),this.userCode="\n      const float initializationValue = ".concat(o,";\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ").concat(p,"\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ").concat(n,";\n\n        vec4 minMaxValue = vec4(").concat(o,");\n        float prodValue = 1.0;\n        float sumValue = 0.0;\n        float allValue = 1.0;\n        float anyValue = 0.0;\n\n        for (int i = 0; i < ").concat(l,"; i += 4) {\n          int inIdx = inOffset + i;\n          ").concat(h," values = ").concat(h,"(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ").concat(d,"\n        }\n\n        int inIdx = inOffset + ").concat(l,";\n        if (").concat(1===u,") {\n          ").concat(h," values = ").concat(h,"(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          ").concat(d,"\n        } else if (").concat(2===u,") {\n          ").concat(h," values = ").concat(h,"(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          ").concat(d,"\n        } else if (").concat(3===u,") {\n          ").concat(h," values = ").concat(h,"(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          ").concat(d,"\n        }\n        setOutput(").concat(c,");\n      }\n    ")}}function Jx(e,t,n,a){const r=function(e){const t=[];for(;0===t.length||1!==t[t.length-1].outSize;){const n=t.length?t[t.length-1].outSize:e[1],a=S.backend_util.computeOptimalWindowSize(n);t.push({inSize:n,windowSize:a,outSize:Math.ceil(n/a)})}return t}(e.shape);let s=e;for(let o=0;o<r.length;o++){const{inSize:i,windowSize:c,outSize:l}=r[o];let u,d;u="mean"===n?0===o?new Yx({windowSize:c,inSize:i,batchSize:e.shape[0],outSize:l},i):new Yx({windowSize:c,inSize:i,batchSize:e.shape[0],outSize:l}):new Zx({windowSize:c,inSize:i,batchSize:e.shape[0],outSize:l},n),d=s,s=a.runWebGLProgram(u,[s],t),d.dataId!==e.dataId&&a.disposeIntermediateTensorInfo(d)}return s}class $x{constructor(e,t){this.variableNames=["A"];const n=new Array(e.length);for(let s=0;s<n.length;s++)n[s]=e[t[s]];this.outputShape=n,this.rank=n.length;const a=Ab(this.rank),r=function(e){const t=e.length;if(t>6)throw Error("Transpose for rank ".concat(t," is not yet supported"));const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],a=new Array(t);for(let r=0;r<e.length;r++)a[e[r]]=n[r];return a.join()}(t);this.userCode="\n    void main() {\n      ".concat(a," resRC = getOutputCoords();\n      setOutput(getA(").concat(r,"));\n    }\n    ")}}class ew{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;const n=new Array(e.length);for(let l=0;l<n.length;l++)n[l]=e[t[l]];if(this.outputShape=n,this.rank=n.length,this.rank>6)throw Error("Packed transpose for rank ".concat(this.rank," is not yet supported."));const a=Ab(this.rank),r=Zv("rc",this.rank),s=new Array(this.rank);for(let l=0;l<t.length;l++)s[t[l]]=r[l];const o="vec2(".concat(s.slice(-2).join(),")"),i="++".concat(r[this.rank-1]," < ").concat(n[this.rank-1]),c="getChannel(getA(".concat(s.join(),"), ").concat(o,")");this.userCode="\n    void main() {\n      ".concat(a," rc = getOutputCoords();\n      vec4 result = vec4(0.);\n      result[0] = ").concat(c,";\n      if(").concat(i,") {\n        result[1] = ").concat(c,";\n      }\n      --").concat(r[this.rank-1],";\n      if(++").concat(r[this.rank-2]," < ").concat(n[this.rank-2],") {\n        result[2] = ").concat(c,";\n        if(").concat(i,") {\n          result[3] = ").concat(c,";\n        }\n      }\n      setOutput(result);\n    }\n    ")}}function tw(e,t,n){const a=(0,S.env)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new ew(e.shape,t):new $x(e.shape,t);return n.runWebGLProgram(a,[e],e.dtype)}function nw(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s,keepDims:o}=a;return function(e,t,n,a){const r=t,s=e.shape.length,o=S.util.parseAxisParam(r,e.shape);let i=o;const c=S.backend_util.getAxesPermutation(i,s),l=null!=c;let u=e;l&&(u=tw(e,c,a),i=S.backend_util.getInnerMostAxes(i.length,s)),S.backend_util.assertAxesAreInnerMostDims("sum",i,s);const[d,h]=S.backend_util.computeOutAndReduceShapes(u.shape,i);let p=d;n&&(p=S.backend_util.expandShapeToKeepDim(d,o));const f=S.util.sizeFromShape(h),m=Kx({inputs:{x:u},attrs:{shape:[S.util.sizeFromShape(e.shape)/f,f]},backend:a}),g=Jx(m,(0,S.sumOutType)(e.dtype),"sum",a),y=Kx({inputs:{x:g},attrs:{shape:p},backend:a});return a.disposeIntermediateTensorInfo(m),a.disposeIntermediateTensorInfo(g),l&&a.disposeIntermediateTensorInfo(u),y}(r,s,o,n)}const aw={kernelName:S.Sum,backendName:"webgl",kernelFunc:nw};function rw(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{perm:s}=a,o=n,i=r.shape.length,c=new Array(i);for(let u=0;u<c.length;u++)c[u]=r.shape[s[u]];let l;if(o.shouldExecuteOnCPU([r])){const e=o.texData.get(r.dataId).values,t=Qv(e,r.shape,r.dtype,s,c);l=o.makeTensorInfo(c,r.dtype);o.texData.get(l.dataId).values=t}else l=tw(r,s,o);return l}const sw={kernelName:S.Transpose,backendName:"webgl",kernelFunc:rw};function ow(e){let{a:t,b:n,transposeA:a,transposeB:r,backend:s,bias:o=null,preluActivationWeights:i=null,leakyreluAlpha:c=0,activation:l=null}=e;const u=t.shape.length,d=n.shape.length,h=a?t.shape[u-2]:t.shape[u-1],p=r?n.shape[d-1]:n.shape[d-2],f=a?t.shape[u-1]:t.shape[u-2],m=r?n.shape[d-2]:n.shape[d-1],g=t.shape.slice(0,-2),y=n.shape.slice(0,-2),b=S.util.sizeFromShape(g),v=S.util.sizeFromShape(y),x=S.broadcast_util.assertAndGetBroadcastShape(t.shape.slice(0,-2),n.shape.slice(0,-2)).concat([f,m]);S.util.assert(h===p,(()=>"Error in matMul: inner shapes (".concat(h,") and (")+"".concat(p,") of Tensors with shapes ").concat(t.shape," and ")+"".concat(n.shape," and transposeA=").concat(a)+" and transposeB=".concat(r," must match.")));const w=a?[b,h,f]:[b,f,h],k=r?[v,m,p]:[v,p,m],N=Kx({inputs:{x:t},backend:s,attrs:{shape:w}}),I=Kx({inputs:{x:n},backend:s,attrs:{shape:k}}),T=[N,I],C=Math.max(b,v),E=a?N.shape[1]:N.shape[2],_=null!=o,A=null!=i,R="leakyrelu"===l,F=null!=l?Vx(l,!0):null;let D;if((1===f||1===m)&&E>1e3&&!1===(_||A||R||null!=F)){let e=N,t=I;a&&(e=rw({inputs:{x:N},backend:s,attrs:{perm:[0,2,1]}}),T.push(e)),r&&(t=rw({inputs:{x:I},backend:s,attrs:{perm:[0,2,1]}}),T.push(t));const n=1===m;let o=e;1!==m&&(o=Kx({inputs:{x:e},backend:s,attrs:{shape:[C,E,1]}}),T.push(o));const i=1===m?2:1;let c=t;n&&(c=Kx({inputs:{x:t},backend:s,attrs:{shape:[C,1,E]}}),T.push(c));const l=qx({inputs:{a:o,b:c},backend:s});D=nw({inputs:{x:l},backend:s,attrs:{axis:i,keepDims:!0}}),T.push(l)}else{const e=(0,S.upcastType)(t.dtype,n.dtype),l=new Wx(w,k,[C,f,m],a,r,_,F,A,R),u=[N,I];if(null!=o&&u.push(o),A&&u.push(i),R){const e=s.makeTensorInfo([],"float32",S.util.createScalarValue(c,"float32"));u.push(e),T.push(e)}D=s.runWebGLProgram(l,u,e)}const O=Kx({inputs:{x:D},backend:s,attrs:{shape:x}});T.push(D);for(const S of T)s.disposeIntermediateTensorInfo(S);return O}const iw={kernelName:S._FusedMatMul,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{a:r,b:s,bias:o,preluActivationWeights:i}=t,{transposeA:c,transposeB:l,activation:u,leakyreluAlpha:d}=a;return ow({a:r,b:s,transposeA:c,transposeB:l,backend:n,bias:o,preluActivationWeights:i,leakyreluAlpha:d,activation:u})}},cw="return abs(x);";const lw={kernelName:S.Abs,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:a}=t;if(n.shouldExecuteOnCPU([a])&&"complex64"!==a.dtype){const e=n.texData.get(a.dataId),t=Mv(e.values);return n.makeTensorInfo(a.shape,a.dtype,t)}let r;return r=(0,S.env)().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new vx(a.shape,cw):new sx(a.shape,cw),n.runWebGLProgram(r,[a],a.dtype)}},uw=Bx({opSnippet:"if (isnan(x)) return x;\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return acos(x);\n"}),dw={kernelName:S.Acos,backendName:"webgl",kernelFunc:uw},hw=Bx({opSnippet:"if (isnan(x)) return x;\n  if (x < 1.0) return NAN;\nreturn log(x + sqrt(x * x - 1.0));"}),pw={kernelName:S.Acosh,backendName:"webgl",kernelFunc:hw},fw="return a + b;",mw=Px({opSnippet:fw,packedOpSnippet:fw,supportsComplex:!0,cpuKernelImpl:nv}),gw={kernelName:S.Add,backendName:"webgl",kernelFunc:mw};class yw{constructor(e,t){this.outputShape=[],this.outputShape=e,this.variableNames=t.map(((e,t)=>"T".concat(t)));const n=[];this.variableNames.forEach((e=>{n.push("float v".concat(e," = get").concat(e,"AtOutCoords();"))}));const a=this.variableNames.map((e=>"v".concat(e))).join(" + ");this.userCode="\n      void main() {\n        ".concat(n.join("\n        "),"\n\n        float result = ").concat(a,";\n        setOutput(result);\n      }\n    ")}}class bw{constructor(e,t){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.variableNames=t.map(((e,t)=>"T".concat(t)));const n=[];this.variableNames.forEach((e=>{n.push("vec4 v".concat(e," = get").concat(e,"AtOutCoords();"))}));const a=this.variableNames.map((e=>"v".concat(e))).join(" + ");this.userCode="\n      void main() {\n        ".concat(n.join("\n        "),"\n\n        vec4 result = ").concat(a,";\n        setOutput(result);\n      }\n    ")}}const vw={kernelName:S.AddN,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:a}=t,r=n;if(1===r.length)return Ex({inputs:{x:r[0]},backend:a});if(r.length>(0,S.env)().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER")){const t=Math.floor(r.length/2),n=e({inputs:r.slice(0,t),backend:a}),s=e({inputs:r.slice(t),backend:a});return e({inputs:[n,s],backend:a})}const s=r.map((e=>e.dtype)).reduce(((e,t)=>(0,S.upcastType)(e,t))),o=r.map((e=>e.shape)),i=(0,S.env)().getBool("WEBGL_PACK")?new bw(r[0].shape,o):new yw(r[0].shape,o);return a.runWebGLProgram(i,r,s)}};const xw={kernelName:S.All,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s,keepDims:o}=a,i=r.shape.length,c=S.util.parseAxisParam(s,r.shape);let l=c;const u=S.backend_util.getAxesPermutation(l,i);let d=r;null!=u&&(d=rw({inputs:{x:r},backend:n,attrs:{perm:u}}),l=S.backend_util.getInnerMostAxes(l.length,i)),S.backend_util.assertAxesAreInnerMostDims("all",l,i);const[h,p]=S.backend_util.computeOutAndReduceShapes(d.shape,l),f=Kx({inputs:{x:d},backend:n,attrs:{shape:[-1,S.util.sizeFromShape(p)]}}),m=Jx(f,f.dtype,"all",n);let g;if(o){g=Kx({inputs:{x:m},backend:n,attrs:{shape:S.backend_util.expandShapeToKeepDim(h,c)}})}else g=Kx({inputs:{x:m},backend:n,attrs:{shape:h}});return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),null!=u&&n.disposeIntermediateTensorInfo(d),g}};const ww={kernelName:S.Any,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s,keepDims:o}=a,i=r.shape.length,c=S.util.parseAxisParam(s,r.shape);let l=c;const u=S.backend_util.getAxesPermutation(l,i);let d=r;null!=u&&(d=rw({inputs:{x:r},backend:n,attrs:{perm:u}}),l=S.backend_util.getInnerMostAxes(l.length,i)),S.backend_util.assertAxesAreInnerMostDims("any",l,i);const[h,p]=S.backend_util.computeOutAndReduceShapes(d.shape,l),f=Kx({inputs:{x:d},backend:n,attrs:{shape:[-1,S.util.sizeFromShape(p)]}}),m=Jx(f,f.dtype,"any",n);let g;if(o){g=Kx({inputs:{x:m},backend:n,attrs:{shape:S.backend_util.expandShapeToKeepDim(h,c)}})}else g=Kx({inputs:{x:m},backend:n,attrs:{shape:h}});return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),null!=u&&n.disposeIntermediateTensorInfo(d),g}};class kw{constructor(e,t,n){this.variableNames=["A"];const{windowSize:a,batchSize:r,outSize:s}=e;n||this.variableNames.push("bestIndicesA"),this.outputShape=[r,s];const o="max"===t?">":"<",i=n?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));";this.userCode="\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ".concat(a,";\n\n        int bestIndex = inOffset;\n        float bestValue = getA(batch, bestIndex);\n\n        for (int i = 0; i < ").concat(a,"; i++) {\n          int inIdx = ").concat(i,";\n          float candidate = getA(batch, inIdx);\n          if (candidate ").concat(o," bestValue) {\n            bestValue = candidate;\n            bestIndex = inIdx;\n          }\n        }\n        setOutput(float(bestIndex));\n      }\n    ")}}class Sw{constructor(e,t,n,a){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,S.util.assert(e.length>2,(()=>"Packed arg".concat(n.charAt(0).toUpperCase()+n.slice(1)," supports only inputs with rank above 2.")));const r=e[e.length-1],s=Math.ceil(r/t);this.outputShape=e.slice(0,-1),s>1&&this.outputShape.push(s),a||this.variableNames.push("bestIndicesA");const o=this.outputShape,i=o.length,c=Ab(i),l=Jv("coords",i);let u,d;if(1===s){d=i+1;const e=Ab(d);u="\n        ".concat(e," sourceLocR = ").concat(e,"(").concat(l.join(),", 0);\n        ++").concat(l[i-1],";\n        ").concat(e," sourceLocG = ").concat(e,"(").concat(l.join(),", 0);\n        ++").concat(l[i-2],";\n        ").concat(e," sourceLocA = ").concat(e,"(").concat(l.join(),", 0);\n        --").concat(l[i-1],";\n        ").concat(e," sourceLocB = ").concat(e,"(").concat(l.join(),", 0);\n        --").concat(l[i-2],";")}else d=i,u="\n        ".concat(c," sourceLocR = coords;\n        ++").concat(l[i-1],";\n        ").concat(c," sourceLocG = coords;\n        ++").concat(l[i-2],";\n        ").concat(c," sourceLocA = coords;\n        --").concat(l[i-1],";\n        ").concat(c," sourceLocB = coords;\n        --").concat(l[i-2],";");const h=["x","y","z","w","u","v"].slice(0,d),p="."+h[d-1],f=h.map((e=>"int "+e)),m=Jv("sourceLocR",d-1).concat("inIdx.r"),g=Jv("sourceLocG",d-1).concat("inIdx.g"),y=Jv("sourceLocB",d-1).concat("inIdx.b"),b=Jv("sourceLocA",d-1).concat("inIdx.a"),v="max"===n?"greaterThan":"lessThan",x=a?"":"\n          inIdx = round(vec4(getBestIndicesAChannel(".concat(m.join(),"),\n                             getBestIndicesAChannel(").concat(g.join(),"),\n                             getBestIndicesAChannel(").concat(y.join(),"),\n                             getBestIndicesAChannel(").concat(b.join(),")));"),w="vec4(\n            getAChannel(".concat(m.join(),"),\n            hasNextCol ? getAChannel(").concat(g.join(),") : 0.,\n            hasNextRow ? getAChannel(").concat(y.join(),") : 0.,\n            hasNextRow && hasNextCol ? getAChannel(").concat(b.join(),") : 0.)"),k=a?"":"\n      float getBestIndicesAChannel(".concat(f.join(),") {\n        return getChannel(getBestIndicesA(").concat(h.join(),"),\n                                          vec2(").concat(h.slice(-2).join(),"));\n      }");this.userCode="\n      float getAChannel(".concat(f.join(),") {\n        return getChannel(getA(").concat(h.join(),"),\n                               vec2(").concat(h.slice(-2).join(),"));\n      }\n      ").concat(k,"\n      void main() {\n        ").concat(c," coords = getOutputCoords();\n        bool hasNextCol = ").concat(l[i-1]," < ").concat(o[i-1]-1,";\n        bool hasNextRow = ").concat(l[i-2]," < ").concat(o[i-2]-1,";\n        ").concat(u,"\n        ivec4 srcIdx = ivec4(sourceLocR").concat(p,", sourceLocG").concat(p,",\n          sourceLocB").concat(p,", sourceLocA").concat(p,") * ").concat(t,";\n        ivec4 inIdx = srcIdx;\n        vec4 bestIndex = vec4(inIdx);\n        vec4 bestValue = ").concat(w,";\n\n        for (int i = 0; i < ").concat(t,"; i++) {\n          inIdx = srcIdx;\n          ").concat(x,"\n          vec4 candidate = ").concat(w,";\n          bvec4 nan = isnan(candidate);\n          bvec4 replace = bvec4(\n            vec4(").concat(v,"(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));\n\n          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,\n                           replace.y  ? candidate.y : bestValue.y,\n                           replace.z  ? candidate.z : bestValue.z,\n                           replace.w  ? candidate.w : bestValue.w);\n          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));\n          srcIdx++;\n        }\n        setOutput(bestIndex);\n      }\n    ")}}function Nw(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null,r=t.shape[0],s=t.shape[1];null!=a&&(r=a.shape[0],s=a.shape[1]);const o=S.backend_util.computeOptimalWindowSize(s),i={windowSize:o,inSize:s,batchSize:r,outSize:Math.ceil(s/o)},c=new kw(i,n,null==a),l=[t];null!=a&&l.push(a);const u=e.runWebGLProgram(c,l,"int32");if(1===u.shape[1])return u;const d=Nw(e,t,n,u);return e.disposeIntermediateTensorInfo(u),d}function Iw(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null;const r=null!=a?a.shape:t.shape,s=r[r.length-1],o=S.backend_util.computeOptimalWindowSize(s),i=new Sw(r,o,n,null==a),c=null==a?[t]:[t,a],l=e.runWebGLProgram(i,c,"int32");if(l.shape.length===t.shape.length){const a=Iw(e,t,n,l);return e.disposeIntermediateTensorInfo(l),a}return l}function Tw(e,t,n,a){const r=[n];if(S.backend_util.assertAxesAreInnerMostDims("arg"+a.charAt(0).toUpperCase()+a.slice(1),r,t.shape.length),!(0,S.env)().getBool("WEBGL_PACK_REDUCE")||t.shape.length<=2){const n=[],s=e.texData.get(t.dataId);let o=t;null!==s&&s.isPacked&&(o=e.unpackTensor(t),n.push(o));const[i,c]=S.backend_util.computeOutAndReduceShapes(o.shape,r),l=S.util.sizeFromShape(c),u=Kx({inputs:{x:o},backend:e,attrs:{shape:[-1,l]}});n.push(u);const d=Nw(e,u,a);n.push(d);const h=Kx({inputs:{x:d},backend:e,attrs:{shape:i}});return n.forEach((t=>e.disposeIntermediateTensorInfo(t))),h}return Iw(e,t,a)}const Cw={kernelName:S.ArgMax,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s}=a;let o=S.util.parseAxisParam(s,r.shape);const i=S.backend_util.getAxesPermutation(o,r.shape.length);let c=r;const l=[];null!=i&&(c=rw({inputs:{x:r},backend:n,attrs:{perm:i}}),l.push(c),o=S.backend_util.getInnerMostAxes(o.length,c.shape.length)),S.backend_util.assertAxesAreInnerMostDims("argMax",[o[0]],c.shape.length);const u=Tw(n,c,o[0],"max");return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),u}};const Ew={kernelName:S.ArgMin,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s}=a;let o=S.util.parseAxisParam(s,r.shape);const i=S.backend_util.getAxesPermutation(o,r.shape.length);let c=r;const l=[];null!=i&&(c=rw({inputs:{x:r},backend:n,attrs:{perm:i}}),l.push(c),o=S.backend_util.getInnerMostAxes(o.length,c.shape.length)),S.backend_util.assertAxesAreInnerMostDims("argMin",[o[0]],c.shape.length);const u=Tw(n,c,o[0],"min");return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),u}},_w=Bx({opSnippet:"if (isnan(x)) return x;\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return asin(x);\n"}),Aw={kernelName:S.Asin,backendName:"webgl",kernelFunc:_w},Rw=Bx({opSnippet:"if (isnan(x)) return x;return log(x + sqrt(x * x + 1.0));"}),Fw={kernelName:S.Asinh,backendName:"webgl",kernelFunc:Rw},Dw=Bx({opSnippet:"if (isnan(x)) return x;\n  return atan(x);\n"}),Ow={kernelName:S.Atan,backendName:"webgl",kernelFunc:Dw},Mw=Px({opSnippet:"\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return atan(a, b);\n",packedOpSnippet:"\n  vec4 result = atan(a, b);\n  bvec4 isNaNA = isnan(a);\n  bvec4 isNaNB = isnan(b);\n  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);\n  \n  result.r = isNaN.r ? NAN : result.r;\n  result.g = isNaN.g ? NAN : result.g;\n  result.b = isNaN.b ? NAN : result.b;\n  result.a = isNaN.a ? NAN : result.a;\n\n  return result;\n"}),zw={kernelName:S.Atan2,backendName:"webgl",kernelFunc:Mw},Lw=Bx({opSnippet:"if (isnan(x)) return x;\n  if ((x < -1.0) || (x > 1.0)) return NAN;\nreturn (log(1.0 + x) - log(1.0 - x)) / 2.0;"}),Bw={kernelName:S.Atanh,backendName:"webgl",kernelFunc:Lw};class Pw{constructor(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]&&arguments[3],r=arguments.length>4&&void 0!==arguments[4]&&arguments[4];if(this.variableNames=["x"],"avg"===t&&n)throw new Error("Cannot compute positions for average pool.");const s=e.filterWidth,o=e.strideHeight,i=e.strideWidth,c=e.dilationHeight,l=e.dilationWidth,u=e.effectiveFilterHeight,d=e.effectiveFilterWidth,h=e.padInfo.top,p=e.padInfo.left;this.outputShape=e.outShape;const f="avg"===t,m="((batch  * ".concat(e.inHeight," + xR) * ").concat(e.inWidth," + xC) * ").concat(e.inChannels," + d"),g="(xR * ".concat(e.inWidth," + xC) * ").concat(e.inChannels," + d");let y="0.0";if(f||(y="-1.0 / 1e-20"),n){const t=">=";return void(this.userCode="\n        const ivec2 strides = ivec2(".concat(o,", ").concat(i,");\n        const ivec2 pads = ivec2(").concat(h,", ").concat(p,");\n\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int batch = coords[0];\n          int d = coords[3];\n\n          ivec2 xRCCorner = coords.yz * strides - pads;\n          int xRCorner = xRCCorner.x;\n          int xCCorner = xRCCorner.y;\n\n          // max/min x(?, ?, d) to get y(yR, yC, d).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n          float avgValue = 0.0;\n\n          for (int wR = 0; wR < ").concat(u,";\n              wR += ").concat(c,") {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ").concat(e.inHeight,") {\n              continue;\n            }\n\n            for (int wC = 0; wC < ").concat(d,";\n                wC += ").concat(l,") {\n              int xC = xCCorner + wC;\n\n              if (xC < 0 || xC >= ").concat(e.inWidth,") {\n                continue;\n              }\n\n              float value = getX(batch, xR, xC, d);\n\n              // If a min / max value has already been found, use it. If not,\n              // use the current value.\n              float currMinMaxValue = mix(\n                  value, minMaxValue, minMaxValueFound);\n              if (value ").concat(t," currMinMaxValue) {\n                minMaxValue = value;\n                minMaxValueFound = 1.0;\n                minMaxPosition = ").concat(a?r?m:g:"wR * ".concat(d," + wC"),";\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      "))}let b="".concat(t,"(").concat(t,"(").concat(t,"(")+"minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])";"avg"===t&&(b="avgValue / max(count, 1.0)");const v=4*Math.floor(s/4),x=s%4,w="\n      if (".concat(f,") {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = ").concat("max","(values, minMaxValue);\n      }\n    ");this.userCode="\n      const ivec2 strides = ivec2(".concat(o,", ").concat(i,");\n      const ivec2 pads = ivec2(").concat(h,", ").concat(p,");\n      const float initializationValue = ").concat(y,";\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xR, int xC, int d) {\n        if (xC < 0 || xC >= ").concat(e.inWidth,") {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xR, xC, d);\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d = coords[3];\n\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // max/min x(?, ?, d) to get y(yR, yC, d).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(").concat(y,");\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wR = 0; wR < ").concat(u,";\n            wR += ").concat(c,") {\n          int xR = xRCorner + wR;\n\n          if (xR < 0 || xR >= ").concat(e.inHeight,") {\n            continue;\n          }\n\n          for (int wC = 0; wC < ").concat(v,"; wC += 4) {\n            int xC = xCCorner + wC * ").concat(l,";\n\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ").concat(l,", d),\n              getValue(batch, xR, xC + 2 * ").concat(l,", d),\n              getValue(batch, xR, xC + 3 * ").concat(l,", d)\n            );\n\n            ").concat(w,"\n          }\n\n          int xC = xCCorner + ").concat(v,";\n          if (").concat(1===x,") {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              initializationValue,\n              initializationValue,\n              initializationValue\n            );\n\n            ").concat(w,"\n          } else if (").concat(2===x,") {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ").concat(l,", d),\n              initializationValue,\n              initializationValue\n            );\n\n            ").concat(w,"\n          } else if (").concat(3===x,") {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ").concat(l,", d),\n              getValue(batch, xR, xC + 2 * ").concat(l,", d),\n              initializationValue\n            );\n\n            ").concat(w,"\n          }\n        }\n        setOutput(").concat(b,");\n      }\n    ")}}class Vw{constructor(e,t,n){let a=arguments.length>3&&void 0!==arguments[3]&&arguments[3],r=arguments.length>4&&void 0!==arguments[4]&&arguments[4];if(this.variableNames=["x"],"avg"===t&&n)throw new Error("Cannot compute positions for average pool.");const s=e.filterWidth,o=e.strideDepth,i=e.strideHeight,c=e.strideWidth,l=e.dilationDepth,u=e.dilationHeight,d=e.dilationWidth,h=e.effectiveFilterDepth,p=e.effectiveFilterHeight,f=e.effectiveFilterWidth,m=e.padInfo.front,g=e.padInfo.top,y=e.padInfo.left;this.outputShape=e.outShape;const b="avg"===t;let v="0.0";if(b||(v="-1.0 / 1e-20"),n){const t=">=";return void(this.userCode="\n        const ivec3 strides =\n            ivec3(".concat(o,", ").concat(i,", ").concat(c,");\n        const ivec3 pads = ivec3(").concat(m,", ").concat(g,", ").concat(y,");\n\n        void main() {\n          ivec5 coords = getOutputCoords();\n          int batch = coords.x;\n          int ch = coords.u;\n\n          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n          int xDCorner = xCorner.x;\n          int xRCorner = xCorner.y;\n          int xCCorner = xCorner.z;\n\n          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n\n          for (int wD = 0; wD < ").concat(h,";\n              wD += ").concat(l,") {\n            int xD = xDCorner + wD;\n\n            if (xD < 0 || xD >= ").concat(e.inDepth,") {\n              continue;\n            }\n\n            for (int wR = 0; wR < ").concat(p,";\n                wR += ").concat(u,") {\n              int xR = xRCorner + wR;\n\n              if (xR < 0 || xR >= ").concat(e.inHeight,") {\n                continue;\n              }\n\n              for (int wC = 0; wC < ").concat(f,";\n                  wC += ").concat(d,") {\n                int xC = xCCorner + wC;\n\n                if (xC < 0 || xC >= ").concat(e.inWidth,") {\n                  continue;\n                }\n\n                float value = getX(batch, xD, xR, xC, ch);\n\n                // If a min / max value has already been found, use it. If not,\n                // use the current value.\n                float currMinMaxValue = mix(\n                    value, minMaxValue, minMaxValueFound);\n                if (value ").concat(t," currMinMaxValue) {\n                  minMaxValue = value;\n                  minMaxValueFound = 1.0;\n                  minMaxPosition = ").concat(a?r?"(((batch * ".concat(e.inDepth," + xD) * ").concat(e.inHeight," + xR) * ").concat(e.inWidth," + xC) * ").concat(e.inChannels," + ch"):"((xD * ".concat(e.inHeight," + xR) * ").concat(e.inWidth," + xC) * ").concat(e.inChannels," + ch"):"wD * ".concat(p," * ").concat(f," +\n                      wR * ").concat(f," + wC"),";\n                }\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      "))}let x="".concat(t,"(").concat(t,"(").concat(t,"(")+"minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])";"avg"===t&&(x="avgValue / max(count, 1.0)");const w=4*Math.floor(s/4),k=s%4,S="\n      if (".concat(b,") {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = ").concat("max","(values, minMaxValue);\n      }\n    ");this.userCode="\n      const ivec3 strides =\n        ivec3(".concat(o,", ").concat(i,", ").concat(c,");\n      const ivec3 pads = ivec3(").concat(m,", ").concat(g,", ").concat(y,");\n      const float initializationValue = ").concat(v,";\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xD, int xR, int xC, int ch) {\n        if (xC < 0 || xC >= ").concat(e.inWidth,") {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xD, xR, xC, ch);\n      }\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xDCorner = xCorner.x;\n        int xRCorner = xCorner.y;\n        int xCCorner = xCorner.z;\n\n        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(").concat(v,");\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wD = 0; wD < ").concat(h,";\n            wD += ").concat(l,") {\n          int xD = xDCorner + wD;\n\n          if (xD < 0 || xD >= ").concat(e.inDepth,") {\n            continue;\n          }\n\n          for (int wR = 0; wR < ").concat(p,";\n            wR += ").concat(u,") {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ").concat(e.inHeight,") {\n              continue;\n            }\n\n            for (int wC = 0; wC < ").concat(w,"; wC += 4) {\n              int xC = xCCorner + wC * ").concat(d,";\n\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ").concat(d,", ch),\n                getValue(batch, xD, xR, xC + 2 * ").concat(d,", ch),\n                getValue(batch, xD, xR, xC + 3 * ").concat(d,", ch)\n              );\n\n              ").concat(S,"\n            }\n\n            int xC = xCCorner + ").concat(w,";\n            if (").concat(1===k,") {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                initializationValue,\n                initializationValue,\n                initializationValue\n              );\n\n              ").concat(S,"\n            } else if (").concat(2===k,") {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ").concat(d,", ch),\n                initializationValue,\n                initializationValue\n              );\n\n              ").concat(S,"\n            } else if (").concat(3===k,") {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ").concat(d,", ch),\n                getValue(batch, xD, xR, xC + 2 * ").concat(d,", ch),\n                initializationValue\n              );\n\n              ").concat(S,"\n            }\n          }\n        }\n        setOutput(").concat(x,");\n      }\n    ")}}const Ww={kernelName:S.AvgPool,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t;ab(r,"avgPool");const{filterSize:s,strides:o,pad:i,dimRoundingMode:c}=a;S.util.assert(S.backend_util.eitherStridesOrDilationsAreOne(o,1),(()=>"Error in avgPool: Either strides or dilations must be 1. "+"Got strides ".concat(o," and dilations '").concat(1,"'")));const l=S.backend_util.computePool2DInfo(r.shape,s,o,1,i,c);if(1===l.filterWidth&&1===l.filterHeight&&S.util.arraysEqual(l.inShape,l.outShape))return Ex({inputs:{x:r},backend:n});const u=new Pw(l,"avg",!1);return n.runWebGLProgram(u,[r],"float32")}};const Uw={kernelName:S.AvgPool3D,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{filterSize:s,strides:o,pad:i,dimRoundingMode:c,dataFormat:l}=a,u=S.backend_util.computePool3DInfo(r.shape,s,o,[1,1,1],i,c,l),d=new Vw(u,"avg",!1);return n.runWebGLProgram(d,[r],"float32")}};class Gw{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,a=e.strideHeight,r=e.strideWidth,s=e.dilationHeight,o=e.dilationWidth,i=e.effectiveFilterHeight,c=e.effectiveFilterWidth,l=i-1-e.padInfo.top,u=c-1-e.padInfo.left,d=1/(t*n);this.userCode="\n      const ivec2 pads = ivec2(".concat(l,", ").concat(u,");\n      const float avgMultiplier = float(").concat(d,");\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ").concat(i,";\n            wR += ").concat(s,") {\n          float dyR = float(dyRCorner + wR) / ").concat(a,".0;\n\n          if (dyR < 0.0 || dyR >= ").concat(e.outHeight,".0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ").concat(c,";\n            wC+= ").concat(o,") {\n            float dyC = float(dyCCorner + wC) / ").concat(r,".0;\n\n            if (dyC < 0.0 || dyC >= ").concat(e.outWidth,".0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n\n            dotProd += dyValue * avgMultiplier;\n          }\n        }\n        setOutput(dotProd);\n      }\n    ")}}class Hw{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.filterDepth,n=e.filterHeight,a=e.filterWidth,r=e.strideDepth,s=e.strideHeight,o=e.strideWidth,i=e.dilationDepth,c=e.dilationHeight,l=e.dilationWidth,u=e.effectiveFilterDepth,d=e.effectiveFilterHeight,h=e.effectiveFilterWidth,p=u-1-e.padInfo.front,f=d-1-e.padInfo.top,m=h-1-e.padInfo.left,g=1/(t*n*a);this.userCode="\n      const ivec3 pads = ivec3(".concat(p,", ").concat(f,", ").concat(m,");\n      const float avgMultiplier = float(").concat(g,");\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ").concat(u,";\n            wD += ").concat(i,") {\n          float dyD = float(dyDCorner + wD) / ").concat(r,".0;\n\n          if (dyD < 0.0 || dyD >= ").concat(e.outDepth,".0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ").concat(d,";\n              wR += ").concat(c,") {\n            float dyR = float(dyRCorner + wR) / ").concat(s,".0;\n\n            if (dyR < 0.0 || dyR >= ").concat(e.outHeight,".0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ").concat(h,";\n                wC += ").concat(l,") {\n              float dyC = float(dyCCorner + wC) / ").concat(o,".0;\n\n              if (dyC < 0.0 || dyC >= ").concat(e.outWidth,".0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n\n              dotProd += dyValue * avgMultiplier;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    ")}}const jw={kernelName:S.AvgPool3DGrad,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:r,input:s}=t,o=s,{filterSize:i,strides:c,pad:l,dimRoundingMode:u}=a,d=S.backend_util.computePool3DInfo(o.shape,i,c,[1,1,1],l,u),h=new Hw(d);return n.runWebGLProgram(h,[r],o.dtype)}};const qw={kernelName:S.AvgPoolGrad,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:r,input:s}=t,o=s;ab([r,s],"avgPoolGrad");const{filterSize:i,strides:c,pad:l}=a,u=S.backend_util.computePool2DInfo(o.shape,i,c,1,l),d=new Gw(u);return n.runWebGLProgram(d,[r],o.dtype)}};const Xw={kernelName:S.BatchMatMul,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{a:r,b:s}=t,{transposeA:o,transposeB:i}=a;return ow({a:r,b:s,transposeA:o,transposeB:i,backend:n})}};class Kw{constructor(e,t,n,a,r,s){this.outputShape=[],this.variableNames=["x","mean","variance"],S.backend_util.assertAndGetBroadcastShape(e,t),S.backend_util.assertAndGetBroadcastShape(e,n);let o="0.0";null!=a&&(S.backend_util.assertAndGetBroadcastShape(e,a),this.variableNames.push("offset"),o="getOffsetAtOutCoords()");let i="1.0";null!=r&&(S.backend_util.assertAndGetBroadcastShape(e,r),this.variableNames.push("scale"),i="getScaleAtOutCoords()"),this.outputShape=e,this.userCode="\n      void main() {\n        float x = getXAtOutCoords();\n        float mean = getMeanAtOutCoords();\n        float variance = getVarianceAtOutCoords();\n        float offset = ".concat(o,";\n        float scale = ").concat(i,";\n        float inv = scale * inversesqrt(variance + float(").concat(s,"));\n        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));\n      }\n    ")}}class Qw{constructor(e,t,n,a,r,s){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],S.backend_util.assertAndGetBroadcastShape(e,t),S.backend_util.assertAndGetBroadcastShape(e,n);let o="vec4(0.0)";null!=a&&(S.backend_util.assertAndGetBroadcastShape(e,a),this.variableNames.push("offset"),o="getOffsetAtOutCoords()");let i="vec4(1.0)";null!=r&&(S.backend_util.assertAndGetBroadcastShape(e,r),this.variableNames.push("scale"),i="getScaleAtOutCoords()"),this.outputShape=e,this.userCode="\n      void main() {\n        vec4 offset = ".concat(o,";\n        vec4 scale = ").concat(i,";\n\n        vec4 x = getXAtOutCoords();\n        vec4 mean = getMeanAtOutCoords();\n        vec4 variance = getVarianceAtOutCoords();\n\n        vec4 inv = scale * inversesqrt(variance + vec4(").concat(s,"));\n\n        setOutput((x - mean) * inv + offset);\n      }\n    ")}}const Yw={kernelName:S.FusedBatchNorm,backendName:"webgl",kernelFunc:e=>{let{inputs:t,backend:n,attrs:a}=e;const{x:r,mean:s,variance:o,offset:i,scale:c}=t;S.util.assert(s.shape.length===o.shape.length,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),S.util.assert(null==i||s.shape.length===i.shape.length,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),S.util.assert(null==c||s.shape.length===c.shape.length,(()=>"Batch normalization gradient requires mean and scale to have equal ranks."));let{varianceEpsilon:l}=a;null==l&&(l=.001);const u=[r,s,o];let d=null;null!=i&&(d=i.shape,u.push(i));let h=null;null!=c&&(h=c.shape,u.push(c));const p=(0,S.env)().getBool("WEBGL_PACK_NORMALIZATION")?new Qw(r.shape,s.shape,o.shape,d,h,l):new Kw(r.shape,s.shape,o.shape,d,h,l);return n.runWebGLProgram(p,u,u[0].dtype)}};class Zw{constructor(e){this.variableNames=["source"],this.outputShape=e,this.rank=e.length;const t=Ab(this.rank);this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const n=function(e){if(1===e)return"sourceLoc";if(e<=6)return Jw.slice(0,e).map((e=>"sourceLoc."+e)).join(",");throw Error("Slicing for rank ".concat(e," is not yet supported"))}(this.rank);let a;const r=e.map(((e,t)=>"sourceLoc.".concat(Jw[t]," = start[").concat(t,"] + coords.").concat(Jw[t],";")));a="\n        ".concat(t," sourceLoc;\n        ").concat(t," coords = getOutputCoords();\n        ").concat(r.join("\n"),"\n      "),this.userCode="\n      void main() {\n        ".concat(a,"\n        setOutput(getSource(").concat(n,"));\n      }\n    ")}}const Jw=["x","y","z","w","u","v"];class $w{constructor(e){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const t=Ab(this.rank),n=Jv("coords",this.rank),a=Jv("sourceLoc",this.rank),r=1===this.rank?"sourceLoc":"vec2(".concat(a.slice(-2).join(),")"),s="getChannel(getSource(".concat(a.join(),"), ").concat(r,")"),o="\n      result.x = ".concat(s,";\n      if (++").concat(n[this.rank-1]," < ").concat(e[this.rank-1],") {\n        ++").concat(a[this.rank-1],";\n        result.y = ").concat(s,";\n        --").concat(a[this.rank-1],";\n      }\n    "),i=1===this.rank?"":"\n      --".concat(n[this.rank-1],";\n      if (++").concat(n[this.rank-2]," < ").concat(e[this.rank-2],") {\n        ++").concat(a[this.rank-2],";\n        result.z = ").concat(s,";\n        if (++").concat(n[this.rank-1]," < ").concat(e[this.rank-1],") {\n          ++").concat(a[this.rank-1],";\n          result.w = ").concat(s,";\n        }\n      }\n    "),c=this.rank<=4?"sourceLoc = coords +\n            ".concat(t,"(").concat(e.map(((e,t)=>"start[".concat(t,"]"))).join(),");"):e.map(((e,t)=>"".concat(a[t]," = ").concat(n[t]," + start[").concat(t,"];"))).join("\n");this.userCode="\n      void main() {\n        ".concat(t," coords = getOutputCoords();\n        ").concat(t," sourceLoc;\n        ").concat(c,"\n        vec4 result = vec4(0.);\n        ").concat(o,"\n        ").concat(i,"\n        setOutput(result);\n      }\n    ")}}function ek(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{begin:s,size:o}=a,[i,c]=S.slice_util.parseSliceParams(r,s,o);if(S.slice_util.assertParamsValid(r,i,c),0===S.util.sizeFromShape(c))return n.makeTensorInfo(c,r.dtype,[]);if(n.shouldExecuteOnCPU([r])||"string"===r.dtype){const e=n.texData.get(r.dataId),t=zv(e.values,i,c,r.shape,r.dtype);return n.makeTensorInfo(c,r.dtype,t)}const{isPacked:l}=n.texData.get(r.dataId),u=S.slice_util.isSliceContinous(r.shape,i,c);if(l||!u){const e=(0,S.env)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new $w(c):new Zw(c),t=[i];return n.runWebGLProgram(e,[r],r.dtype,t)}return n.uploadToGPU(r.dataId),function(e,t,n,a){const r=a.texData.get(e.dataId),s=a.makeTensorInfo(n,e.dtype),o=a.texData.get(s.dataId);Object.assign(o,r),o.refCount=1,o.shape=n,o.dtype=e.dtype;let i=S.slice_util.computeFlatOffset(t,S.util.computeStrides(e.shape));r.slice&&(i+=r.slice.flatOffset),o.slice={flatOffset:i,origDataId:r.slice&&r.slice.origDataId||e.dataId};const c=a.dataRefCount.get(o.slice.origDataId)||1;return a.dataRefCount.set(o.slice.origDataId,c+1),s}(r,i,c,n)}const tk={kernelName:S.Slice,backendName:"webgl",kernelFunc:ek},nk={kernelName:S.BatchToSpaceND,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{blockShape:s,crops:o}=a;S.util.assert(r.shape.length<=4,(()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet"));const i=s.reduce(((e,t)=>e*t)),c=S.backend_util.getReshaped(r.shape,s,i),l=S.backend_util.getPermuted(c.length,s.length),u=S.backend_util.getReshapedPermuted(r.shape,s,i),d=S.backend_util.getSliceBeginCoords(o,s.length),h=S.backend_util.getSliceSize(u,o,s.length),p=[],f=Kx({inputs:{x:r},backend:n,attrs:{shape:c}}),m=rw({inputs:{x:f},backend:n,attrs:{perm:l}}),g=Kx({inputs:{x:m},backend:n,attrs:{shape:u}}),y=ek({inputs:{x:g},backend:n,attrs:{begin:d,size:h}});return p.push(f),p.push(m),p.push(g),p.forEach((e=>n.disposeIntermediateTensorInfo(e))),y}};const ak={kernelName:S.Bincount,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,weights:s}=t,{size:o}=a,i=n.readSync(r.dataId),c=n.readSync(s.dataId),l=av(i,c,s.dtype,s.shape,o);return n.makeTensorInfo([o],s.dtype,l)}};const rk={kernelName:S.BitwiseAnd,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{a:a,b:r}=t,s=(0,S.env)().getBool("WEBGL_PACK_BINARY_OPERATIONS"),o=(0,S.env)().getNumber("WEBGL_VERSION");if(n.shouldExecuteOnCPU([a,r])||1===o){const e=n.texData.get(a.dataId).values,t=n.texData.get(r.dataId).values,[s,o]=sv(a.shape,r.shape,e,t,a.dtype),i=n.makeTensorInfo(o,a.dtype);return n.texData.get(i.dataId).values=s,i}let i;return i=s?new Cx("\n  int r = int(a.r) & int(b.r);\n  int g = int(a.g) & int(b.g);\n  int rb = int(a.b) & int(b.b);\n  int ra = int(a.a) & int(b.a);\n  return vec4(r, g, rb, ra);\n",a.shape,r.shape,!1):new Ix("\n  return float(int(a.r) & int(b.r));\n",a.shape,r.shape),n.runWebGLProgram(i,[a,r],a.dtype)}};const sk={kernelName:S.BroadcastArgs,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{s0:a,s1:r}=t,s=n.readSync(a.dataId),o=n.readSync(r.dataId),i=S.backend_util.assertAndGetBroadcastShape(Array.from(s),Array.from(o));return n.makeTensorInfo([i.length],"int32",Int32Array.from(i))}},ok=Px({opSnippet:"return float(a != b);",cpuKernelImpl:Tv,dtype:"bool"}),ik={kernelName:S.NotEqual,backendName:"webgl",kernelFunc:ok};function ck(e){const{inputs:t,backend:n}=e,{input:a}=t;return Ex({inputs:{x:n.texData.get(a.dataId).complexTensorInfos.real},backend:n})}const lk={kernelName:S.Real,backendName:"webgl",kernelFunc:ck};const uk={kernelName:S.Cast,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:a,attrs:r}=t,{x:s}=n,{dtype:o}=r;if("complex64"===o){if("complex64"===s.dtype)return Ex({inputs:{x:s},backend:a});const t=S.zeros(s.shape),n=e({inputs:{x:s},backend:a,attrs:{dtype:"float32"}}),r=Ax({inputs:{real:n,imag:t},backend:a});return t.dispose(),a.disposeIntermediateTensorInfo(n),r}if("complex64"===s.dtype){const t=ck({inputs:{input:s},backend:a}),n=e({inputs:{x:t},backend:a,attrs:{dtype:o}});return a.disposeIntermediateTensorInfo(t),n}if(!S.util.hasEncodingLoss(s.dtype,o)){const e=Ex({inputs:{x:s},backend:a});return{dataId:e.dataId,shape:e.shape,dtype:o}}if(a.shouldExecuteOnCPU([s])){const e=a.texData.get(s.dataId).values,[t,n,r]=ov(e,s.shape,s.dtype,o);return a.makeTensorInfo(t,n,r)}if("int32"===o)return function(e,t){const n=new sx(e.shape,"return float(int(x));"),a=t.runWebGLProgram(n,[e],"int32");return{dataId:a.dataId,shape:a.shape,dtype:a.dtype}}(s,a);if("bool"===o){const e=a.makeTensorInfo([],"bool",S.util.getTypedArrayFromDType("bool",1)),t=ok({inputs:{a:s,b:e},backend:a});return a.disposeIntermediateTensorInfo(e),t}throw new Error("Error in Cast: failed to cast ".concat(s.dtype," to ").concat(o))}},dk="return ceil(x);",hk=Bx({opSnippet:dk,packedOpSnippet:dk,cpuKernelImpl:iv}),pk={kernelName:S.Ceil,backendName:"webgl",kernelFunc:hk};class fk{constructor(e){this.variableNames=["A"],this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode="\n\n      void main() {\n        float value = getAAtOutCoords();\n        if (isnan(value)) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, minVal, maxVal));\n      }\n    "}}class mk{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode="\n      void main() {\n        vec4 value = getAAtOutCoords();\n\n        if (any(isnan(value))) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));\n      }\n    "}}const gk={kernelName:S.ClipByValue,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{clipValueMin:s,clipValueMax:o}=a;let i;i=(0,S.env)().getBool("WEBGL_PACK_CLIP")?new mk(r.shape):new fk(r.shape);const c=[[s],[o]];return n.runWebGLProgram(i,[r],r.dtype,c)}};class yk{constructor(e){this.variableNames=["real","imag"],this.outputShape=e,this.userCode="\n      void main() {\n        float re = abs(getRealAtOutCoords());\n        float im = abs(getImagAtOutCoords());\n        float mx = max(re, im);\n\n        // sadly the length function in glsl is not underflow-safe\n        // (at least not on Intel GPUs). So the safe solution is\n        // to ensure underflow-safety in all cases.\n        setOutput(\n          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))\n        );\n      }\n    "}}function bk(e,t){return{dataId:t.dataId,dtype:t.dtype,shape:e.shape}}const vk={kernelName:S.ComplexAbs,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:a}=t,r=n.texData.get(a.dataId),s=new yk(a.shape),o=[bk(a,r.complexTensorInfos.real),bk(a,r.complexTensorInfos.imag)];return n.runWebGLProgram(s,o,o[0].dtype)}};class xk{constructor(e){this.outputShape=[],this.outputShape=S.backend_util.computeOutShape(e,1),this.variableNames=e.map(((e,t)=>"T".concat(t)));const t=new Array(e.length-1);t[0]=e[0][1];for(let s=1;s<t.length;s++)t[s]=t[s-1]+e[s][1];const n=["if (yC < ".concat(t[0],") setOutput(getT0(yR, yC));")];for(let s=1;s<t.length;s++){const e=t[s-1];n.push("else if (yC < ".concat(t[s],") ")+"setOutput(getT".concat(s,"(yR, yC-").concat(e,"));"))}const a=t.length,r=t[t.length-1];n.push("else setOutput(getT".concat(a,"(yR, yC-").concat(r,"));")),this.userCode="\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int yR = coords.x;\n        int yC = coords.y;\n\n        ".concat(n.join("\n        "),"\n      }\n    ")}}class wk{constructor(e,t){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=S.backend_util.computeOutShape(e,t);const n=this.outputShape,a=n.length,r=Ab(a),s=Jv("coords",a),o=["x","y","z","w","u","v"].slice(0,a);this.variableNames=e.map(((e,t)=>"T".concat(t)));const i=new Array(e.length-1);i[0]=e[0][t];for(let f=1;f<i.length;f++)i[f]=i[f-1]+e[f][t];const c=o[t],l=o.slice(-2),u=o.join();let d="if (".concat(c," < ").concat(i[0],") {\n        return getChannel(\n            getT0(").concat(u,"), vec2(").concat(l.join(),"));\n        }");for(let f=1;f<i.length;f++){const e=i[f-1];d+="\n        if (".concat(c," < ").concat(i[f],"  && ").concat(c," >= ").concat(i[f-1],") {\n          return getChannel(\n            getT").concat(f,"(").concat(kk(o,c,e),"),\n            vec2(").concat(kk(l,c,e),"));\n        }")}const h=i.length,p=i[i.length-1];d+="\n        return getChannel(\n          getT".concat(h,"(").concat(kk(o,c,p),"),\n          vec2(").concat(kk(l,c,p),"));"),this.userCode="\n      float getValue(".concat(o.map((e=>"int "+e)),") {\n        ").concat(d,"\n      }\n\n      void main() {\n        ").concat(r," coords = getOutputCoords();\n        vec4 result = vec4(getValue(").concat(s,"), 0., 0., 0.);\n\n        ").concat(s[a-1]," = ").concat(s[a-1]," + 1;\n        if (").concat(s[a-1]," < ").concat(n[a-1],") {\n          result.g = getValue(").concat(s,");\n        }\n\n        ").concat(s[a-2]," = ").concat(s[a-2]," + 1;\n        if (").concat(s[a-2]," < ").concat(n[a-2],") {\n          result.a = getValue(").concat(s,");\n        }\n\n        ").concat(s[a-1]," = ").concat(s[a-1]," - 1;\n        if (").concat(s[a-2]," < ").concat(n[a-2]," &&\n            ").concat(s[a-1]," < ").concat(n[a-1],") {\n          result.b = getValue(").concat(s,");\n        }\n        setOutput(result);\n      }\n    ")}}function kk(e,t,n){const a=e.indexOf(t);return e.map(((e,t)=>t===a?"".concat(e," - ").concat(n):e)).join()}function Sk(e){const{inputs:t,backend:n}=e,{input:a}=t;return Ex({inputs:{x:n.texData.get(a.dataId).complexTensorInfos.imag},backend:n})}const Nk={kernelName:S.Imag,backendName:"webgl",kernelFunc:Sk};function Ik(e,t,n){const a=e[0].dtype;if("complex64"===a){const a=e.map((e=>ck({inputs:{input:e},backend:n}))),r=e.map((e=>Sk({inputs:{input:e},backend:n}))),s=Ik(a,t,n),o=Ik(r,t,n),i=Ax({inputs:{real:s,imag:o},backend:n});return a.forEach((e=>n.disposeIntermediateTensorInfo(e))),r.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(o),i}let r=n.shouldExecuteOnCPU(e);if("string"===a&&(r=!0),r){const r=e.map((e=>{const a=S.util.sizeFromShape(e.shape.slice(t));return Kx({inputs:{x:e},backend:n,attrs:{shape:[-1,a]}})})),s=r.map((e=>({vals:n.readSync(e.dataId),shape:e.shape}))),o=S.backend_util.computeOutShape(r.map((e=>e.shape)),1),i=1===r[0].shape[0],c=cv(s,o,a,i),l=S.backend_util.computeOutShape(e.map((e=>e.shape)),t),u=n.makeTensorInfo(l,a,c);return r.forEach((e=>n.disposeIntermediateTensorInfo(e))),u}const s=e.filter((e=>S.util.sizeFromShape(e.shape)>0)),o=(0,S.env)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&s[0].shape.length>1;if(1===s.length){const t=o?new sx(e[0].shape,hx):new vx(e[0].shape,hx);return n.runWebGLProgram(t,e,a)}const i=(0,S.env)().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER");if(s.length>i){const e=[];for(let r=0;r<s.length;r+=i){const a=s.slice(r,r+i);e.push(Ik(a,t,n))}const a=Ik(e,t,n);for(const t of e)n.disposeIntermediateTensorInfo(t);return a}if(o){const e=new wk(s.map((e=>e.shape)),t);return n.runWebGLProgram(e,s,a)}const{tensors2D:c,outShape:l}=function(e,t,n){const a=S.backend_util.computeOutShape(e.map((e=>e.shape)),t);return{tensors2D:e.map((e=>Kx({inputs:{x:e},attrs:{shape:[-1,S.util.sizeFromShape(e.shape.slice(t))]},backend:n}))),outShape:a}}(s,t,n),u=new xk(c.map((e=>e.shape))),d=n.runWebGLProgram(u,c,a);c.forEach((e=>n.disposeIntermediateTensorInfo(e)));const h=Kx({inputs:{x:d},attrs:{shape:l},backend:n});return n.disposeIntermediateTensorInfo(d),h}function Tk(e){const{inputs:t,backend:n,attrs:a}=e,{axis:r}=a,s=S.util.parseAxisParam(r,t[0].shape)[0],o=t.map((e=>e.shape));S.backend_util.assertParamsConsistent(o,s);const i=S.backend_util.computeOutShape(t.map((e=>e.shape)),s);if(0===S.util.sizeFromShape(i))return n.makeTensorInfo(i,t[0].dtype,[]);const c=t.filter((e=>S.util.sizeFromShape(e.shape)>0));return 1===c.length?Ex({inputs:{x:c[0]},backend:n}):Ik(c,s,n)}const Ck={kernelName:S.Concat,backendName:"webgl",kernelFunc:Tk};class Ek{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,a=arguments.length>3&&void 0!==arguments[3]&&arguments[3],r=arguments.length>4&&void 0!==arguments[4]&&arguments[4];this.variableNames=["x","W"],this.outputShape=e.outShape;const s=e.padInfo.top,o=e.padInfo.left,i=e.strideHeight,c=e.strideWidth,l=e.dilationHeight,u=e.dilationWidth,d=e.filterHeight,h=e.filterWidth,p=4*Math.floor(e.inChannels/4),f=e.inChannels%4,m="channelsLast"===e.dataFormat,g=m?1:2,y=m?2:3,b=m?3:1;let v="",x="";n&&(v=a?"float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ".concat(n,"\n        }"):r?"float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ".concat(n,"\n        }"):"\n          float activation(float x) {\n            ".concat(n,"\n          }\n        "),x="result = activation(result);");const w=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),a&&this.variableNames.push("preluActivationWeights"),r&&this.variableNames.push("leakyreluAlpha"),this.userCode="\n      ".concat(v,"\n\n      const ivec2 strides = ivec2(").concat(i,", ").concat(c,");\n      const ivec2 pads = ivec2(").concat(s,", ").concat(o,");\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d2 = coords[").concat(b,"];\n\n        ivec2 xRCCorner =\n            ivec2(coords[").concat(g,"], coords[").concat(y,"]) * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ").concat(d,"; wR++) {\n          int xR = xRCorner + wR * ").concat(l,";\n\n          if (xR < 0 || xR >= ").concat(e.inHeight,") {\n            continue;\n          }\n\n          for (int wC = 0; wC < ").concat(h,"; wC++) {\n            int xC = xCCorner + wC * ").concat(u,";\n\n            if (xC < 0 || xC >= ").concat(e.inWidth,") {\n              continue;\n            }\n\n            for (int d1 = 0; d1 < ").concat(p,"; d1 += 4) {\n              vec4 wValues = vec4(\n                getW(wR, wC, d1, d2),\n                getW(wR, wC, d1 + 1, d2),\n                getW(wR, wC, d1 + 2, d2),\n                getW(wR, wC, d1 + 3, d2)\n              );\n\n              if (").concat(m,") {\n                vec4 xValues = vec4(\n                  getX(batch, xR, xC, d1),\n                  getX(batch, xR, xC, d1 + 1),\n                  getX(batch, xR, xC, d1 + 2),\n                  getX(batch, xR, xC, d1 + 3)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec4 xValues = vec4(\n                  getX(batch, d1, xR, xC),\n                  getX(batch, d1 + 1, xR, xC),\n                  getX(batch, d1 + 2, xR, xC),\n                  getX(batch, d1 + 3, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n\n            if (").concat(1===f,") {\n\n              if (").concat(m,") {\n                dotProd +=\n                    getX(batch, xR, xC, ").concat(p,") *\n                    getW(wR, wC, ").concat(p,", d2);\n              } else {\n                dotProd +=\n                    getX(batch, ").concat(p,", xR, xC) *\n                    getW(wR, wC, ").concat(p,", d2);\n              }\n\n            } else if (").concat(2===f,") {\n              vec2 wValues = vec2(\n                getW(wR, wC, ").concat(p,", d2),\n                getW(wR, wC, ").concat(p," + 1, d2)\n              );\n\n              if (").concat(m,") {\n                vec2 xValues = vec2(\n                  getX(batch, xR, xC, ").concat(p,"),\n                  getX(batch, xR, xC, ").concat(p," + 1)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec2 xValues = vec2(\n                  getX(batch, ").concat(p,", xR, xC),\n                  getX(batch, ").concat(p," + 1, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            } else if (").concat(3===f,") {\n              vec3 wValues = vec3(\n                getW(wR, wC, ").concat(p,", d2),\n                getW(wR, wC, ").concat(p," + 1, d2),\n                getW(wR, wC, ").concat(p," + 2, d2)\n              );\n\n              if (").concat(m,") {\n                vec3 xValues = vec3(\n                  getX(batch, xR, xC, ").concat(p,"),\n                  getX(batch, xR, xC, ").concat(p," + 1),\n                  getX(batch, xR, xC, ").concat(p," + 2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec3 xValues = vec3(\n                  getX(batch, ").concat(p,", xR, xC),\n                  getX(batch, ").concat(p," + 1, xR, xC),\n                  getX(batch, ").concat(p," + 2, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            }\n          }\n        }\n\n        float result = dotProd;\n        ").concat(w,"\n        ").concat(x,"\n        setOutput(result);\n      }\n    ")}}class _k{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const t=e.padInfo.front,n=e.padInfo.top,a=e.padInfo.left,r=e.strideDepth,s=e.strideHeight,o=e.strideWidth,i=e.dilationDepth,c=e.dilationHeight,l=e.dilationWidth,u=e.filterDepth,d=e.filterHeight,h=e.filterWidth,p=4*Math.floor(e.inChannels/4),f=e.inChannels%4;this.userCode="\n      const ivec3 strides = ivec3(".concat(r,", ").concat(s,", ").concat(o,");\n      const ivec3 pads = ivec3(").concat(t,", ").concat(n,", ").concat(a,");\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d2 = coords.u;\n\n        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xFCorner = xFRCCorner.x;\n        int xRCorner = xFRCCorner.y;\n        int xCCorner = xFRCCorner.z;\n\n        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get\n        // y(yF, yR, yC, d2). ? = to be determined. : = across all\n        // values in that axis.\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ").concat(u,"; wF++) {\n          int xF = xFCorner + wF * ").concat(i,";\n\n          if (xF < 0 || xF >= ").concat(e.inDepth,") {\n            continue;\n          }\n\n          for (int wR = 0; wR < ").concat(d,"; wR++) {\n            int xR = xRCorner + wR * ").concat(c,";\n\n            if (xR < 0 || xR >= ").concat(e.inHeight,") {\n              continue;\n            }\n\n            for (int wC = 0; wC < ").concat(h,"; wC++) {\n              int xC = xCCorner + wC * ").concat(l,";\n\n              if (xC < 0 || xC >= ").concat(e.inWidth,") {\n                continue;\n              }\n\n              for (int d1 = 0; d1 < ").concat(p,"; d1 += 4) {\n                vec4 xValues = vec4(\n                  getX(batch, xF, xR, xC, d1),\n                  getX(batch, xF, xR, xC, d1 + 1),\n                  getX(batch, xF, xR, xC, d1 + 2),\n                  getX(batch, xF, xR, xC, d1 + 3)\n                );\n                vec4 wValues = vec4(\n                  getW(wF, wR, wC, d1, d2),\n                  getW(wF, wR, wC, d1 + 1, d2),\n                  getW(wF, wR, wC, d1 + 2, d2),\n                  getW(wF, wR, wC, d1 + 3, d2)\n                );\n\n                dotProd += dot(xValues, wValues);\n              }\n\n              if (").concat(1===f,") {\n                dotProd +=\n                  getX(batch, xF, xR, xC, ").concat(p,") *\n                  getW(wF, wR, wC, ").concat(p,", d2);\n              } else if (").concat(2===f,") {\n                vec2 xValues = vec2(\n                  getX(batch, xF, xR, xC, ").concat(p,"),\n                  getX(batch, xF, xR, xC, ").concat(p," + 1)\n                );\n                vec2 wValues = vec2(\n                  getW(wF, wR, wC, ").concat(p,", d2),\n                  getW(wF, wR, wC, ").concat(p," + 1, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else if (").concat(3===f,") {\n                vec3 xValues = vec3(\n                  getX(batch, xF, xR, xC, ").concat(p,"),\n                  getX(batch, xF, xR, xC, ").concat(p," + 1),\n                  getX(batch, xF, xR, xC, ").concat(p," + 2)\n                );\n                vec3 wValues = vec3(\n                  getW(wF, wR, wC, ").concat(p,", d2),\n                  getW(wF, wR, wC, ").concat(p," + 1, d2),\n                  getW(wF, wR, wC, ").concat(p," + 2, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    ")}}class Ak{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,a=arguments.length>3&&void 0!==arguments[3]&&arguments[3],r=arguments.length>4&&void 0!==arguments[4]&&arguments[4];this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=Lb(this.outputShape.length);const s=e.padInfo.left,o=e.strideWidth,i=e.dilationWidth,c=e.filterHeight,l=e.filterWidth,u=l;let d="\n       int xR; int xC; int xCOffset;\n       vec4 wTexel; vec4 previous; vec4 final;";for(let m=0;m<l;m++)d+="\n           vec4 xTexelC".concat(2*m,";\n           int xTexelC").concat(2*m,"Ready;\n           vec4 xTexelC").concat(2*m+1,";\n           int xTexelC").concat(2*m+1,"Ready;\n           vec4 xC").concat(m,";");d+="\n     for (int r = 0; r < ".concat(c,"; r++) {\n      for (int d1 = 0; d1 < ").concat(e.inChannels,"; d1 += 2) {\n       ");for(let m=0;m<l;m++)d+="\n           xTexelC".concat(2*m," = vec4(0.0);\n           xTexelC").concat(2*m,"Ready = 0;\n           xTexelC").concat(2*m+1," = vec4(0.0);\n           xTexelC").concat(2*m+1,"Ready = 0;\n           xC").concat(m," = vec4(0.0);");d+="\n         xR = xRCorner + r * dilations[0];\n         if (xR >=0 && xR < inDims[0]) {\n       ";for(let m=0;m<(u+1)/2;m++){const t=2*m;if(d+="\n           xC = xCCorner + ".concat(t*i,";\n           "),1===o){if(t<l&&(s%2===1?(d+="\n                 xCOffset = xC + 1;\n                 if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC".concat(t,"Ready == 0) {\n                   xTexelC").concat(t," = getX(batch, xR, xCOffset, d1);\n\n                   // Need to manually clear unused channels in case\n                   // we're reading from recycled texture.\n                   if (xCOffset + 1 >= inDims[1]) {\n                     xTexelC").concat(t,".zw = vec2(0.0);\n                   }\n                   xTexelC").concat(t,"Ready = 1;\n                 }\n               "),d+=1===i&&t>0?"\n                 xC".concat(t," = vec4(xTexelC").concat(t-2,".zw, xTexelC").concat(t,".xy);\n                 "):"\n                   xCOffset = xC + 1 - 2;\n\n                   if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                     previous = getX(batch, xR, xCOffset, d1);\n\n                     // Need to manually clear unused channels in case\n                     // we're reading from recycled texture.\n                     if (xCOffset + 1 >= inDims[1]) {\n                       previous.zw = vec2(0.0);\n                     }\n\n                     xC".concat(t," = vec4(previous.zw, xTexelC").concat(t,".xy);\n                   } else {\n                     xC").concat(t," = vec4(0.0, 0.0, xTexelC").concat(t,".xy);\n                   }\n                   ")):d+="\n                 if (xC >= 0 && xC < inDims[1] && xTexelC".concat(t,"Ready == 0) {\n                   xTexelC").concat(t," = getX(batch, xR, xC, d1);\n                   if (xC + 1 >= inDims[1]) {\n                     xTexelC").concat(t,".zw = vec2(0.0);\n                   }\n                   xTexelC").concat(t,"Ready = 1;\n                 }\n\n                 xC").concat(t," = xTexelC").concat(t,";\n                 "),t+1<l)){const e=s%2===0?S.util.nearestLargerEven(i):i;i%2===0&&s%2===1||i%2!==0&&s%2!==1?(d+="\n                   xCOffset = xC + imod(pads[1], 2) + ".concat(e,";\n\n                   if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC").concat(t+1,"Ready == 0) {\n                     xTexelC").concat(t+1," = getX(batch, xR, xCOffset, d1);\n\n                     // Need to manually clear unused channels in case\n                     // we're reading from recycled texture.\n                     if (xCOffset + 1 >= inDims[1]) {\n                       xTexelC").concat(t+1,".zw = vec2(0.0);\n                     }\n                     xTexelC").concat(t+1,"Ready = 1;\n                   }\n                   "),d+=i>1?"\n                     xCOffset -= 2;\n                     if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                      previous = getX(batch, xR, xCOffset, d1);\n                      xC".concat(t+1," = vec4(previous.zw, xTexelC").concat(t+1,".xy);\n                     } else {\n                      xC").concat(t+1," = vec4(0.0, 0.0, xTexelC").concat(t+1,".xy);\n                     }\n                     "):"\n                     xC".concat(t+1," = vec4(xTexelC").concat(t,".zw, xTexelC").concat(t+1,".xy);\n                     ")):d+=1===e?"\n                     xC".concat(t+1," = xTexelC").concat(t,";\n                     "):"\n                     xCOffset = xC + ".concat(e,";\n\n                     if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC").concat(t+1,"Ready == 0) {\n                       xTexelC").concat(t+1," = getX(batch, xR, xCOffset, d1);\n                       if (xCOffset + 1 >= inDims[1]) {\n                         xTexelC").concat(t+1,".zw = vec2(0.0);\n                       }\n                       xTexelC").concat(t+1,"Ready = 1;\n                     }\n\n                     xC").concat(t+1," = xTexelC").concat(t+1,";\n                     ")}}else t<l&&(s%2===1?(d+="\n                 xCOffset = xC + 1 - strides[1];\n                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC".concat(t,"Ready == 0) {\n                   xTexelC").concat(t," = getX(batch, xR, xCOffset, d1);\n                   // Need to manually clear unused channels in case\n                   // we're reading from recycled texture.\n                   if (xCOffset + 1 >= inDims[1]) {\n                     xTexelC").concat(t,".zw = vec2(0.0);\n                   }\n                   xTexelC").concat(t,"Ready = 1;\n                 }\n\n                 if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC").concat(t+1,"Ready == 0) {\n                   xTexelC").concat(t+1," = getX(batch, xR, xC + 1, d1);\n                   // Need to manually clear unused channels in case\n                   // we're reading from recycled texture.\n                   if (xC + 2 >= inDims[1]) {\n                     xTexelC").concat(t+1,".zw = vec2(0.0);\n                   }\n                   xTexelC").concat(t+1,"Ready = 1;\n                 }\n\n                 xC").concat(t," = vec4(xTexelC").concat(t,".zw, xTexelC").concat(t+1,".zw);\n               "),t+1<l&&(d+="\n                   final = vec4(0.0);\n                   xCOffset = xC + 1 + strides[1];\n                   if(xCOffset >= 0 && xCOffset < inDims[1]) {\n                     final = getX(batch, xR, xCOffset, d1);\n                   }\n                   xC".concat(t+1," = vec4(xTexelC").concat(t+1,".xy, final.xy);\n                 "))):(d+="\n                 if(xC >= 0 && xC < inDims[1] && xTexelC".concat(t,"Ready == 0) {\n                   xTexelC").concat(t," = getX(batch, xR, xC, d1);\n                   if (xC + 1 >= inDims[1]) {\n                     xTexelC").concat(t,".zw = vec2(0.0);\n                   }\n                   xTexelC").concat(t,"Ready = 1;\n                 }\n\n                 xCOffset = xC + strides[1];\n                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC").concat(t+1,"Ready == 0) {\n                   xTexelC").concat(t+1," = getX(batch, xR, xCOffset, d1);\n                   if (xCOffset + 1 >= inDims[1]) {\n                     xTexelC").concat(t+1,".zw = vec2(0.);\n                   }\n                   xTexelC").concat(t+1,"Ready = 1;\n                 }\n\n                 xC").concat(t," = vec4(\n                   xTexelC").concat(t,".xy, xTexelC").concat(t+1,".xy);\n               "),t+1<l&&(d+="\n                   xC".concat(t+1," = vec4(xTexelC").concat(t,".zw, xTexelC").concat(t+1,".zw);\n                 "))));t<l&&(d+="\n             wTexel = getW(r, ".concat(t,", d1, d2);\n             dotProd += xC").concat(t,".xxzz * vec4(wTexel.xy, wTexel.xy);\n             if(d1 + 1 < ").concat(e.inChannels,") {\n               dotProd += xC").concat(t,".yyww * vec4(wTexel.zw, wTexel.zw);\n             }\n           "),t+1<l&&(d+="\n               wTexel = getW(r, ".concat(t+1,", d1, d2);\n               dotProd += xC").concat(t+1,".xxzz * vec4(wTexel.xy, wTexel.xy);\n               if(d1 + 1 < ").concat(e.inChannels,") {\n                 dotProd += xC").concat(t+1,".yyww * vec4(wTexel.zw, wTexel.zw);\n               }\n             ")))}d+="\n     }\n   ",d+="\n     }\n   ",d+="\n     }\n   ";let h="",p="";n&&(h=a?"vec4 activation(vec4 a) {\n           vec4 b = getPreluActivationWeightsAtOutCoords();\n           ".concat(n,"\n         }"):r?"vec4 activation(vec4 a) {\n           vec4 b = getLeakyreluAlphaAtOutCoords();\n           ".concat(n,"\n         }"):"vec4 activation(vec4 x) {\n           ".concat(n,"\n         }"),p="result = activation(result);");const f=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),a&&this.variableNames.push("preluActivationWeights"),r&&this.variableNames.push("leakyreluAlpha"),this.userCode="\n       ".concat(h,"\n\n       void main() {\n         ivec4 coords = getOutputCoords();\n         int batch = coords.x;\n         ivec2 xRCCorner = coords.yz * strides - pads;\n         int d2 = coords.w;\n         int xRCorner = xRCCorner.x;\n         int xCCorner = xRCCorner.y;\n\n         //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.\n         vec4 dotProd = vec4(0.000000000000001);\n\n         ").concat(d,"\n\n         vec4 result = dotProd - vec4(0.000000000000001);\n         ").concat(f,"\n         ").concat(p,"\n         setOutput(result);\n       }\n     ")}}class Rk{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec4"},{name:"pad",type:"ivec2"},{name:"stride",type:"ivec2"},{name:"dilation",type:"ivec2"},{name:"inChannels",type:"int"},{name:"itemsPerBlockRow",type:"int"},{name:"outWidth",type:"int"}],this.outputShape=e,this.enableShapeUniforms=Lb(this.outputShape.length);const{dataFormat:n}=t,a=sb(),r="channelsLast"===n,s=r?1:2,o=r?2:3,i=this.enableShapeUniforms?"if(blockIndex < outShape[2] && pos < outShape[1]) {":"if(blockIndex < ".concat(e[2]," && pos < ").concat(e[1],") {");let c="";for(let l=0;l<=1;l++)for(let e=0;e<=1;e++)c+="\n          blockIndex = rc.z + ".concat(e,";\n          pos = rc.y + ").concat(l,";\n\n          ").concat(i,"\n            offsetY = int(blockIndex / outWidth) * stride[0] - pad[0];\n            d0 = offsetY + dilation[0] * (pos / itemsPerBlockRow);\n\n            if(d0 < inputShape[").concat(s,"] && d0 >= 0) {\n              // Use custom imod instead mod. On Intel GPU, mod may generate\n              // unexpected value.\n              // https://github.com/tensorflow/tfjs/issues/5447\n              offsetX = imod(blockIndex, outWidth) * stride[1] - pad[1];\n              d1 = offsetX + dilation[1] * (imod(pos, itemsPerBlockRow) /\n                  inChannels);\n\n              if(d1 < inputShape[").concat(o,"] && d1 >= 0) {\n\n                ch = imod(pos, inChannels);\n\n                if (").concat(r,") {\n                  innerDims = vec2(d1, ch);\n                  result[").concat(2*l+e,"] = getChannel(\n                    getA(rc.x, d0, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                } else {\n                  innerDims = vec2(d0, d1);\n                  result[").concat(2*l+e,"] = getChannel(\n                    getA(rc.x, ch, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                }\n              }\n            }\n          }\n        ");this.userCode="\n      void main() {\n        ivec3 rc = getOutputCoords();\n\n        vec4 result = vec4(0);\n\n        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;\n        vec2 innerDims;\n\n        ".concat(c,"\n\n        ").concat(a.output," = result;\n      }\n    ")}}function Fk(e,t){const n=e.length;return n>=3?t?[...e.slice(0,-3),e[n-3]*e[n-2],e[n-1]]:[...e.slice(0,-3),e[n-3],e[n-2]*e[n-1]]:!t&&1===n&&e[0]>1?[e[0],1]:null}function Dk(e){let{x:t,filter:n,convInfo:a,backend:r,bias:s=null,preluActivationWeights:o=null,leakyreluAlpha:i=0,activation:c=null}=e;const l=t.shape,u=r.texData.get(t.dataId),d=a.inChannels,h=l[0]*l[1]*l[2],p=a.outChannels,f="channelsLast"===a.dataFormat;let m;const g=[];if(null!=o){const e=Fk(o.shape,f);null!=e&&(o=Kx({inputs:{x:o},backend:r,attrs:{shape:e}}),g.push(o))}if(null!=s){const e=Fk(s.shape,f);null!=e&&(s=Kx({inputs:{x:s},backend:r,attrs:{shape:e}}),g.push(s))}if(!((1===h||1===p)&&d>1e3)&&u.isPacked&&f&&null!=u.texture&&l[2]%2!==0&&S.util.arraysEqual(u.shape.slice(-3),l.slice(-3))){const e=l[0]*l[1]*(l[2]+1),d={dataId:t.dataId,shape:[1,e,a.inChannels],dtype:t.dtype},h=u.shape;u.shape=u.shape.slice(),u.shape[u.shape.length-2]++,S.util.assert(Yy(u.shape,d.shape),(()=>"packed reshape ".concat(u.shape," to ").concat(d.shape," isn't free")));const p=Kx({inputs:{x:n},backend:r,attrs:{shape:[1,a.inChannels,a.outChannels]}});g.push(p);const f=ow({a:d,b:p,backend:r,transposeA:false,transposeB:false,bias:s,activation:c,preluActivationWeights:o,leakyreluAlpha:i}),y=r.texData.get(f.dataId);S.util.assert(y.isPacked,(()=>"batchMatMul result is expected to be packed")),u.shape=h,y.shape=a.outShape,m=Ex({inputs:{x:f},backend:r}),m.shape=a.outShape,g.push(f)}else{const e=a.outHeight*a.outWidth,l=Kx({inputs:{x:t},backend:r,attrs:{shape:f?[a.batchSize,e,a.inChannels]:[a.batchSize,a.inChannels,e]}}),u=Kx({inputs:{x:n},backend:r,attrs:{shape:[1,a.inChannels,a.outChannels]}}),d=ow({a:f?l:u,b:f?u:l,transposeA:!f,transposeB:false,backend:r,bias:s,activation:c,preluActivationWeights:o,leakyreluAlpha:i});m=Kx({inputs:{x:d},backend:r,attrs:{shape:a.outShape}}),g.push(l),g.push(u),g.push(d)}for(const y of g)r.disposeIntermediateTensorInfo(y);return m}function Ok(e){let{x:t,filter:n,convInfo:a,backend:r,bias:s=null,preluActivationWeights:o=null,leakyreluAlpha:i=0,activation:c=null}=e;const{filterWidth:l,filterHeight:u,inChannels:d,outWidth:h,outHeight:p,dataFormat:f}=a,m="channelsLast"===f,g=l*u*d,y=p*h,b=[a.batchSize,g,y],v=[];if(null!=o){const e=Fk(o.shape,m);null!=e&&(o=Kx({inputs:{x:o},backend:r,attrs:{shape:e}}),v.push(o))}if(null!=s){const e=Fk(s.shape,m);null!=e&&(s=Kx({inputs:{x:s},backend:r,attrs:{shape:e}}),v.push(s))}const x=Kx({inputs:{x:n},backend:r,attrs:{shape:[1,g,S.util.sizeFromShape(n.shape)/g]}});v.push(x);const w=new Rk(b,a),k=[t.shape,[a.padInfo.top,a.padInfo.left],[a.strideHeight,a.strideWidth],[a.dilationHeight,a.dilationWidth],[a.inChannels],[a.filterWidth*a.inChannels],[a.outWidth]],N=r.runWebGLProgram(w,[t],"float32",k),I=Kx({inputs:{x:N},backend:r,attrs:{shape:b}});v.push(N),v.push(I);const T=null!=s,C=null!=o,E="leakyrelu"===c,_=c?Vx(c,!0):null,A=new Wx(m?I.shape:x.shape,m?x.shape:I.shape,m?[a.batchSize,y,a.outChannels]:[a.batchSize,a.outChannels,y],!0,!1,T,_,C,E),R=m?[I,x]:[x,I];if(s&&R.push(s),C&&R.push(o),E){const e=r.makeTensorInfo([],"float32",S.util.createScalarValue(i,"float32"));R.push(e),v.push(e)}const F=r.runWebGLProgram(A,R,"float32"),D=Kx({inputs:{x:F},backend:r,attrs:{shape:a.outShape}});v.push(F);for(const S of v)r.disposeIntermediateTensorInfo(S);return D}const Mk={kernelName:S.Conv2D,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,filter:s}=t,{strides:o,pad:i,dataFormat:c,dilations:l,dimRoundingMode:u}=a,d=S.backend_util.convertConv2DDataFormat(c),h=S.backend_util.computeConv2DInfo(r.shape,s.shape,o,l,i,u,!1,d);let p;if(1!==h.filterHeight||1!==h.filterWidth||1!==h.dilationHeight||1!==h.dilationWidth||1!==h.strideHeight||1!==h.strideWidth||"SAME"!==h.padInfo.type&&"VALID"!==h.padInfo.type)if(h.strideWidth<=2&&"channelsLast"===d&&(0,S.env)().getBool("WEBGL_EXP_CONV")){const e=new Ak(h),t=[[h.padInfo.top,h.padInfo.left],[h.strideHeight,h.strideWidth],[h.dilationHeight,h.dilationWidth],[h.inHeight,h.inWidth]];p=n.runWebGLProgram(e,[r,s],"float32",t)}else if((0,S.env)().getBool("WEBGL_CONV_IM2COL"))p=Ok({x:r,filter:s,convInfo:h,backend:n});else{const e=new Ek(h);p=n.runWebGLProgram(e,[r,s],"float32")}else p=Dk({x:r,filter:s,convInfo:h,backend:n});const f=Kx({inputs:{x:p},backend:n,attrs:{shape:h.outShape}});return n.disposeIntermediateTensorInfo(p),f}};class zk{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideHeight,n=e.strideWidth,a=e.padInfo.top,r=e.padInfo.left,s="channelsLast"===e.dataFormat;this.userCode="\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int d2 = coords.w;\n\n        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ".concat(e.batchSize,"; b++) {\n          for (int yR = 0; yR < ").concat(e.outHeight,"; yR++) {\n            int xR = wR + yR * ").concat(t," - ").concat(a,";\n\n            if (xR < 0 || xR >= ").concat(e.inHeight,") {\n              continue;\n            }\n\n            for (int yC = 0; yC < ").concat(e.outWidth,"; yC++) {\n              int xC = wC + yC * ").concat(n," - ").concat(r,";\n\n              if (xC < 0 || xC >= ").concat(e.inWidth,") {\n                continue;\n              }\n\n              ").concat(s?"float dyValue = getDy(b, yR, yC, d2);\n              float xValue = getX(b, xR, xC, d1);\n              dotProd += (xValue * dyValue);":"float dyValue = getDy(b, d2, yR, yC);\n              float xValue = getX(b, d1, xR, xC);\n              dotProd += (xValue * dyValue);","\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    ")}}class Lk{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,a=e.strideHeight,r=e.strideWidth,s="channelsLast"===e.dataFormat,o=t-1-e.padInfo.top,i=n-1-e.padInfo.left,c=s?1:2,l=s?2:3,u=s?3:1;this.userCode="\n      const ivec2 pads = ivec2(".concat(o,", ").concat(i,");\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[").concat(u,"];\n\n        ivec2 dyCorner = ivec2(coords[").concat(c,"], coords[").concat(l,"]) - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ").concat(t,"; wR++) {\n          float dyR = float(dyRCorner + wR) / ").concat(a,".0;\n\n          if (dyR < 0.0 || dyR >= ").concat(e.outHeight,".0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ").concat(t," - 1 - wR;\n\n          for (int wC = 0; wC < ").concat(n,"; wC++) {\n            float dyC = float(dyCCorner + wC) / ").concat(r,".0;\n\n            if (dyC < 0.0 || dyC >= ").concat(e.outWidth,".0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ").concat(n," - 1 - wC;\n\n            for (int d2 = 0; d2 < ").concat(e.outChannels,"; d2++) {\n\n              if (").concat(s,") {\n                float xValue = getDy(batch, idyR, idyC, d2);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              } else {\n                float xValue = getDy(batch, d2, idyR, idyC);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    ")}}class Bk{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideDepth,n=e.strideHeight,a=e.strideWidth,r=e.padInfo.front,s=e.padInfo.top,o=e.padInfo.left;this.userCode="\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int wF = coords.x;\n        int wR = coords.y;\n        int wC = coords.z;\n        int d1 = coords.w;\n        int d2 = coords.u;\n\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ".concat(e.batchSize,"; b++) {\n          for (int yF = 0; yF < ").concat(e.outDepth,"; yF++) {\n            int xF = wF + yF * ").concat(t," - ").concat(r,";\n\n            if (xF < 0 || xF >= ").concat(e.inDepth,") {\n              continue;\n            }\n\n            for (int yR = 0; yR < ").concat(e.outHeight,"; yR++) {\n              int xR = wR + yR * ").concat(n," - ").concat(s,";\n\n              if (xR < 0 || xR >= ").concat(e.inHeight,") {\n                continue;\n              }\n\n              for (int yC = 0; yC < ").concat(e.outWidth,"; yC++) {\n                int xC = wC + yC * ").concat(a," - ").concat(o,";\n\n                if (xC < 0 || xC >= ").concat(e.inWidth,") {\n                  continue;\n                }\n\n                float dyValue = getDy(b, yF, yR, yC, d2);\n                float xValue = getX(b, xF, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    ")}}class Pk{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterDepth,n=e.filterHeight,a=e.filterWidth,r=e.strideDepth,s=e.strideHeight,o=e.strideWidth,i=t-1-e.padInfo.front,c=n-1-e.padInfo.top,l=a-1-e.padInfo.left;this.userCode="\n      const ivec3 pads = ivec3(".concat(i,", ").concat(c,", ").concat(l,");\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.u;\n\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyFCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ").concat(t,"; wF++) {\n          float dyF = float(dyFCorner + wF) / ").concat(r,".0;\n\n          if (dyF < 0.0 || dyF >= ").concat(e.outDepth,".0 || fract(dyF) > 0.0) {\n            continue;\n          }\n          int idyF = int(dyF);\n\n          int wFPerm = ").concat(t," - 1 - wF;\n\n          for (int wR = 0; wR < ").concat(n,"; wR++) {\n            float dyR = float(dyRCorner + wR) / ").concat(s,".0;\n\n            if (dyR < 0.0 || dyR >= ").concat(e.outHeight,".0 ||\n              fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            int wRPerm = ").concat(n," - 1 - wR;\n\n            for (int wC = 0; wC < ").concat(a,"; wC++) {\n              float dyC = float(dyCCorner + wC) / ").concat(o,".0;\n\n              if (dyC < 0.0 || dyC >= ").concat(e.outWidth,".0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              int wCPerm = ").concat(a," - 1 - wC;\n\n              for (int d2 = 0; d2 < ").concat(e.outChannels,"; d2++) {\n                float xValue = getDy(batch, idyF, idyR, idyC, d2);\n                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    ")}}const Vk={kernelName:S.Conv2DBackpropFilter,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,dy:s}=t,{strides:o,pad:i,dataFormat:c,dimRoundingMode:l,filterShape:u}=a,d=S.backend_util.convertConv2DDataFormat(c),h=S.backend_util.computeConv2DInfo(r.shape,u,o,1,i,l,!1,d),p=new zk(h);return n.runWebGLProgram(p,[r,s],"float32")}};class Wk{constructor(e){this.variableNames=["dy","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"strides",type:"vec2"}],this.outputShape=e.inShape,this.enableShapeUniforms=Lb(this.outputShape.length);const t=e.filterHeight,n=e.filterWidth,a=t-1-e.padInfo.top,r=n-1-e.padInfo.left;this.userCode="\n      const ivec2 pads = ivec2(".concat(a,", ").concat(r,");\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[3];\n\n        ivec2 dyCorner = ivec2(coords[1], coords[2]) - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        vec4 result = vec4(0.);\n        for (int wR = 0; wR < ").concat(t,"; wR++) {\n          float dyR = float(dyRCorner + wR) / strides[0];\n          if (dyR < 0.0 || dyR >= ").concat(e.outHeight,".0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n          int wRPerm = ").concat(t," - 1 - wR;\n\n          for (int wC = 0; wC < ").concat(n,"; wC++) {\n            int wCPerm = ").concat(n," - 1 - wC;\n\n            float dyC = float(dyCCorner + wC) / strides[1];\n            bool idyCVal = (dyC >= 0.0) && (dyC < ").concat(e.outWidth,".0)\n              && (fract(dyC) == 0.0);\n            int idyC = int(dyC);\n\n            float dyC2 = float(dyCCorner + wC + 1) / strides[1];\n            bool idyCVal2 = (dyC2 >= 0.0) && (dyC2 < ").concat(e.outWidth,".0)\n              && (fract(dyC2) == 0.0);\n            int idyC2 = int(dyC2);\n\n            if (idyCVal && idyCVal2) {\n              for (int d2 = 0; d2 < ").concat(e.outChannels,"; d2 += 2) {\n                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);\n                vec4 dySample = getDy(batch, idyR, idyC, d2);\n                vec4 dySample2 = (idyC / 2 == idyC2 / 2) ?\n                  dySample : getDy(batch, idyR, idyC2, d2);\n\n                vec2 dyValue = mod(float(idyC), 2.) == 0. ?\n                  dySample.xy : dySample.zw;\n                result.xy += vec2(dot(dyValue, wValue.xy),\n                  dot(dyValue, wValue.zw));\n\n                dyValue = mod(float(idyC2), 2.) == 0. ?\n                  dySample2.xy : dySample2.zw;\n                result.zw += vec2(dot(dyValue, wValue.xy),\n                  dot(dyValue, wValue.zw));\n              }\n            } else if (idyCVal) {\n              for (int d2 = 0; d2 < ").concat(e.outChannels,"; d2 += 2) {\n                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);\n                vec4 dySample = getDy(batch, idyR, idyC, d2);\n                vec2 dyValue = mod(float(idyC), 2.) == 0. ?\n                  dySample.xy : dySample.zw;\n                result.xy += vec2(dot(dyValue, wValue.xy),\n                  dot(dyValue, wValue.zw));\n              }\n            } else if (idyCVal2) {\n              for (int d2 = 0; d2 < ").concat(e.outChannels,"; d2 += 2) {\n                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);\n                vec4 dySample = getDy(batch, idyR, idyC2, d2);\n                vec2 dyValue = mod(float(idyC2), 2.) == 0. ?\n                  dySample.xy : dySample.zw;\n                result.zw += vec2(dot(dyValue, wValue.xy),\n                  dot(dyValue, wValue.zw));\n              }\n            }\n          }\n        }\n        setOutput(result);\n      }\n    ")}}const Uk={kernelName:S.Conv2DBackpropInput,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:r,filter:s}=t,{inputShape:o,strides:i,pad:c,dataFormat:l,dimRoundingMode:u}=a,d=S.backend_util.convertConv2DDataFormat(l),h=S.backend_util.computeConv2DInfo(o,s.shape,i,1,c,u,!1,d);if((0,S.env)().getBool("WEBGL_PACK_CONV2DTRANSPOSE")&&"channelsLast"===d){const e=[[h.strideHeight,h.strideWidth]],t=new Wk(h);return n.runWebGLProgram(t,[r,s],"float32",e)}{const e=new Lk(h);return n.runWebGLProgram(e,[r,s],"float32")}}};const Gk={kernelName:S.Conv3D,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,filter:s}=t,{strides:o,pad:i,dilations:c}=a,l=S.backend_util.computeConv3DInfo(r.shape,s.shape,o,c,i),u=new _k(l);return n.runWebGLProgram(u,[r,s],"float32")}};const Hk={kernelName:S.Conv3DBackpropFilterV2,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,dy:s}=t,{strides:o,pad:i,filterShape:c}=a,l=S.backend_util.computeConv3DInfo(r.shape,c,o,1,i),u=new Bk(l);return n.runWebGLProgram(u,[r,s],"float32")}};const jk={kernelName:S.Conv3DBackpropInputV2,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:r,filter:s}=t,{pad:o,strides:i,inputShape:c}=a,l=S.backend_util.computeConv3DInfo(c,s.shape,i,1,o),u=new Pk(l);return n.runWebGLProgram(u,[r,s],"float32")}},qk=Bx({opSnippet:"if (isnan(x)) return x;\n  return cos(x);\n",packedOpSnippet:"\n  vec4 result = cos(x);\n  bvec4 isNaN = isnan(x);\n  ".concat(Tx,"\n  return result;\n")}),Xk={kernelName:S.Cos,backendName:"webgl",kernelFunc:qk},Kk=Bx({opSnippet:"\n  float e2x = exp(-x);\n  return (e2x + 1.0 / e2x) / 2.0;\n"}),Qk={kernelName:S.Cosh,backendName:"webgl",kernelFunc:Kk};class Yk{constructor(e,t,n,a,r){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];const[s,o,i,c]=e,[l]=t,[u,d]=n;this.outputShape=[l,u,d,c];const h="bilinear"===a?1:0,[p,f]=["".concat(o-1,".0"),"".concat(i-1,".0")],[m,g,y]=u>1?["".concat((o-1)/(u-1)),"(y2-y1) * height_ratio","y1*".concat(p," + float(y)*(height_scale)")]:["0.0","0.0","0.5 * (y1+y2) * ".concat(p)],[b,v,x]=d>1?["".concat((i-1)/(d-1)),"(x2-x1) * width_ratio","x1*".concat(f," + float(x)*(width_scale)")]:["0.0","0.0","0.5 * (x1+x2) * ".concat(f)];this.userCode="\n      const float height_ratio = float(".concat(m,");\n      const float width_ratio = float(").concat(b,");\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int y = coords[1];\n        int x = coords[2];\n        int d = coords[3];\n\n        // get box vals\n        float y1 = getBoxes(b,0);\n        float x1 = getBoxes(b,1);\n        float y2 = getBoxes(b,2);\n        float x2 = getBoxes(b,3);\n\n        // get image in batch index\n        int bInd = round(getBoxInd(b));\n        if(bInd < 0 || bInd >= ").concat(s,") {\n          return;\n        }\n\n        float height_scale = ").concat(g,";\n        float width_scale = ").concat(v,";\n\n        float in_y = ").concat(y,";\n        if( in_y < 0.0 || in_y > ").concat(p," ) {\n          setOutput(float(").concat(r,"));\n          return;\n        }\n        float in_x = ").concat(x,";\n        if( in_x < 0.0 || in_x > ").concat(f," ) {\n          setOutput(float(").concat(r,"));\n          return;\n        }\n\n        vec2 sourceFracIndexCR = vec2(in_x,in_y);\n        if(").concat(h," == 1) {\n          // Compute the four integer indices.\n          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);\n          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));\n\n          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);\n          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);\n          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);\n          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);\n\n          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);\n\n          float top = topLeft + (topRight - topLeft) * fracCR.x;\n          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;\n          float newValue = top + (bottom - top) * fracCR.y;\n          setOutput(newValue);\n        } else {\n          // Compute the coordinators of nearest neighbor point.\n          ivec2 sourceNearestCR = ivec2(floor(\n            sourceFracIndexCR + vec2(0.5,0.5)));\n          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);\n          setOutput(newValue);\n        }\n      }\n    ")}}const Zk={kernelName:S.CropAndResize,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:a}=e,{image:r,boxes:s,boxInd:o}=t,{cropSize:i,method:c,extrapolationValue:l}=a,u=new Yk(r.shape,s.shape,i,c,l);return n.runWebGLProgram(u,[r,s,o],"float32")}};var Jk;!function(e){e.Prod="*",e.Sum="+"}(Jk||(Jk={}));class $k{constructor(e,t,n,a){this.op=e,this.outputShape=t,this.variableNames=["x"],this.customUniforms=[{name:"index",type:"float"}];const r=this.outputShape.length,s=this.op===Jk.Prod?"1.0":"0.0",o=n?s:"getX(".concat(eS(r,"coords",this.op),")"),i=this.outputShape[this.outputShape.length-1];let c="",l="";n?(c=a?"end != ".concat(i-1):"end != 0",l=a?"end + 1":"end - 1"):(c=a?"end + pow2 < ".concat(i):"end >= pow2",l=a?"end + pow2":"end - pow2"),this.userCode="\n      void main() {\n        ".concat(Ab(r)," coords = getOutputCoords();\n        int end = ").concat(tS(r,"coords",this.op),";\n        float val = ").concat(o,";\n        int pow2 = int(pow(2.0, index));\n        if (").concat(c,") {\n          int idx = ").concat(l,";\n          ").concat(tS(r,"coords",this.op)," = idx;\n          val ").concat(this.op,"= getX(").concat(eS(r,"coords",this.op),");\n        }\n        setOutput(val);\n      }\n    ")}}function eS(e,t,n){if(1===e)return"".concat(t);if(2===e)return"".concat(t,".x, ").concat(t,".y");if(3===e)return"".concat(t,".x, ").concat(t,".y, ").concat(t,".z");if(4===e)return"".concat(t,".x, ").concat(t,".y, ").concat(t,".z, ").concat(t,".w");throw new Error("Cumulative ".concat(n," for rank ").concat(e," is not yet supported"))}function tS(e,t,n){if(1===e)return"".concat(t);if(2===e)return"".concat(t,".y");if(3===e)return"".concat(t,".z");if(4===e)return"".concat(t,".w");throw new Error("Cumulative ".concat(n," for rank ").concat(e," is not yet supported"))}function nS(e,t,n,a,r,s){const o=t.shape.length,i=S.backend_util.getAxesPermutation([a],o);let c=t;null!=i&&(c=rw({inputs:{x:t},backend:n,attrs:{perm:i}}));const l=S.backend_util.getInnerMostAxes(1,o)[0];if(l!==o-1)throw new Error("WebGL cumprod shader expects an inner-most axis=".concat(t.shape.length-1," ")+"but got axis=".concat(a));const u=c.shape[l];let d=Ex({inputs:{x:c},backend:n});for(let h=0;h<=Math.ceil(Math.log2(u))-1;h++){const t=new $k(e,c.shape,!1,s),a=[[h]],r=d;d=n.runWebGLProgram(t,[d],d.dtype,a),n.disposeIntermediateTensorInfo(r)}if(r){const t=new $k(e,c.shape,r,s),a=d;d=n.runWebGLProgram(t,[d],d.dtype),n.disposeIntermediateTensorInfo(a)}if(null!=i){const e=rw({inputs:{x:d},backend:n,attrs:{perm:S.backend_util.getUndoAxesPermutation(i)}});return n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(c),e}return d}const aS={kernelName:S.Cumprod,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s,exclusive:o,reverse:i}=a;return nS(Jk.Prod,r,n,s,o,i)}};const rS={kernelName:S.Cumsum,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s,exclusive:o,reverse:i}=a;return nS(Jk.Sum,r,n,s,o,i)}};const sS={kernelName:S.DenseBincount,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,weights:s}=t,{size:o,binaryOutput:i}=a;if(1===r.shape.length){const e=n.readSync(r.dataId),t=n.readSync(s.dataId),a=av(e,t,s.dtype,s.shape,o);return n.makeTensorInfo([o],s.dtype,a)}if(2===r.shape.length){const e=n.bufferSync(r),t=n.bufferSync(s),a=rv(e,t,o,i);return n.makeTensorInfo(a.shape,s.dtype,a.values)}throw new Error("Error in denseBincount: input must be at most rank 2, but got rank"+"".concat(r.shape.length,"."))}};class oS{constructor(e,t,n){this.variableNames=["x"],this.outputShape=[],this.outputShape=e,this.blockSize=t,this.dataFormat=n,this.userCode="\n    void main() {\n      ivec4 coords = getOutputCoords();\n      int b = coords[0];\n      int h = ".concat(this.getHeightCoordString(),";\n      int w = ").concat(this.getWidthCoordString(),";\n      int d = ").concat(this.getDepthCoordString(),";\n\n      int in_h = h / ").concat(t,";\n      int offset_h = imod(h, ").concat(t,");\n      int in_w = w / ").concat(t,";\n      int offset_w = imod(w, ").concat(t,");\n      int offset_d = (offset_h * ").concat(t," + offset_w) *\n        ").concat(this.getOutputDepthSize(),";\n      int in_d = d + offset_d;\n\n      float result = ").concat(this.getInputSamplingString(),";\n      setOutput(result);\n    }\n  ")}getHeightCoordString(){return"NHWC"===this.dataFormat?"coords[1]":"coords[2]"}getWidthCoordString(){return"NHWC"===this.dataFormat?"coords[2]":"coords[3]"}getDepthCoordString(){return"NHWC"===this.dataFormat?"coords[3]":"coords[1]"}getOutputDepthSize(){return"NHWC"===this.dataFormat?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return"NHWC"===this.dataFormat?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}}const iS={kernelName:S.DepthToSpace,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{blockSize:s,dataFormat:o}=a,i=r.shape[0],c=("NHWC"===o?r.shape[1]:r.shape[2])*s,l=("NHWC"===o?r.shape[2]:r.shape[3])*s,u=("NHWC"===o?r.shape[3]:r.shape[1])/(s*s),d=new oS("NHWC"===o?[i,c,l,u]:[i,u,c,l],s,o);return n.runWebGLProgram(d,[r],r.dtype)}};class cS{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,a=arguments.length>3&&void 0!==arguments[3]&&arguments[3],r=arguments.length>4&&void 0!==arguments[4]&&arguments[4];this.variableNames=["x","W"],this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=Lb(this.outputShape.length);const s=e.filterHeight,o=e.filterWidth,i=e.outChannels/e.inChannels;let c="",l="";n&&(c=a?"float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ".concat(n,"\n        }"):r?"float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ".concat(n,"\n        }"):"\n          float activation(float x) {\n            ".concat(n,"\n          }\n        "),l="result = activation(result);");const u=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),a&&this.variableNames.push("preluActivationWeights"),r&&this.variableNames.push("leakyreluAlpha"),this.userCode="\n      ".concat(c,"\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ").concat(i,";\n        int q = d2 - d1 * ").concat(i,";\n\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.\n        for (int wR = 0; wR < ").concat(s,"; wR++) {\n          int xR = xRCorner + wR * dilations[0];\n\n          if (xR < 0 || xR >= inDims[0]) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ").concat(o,"; wC++) {\n            int xC = xCCorner + wC * dilations[1];\n\n            if (xC < 0 || xC >= inDims[1]) {\n              continue;\n            }\n\n            float xVal = getX(batch, xR, xC, d1);\n            float wVal = getW(wR, wC, d1, q);\n            dotProd += xVal * wVal;\n          }\n        }\n\n        float result = dotProd;\n        ").concat(u,"\n        ").concat(l,"\n        setOutput(result);\n      }\n    ")}}class lS{constructor(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,a=arguments.length>3&&void 0!==arguments[3]&&arguments[3],r=arguments.length>4&&void 0!==arguments[4]&&arguments[4];this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=Lb(this.outputShape.length);const s=e.outChannels/e.inChannels,o=e.padInfo.left,i=e.strideWidth,c=e.dilationWidth,l=e.filterHeight,u=e.filterWidth,d=u;let h="\n      int xR; int xC; int xCOffset;\n      vec4 wTexel; vec4 previous; vec4 final;";for(let g=0;g<u;g++)h+="\n          vec4 xTexelC".concat(2*g,";\n          int xTexelC").concat(2*g,"Ready;\n          vec4 xTexelC").concat(2*g+1,";\n          int xTexelC").concat(2*g+1,"Ready;\n          vec4 xC").concat(g,";");h+="\n    for (int r = 0; r < ".concat(l,"; r++) {\n      ");for(let g=0;g<u;g++)h+="\n          xTexelC".concat(2*g," = vec4(0.0);\n          xTexelC").concat(2*g,"Ready = 0;\n          xTexelC").concat(2*g+1," = vec4(0.0);\n          xTexelC").concat(2*g+1,"Ready = 0;\n          xC").concat(g," = vec4(0.0);");h+="\n        xR = xRCorner + r * dilations[0];\n        if (xR >=0 && xR < inDims[0]) {\n      ";for(let g=0;g<(d+1)/2;g++){const e=2*g;if(h+="\n          xC = xCCorner + ".concat(e*c,";\n          "),1===i){if(e<u&&(o%2===1?(h+="\n                xCOffset = xC + 1;\n                if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC".concat(e,"Ready == 0) {\n                  xTexelC").concat(e," = getX(batch, xR, xCOffset, d1);\n\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC").concat(e,".zw = vec2(0.0);\n                  }\n                  xTexelC").concat(e,"Ready = 1;\n                }\n              "),h+=1===c&&e>0?"\n                xC".concat(e," = vec4(xTexelC").concat(e-2,".zw, xTexelC").concat(e,".xy);\n                "):"\n                  xCOffset = xC + 1 - 2;\n\n                  if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                    previous = getX(batch, xR, xCOffset, d1);\n\n                    // Need to manually clear unused channels in case\n                    // we're reading from recycled texture.\n                    if (xCOffset + 1 >= inDims[1]) {\n                      previous.zw = vec2(0.0);\n                    }\n\n                    xC".concat(e," = vec4(previous.zw, xTexelC").concat(e,".xy);\n                  } else {\n                    xC").concat(e," = vec4(0.0, 0.0, xTexelC").concat(e,".xy);\n                  }\n                  ")):h+="\n                if (xC >= 0 && xC < inDims[1] && xTexelC".concat(e,"Ready == 0) {\n                  xTexelC").concat(e," = getX(batch, xR, xC, d1);\n                  if (xC + 1 >= inDims[1]) {\n                    xTexelC").concat(e,".zw = vec2(0.0);\n                  }\n                  xTexelC").concat(e,"Ready = 1;\n                }\n\n                xC").concat(e," = xTexelC").concat(e,";\n                "),e+1<u)){const t=o%2===0?S.util.nearestLargerEven(c):c;c%2===0&&o%2===1||c%2!==0&&o%2!==1?(h+="\n                  xCOffset = xC + imod(pads[1], 2) + ".concat(t,";\n\n                  if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC").concat(e+1,"Ready == 0) {\n                    xTexelC").concat(e+1," = getX(batch, xR, xCOffset, d1);\n\n                    // Need to manually clear unused channels in case\n                    // we're reading from recycled texture.\n                    if (xCOffset + 1 >= inDims[1]) {\n                      xTexelC").concat(e+1,".zw = vec2(0.0);\n                    }\n                    xTexelC").concat(e+1,"Ready = 1;\n                  }\n                  "),h+=c>1?"\n                    xCOffset -= 2;\n                    if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                     previous = getX(batch, xR, xCOffset, d1);\n                     xC".concat(e+1," = vec4(previous.zw, xTexelC").concat(e+1,".xy);\n                    } else {\n                     xC").concat(e+1," = vec4(0.0, 0.0, xTexelC").concat(e+1,".xy);\n                    }\n                    "):"\n                    xC".concat(e+1," = vec4(xTexelC").concat(e,".zw, xTexelC").concat(e+1,".xy);\n                    ")):h+=1===t?"\n                    xC".concat(e+1," = xTexelC").concat(e,";\n                    "):"\n                    xCOffset = xC + ".concat(t,";\n\n                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC").concat(e+1,"Ready == 0) {\n                      xTexelC").concat(e+1," = getX(batch, xR, xCOffset, d1);\n                      if (xCOffset + 1 >= inDims[1]) {\n                        xTexelC").concat(e+1,".zw = vec2(0.0);\n                      }\n                      xTexelC").concat(e+1,"Ready = 1;\n                    }\n\n                    xC").concat(e+1," = xTexelC").concat(e+1,";\n                    ")}}else e<u&&(o%2===1?(h+="\n                xCOffset = xC + 1 - strides[1];\n                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC".concat(e,"Ready == 0) {\n                  xTexelC").concat(e," = getX(batch, xR, xCOffset, d1);\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC").concat(e,".zw = vec2(0.0);\n                  }\n                  xTexelC").concat(e,"Ready = 1;\n                }\n\n                if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC").concat(e+1,"Ready == 0) {\n                  xTexelC").concat(e+1," = getX(batch, xR, xC + 1, d1);\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xC + 2 >= inDims[1]) {\n                    xTexelC").concat(e+1,".zw = vec2(0.0);\n                  }\n                  xTexelC").concat(e+1,"Ready = 1;\n                }\n\n                xC").concat(e," = vec4(xTexelC").concat(e,".zw, xTexelC").concat(e+1,".zw);\n              "),e+1<u&&(h+="\n                  final = vec4(0.0);\n                  xCOffset = xC + 1 + strides[1];\n                  if(xCOffset >= 0 && xCOffset < inDims[1]) {\n                    final = getX(batch, xR, xCOffset, d1);\n                  }\n                  xC".concat(e+1," = vec4(xTexelC").concat(e+1,".xy, final.xy);\n                "))):(h+="\n                if(xC >= 0 && xC < inDims[1] && xTexelC".concat(e,"Ready == 0) {\n                  xTexelC").concat(e," = getX(batch, xR, xC, d1);\n                  if (xC + 1 >= inDims[1]) {\n                    xTexelC").concat(e,".zw = vec2(0.0);\n                  }\n                  xTexelC").concat(e,"Ready = 1;\n                }\n\n                xCOffset = xC + strides[1];\n                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC").concat(e+1,"Ready == 0) {\n                  xTexelC").concat(e+1," = getX(batch, xR, xCOffset, d1);\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC").concat(e+1,".zw = vec2(0.);\n                  }\n                  xTexelC").concat(e+1,"Ready = 1;\n                }\n\n                xC").concat(e," = vec4(\n                  xTexelC").concat(e,".xy, xTexelC").concat(e+1,".xy);\n              "),e+1<u&&(h+="\n                  xC".concat(e+1," = vec4(xTexelC").concat(e,".zw, xTexelC").concat(e+1,".zw);\n                "))));e<u&&(h+="\n            wTexel = getW(r, ".concat(e,", d1, q);\n            dotProd += xC").concat(e," * vec4(wTexel.xz, wTexel.xz);\n          "),e+1<u&&(h+="\n              wTexel = getW(r, ".concat(e+1,", d1, q);\n              dotProd += xC").concat(e+1," * vec4(wTexel.xz, wTexel.xz);\n            ")))}h+="\n    }\n  ",h+="\n      }\n    ";let p="",f="";n&&(p=a?"vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ".concat(n,"\n        }"):r?"vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ".concat(n,"\n        }"):"vec4 activation(vec4 x) {\n          ".concat(n,"\n        }"),f="result = activation(result);");const m=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),a&&this.variableNames.push("preluActivationWeights"),r&&this.variableNames.push("leakyreluAlpha"),this.userCode="\n      ".concat(p,"\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ").concat(s,";\n        int q = d2 - d1 * ").concat(s,";\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.\n        vec4 dotProd = vec4(0.000000000000001);\n\n        ").concat(h,"\n\n        vec4 result = dotProd - vec4(0.000000000000001);\n        ").concat(m,"\n        ").concat(f,"\n        setOutput(result);\n      }\n    ")}}const uS={kernelName:S.DepthwiseConv2dNative,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,filter:s}=t,{strides:o,pad:i,dilations:c,dimRoundingMode:l}=a;let u=c;null==u&&(u=[1,1]),S.util.assert(S.backend_util.eitherStridesOrDilationsAreOne(o,u),(()=>"Error in depthwiseConv2d: Either strides or dilations must be "+"1. Got strides ".concat(o," and dilations '").concat(u,"'")));const d=S.backend_util.computeConv2DInfo(r.shape,s.shape,o,u,i,l,!0);let h;h=(0,S.env)().getBool("WEBGL_PACK_DEPTHWISECONV")&&d.strideWidth<=2&&d.outChannels/d.inChannels===1?new lS(d):new cS(d);const p=[[d.padInfo.top,d.padInfo.left],[d.strideHeight,d.strideWidth],[d.dilationHeight,d.dilationWidth],[d.inHeight,d.inWidth]];return n.runWebGLProgram(h,[r,s],"float32",p)}};class dS{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideHeight,n=e.strideWidth,a=e.padInfo.top,r=e.padInfo.left,s=e.outChannels/e.inChannels;this.userCode="\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int dm = coords.w;\n        int d2 = d1 * ".concat(s," + dm;\n\n        float dotProd = 0.0;\n\n        // TO DO: Vec4 over the batch size\n        for (int b = 0; b < ").concat(e.batchSize,"; b++) {\n          for (int yR = 0; yR < ").concat(e.outHeight,"; yR++) {\n            int xR = wR + yR * ").concat(t," - ").concat(a,";\n\n            if (xR < 0 || xR >= ").concat(e.inHeight,") {\n              continue;\n            }\n\n            for (int yC = 0; yC < ").concat(e.outWidth,"; yC++) {\n              int xC = wC + yC * ").concat(n," - ").concat(r,";\n\n              if (xC < 0 || xC >= ").concat(e.inWidth,") {\n                continue;\n              }\n\n              float dyValue = getDy(b, yR, yC, d2);\n              float xValue = getX(b, xR, xC, d1);\n              dotProd += (xValue * dyValue);\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    ")}}class hS{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,a=e.strideHeight,r=e.strideWidth,s=t-1-e.padInfo.top,o=n-1-e.padInfo.left,i=e.outChannels/e.inChannels;this.userCode="\n      const ivec2 pads = ivec2(".concat(s,", ").concat(o,");\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[3];\n        ivec2 dyCorner = coords.yz - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        float dotProd = 0.0;\n\n        for (int wR = 0; wR < ").concat(t,"; wR++) {\n          float dyR = float(dyRCorner + wR) / ").concat(a,".0;\n\n          if (dyR < 0.0 || dyR >= ").concat(e.outHeight,".0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ").concat(t," - 1 - wR;\n\n          for (int wC = 0; wC < ").concat(n,"; wC++) {\n            float dyC = float(dyCCorner + wC) / ").concat(r,".0;\n\n            if (dyC < 0.0 || dyC >= ").concat(e.outWidth,".0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ").concat(n," - 1 - wC;\n\n            // TO DO: Vec4 over the channelMul\n            for (int dm = 0; dm < ").concat(i,"; dm++) {\n              int d2 = d1 * ").concat(i," + dm;\n              float xValue = getDy(batch, idyR, idyC, d2);\n              float wValue = getW(wRPerm, wCPerm, d1, dm);\n              dotProd += xValue * wValue;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    ")}}const pS={kernelName:S.DepthwiseConv2dNativeBackpropFilter,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,dy:s}=t,{strides:o,dilations:i,pad:c,dimRoundingMode:l,filterShape:u}=a,d=S.backend_util.computeConv2DInfo(r.shape,u,o,i,c,l,!0),h=new dS(d);return n.runWebGLProgram(h,[r,s],"float32")}};const fS={kernelName:S.DepthwiseConv2dNativeBackpropInput,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:r,filter:s}=t,{strides:o,dilations:i,pad:c,dimRoundingMode:l,inputShape:u}=a,d=S.backend_util.computeConv2DInfo(u,s.shape,o,i,c,l,!0),h=new hS(d);return n.runWebGLProgram(h,[r,s],"float32")}};class mS{constructor(e){this.variableNames=["X"],this.outputShape=[e,e],this.userCode="\n      void main() {\n          ivec2 coords = getOutputCoords();\n          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;\n          setOutput(val);\n      }\n    "}}const gS={kernelName:S.Diag,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:a}=t,r=[...a.shape,...a.shape],s=S.util.sizeFromShape(a.shape),o=Kx({inputs:{x:a},backend:n,attrs:{shape:[s]}}),i=new mS(s),c=n.runWebGLProgram(i,[o],o.dtype),l=Kx({inputs:{x:c},backend:n,attrs:{shape:r}});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(c),l}};class yS{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const{inHeight:t,inWidth:n,padInfo:a,strideHeight:r,strideWidth:s,filterHeight:o,filterWidth:i,dilationHeight:c,dilationWidth:l}=e,{top:u,left:d}=a;this.userCode="\n      const ivec2 strides = ivec2(".concat(r,", ").concat(s,");\n      const ivec2 pads = ivec2(").concat(u,", ").concat(d,");\n      const float neg_infinity = -3.4e38;\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.w;\n        ivec2 outTopLeftCorner =\n            coords.yz * strides - pads;\n        int hBeg = outTopLeftCorner.x;\n        int wBeg = outTopLeftCorner.y;\n\n        float curVal = neg_infinity;\n        for (int h = 0; h < ").concat(o,"; h++) {\n          int hIn = hBeg + h * ").concat(c,";\n\n          if (hIn >= 0 && hIn < ").concat(t,") {\n            for (int w = 0; w < ").concat(i,"; w++) {\n              int wIn = wBeg + w * ").concat(l,";\n\n              if (wIn >= 0 && wIn < ").concat(n,") {\n                float xVal = getX(batch, hIn, wIn, d1);\n                float wVal = getW(h, w, d1);\n\n                float val = xVal + wVal;\n                if (val > curVal) {\n                  curVal = val;\n                }\n              }\n            }\n          }\n        }\n\n        float result = curVal;\n        setOutput(result);\n      }\n    ")}}const bS={kernelName:S.Dilation2D,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,filter:s}=t,{strides:o,pad:i,dilations:c}=a,l=S.backend_util.computeDilation2DInfo(r.shape,s.shape,o,i,"NHWC",c);let u;const d=new yS(l);u=n.runWebGLProgram(d,[r,s],"float32");const h=Kx({inputs:{x:u},backend:n,attrs:{shape:l.outShape}});return n.disposeIntermediateTensorInfo(u),h}};const vS={kernelName:S.Einsum,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{equation:r}=a,s=t,{allDims:o,summedDims:i,idDims:c}=S.backend_util.decodeEinsumEquation(r,s.length);S.backend_util.checkEinsumDimSizes(o.length,c,s);const{path:l,steps:u}=S.backend_util.getEinsumComputePath(i,c),d=u.length;let h=null,p=o.length;const f=[];for(let m=0;m<d;++m){for(const e of u[m]){const{permutationIndices:t,expandDims:a}=S.backend_util.getEinsumPermutation(p,c[e]);let r;S.backend_util.isIdentityPermutation(t)?r=s[e]:(r=rw({inputs:{x:s[e]},backend:n,attrs:{perm:t}}),f.push(r));const o=r.shape.slice();for(let e=0;e<a.length;++e)o.splice(a[e],0,1);S.util.arraysEqual(r.shape,o)||(r=Kx({inputs:{x:r},backend:n,attrs:{shape:o}}),f.push(r)),null===h?h=r:(h=qx({inputs:{a:r,b:h},backend:n}),f.push(h))}m<d-1&&(l[m]>=0&&(h=nw({inputs:{x:h},backend:n,attrs:{axis:l[m]-(o.length-p),keepDims:!1}}),f.push(h)),p--)}for(const m of f)m!==h&&n.disposeIntermediateTensorInfo(m);return h}},xS=Bx({opSnippet:"return (x >= 0.0) ? x : (exp(x) - 1.0);",packedOpSnippet:"\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n"}),wS={kernelName:S.Elu,backendName:"webgl",kernelFunc:xS},kS={kernelName:S.EluGrad,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n}=e,{dy:a,y:r}=t,s=(0,S.env)().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Cx("\n  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));\n  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));\n",a.shape,r.shape):new Ix("return (b >= 0.0) ? a : a * (b + 1.0);",a.shape,r.shape);return n.runWebGLProgram(s,[a,r],a.dtype)}},SS=Px({opSnippet:"return float(a == b);",packedOpSnippet:"\n  return vec4(equal(a, b));\n",dtype:"bool",cpuKernelImpl:lv}),NS={kernelName:S.Equal,backendName:"webgl",kernelFunc:SS},IS=Bx({opSnippet:'\n  // Error function is calculated approximately with elementary function.\n  // See "Handbook of Mathematical Functions with Formulas,\n  // Graphs, and Mathematical Tables", Abramowitz and Stegun.\n  float p = '.concat(S.backend_util.ERF_P,";\n  float a1 = ").concat(S.backend_util.ERF_A1,";\n  float a2 = ").concat(S.backend_util.ERF_A2,";\n  float a3 = ").concat(S.backend_util.ERF_A3,";\n  float a4 = ").concat(S.backend_util.ERF_A4,";\n  float a5 = ").concat(S.backend_util.ERF_A5,";\n\n  float sign = sign(x);\n  x = abs(x);\n  float t = 1.0 / (1.0 + p * x);\n  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));\n")}),TS={kernelName:S.Erf,backendName:"webgl",kernelFunc:IS},CS=Bx({opSnippet:"if (isnan(x)) return x;\n  return exp(x);\n",packedOpSnippet:"\n  vec4 result = exp(x);\n  bvec4 isNaN = isnan(x);\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",cpuKernelImpl:uv,dtype:"float32"}),ES={kernelName:S.Exp,backendName:"webgl",kernelFunc:CS};function _S(e){const{inputs:t,attrs:n,backend:a}=e,{dim:r}=n,{input:s}=t,o=s.shape.length,i=s.shape.slice();let c=r;return r<0&&(S.util.assert(-(o+1)<=r,(()=>"Axis must be in the interval [".concat(-(o+1),", ").concat(o,"]"))),c=o+r+1),i.splice(c,0,1),Kx({inputs:{x:s},backend:a,attrs:{shape:i}})}const AS={kernelName:S.ExpandDims,backendName:"webgl",kernelFunc:_S},RS="return exp(x) - 1.0;",FS=Bx({opSnippet:RS,packedOpSnippet:RS,cpuKernelImpl:dv}),DS={kernelName:S.Expm1,backendName:"webgl",kernelFunc:FS};class OS{constructor(e,t,n){this.variableNames=["real","imag"];const a=t[1];this.outputShape=t;const r=n?"2.0 * ".concat(Math.PI):"-2.0 * ".concat(Math.PI),s=n?"".concat(a,".0"):"1.0";let o;if("real"===e)o="return real * expR - imag * expI;";else{if("imag"!==e)throw new Error('FFT component must be either "real" or "imag", got '.concat(e,"."));o="return real * expI + imag * expR;"}this.userCode="\n      const float exponentMultiplier = ".concat(r,";\n\n      float unaryOpComplex(float real, float expR, float imag, float expI) {\n        ").concat(o,"\n      }\n\n      float mulMatDFT(int batch, int index) {\n        float indexRatio = float(index) / float(").concat(a,");\n        float exponentMultiplierTimesIndexRatio =\n            exponentMultiplier * indexRatio;\n\n        float result = 0.0;\n\n        for (int i = 0; i < ").concat(a,"; i++) {\n          // x = (-2|2 * PI / N) * index * i;\n          float x = exponentMultiplierTimesIndexRatio * float(i);\n          float expR = cos(x);\n          float expI = sin(x);\n          float real = getReal(batch, i);\n          float imag = getImag(batch, i);\n\n          result +=\n              unaryOpComplex(real, expR, imag, expI) / ").concat(s,";\n        }\n\n        return result;\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        setOutput(mulMatDFT(coords[0], coords[1]));\n      }\n    ")}}function MS(e,t,n){const a=n.texData.get(e.dataId),r=S.util.sizeFromShape(e.shape),s=e.shape[e.shape.length-1],o=Kx({inputs:{x:e},backend:n,attrs:{shape:[r/s,s]}}),i=o.shape,c=new OS("real",i,t),l=new OS("imag",i,t),u=[{dataId:a.complexTensorInfos.real.dataId,dtype:a.complexTensorInfos.real.dtype,shape:i},{dataId:a.complexTensorInfos.imag.dataId,dtype:a.complexTensorInfos.imag.dtype,shape:i}],d=n.runWebGLProgram(c,u,"float32"),h=n.runWebGLProgram(l,u,"float32"),p=Ax({inputs:{real:d,imag:h},backend:n});n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(h);const f=Kx({inputs:{x:p},backend:n,attrs:{shape:e.shape}});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(p),f}const zS={kernelName:S.FFT,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:a}=t;return MS(a,!1,n)}};class LS{constructor(e,t){this.outputShape=[],this.customUniforms=[{name:"value",type:"float"}],this.variableNames=["x"],this.outputShape=e,this.userCode="\n      void main() {\n        // Input can be obtained from uniform value.\n        setOutput(value);\n      }\n    "}}function BS(e){const{backend:t,attrs:n}=e,{shape:a,value:r}=n;let{dtype:s}=n;if(s=s||S.util.inferDtype(r),"string"===s){const e=S.util.getArrayFromDType(s,S.util.sizeFromShape(a));return e.fill(r),t.makeTensorInfo(a,s,e)}{const e=new LS(a,r),n=[[r]];return t.runWebGLProgram(e,[],s,n)}}const PS={kernelName:S.Fill,backendName:"webgl",kernelFunc:BS};class VS{constructor(e){this.variableNames=["Image"],this.outputShape=[];const t=e[2];this.outputShape=e,this.userCode="\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n\n          int coordX = ".concat(t," - x - 1;\n          float outputValue;\n          if(coordX >= 0 && coordX < ").concat(t,") {\n            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);\n          } else {\n            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    ")}}const WS={kernelName:S.FlipLeftRight,backendName:"webgl",kernelFunc:e=>{let{inputs:t,backend:n}=e;const{image:a}=t,r=n,s=new VS(a.shape);return r.runWebGLProgram(s,[a],a.dtype)}},US="return floor(x);",GS=Bx({opSnippet:US,packedOpSnippet:US,cpuKernelImpl:hv}),HS={kernelName:S.Floor,backendName:"webgl",kernelFunc:GS},jS=Px({opSnippet:"\n  float s = sign(a) * sign(b);\n  int ia = round(a);\n  int ib = round(b);\n  if (ib != 0) {\n    // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n    return float(idiv(ia, ib, s));\n  } else {\n    return NAN;\n  }\n",packedOpSnippet:"\n  ivec4 ia = round(a);\n  ivec4 ib = round(b);\n  bvec4 cond = notEqual(ib, ivec4(0));\n  ivec4 result = ivec4(0);\n  vec4 s = sign(a) * sign(b);\n\n  // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n  if (cond[0]) {\n    result[0] = idiv(ia[0], ib[0], s[0]);\n  }\n  if (cond[1]) {\n    result[1] = idiv(ia[1], ib[1], s[1]);\n  }\n  if (cond[2]) {\n    result[2] = idiv(ia[2], ib[2], s[2]);\n  }\n  if (cond[3]) {\n    result[3] = idiv(ia[3], ib[3], s[3]);\n  }\n  return vec4(result);\n",dtype:"int32"}),qS={kernelName:S.FloorDiv,backendName:"webgl",kernelFunc:jS};class XS{constructor(e){this.variableNames=["A"];const t=sb(),[n,a]=e;this.outputShape=e,this.userCode="\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(".concat(a,".0, ").concat(n,".0);\n\n        vec4 values = ").concat(t.texture2D,"(A, uv);\n        float value;\n        if (depth == 0) {\n          value = values.r;\n        } else if (depth == 1) {\n          value = values.g;\n        } else if (depth == 2) {\n          value = values.b;\n        } else if (depth == 3) {\n          value = values.a;\n        }\n\n        setOutput(floor(value * 255.0 + 0.5));\n      }\n    ")}}class KS{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;const t=sb(),[n,a]=e;this.outputShape=e,this.userCode="\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n\n        vec4 result = vec4(0.);\n\n        for(int row=0; row<=1; row++) {\n          for(int col=0; col<=1; col++) {\n            texC = coords[1] + row;\n            depth = coords[2] + col;\n\n            vec2 uv = (vec2(texC, texR) + halfCR) /\n                       vec2(".concat(a,".0, ").concat(n,".0);\n            vec4 values = ").concat(t.texture2D,"(A, uv);\n            float value;\n            if (depth == 0) {\n              value = values.r;\n            } else if (depth == 1) {\n              value = values.g;\n            } else if (depth == 2) {\n              value = values.b;\n            } else if (depth == 3) {\n              value = values.a;\n            }\n\n            result[row * 2 + col] = floor(value * 255.0 + 0.5);\n          }\n        }\n\n        ").concat(t.output," = result;\n      }\n    ")}}const QS={kernelName:S.FromPixels,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e;let{pixels:r}=t;const{numChannels:s}=a,o="undefined"!==typeof HTMLVideoElement&&r instanceof HTMLVideoElement,i="undefined"!==typeof HTMLImageElement&&r instanceof HTMLImageElement,[c,l]=o?[r.videoWidth,r.videoHeight]:[r.width,r.height],u=[l,c],d=[l,c,s];if(i||o){const e=(0,S.env)().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");null!=YS&&e===ZS||(ZS=e,YS=document.createElement("canvas").getContext("2d",{willReadFrequently:ZS})),YS.canvas.width=c,YS.canvas.height=l,YS.drawImage(r,0,0,c,l),r=YS.canvas}const h=n.makeTensorInfo(u,"int32");n.texData.get(h.dataId).usage=Cy.PIXELS,n.gpgpu.uploadPixelDataToTexture(n.getTexture(h.dataId),r);const p=(0,S.env)().getBool("WEBGL_PACK")?new KS(d):new XS(d),f=n.runWebGLProgram(p,[h],"int32");return n.disposeData(h.dataId),f}};let YS,ZS=(0,S.env)().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");const JS={kernelName:S.FusedConv2D,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,filter:s,bias:o,preluActivationWeights:i}=t,{strides:c,pad:l,dataFormat:u,dilations:d,dimRoundingMode:h,activation:p,leakyreluAlpha:f}=a,m=S.backend_util.convertConv2DDataFormat(u),g=S.backend_util.computeConv2DInfo(r.shape,s.shape,c,d,l,h,!1,m);let y;const b=[],v=null!=o,x=null!=i,w="leakyrelu"===p,k=()=>{const e=[r,s],t=(e,t)=>{if("NCHW"===t&&1===e.shape.length&&1!==e.shape[0]){const t=Kx({inputs:{x:e},backend:n,attrs:{shape:[e.shape[0],1,1]}});return b.push(t),t}return e};if(v&&e.push(t(o,u)),x&&e.push(t(i,u)),w){const t=n.makeTensorInfo([],"float32",S.util.createScalarValue(f,"float32"));e.push(t),b.push(t)}return e};if(1!==g.filterHeight||1!==g.filterWidth||1!==g.dilationHeight||1!==g.dilationWidth||1!==g.strideHeight||1!==g.strideWidth||"SAME"!==g.padInfo.type&&"VALID"!==g.padInfo.type)if(g.strideWidth<=2&&"channelsLast"===m&&(0,S.env)().getBool("WEBGL_EXP_CONV")){const e=p?Vx(p,!0):null,t=new Ak(g,v,e,x,w),a=[[g.padInfo.top,g.padInfo.left],[g.strideHeight,g.strideWidth],[g.dilationHeight,g.dilationWidth],[g.inHeight,g.inWidth]],r=k();y=n.runWebGLProgram(t,r,"float32",a)}else if((0,S.env)().getBool("WEBGL_CONV_IM2COL"))y=Ok({x:r,filter:s,convInfo:g,backend:n,bias:o,activation:p,preluActivationWeights:i,leakyreluAlpha:f});else{const e=p?Vx(p,!1):null,t=new Ek(g,v,e,x,w),a=k();y=n.runWebGLProgram(t,a,"float32")}else y=Dk({x:r,filter:s,convInfo:g,backend:n,bias:o,activation:p,preluActivationWeights:i,leakyreluAlpha:f});const N=Kx({inputs:{x:y},backend:n,attrs:{shape:g.outShape}});return b.push(y),b.forEach((e=>n.disposeIntermediateTensorInfo(e))),N}};const $S={kernelName:S.FusedDepthwiseConv2D,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,filter:s,bias:o,preluActivationWeights:i}=t,{strides:c,pad:l,dilations:u,dimRoundingMode:d,activation:h,leakyreluAlpha:p}=a,f=[];let m=u;null==m&&(m=[1,1]),S.util.assert(S.backend_util.eitherStridesOrDilationsAreOne(c,m),(()=>"Error in depthwiseConv2d: Either strides or dilations must be "+"1. Got strides ".concat(c," and dilations '").concat(m,"'")));const g=S.backend_util.computeConv2DInfo(r.shape,s.shape,c,m,l,d,!0),y=(0,S.env)().getBool("WEBGL_PACK_DEPTHWISECONV")&&g.strideWidth<=2&&g.outChannels/g.inChannels===1,b=h?Vx(h,y):null,v=[r,s],x=null!=o,w=null!=i,k="leakyrelu"===h;if(x&&v.push(o),w&&v.push(i),k){const e=n.makeTensorInfo([],"float32",S.util.createScalarValue(p,"float32"));v.push(e),f.push(e)}let N;N=y?new lS(g,x,b,w,k):new cS(g,x,b,w,k);const I=[[g.padInfo.top,g.padInfo.left],[g.strideHeight,g.strideWidth],[g.dilationHeight,g.dilationWidth],[g.inHeight,g.inWidth]],T=n.runWebGLProgram(N,v,"float32",I);return f.forEach((e=>n.disposeIntermediateTensorInfo(e))),T}};class eN{constructor(e,t,n,a){this.sliceDim=e,this.strides=t,this.paramsShape=a,this.variableNames=["x","indices"],this.outputShape=n;const r=Ab(n.length);let s="\n    int index;";for(let o=0;o<this.sliceDim;o++)s+="\n          index = round(getIndices(coords[0], ".concat(o,"));\n          out_of_bounds = out_of_bounds || index < 0;\n          out_of_bounds = out_of_bounds || index >= ").concat(this.paramsShape[o],";\n          flattenIndex += index * ").concat(this.strides[o],";");this.userCode="\n         void main() {\n          ".concat(r," coords = getOutputCoords();\n          int flattenIndex = 0;\n          bool out_of_bounds = false;\n\n          ").concat(s,"\n\n          setOutput(out_of_bounds ? 0.0 : getX(flattenIndex, coords[1]));\n        }\n      ")}}const tN={kernelName:S.GatherNd,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{params:a,indices:r}=t,s=r.shape,o=s[s.length-1],i=S.util.sizeFromShape(a.shape),[c,l,u,d]=S.backend_util.prepareAndValidate(a,r),h=Kx({inputs:{x:r},backend:n,attrs:{shape:[l,o]}}),p=Kx({inputs:{x:a},backend:n,attrs:{shape:[S.util.sizeFromShape(a.shape)/u,u]}});if(n.shouldExecuteOnCPU([a,r])||"string"===a.dtype){const e=n.readSync(r.dataId),t=n.bufferSync(a),s=pv(e,t,a.dtype,l,o,u,d,a.shape,i);return n.makeTensorInfo(c,a.dtype,s.values)}const f=new eN(o,d,[l,u],a.shape),m=n.runWebGLProgram(f,[p,h],p.dtype),g=Kx({inputs:{x:m},backend:n,attrs:{shape:c}});return n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(m),g}};class nN{constructor(e,t){this.variableNames=["A","indices"],this.outputShape=t,this.rank=t.length;const n=Ab(this.rank),a=function(e,t){const n=["resRC.x","resRC.y","resRC.z","resRC.w"],a=[];for(let r=0;r<e.length;r++)2===r?a.push("index"):a.push("".concat(n[r]));return a.join()}(e);this.userCode="\n      void main() {\n        ".concat(n," resRC = getOutputCoords();\n        int index = int(getIndices(resRC.x, resRC.z));\n        float inBounds = (index >= 0) && (index < ").concat(e[2],") ? 1.0 : 0.0;\n        setOutput(inBounds * getA(").concat(a,"));\n      }\n    ")}}function aN(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,indices:s}=t,{axis:o,batchDims:i}=a,c=S.util.parseAxisParam(o,r.shape)[0];if((0,S.env)().get("DEBUG")){const e=n.readSync(s.dataId),t=r.shape[c];for(let n=0;n<e.length;++n){const a=e[n];S.util.assert(a<=t-1&&a>=0,(()=>"GatherV2: the index value ".concat(a," is not in [0, ").concat(t-1,"]")))}}const l=S.backend_util.segment_util.collectGatherOpShapeInfo(r,s,c,i),u=S.util.sizeFromShape(s.shape),d=[],h=Kx({inputs:{x:r},backend:n,attrs:{shape:[l.batchSize,l.outerSize,l.dimSize,l.sliceSize]}}),p=Kx({inputs:{x:s},backend:n,attrs:{shape:[l.batchSize,u/l.batchSize]}});d.push(h),d.push(p);const f=[l.batchSize,l.outerSize,u/l.batchSize,l.sliceSize];if(n.shouldExecuteOnCPU([r,s])||"string"===r.dtype){const e=n.bufferSync(p),t=n.bufferSync(h),a=fv(t,e,f);return d.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(l.outputShape,a.dtype,a.values)}const m=new nN(h.shape,f),g=n.runWebGLProgram(m,[h,p],h.dtype);d.push(g);const y=Kx({inputs:{x:g},backend:n,attrs:{shape:l.outputShape}});return d.forEach((e=>n.disposeIntermediateTensorInfo(e))),y}const rN={kernelName:S.GatherV2,backendName:"webgl",kernelFunc:aN},sN=Px({opSnippet:"return float(a > b);",packedOpSnippet:"\n  return vec4(greaterThan(a, b));\n",cpuKernelImpl:mv,dtype:"bool"}),oN={kernelName:S.Greater,backendName:"webgl",kernelFunc:sN},iN=Px({opSnippet:"return float(a >= b);",packedOpSnippet:"\n  return vec4(greaterThanEqual(a, b));\n",dtype:"bool",cpuKernelImpl:gv}),cN={kernelName:S.GreaterEqual,backendName:"webgl",kernelFunc:iN};const lN={kernelName:S.IFFT,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:a}=t;return MS(a,!0,n)}},uN=Bx({opSnippet:"return float(!isnan(x) && !isinf(x));",dtype:"bool"}),dN={kernelName:S.IsFinite,backendName:"webgl",kernelFunc:uN},hN=Bx({opSnippet:"return float(isinf(x));",dtype:"bool"}),pN={kernelName:S.IsInf,backendName:"webgl",kernelFunc:hN},fN=Bx({opSnippet:"return float(isnan(x));",dtype:"bool"}),mN={kernelName:S.IsNan,backendName:"webgl",kernelFunc:fN},gN=Px({opSnippet:"return float(a < b);",packedOpSnippet:"\n  return vec4(lessThan(a, b));\n",cpuKernelImpl:yv,dtype:"bool"}),yN={kernelName:S.Less,backendName:"webgl",kernelFunc:gN},bN=Px({opSnippet:"return float(a <= b);",packedOpSnippet:"\n  return vec4(lessThanEqual(a, b));\n",cpuKernelImpl:bv,dtype:"bool"}),vN={kernelName:S.LessEqual,backendName:"webgl",kernelFunc:bN};const xN={kernelName:S.LinSpace,backendName:"webgl",kernelFunc:function(e){const{backend:t,attrs:n}=e,{start:a,stop:r,num:s}=n,o=vv(a,r,s);return t.makeTensorInfo([o.length],"float32",o)}},wN=Bx({opSnippet:"if (isnan(x)) return x;\n  return x < 0.0 ? 0./0. : log(x);\n",packedOpSnippet:"\n  vec4 result = log(x);\n  bvec4 isNaN = isnan(x);\n  result.r = isNaN.r ? x.r : (x.r < 0.0 ? 0./0. : result.r);\n  result.g = isNaN.g ? x.g : (x.g < 0.0 ? 0./0. : result.g);\n  result.b = isNaN.b ? x.b : (x.b < 0.0 ? 0./0. : result.b);\n  result.a = isNaN.a ? x.a : (x.a < 0.0 ? 0./0. : result.a);\n  return result;\n",cpuKernelImpl:xv}),kN={kernelName:S.Log,backendName:"webgl",kernelFunc:wN},SN=Bx({opSnippet:"if (isnan(x)) return x;\n  return log(1.0 + x);\n"}),NN={kernelName:S.Log1p,backendName:"webgl",kernelFunc:SN},IN=Px({opSnippet:"return float(a >= 1.0 && b >= 1.0);",packedOpSnippet:"\n  return vec4(\n    vec4(greaterThanEqual(a, vec4(1.0))) *\n    vec4(greaterThanEqual(b, vec4(1.0))));\n",dtype:"bool"}),TN={kernelName:S.LogicalAnd,backendName:"webgl",kernelFunc:IN},CN=Bx({opSnippet:"return float(!(x >= 1.0));"}),EN={kernelName:S.LogicalNot,backendName:"webgl",kernelFunc:CN},_N=Px({opSnippet:"return float(a >= 1.0 || b >= 1.0);",packedOpSnippet:"\n  return min(\n    vec4(greaterThanEqual(a, vec4(1.0))) +\n    vec4(greaterThanEqual(b, vec4(1.0))),\n    vec4(1.0));\n",dtype:"bool"}),AN={kernelName:S.LogicalOr,backendName:"webgl",kernelFunc:_N};class RN{constructor(e,t,n,a,r){this.variableNames=["x"],this.outputShape=[];const s=t,o=e[3]-1;let i;this.outputShape=e;const c="float(".concat(n,") + float(").concat(a,") * sum");i=.5===r?"inversesqrt(".concat(c,")"):1===r?"1.0/(".concat(c,")"):"exp(log(".concat(c,") * float(-").concat(r,"));"),this.userCode="\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n        int d = coords[3];\n        float x = getX(b, r, c, d);\n        float sum = 0.0;\n        for (int j = -".concat(s,"; j <= ").concat(s,"; j++) {\n          int idx = d + j;\n          if (idx >= 0 && idx <=  ").concat(o,") {\n            float z = getX(b, r, c, idx);\n            sum += z * z;\n          }\n        }\n        float val = x * ").concat(i,";\n        setOutput(val);\n      }\n    ")}}class FN{constructor(e,t,n,a,r){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;const s=t,o=e[3]-1;let i;this.outputShape=e;const c="float(".concat(n,") + float(").concat(a,") * sum");i=.5===r?"inversesqrt(".concat(c,")"):1===r?"1.0/(".concat(c,")"):"exp(log(".concat(c,") * float(-").concat(r,"));"),this.userCode="\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords.x;\n        int r = coords.y;\n        int c = coords.z;\n        int d = coords.w;\n\n        bool hasNextCol = d < ".concat(this.outputShape[3],";\n        bool hasNextRow = c < ").concat(this.outputShape[2],";\n\n        vec4 sum = vec4(0.);\n        vec4 xFragAtOutputCoords = getX(b, r, c, d);\n\n        vec4 xAtOutputCoords = vec4(\n          getChannel(xFragAtOutputCoords, vec2(c, d)),\n          hasNextCol ?\n            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,\n          hasNextRow ?\n            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0\n        );\n\n        int firstChannel = d - ").concat(s,";\n        vec2 cache = vec2(0.);\n        if(firstChannel >= 0){\n          vec4 firstChannelFrag = getX(b, r, c, firstChannel);\n          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));\n            if(hasNextRow){\n              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));\n            }\n        }\n\n        ivec2 depth = ivec2(d, d + 1);\n        for (int j = - ").concat(s,"; j <= ").concat(s,"; j++) {\n          ivec2 idx = depth + j;\n          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));\n          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(").concat(o,"));\n\n          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;\n          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;\n\n          if(depthInRange || depthPlusOneInRange){\n            vec4 z = vec4(0.);\n            vec4 xFragAtCurrentDepth;\n            z.xz = cache.xy;\n            if(depthPlusOneInRange && hasNextCol){\n              xFragAtCurrentDepth = idx.y != d ?\n                getX(b, r, c, idx.y) : xFragAtOutputCoords;\n              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));\n              if(hasNextRow){\n                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));\n              }\n            }\n            cache.xy = z.yw;\n            sum += z * z;\n          }\n        }\n        vec4 result = xAtOutputCoords * ").concat(i,";\n        setOutput(result);\n      }\n    ")}}const DN={kernelName:S.LRN,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{depthRadius:s,bias:o,alpha:i,beta:c}=a,l=(0,S.env)().getBool("WEBGL_PACK_NORMALIZATION")?new FN(r.shape,s,o,i,c):new RN(r.shape,s,o,i,c);return n.runWebGLProgram(l,[r],r.dtype)}};class ON{constructor(e,t,n,a,r){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=e,this.depth=e[3],this.depthRadius=t,this.bias=n,this.alpha=a,this.beta=r,this.userCode="\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n\n        float result = 0.0;\n        for (int d = 0; d < ".concat(this.depth,"; ++d) {\n          int depthBegin = int(max(0.0, float(d - ").concat(t,")));\n          int depthEnd = int(min(float(").concat(this.depth,"),\n              float(d + ").concat(t," + 1)));\n\n          const int MIN_DEPTH_BEGIN = 0;\n          const int MAX_DEPTH_END = ").concat(this.depth,";\n\n          float norm = 0.0;\n          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd) {\n              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);\n            }\n            else {\n              break;\n            }\n          }\n\n          norm = float(").concat(a,") * norm + float(").concat(n,");\n\n          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd){\n              float dyi = -2.0 * float(").concat(a,")\n                * float(").concat(r,")\n                * getInputImage(b, r, c, k) * getOutputImage(b, r, c, d)\n                / norm;\n              if (k == d) {\n                dyi += pow(norm, -1.0 * ").concat(r,");\n              }\n              if (k == coords[3]) {\n                dyi *= getDy(b, r, c, d);\n                result += dyi;\n              }\n            }\n            else {\n              break;\n            }\n          }\n      }\n      setOutput(result);\n      }\n    ")}}const MN={kernelName:S.LRNGrad,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:a}=e,{x:r,y:s,dy:o}=t,{depthRadius:i,bias:c,alpha:l,beta:u}=a,d=new ON(r.shape,i,c,l,u);return n.runWebGLProgram(d,[r,s,o],r.dtype)}};function zN(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{reductionIndices:s,keepDims:o}=a,i=r.shape.length,c=S.util.parseAxisParam(s,r.shape);let l=c;const u=S.backend_util.getAxesPermutation(l,i),d=null!=u,h=n.shouldExecuteOnCPU([r]);let p=r;if(d){if(h){const e=n.texData.get(p.dataId).values,t=new Array(i);for(let n=0;n<t.length;n++)t[n]=r.shape[u[n]];const a=Qv(e,r.shape,r.dtype,u,t);p=n.makeTensorInfo(t,r.dtype);n.texData.get(p.dataId).values=a}else p=tw(r,u,n);l=S.backend_util.getInnerMostAxes(l.length,i)}S.backend_util.assertAxesAreInnerMostDims("max",l,i);const[f,m]=S.backend_util.computeOutAndReduceShapes(p.shape,l);let g,y=f;if(o&&(y=S.backend_util.expandShapeToKeepDim(f,c)),h){const e=n.texData.get(p.dataId).values,t=wv(e,S.util.sizeFromShape(m),y,r.dtype);g=n.makeTensorInfo(y,r.dtype);n.texData.get(g.dataId).values=t}else g=function(e,t,n,a){const r=S.util.sizeFromShape(t),s=Kx({inputs:{x:e},attrs:{shape:[S.util.sizeFromShape(e.shape)/r,r]},backend:a}),o=Jx(s,e.dtype,"max",a),i=Kx({inputs:{x:o},attrs:{shape:n},backend:a});return a.disposeIntermediateTensorInfo(s),a.disposeIntermediateTensorInfo(o),i}(p,m,y,n);return d&&n.disposeIntermediateTensorInfo(p),g}const LN={kernelName:S.Max,backendName:"webgl",kernelFunc:zN},BN=Px({opSnippet:"\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return max(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(max(a, b));\n  bvec4 isNaNA = isnan(a);\n  bvec4 isNaNB = isnan(b);\n  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);\n  \n  result.r = isNaN.r ? NAN : result.r;\n  result.g = isNaN.g ? NAN : result.g;\n  result.b = isNaN.b ? NAN : result.b;\n  result.a = isNaN.a ? NAN : result.a;\n\n  return result;\n",cpuKernelImpl:kv}),PN={kernelName:S.Maximum,backendName:"webgl",kernelFunc:BN};const VN={kernelName:S.MaxPool,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t;ab(r,"maxPool");const{filterSize:s,strides:o,pad:i,dimRoundingMode:c}=a;S.util.assert(S.backend_util.eitherStridesOrDilationsAreOne(o,1),(()=>"Error in maxPool: Either strides or dilations must be 1. "+"Got strides ".concat(o," and dilations '").concat(1,"'")));const l=S.backend_util.computePool2DInfo(r.shape,s,o,1,i,c);if(1===l.filterWidth&&1===l.filterHeight&&S.util.arraysEqual(l.inShape,l.outShape))return Ex({inputs:{x:r},backend:n});const u=new Pw(l,"max",!1);return n.runWebGLProgram(u,[r],r.dtype)}};const WN={kernelName:S.MaxPool3D,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{filterSize:s,strides:o,pad:i,dataFormat:c,dimRoundingMode:l}=a,u=S.backend_util.computePool3DInfo(r.shape,s,o,[1,1,1],i,l,c),d=new Vw(u,"max",!1);return n.runWebGLProgram(d,[r],r.dtype)}};class UN{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.strideHeight,n=e.strideWidth,a=e.dilationHeight,r=e.effectiveFilterHeight,s=e.effectiveFilterWidth,o=r-1-e.padInfo.top,i=s-1-e.padInfo.left,c=r*s-1;this.userCode="\n      const ivec2 pads = ivec2(".concat(o,", ").concat(i,");\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ").concat(r,";\n          wR += ").concat(a,") {\n          float dyR = float(dyRCorner + wR) / ").concat(t,".0;\n\n          if (dyR < 0.0 || dyR >= ").concat(e.outHeight,".0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ").concat(s,"; wC++) {\n            float dyC = float(dyCCorner + wC) / ").concat(n,".0;\n\n            if (dyC < 0.0 || dyC >= ").concat(e.outWidth,".0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n            int maxPosValue = ").concat(c," - int(getMaxPos(b, idyR, idyC, d));\n\n            // Get the current value, check it against the value from the\n            // position matrix.\n            int curPosValue = wR * ").concat(s," + wC;\n            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n            dotProd += dyValue * mask;\n          }\n        }\n        setOutput(dotProd);\n      }\n    ")}}class GN{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.strideDepth,n=e.strideHeight,a=e.strideWidth,r=e.dilationDepth,s=e.dilationHeight,o=e.dilationWidth,i=e.effectiveFilterDepth,c=e.effectiveFilterHeight,l=e.effectiveFilterWidth,u=i-1-e.padInfo.front,d=c-1-e.padInfo.top,h=l-1-e.padInfo.left,p=i*c*l-1;this.userCode="\n      const ivec3 pads = ivec3(".concat(u,", ").concat(d,", ").concat(h,");\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ").concat(i,";\n           wD += ").concat(r,") {\n          float dyD = float(dyDCorner + wD) / ").concat(t,".0;\n\n          if (dyD < 0.0 || dyD >= ").concat(e.outDepth,".0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ").concat(c,";\n              wR += ").concat(s,") {\n            float dyR = float(dyRCorner + wR) / ").concat(n,".0;\n\n            if (dyR < 0.0 || dyR >= ").concat(e.outHeight,".0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ").concat(l,";\n                wC += ").concat(o,") {\n              float dyC = float(dyCCorner + wC) / ").concat(a,".0;\n\n              if (dyC < 0.0 || dyC >= ").concat(e.outWidth,".0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n              int maxPosValue = ").concat(p," -\n                  int(getMaxPos(batch, idyD, idyR, idyC, ch));\n\n              // Get the current value, check it against the value from the\n              // position matrix.\n              int curPosValue =\n                  wD * ").concat(c," * ").concat(l," +\n                  wR * ").concat(l," + wC;\n              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n              dotProd += dyValue * mask;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    ")}}const HN={kernelName:S.MaxPool3DGrad,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:r,input:s}=t,o=s,{filterSize:i,strides:c,pad:l,dimRoundingMode:u}=a,d=S.backend_util.computePool3DInfo(o.shape,i,c,[1,1,1],l,u),h=new Vw(d,"max",!0),p=n.runWebGLProgram(h,[o],o.dtype),f=new GN(d),m=n.runWebGLProgram(f,[r,p],o.dtype);return n.disposeIntermediateTensorInfo(p),m}};const jN={kernelName:S.MaxPoolGrad,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{dy:r,input:s,output:o}=t,i=s;ab([s,o],"maxPoolGrad");const{filterSize:c,strides:l,pad:u,dimRoundingMode:d}=a,h=S.backend_util.computePool2DInfo(i.shape,c,l,1,u,d),p=new Pw(h,"max",!0),f=n.runWebGLProgram(p,[i],i.dtype),m=new UN(h),g=n.runWebGLProgram(m,[r,f],i.dtype);return n.disposeIntermediateTensorInfo(f),g}};const qN={kernelName:S.MaxPoolWithArgmax,backendName:"webgl",kernelFunc:e=>{let{inputs:t,attrs:n,backend:a}=e;const{x:r}=t,{filterSize:s,strides:o,pad:i,includeBatchInIndex:c}=n,l=a;S.util.assert(4===r.shape.length,(()=>"Error in maxPool: input must be rank 4 but got rank ".concat(r.shape.length,".")));const u=[1,1];S.util.assert(S.backend_util.eitherStridesOrDilationsAreOne(o,u),(()=>"Error in maxPool: Either strides or dilations must be 1. "+"Got strides ".concat(o," and dilations '").concat(u,"'")));const d=S.backend_util.computePool2DInfo(r.shape,s,o,u,i),[h,p]=function(e,t,n,a){let r=new Pw(n,"max",!1);const s=a.runWebGLProgram(r,[e],"float32");return r=new Pw(n,"max",!0,!0,t),[s,a.runWebGLProgram(r,[e],"float32")]}(r,c,d,l);return[h,p]}};const XN={kernelName:S.Mean,backendName:"webgl",kernelFunc:e=>{let{inputs:t,attrs:n,backend:a}=e;const{x:r}=t,{keepDims:s,axis:o}=n,i=a,c=r.shape.length,l=S.util.parseAxisParam(o,r.shape);let u=l;const d=S.backend_util.getAxesPermutation(u,c),h=null!=d,p=i.shouldExecuteOnCPU([r]),f=[];let m=r;if(h){if(p){const e=i.texData.get(m.dataId).values,t=new Array(c);for(let a=0;a<t.length;a++)t[a]=r.shape[d[a]];const n=Qv(e,r.shape,r.dtype,d,t);m=i.makeTensorInfo(t,r.dtype);i.texData.get(m.dataId).values=n}else m=tw(r,d,i);f.push(m),u=S.backend_util.getInnerMostAxes(u.length,c)}S.backend_util.assertAxesAreInnerMostDims("sum",u,c);const[g,y]=S.backend_util.computeOutAndReduceShapes(m.shape,u);let b=g;s&&(b=S.backend_util.expandShapeToKeepDim(g,l));const v=function(e,t,n,a){const r=S.util.sizeFromShape(t),s=Kx({inputs:{x:e},attrs:{shape:[S.util.sizeFromShape(e.shape)/r,r]},backend:a}),o=Jx(s,"float32","mean",a),i=Kx({inputs:{x:o},attrs:{shape:n},backend:a});return a.disposeIntermediateTensorInfo(s),a.disposeIntermediateTensorInfo(o),i}(m,y,b,i);for(const x of f)i.disposeIntermediateTensorInfo(x);return v}};const KN={kernelName:S.Min,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s,keepDims:o}=a,i=r.shape.length,c=S.util.parseAxisParam(s,r.shape);let l=c;const u=S.backend_util.getAxesPermutation(l,i);let d=r;null!=u&&(d=rw({inputs:{x:r},backend:n,attrs:{perm:u}}),l=S.backend_util.getInnerMostAxes(l.length,r.shape.length)),S.backend_util.assertAxesAreInnerMostDims("min",l,i);const[h,p]=S.backend_util.computeOutAndReduceShapes(d.shape,l),f=Kx({inputs:{x:d},backend:n,attrs:{shape:[-1,S.util.sizeFromShape(p)]}}),m=Jx(f,f.dtype,"min",n);let g;if(o){g=Kx({inputs:{x:m},backend:n,attrs:{shape:S.backend_util.expandShapeToKeepDim(h,c)}})}else g=Kx({inputs:{x:m},backend:n,attrs:{shape:h}});return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),null!=u&&n.disposeIntermediateTensorInfo(d),g}},QN=Px({opSnippet:"\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return min(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(min(a, b));\n  bvec4 isNaNA = isnan(a);\n  bvec4 isNaNB = isnan(b);\n  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);\n  \n  result.r = isNaN.r ? NAN : result.r;\n  result.g = isNaN.g ? NAN : result.g;\n  result.b = isNaN.b ? NAN : result.b;\n  result.a = isNaN.a ? NAN : result.a;\n\n  return result;\n",cpuKernelImpl:Sv}),YN={kernelName:S.Minimum,backendName:"webgl",kernelFunc:QN};class ZN{constructor(e,t,n){this.variableNames=["x"],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const a=e.length,r=Ab(a),s=t.map((e=>e[0])).join(","),o=t.map(((t,n)=>t[0]+e[n])).join(","),i=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,a),c="reflect"===n?0:1;this.userCode=1!==a?"\n      ".concat(r," start = ").concat(r,"(").concat(s,");\n      ").concat(r," end = ").concat(r,"(").concat(o,");\n\n      void main() {\n        ").concat(r," outC = getOutputCoords();\n        for (int i = 0; i < ").concat(a,"; i++) {\n          if (outC[i] < start[i]) {\n            outC[i] = start[i] * 2 - outC[i] - ").concat(c,";\n          } else if(outC[i] >= end[i]) {\n            outC[i] = (end[i] - 1) * 2 - outC[i] + ").concat(c,";\n          }\n        }\n        ").concat(r," coords = outC - start;\n        setOutput(getX(").concat(i,"));\n      }\n    "):"\n        int start = ".concat(s,";\n        int end = ").concat(o,";\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start) {\n            outC = start * 2 - outC - ").concat(c,";\n          } else if(outC >= end) {\n            outC = (end - 1) * 2 - outC + ").concat(c,";\n          }\n          setOutput(getX(outC - start));\n        }\n      ")}}class JN{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const a=e.length,r=Ab(a),s=t.map((e=>e[0])).join(","),o=t.map(((t,n)=>t[0]+e[n])).join(","),i=Jv("rc",a),c=Jv("source",a),l="".concat(i[a-1]," < ").concat(this.outputShape[a-1]),u=1===a?"source":"vec2(".concat(c.slice(-2).join(),")"),d="reflect"===n?0:1;let h="";if(1===a){const e="\n        ".concat(r," source = rc;\n        if (source < start) {\n          source = start * 2 - source - ").concat(d,";\n        } else if (source >= end) {\n          source = (end - 1) * 2 - source + ").concat(d,";\n        }\n        source -= start;\n      ");h="\n        ".concat(r," rc = outputLoc;\n        ").concat(e,"\n        result[0] = getChannel(getX(").concat(c.join(),"), ").concat(u,");\n        ").concat(i[a-1]," += 1;\n        if(").concat(l,") {\n          ").concat(e,"\n          result[1] = getChannel(getX(").concat(c.join(),"), ").concat(u,");\n        }\n      ")}else{const e="\n        ".concat(r," source = rc;\n        ").concat(r," lt = ").concat(r,"(lessThan(source, start));\n        ").concat(r," gte = ").concat(r,"(greaterThanEqual(source, end));\n        ").concat(r," orig = 1 - (lt + gte);\n        source = orig * source +\n                lt * (start * 2 - source - ").concat(d,") +\n                gte * ((end - 1) * 2 - source + ").concat(d,");\n        source -= start;\n      ");h="\n        ".concat(r," rc = outputLoc;\n        ").concat(e,"\n        result[0] = getChannel(getX(").concat(c.join(),"), ").concat(u,");\n        ").concat(i[a-1]," += 1;\n        if(").concat(l,") {\n          ").concat(e,"\n          result[1] = getChannel(getX(").concat(c.join(),"), ").concat(u,");\n        }\n        rc = outputLoc;\n        ").concat(i[a-2]," += 1;\n        if(").concat(i[a-2]," < ").concat(this.outputShape[a-2],") {\n          ").concat(e,"\n          result[2] = getChannel(getX(").concat(c.join(),"), ").concat(u,");\n          ").concat(i[a-1]," += 1;\n          if(").concat(l,") {\n            ").concat(e,"\n            result[3] = getChannel(getX(").concat(c.join(),"), ").concat(u,");\n          }\n        }\n      ")}this.userCode="\n      const ".concat(r," start = ").concat(r,"(").concat(s,");\n      const ").concat(r," end = ").concat(r,"(").concat(o,");\n\n      void main() {\n        ").concat(r," outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ").concat(h,"\n        setOutput(result);\n      }\n    ")}}const $N={kernelName:S.MirrorPad,backendName:"webgl",kernelFunc:e=>{let{inputs:t,backend:n,attrs:a}=e;const{x:r}=t,{paddings:s,mode:o}=a,i=(0,S.env)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new JN(r.shape,s,o):new ZN(r.shape,s,o);return n.runWebGLProgram(i,[r],r.dtype)}},eI=Px({opSnippet:"if (b == 0.0) return NAN;\n  return mod(a, b);",packedOpSnippet:"\n  vec4 result = mod(a, b);\n  bvec4 isNaN = equal(b, vec4(0.0));\n  \n  result.r = isNaN.r ? NAN : result.r;\n  result.g = isNaN.g ? NAN : result.g;\n  result.b = isNaN.b ? NAN : result.b;\n  result.a = isNaN.a ? NAN : result.a;\n\n  return result;\n"}),tI={kernelName:S.Mod,backendName:"webgl",kernelFunc:eI};class nI{constructor(e,t,n){this.variableNames=["probs"],this.customUniforms=[{name:"seed",type:"float"}],this.outputShape=[e,n],this.userCode="\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n\n        float r = random(seed);\n        float cdf = 0.0;\n\n        for (int i = 0; i < ".concat(t-1,"; i++) {\n          cdf += getProbs(batch, i);\n\n          if (r < cdf) {\n            setOutput(float(i));\n            return;\n          }\n        }\n\n        // If no other event happened, last event happened.\n        setOutput(float(").concat(t-1,"));\n      }\n    ")}}const aI=Px({opSnippet:"\nif (a == b) {\n  return 1.0;\n};\nreturn a / b;",packedOpSnippet:"\n  // vec4 one = vec4(equal(a, b));\n  // return one + (vec4(1.0) - one) * a / b;\n  vec4 result = a / b;\n  if(a.x == b.x) {\n    result.x = 1.;\n  }\n  if(a.y == b.y) {\n    result.y = 1.;\n  }\n  if(a.z == b.z) {\n    result.z = 1.;\n  }\n  if(a.w == b.w) {\n    result.w = 1.;\n  }\n\n  return result;\n",checkOutOfBounds:!0}),rI={kernelName:S.RealDiv,backendName:"webgl",kernelFunc:aI},sI="return a - b;",oI=Px({opSnippet:sI,packedOpSnippet:sI,supportsComplex:!0,cpuKernelImpl:qv}),iI={kernelName:S.Sub,backendName:"webgl",kernelFunc:oI};function cI(e){const{inputs:t,backend:n,attrs:a}=e,{logits:r}=t,{dim:s}=a,o=S.util.parseAxisParam([s],r.shape),i=zN({inputs:{x:r},backend:n,attrs:{reductionIndices:o,keepDims:!1}}),c=S.backend_util.expandShapeToKeepDim(i.shape,o),l=Kx({inputs:{x:i},backend:n,attrs:{shape:c}}),u=oI({inputs:{a:r,b:l},backend:n}),d=CS({inputs:{x:u},backend:n}),h=nw({inputs:{x:d},backend:n,attrs:{axis:o,keepDims:!1}}),p=Kx({inputs:{x:h},backend:n,attrs:{shape:c}}),f=aI({inputs:{a:d,b:p},backend:n});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(p),f}const lI={kernelName:S.Softmax,backendName:"webgl",kernelFunc:cI};const uI={kernelName:S.Multinomial,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{logits:r}=t,{numSamples:s,seed:o,normalized:i}=a,c=i?r:cI({inputs:{logits:r},backend:n,attrs:{dim:r.shape.length-1}}),l=c.shape[0],u=c.shape[1],d=new nI(l,u,s),h=[[o]],p=n.runWebGLProgram(d,[c],"int32",h);return i||n.disposeIntermediateTensorInfo(c),p}};const dI={kernelName:S.Neg,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:a}=t;if(n.shouldExecuteOnCPU([a])){const e=n.texData.get(a.dataId),[t,r]=Iv(e.values,a.shape,a.dtype);return n.makeTensorInfo(r,a.dtype,t)}let r;return r=(0,S.env)().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new vx(a.shape,"\n  vec4 result = -x;\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"):new sx(a.shape,"if (isnan(x)) return x;\n  return -x;\n"),n.runWebGLProgram(r,[a],a.dtype)}},hI=S.kernel_impls.nonMaxSuppressionV3Impl;const pI={kernelName:S.NonMaxSuppressionV3,backendName:"webgl",kernelFunc:function(e){S.backend_util.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:a}=e,{boxes:r,scores:s}=t,{maxOutputSize:o,iouThreshold:i,scoreThreshold:c}=a,l=n.readSync(r.dataId),u=n.readSync(s.dataId),{selectedIndices:d}=hI(l,u,o,i,c);return n.makeTensorInfo([d.length],"int32",new Int32Array(d))}},fI=S.kernel_impls.nonMaxSuppressionV4Impl;const mI={kernelName:S.NonMaxSuppressionV4,backendName:"webgl",kernelFunc:function(e){S.backend_util.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:a}=e,{boxes:r,scores:s}=t,{maxOutputSize:o,iouThreshold:i,scoreThreshold:c,padToMaxOutputSize:l}=a,u=n.readSync(r.dataId),d=n.readSync(s.dataId),{selectedIndices:h,validOutputs:p}=fI(u,d,o,i,c,l);return[n.makeTensorInfo([h.length],"int32",new Int32Array(h)),n.makeTensorInfo([],"int32",new Int32Array([p]))]}},gI=S.kernel_impls.nonMaxSuppressionV5Impl;const yI={kernelName:S.NonMaxSuppressionV5,backendName:"webgl",kernelFunc:function(e){S.backend_util.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:a}=e,{boxes:r,scores:s}=t,{maxOutputSize:o,iouThreshold:i,scoreThreshold:c,softNmsSigma:l}=a,u=n.readSync(r.dataId),d=n.readSync(s.dataId),h=o,p=i,f=c,m=l,{selectedIndices:g,selectedScores:y}=gI(u,d,h,p,f,m);return[n.makeTensorInfo([g.length],"int32",new Int32Array(g)),n.makeTensorInfo([y.length],"float32",new Float32Array(y))]}};class bI{constructor(e,t,n,a){this.variableNames=["indices"],this.outputShape=[e,t],this.userCode="\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int index = round(getIndices(coords.x));\n        setOutput(mix(float(".concat(a,"), float(").concat(n,"),\n                      float(index == coords.y)));\n      }\n    ")}}const vI={kernelName:S.OneHot,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:a}=e,{indices:r}=t,{dtype:s,depth:o,onValue:i,offValue:c}=a,l=S.util.sizeFromShape(r.shape),u=new bI(l,o,i,c),d=Kx({inputs:{x:r},backend:n,attrs:{shape:[l]}}),h=n.runWebGLProgram(u,[d],s);n.disposeIntermediateTensorInfo(d);const p=Kx({inputs:{x:h},backend:n,attrs:{shape:[...r.shape,o]}});return n.disposeIntermediateTensorInfo(h),p}};function xI(e){const{inputs:t,backend:n}=e,{x:a}=t;if("complex64"===a.dtype){const e=ck({inputs:{input:a},backend:n}),t=xI({inputs:{x:e},backend:n}),r=Sk({inputs:{input:a},backend:n}),s=xI({inputs:{x:r},backend:n}),o=Ax({inputs:{real:t,imag:s},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(s),o}return BS({attrs:{shape:a.shape,dtype:a.dtype,value:"string"===a.dtype?"":0},backend:n})}const wI={kernelName:S.ZerosLike,backendName:"webgl",kernelFunc:xI};const kI={kernelName:S.OnesLike,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:a}=t,{x:r}=n;if("string"===r.dtype)throw new Error("onesLike is not supported under string dtype");if("complex64"===r.dtype){const t=ck({inputs:{input:r},backend:a}),n=e({inputs:{x:t},backend:a}),s=Sk({inputs:{input:r},backend:a}),o=xI({inputs:{x:s},backend:a}),i=Ax({inputs:{real:n,imag:o},backend:a});return a.disposeIntermediateTensorInfo(t),a.disposeIntermediateTensorInfo(n),a.disposeIntermediateTensorInfo(s),a.disposeIntermediateTensorInfo(o),i}return BS({attrs:{shape:r.shape,dtype:r.dtype,value:1},backend:a})}};const SI={kernelName:S.Pack,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{axis:r}=a;if(1===t.length)return _S({inputs:{input:t[0]},backend:n,attrs:{dim:r}});const s=t[0].shape,o=t[0].dtype;t.forEach((e=>{S.util.assertShapesMatch(s,e.shape,"All tensors passed to stack must have matching shapes"),S.util.assert(o===e.dtype,(()=>"All tensors passed to stack must have matching dtypes"))}));const i=[],c=Tk({inputs:t.map((e=>{const t=_S({inputs:{input:e},backend:n,attrs:{dim:r}});return i.push(t),t})),backend:n,attrs:{axis:r}});return i.forEach((e=>n.disposeIntermediateTensorInfo(e))),c}};class NI{constructor(e,t,n){this.variableNames=["x"],this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const a=e.length,r=Ab(a),s=t.map((e=>e[0])).join(","),o=t.map(((t,n)=>t[0]+e[n])).join(","),i=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,a);this.userCode=1!==a?"\n      ".concat(r," start = ").concat(r,"(").concat(s,");\n      ").concat(r," end = ").concat(r,"(").concat(o,");\n\n      void main() {\n        ").concat(r," outC = getOutputCoords();\n        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {\n          setOutput(value);\n        } else {\n          ").concat(r," coords = outC - start;\n          setOutput(getX(").concat(i,"));\n        }\n      }\n    "):"\n        int start = ".concat(s,";\n        int end = ").concat(o,";\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start || outC >= end) {\n            setOutput(value);\n          } else {\n            setOutput(getX(outC - start));\n          }\n        }\n      ")}}class II{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const a=e.length,r=Ab(a),s=t.map((e=>e[0])).join(","),o=t.map(((t,n)=>t[0]+e[n])).join(","),i=Jv("rc",a),c=Jv("source",a),l="".concat(i[a-1]," < ").concat(this.outputShape[a-1]),u=1===a?"source":"vec2(".concat(c.slice(-2).join(),")"),d=["".concat(r," rc = outputLoc;"),"".concat(i[a-1]," += 1;\n       if(").concat(l,") {\n      "),1===a?"":"}\n       rc = outputLoc;\n       ".concat(i[a-2]," += 1;\n       if(").concat(i[a-2]," < ").concat(this.outputShape[a-2],") {"),1===a?"":"  ".concat(i[a-1]," += 1;\n         if(").concat(l,") {")],h=1===a?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))";let p="";for(let f=0,m=1===a?2:4;f<m;f++)p+="\n        ".concat(d[f],"\n        if (").concat(h,") {\n          result[").concat(f,"] = float(value);\n        } else {\n          ").concat(r," source = rc - start;\n          result[").concat(f,"] = getChannel(getX(").concat(c.join(),"), ").concat(u,");\n        }\n      ");p+=1===a?"} ":"}}",this.userCode="\n      const ".concat(r," start = ").concat(r,"(").concat(s,");\n      const ").concat(r," end = ").concat(r,"(").concat(o,");\n\n      void main() {\n        ").concat(r," outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ").concat(p,"\n        setOutput(result);\n      }\n    ")}}const TI=e=>{const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{paddings:s,constantValue:o}=a;if(0===S.util.sizeFromShape(r.shape)){const e=s.map(((e,t)=>e[0]+r.shape[t]+e[1]));return BS({backend:n,attrs:{shape:e,value:o,dtype:r.dtype}})}const i=(0,S.env)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new II(r.shape,s,o):new NI(r.shape,s,o),c=[[o]];return n.runWebGLProgram(i,[r],r.dtype,c)},CI={kernelName:S.PadV2,backendName:"webgl",kernelFunc:TI},EI=Px({opSnippet:"\n  if(a < 0.0 && floor(b) < b){\n    return NAN;\n  }\n  if (b == 0.0) {\n    return 1.0;\n  }\n  return (round(mod(b, 2.0)) != 1) ?\n      pow(abs(a), b) : sign(a) * pow(abs(a), b);\n",packedOpSnippet:"\n  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.\n  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));\n  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);\n  vec4 result = multiplier * pow(abs(a), b);\n\n  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS\n  bvec4 isExpZero = equal(b, vec4(0.0));\n  result.r = isExpZero.r ? 1.0 : result.r;\n  result.g = isExpZero.g ? 1.0 : result.g;\n  result.b = isExpZero.b ? 1.0 : result.b;\n  result.a = isExpZero.a ? 1.0 : result.a;\n\n  bvec4 isNaN1 = lessThan(a, vec4(0.0));\n  bvec4 isNaN2 = lessThan(floor(b), b);\n  bvec4 isNaN = bvec4(isNaN1.x && isNaN2.x, isNaN1.y && isNaN2.y, isNaN1.z && isNaN2.z, isNaN1.w && isNaN2.w);\n  \n  result.r = isNaN.r ? NAN : result.r;\n  result.g = isNaN.g ? NAN : result.g;\n  result.b = isNaN.b ? NAN : result.b;\n  result.a = isNaN.a ? NAN : result.a;\n\n  return result;\n"}),_I={kernelName:S.Pow,backendName:"webgl",kernelFunc:EI};const AI={kernelName:S.Prod,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s,keepDims:o}=a,i=r.shape.length,c=[],l=S.util.parseAxisParam(s,r.shape);let u=l;const d=S.backend_util.getAxesPermutation(u,i);let h,p=r;if(null!=d&&(p=rw({inputs:{x:r},backend:n,attrs:{perm:d}}),u=S.backend_util.getInnerMostAxes(u.length,i),c.push(p)),S.backend_util.assertAxesAreInnerMostDims("prod",u,i),n.shouldExecuteOnCPU([p])){const e=n.texData.get(p.dataId).values,{outVals:t,outShape:a,outDtype:r}=Cv(p.shape,p.dtype,e,u);h=n.makeTensorInfo(a,r,t)}else{const[e,t]=S.backend_util.computeOutAndReduceShapes(p.shape,u),a=S.util.sizeFromShape(t),s=Kx({inputs:{x:p},backend:n,attrs:{shape:[-1,a]}}),o=Jx(s,(0,S.sumOutType)(r.dtype),"prod",n);h=Kx({inputs:{x:o},backend:n,attrs:{shape:e}}),c.push(s),c.push(o)}if(o){c.push(h);const e=S.backend_util.expandShapeToKeepDim(h.shape,l);h=Kx({inputs:{x:h},backend:n,attrs:{shape:e}})}return c.forEach((e=>n.disposeIntermediateTensorInfo(e))),h}};const RI={kernelName:S.RaggedGather,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{paramsNestedSplits:r,paramsDenseValues:s,indices:o}=t,{outputRaggedRank:i}=a,c=r.map((e=>n.readSync(e.dataId))),l=r.map((e=>e.shape)),u=n.readSync(s.dataId),d=n.readSync(o.dataId),[h,p,f]=Ev(c,l,u,s.shape,s.dtype,d,o.shape,i),m=h.map((e=>n.makeTensorInfo([e.length],"int32",e))),g=n.makeTensorInfo(f,s.dtype,p);return m.concat([g])}};const FI={kernelName:S.RaggedRange,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{starts:a,limits:r,deltas:s}=t,o=n.readSync(a.dataId),i=n.readSync(r.dataId),c=n.readSync(s.dataId),[l,u]=_v(o,a.shape,a.dtype,i,r.shape,c,s.shape);return[n.makeTensorInfo([l.length],"int32",l),n.makeTensorInfo([u.length],a.dtype,u)]}};const DI={kernelName:S.RaggedTensorToTensor,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{shape:r,values:s,defaultValue:o,rowPartitionTensors:i}=t,{rowPartitionTypes:c}=a,l=n.readSync(r.dataId),u=n.readSync(s.dataId),d=n.readSync(o.dataId),h=i.map((e=>n.readSync(e.dataId))),p=i.map((e=>e.shape)),[f,m]=Av(l,r.shape,u,s.shape,s.dtype,d,o.shape,h,p,c);return n.makeTensorInfo(f,s.dtype,m)}},OI=e=>{const{backend:t,attrs:n}=e,{start:a,stop:r,step:s,dtype:o}=n,i=Rv(a,r,s,o);return t.makeTensorInfo([i.length],o,i)},MI={kernelName:S.Range,backendName:"webgl",kernelFunc:OI},zI=Bx({opSnippet:"return 1.0 / x;"}),LI={kernelName:S.Reciprocal,backendName:"webgl",kernelFunc:zI},BI=Bx({opSnippet:"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : x;\n",packedOpSnippet:"\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"}),PI={kernelName:S.Relu,backendName:"webgl",kernelFunc:BI},VI=Bx({opSnippet:"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n",packedOpSnippet:"\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"}),WI={kernelName:S.Relu6,backendName:"webgl",kernelFunc:VI};class UI{constructor(e,t,n,a,r){this.variableNames=["A"],this.outputShape=[];const[s,o,i,c]=e;this.outputShape=[s,t,n,c];const l=[a&&t>1?o-1:o,a&&n>1?i-1:i],u=[a&&t>1?t-1:t,a&&n>1?n-1:n];let d;d=r?"(vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC - vec2(0.5)":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode="\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ".concat(l[0]/u[0],",\n          ").concat(l[1]/u[1],");\n      const vec2 inputShapeRC = vec2(").concat(o,".0, ").concat(i,".0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ").concat(d,";\n\n        // Compute the four integer indices.\n        ivec2 sourceFloorRC = ivec2(max(sourceFracIndexRC, vec2(0.0)));\n        ivec2 sourceCeilRC = ivec2(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);\n        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);\n        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);\n        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);\n\n        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);\n\n        float top = topLeft + (topRight - topLeft) * fracRC.y;\n        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;\n        float newValue = top + (bottom - top) * fracRC.x;\n\n        setOutput(newValue);\n      }\n    ")}}class GI{constructor(e,t,n,a,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[s,o,i,c]=e;this.outputShape=[s,t,n,c];const l=[a&&t>1?o-1:o,a&&n>1?i-1:i],u=[a&&t>1?t-1:t,a&&n>1?n-1:n];let d;d=r?"(vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC - vec3(0.5)":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode="\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ".concat(l[0]/u[0],",\n          ").concat(l[1]/u[1],",\n          ").concat(l[1]/u[1],");\n      const vec3 inputShapeRC = vec3(").concat(o,".0, ").concat(i,".0,\n                                     ").concat(i,".0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = ").concat(d,";\n\n        // Compute the four integer indices.\n        ivec3 sourceFloorRC = ivec3(max(sourceFracIndexRC, vec3(0.0)));\n        ivec3 sourceCeilRC = ivec3(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ").concat(c-1,";\n        bool hasNextRow = coords.z < ").concat(n-1,";\n\n        // In parallel, construct four corners for all four components in\n        // packed 2x2 cell.\n        vec4 topLeft = vec4(\n          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 bottomLeft = vec4(\n          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 topRight = vec4(\n          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec4 bottomRight = vec4(\n          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);\n\n        vec4 top = mix(topLeft, topRight, fracRC.yyzz);\n        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);\n        vec4 newValue = mix(top, bottom, fracRC.x);\n\n        setOutput(newValue);\n      }\n    ")}}const HI={kernelName:S.ResizeBilinear,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{images:r}=t,{alignCorners:s,halfPixelCenters:o,size:i}=a,[c,l]=i,u=(0,S.env)().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new GI(r.shape,c,l,s,o):new UI(r.shape,c,l,s,o);return n.runWebGLProgram(u,[r],"float32")}};class jI{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;const[,a,r]=t,[,s,o]=e,i=[n&&s>1?a-1:a,n&&o>1?r-1:r],c=[n&&s>1?s-1:s,n&&o>1?o-1:o],l=i[0]/c[0],u=i[1]/c[1],d=1/l,h=1/u,p=2*Math.ceil(d)+2,f=2*Math.ceil(h)+2;this.userCode="\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(".concat(l,");\n        const float widthScale = float(").concat(u,");\n\n        const float invHeightScale = float(").concat(d,");\n        const float invWidthScale = float(").concat(h,");\n\n        const int winHeight = int(").concat(p,");\n        const int winWidth = int(").concat(f,");\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(startRLerp - float(winHeight / 2));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(startCLerp - float(winWidth / 2));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ").concat(s,") {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ").concat(o,") {\n              continue;\n            }\n\n            float dxR = float(dyR) * heightScale;\n            int topDxRIndex = int(floor(dxR));\n            int bottomDxRIndex = int(min(ceil(dxR), ").concat(a-1,".0));\n            float dxRLerp = dxR - float(topDxRIndex);\n            float inverseDxRLerp = 1.0 - dxRLerp;\n\n            float dxC = float(dyC) * widthScale;\n            int leftDxCIndex = int(floor(dxC));\n            int rightDxCIndex = int(min(ceil(dxC), ").concat(r-1,".0));\n            float dxCLerp = dxC - float(leftDxCIndex);\n            float inverseDxCLerp = 1.0 - dxCLerp;\n\n            if (r == topDxRIndex && c == leftDxCIndex) {\n              // topLeft\n              accumulator +=\n                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;\n            }\n\n            if (r == topDxRIndex && c == rightDxCIndex) {\n              // topRight\n              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == leftDxCIndex) {\n              // bottomLeft\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == rightDxCIndex) {\n              // bottomRight\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    ")}}const qI={kernelName:S.ResizeBilinearGrad,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{images:r,dy:s}=t,{alignCorners:o}=a,i=new jI(s.shape,r.shape,o);return n.runWebGLProgram(i,[s],s.dtype)}};class XI{constructor(e,t,n,a,r){this.variableNames=["A"],this.outputShape=[];const[s,o,i,c]=e;this.outputShape=[s,t,n,c];const l=[a&&t>1?o-1:o,a&&n>1?i-1:i],u=[a&&t>1?t-1:t,a&&n>1?n-1:n],d=a?"0.5":"0.0";let h;h=r?"max((vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC, vec2(0.0))":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode="\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ".concat(l[0]/u[0],",\n          ").concat(l[1]/u[1],");\n      const vec2 inputShapeRC = vec2(").concat(o,".0, ").concat(i,".0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ").concat(h,";\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec2 sourceNearestRC = ivec2(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ").concat(d,")));\n        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);\n\n        setOutput(newValue);\n      }\n    ")}}class KI{constructor(e,t,n,a,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[s,o,i,c]=e;this.outputShape=[s,t,n,c];const l=[a&&t>1?o-1:o,a&&n>1?i-1:i],u=[a&&t>1?t-1:t,a&&n>1?n-1:n],d=a?"0.5":"0.0";let h;h=r?"max((vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC, vec3(0.0))":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode="\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ".concat(l[0]/u[0],",\n          ").concat(l[1]/u[1],",\n          ").concat(l[1]/u[1],");\n      const vec3 inputShapeRC = vec3(").concat(o,".0, ").concat(i,".0,\n                                     ").concat(i,".0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = ").concat(h,";\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec3 sourceNearestRC = ivec3(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ").concat(d,")));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ").concat(c-1,";\n        bool hasNextRow = coords.z < ").concat(n-1,";\n\n        vec4 newValue = vec4(\n          getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d),\n          hasNextCol ? getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d + 1) : 0.0);\n\n        setOutput(newValue);\n      }\n    ")}}const QI={kernelName:S.ResizeNearestNeighbor,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{images:r}=t,{alignCorners:s,halfPixelCenters:o,size:i}=a,[c,l]=i,u=(0,S.env)().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new KI(r.shape,c,l,s,o):new XI(r.shape,c,l,s,o);return n.runWebGLProgram(u,[r],r.dtype)}};class YI{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;const[,a,r]=t,[,s,o]=e,i=[n&&s>1?a-1:a,n&&o>1?r-1:r],c=[n&&s>1?s-1:s,n&&o>1?o-1:o],l=i[0]/c[0],u=i[1]/c[1],d=1/l,h=1/u,p=2*Math.ceil(d)+2,f=2*Math.ceil(h)+2;this.userCode="\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(".concat(l,");\n        const float widthScale = float(").concat(u,");\n\n        const float invHeightScale = float(").concat(d,");\n        const float invWidthScale = float(").concat(h,");\n\n        const int winHeight = int(").concat(p,");\n        const int winWidth = int(").concat(f,");\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(floor(startRLerp - float(winHeight / 2)));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(floor(startCLerp - float(winWidth / 2)));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ").concat(s,") {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ").concat(o,") {\n              continue;\n            }\n\n            float sourceFracRow =\n              float(").concat(i[0],") *\n                (float(dyR) / float(").concat(c[0],"));\n\n            float sourceFracCol =\n                float(").concat(i[1],") *\n                  (float(dyC) / float(").concat(c[1],"));\n\n            int sourceNearestRow = int(min(\n                float(int(").concat(a,") - 1),\n                ").concat(n," ? float(round(sourceFracRow)) :\n                                  float(floor(sourceFracRow))));\n\n            int sourceNearestCol = int(min(\n                float(int(").concat(r,") - 1),\n                ").concat(n," ? float(round(sourceFracCol)) :\n                                  float(floor(sourceFracCol))));\n\n            if (r == sourceNearestRow && c == sourceNearestCol) {\n              accumulator += getDy(b, dyR, dyC, d);\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    ")}}const ZI={kernelName:S.ResizeNearestNeighborGrad,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{images:r,dy:s}=t,{alignCorners:o}=a,i=new YI(s.shape,r.shape,o);return n.runWebGLProgram(i,[s],s.dtype)}};class JI{constructor(e,t){this.variableNames=["x"];const n=e.length;if(n>4)throw new Error("WebGL backend: Reverse of rank-".concat(n," tensor is not yet supported"));if(this.outputShape=e,1===n)return void(this.userCode="\n        void main() {\n          int coord = getOutputCoords();\n          setOutput(getX(".concat(e[0]," - coord - 1));\n        }\n      "));const a=e.map(((n,a)=>(n=>-1!==t.indexOf(n)&&1!==e[n]?"".concat(e[n]," - coords[").concat(n,"] - 1"):"coords[".concat(n,"]"))(a))).join(","),r=Ab(n);this.userCode="\n      void main() {\n        ".concat(r," coords = getOutputCoords();\n        setOutput(getX(").concat(a,"));\n      }\n    ")}}class $I{constructor(e,t){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;const n=e.length;if(n>4)throw new Error("WebGL backend: Reverse of rank-".concat(n," tensor is not yet supported"));this.outputShape=e;const a=Jv("rc",n),r="".concat(a[n-1]," + 1 < ").concat(this.outputShape[n-1]),s="".concat(a[n-2]," + 1 < ").concat(this.outputShape[n-2]),o=Ab(n);function i(n){const a=e.map(((a,r)=>function(n,a){return-1!==t.indexOf(n)&&1!==e[n]?"".concat(e[n]," - ").concat(a[n]," - 1"):"".concat(a[n])}(r,n))),r=a.join(","),s=a.slice(-2).join(",");return"getChannel(getX(".concat(r,"), vec2(").concat(s,"))")}this.userCode=1===n?"\n        void main(){\n          int rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = getChannel(getX(".concat(e[0]," - rc - 1),\n            ").concat(e[0]," - rc - 1);\n          if(").concat(r,"){\n              result.g = getChannel(getX(").concat(e[0]," - (rc  + 1) - 1),\n                ").concat(e[0]," - (rc  + 1) - 1);\n          }\n          setOutput(result);\n        }\n      "):"\n        void main() {\n          ".concat(o," rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = ").concat(function(e){return i(e)}(a.slice()),";\n          if(").concat(r,"){\n            result.g = ").concat(function(e){return e[n-1]="("+e[n-1]+" + 1)",i(e)}(a.slice()),";\n          }\n          if(").concat(s,") {\n            result.b = ").concat(function(e){return e[n-2]="("+e[n-2]+" + 1)",i(e)}(a.slice()),";\n            if(").concat(r,") {\n              result.a = ").concat(function(e){return e[n-1]="("+e[n-1]+" + 1)",e[n-2]="("+e[n-2]+" + 1)",i(e)}(a.slice()),";\n            }\n          }\n          setOutput(result);\n        }\n    ")}}const eT={kernelName:S.Reverse,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{dims:s}=a,o=r.shape.length,i=S.util.parseAxisParam(s,r.shape);if(0===o)return Ex({inputs:{x:r},backend:n});const c=(0,S.env)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new $I(r.shape,i):new JI(r.shape,i);return n.runWebGLProgram(c,[r],r.dtype)}};class tT{constructor(e,t){this.variableNames=["Image"],this.outputShape=[],this.customUniforms=[{name:"params",type:"vec4"}];const n=e[1],a=e[2];this.outputShape=e;let r="";r="number"===typeof t?"float outputValue = ".concat(t.toFixed(2),";"):"\n        vec3 fill = vec3(".concat(t.join(","),");\n        float outputValue = fill[coords[3]];"),this.userCode="\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n          int y = coords[1];\n          float coordXFloat = (float(x) - params[0]) * params[3] -\n            (float(y) - params[1]) * params[2];\n          float coordYFloat = (float(x) - params[0]) * params[2] +\n            (float(y) - params[1]) * params[3];\n          int coordX = int(round(coordXFloat + params[0]));\n          int coordY = int(round(coordYFloat + params[1]));\n          ".concat(r,"\n          if(coordX >= 0 && coordX < ").concat(a," && coordY >= 0 && coordY < ").concat(n,") {\n            outputValue = getImage(coords[0], coordY, coordX, coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    ")}}const nT={kernelName:S.RotateWithOffset,backendName:"webgl",kernelFunc:e=>{let{inputs:t,attrs:n,backend:a}=e;const{image:r}=t,{radians:s,fillValue:o,center:i}=n,c=a,l=new tT(r.shape,o),[u,d]=S.backend_util.getImageCenter(i,r.shape[1],r.shape[2]),h=[[u,d,Math.sin(s),Math.cos(s)]];return c.runWebGLProgram(l,[r],r.dtype,h)}},aT=Bx({opSnippet:"\n  // OpenGL ES does not support round function.\n  // The algorithm is based on banker's rounding.\n  float base = floor(x);\n  if ((x - base) < 0.5) {\n    return floor(x);\n  } else if ((x - base) > 0.5) {\n    return ceil(x);\n  } else {\n    if (mod(base, 2.0) == 0.0) {\n      return base;\n    } else {\n      return base + 1.0;\n    }\n  }\n"}),rT={kernelName:S.Round,backendName:"webgl",kernelFunc:aT},sT=Bx({opSnippet:"return inversesqrt(x);",cpuKernelImpl:Fv}),oT={kernelName:S.Rsqrt,backendName:"webgl",kernelFunc:sT};class iT{constructor(e,t,n,a,r,s){let o=arguments.length>7&&void 0!==arguments[7]&&arguments[7];this.variableNames=["updates","indices","defaultValue"],this.outputShape=s;const i=Ab(r.length),c=Ab(s.length);let l="";1===n?l="i":2===n&&(l="i, j");const u="getIndices(".concat(l,")");let d="";1===a?d="i":2===a&&(d="i, coords[1]");const h="getUpdates(".concat(d,")");let p="";o&&(p="coords[0], coords[1]");const f="getDefaultValue(".concat(p,")"),m=t>1?"strides[j]":"strides";this.userCode="\n        ".concat(i," strides = ").concat(i,"(").concat(r,");\n\n        void main() {\n          ").concat(c," coords = getOutputCoords();\n          float sum = 0.0;\n          bool found = false;\n          for (int i = 0; i < ").concat(e,"; i++) {\n            int flattenedIndex = 0;\n            for (int j = 0; j < ").concat(t,"; j++) {\n              int index = round(").concat(u,");\n              flattenedIndex += index * ").concat(m,";\n            }\n            if (flattenedIndex == coords[0]) {\n              sum += ").concat(h,";\n              found = true;\n            }\n          }\n          setOutput(mix(").concat(f,", sum, float(found)));\n        }\n      ")}}class cT{constructor(e,t,n,a,r,s){let o=arguments.length>7&&void 0!==arguments[7]&&arguments[7];this.variableNames=["updates","indices","defaultValue"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=s;const i=Ab(r.length),c=Ab(s.length);let l="";1===n?l="i":2===n&&(l="i, j");const u="getIndices(".concat(l,")");let d="";1===a?d="i":2===a&&(d="i, coords[1]");const h="getUpdates(".concat(d,")");let p="";o&&(p="coords[0], coords[1]");const f="getDefaultValue(".concat(p,")"),m=t>1?"strides[j]":"strides",g=t>1?"strides[j + 1]":"strides";this.userCode="\n        ".concat(i," strides = ").concat(i,"(").concat(r,");\n\n        void main() {\n          ").concat(c," coords = getOutputCoords();\n          vec4 sum = vec4(0.);\n          vec4 found = vec4(0.);\n          for (int i = 0; i < ").concat(e,"; i+=2) {\n            ivec2 flattenedIndex = ivec2(0);\n            for (int j = 0; j < ").concat(t,"; j+=2) {\n              ivec4 index = round(").concat(u,");\n              flattenedIndex += index.xz * ").concat(m,";\n              if (j + 1 < ").concat(t,") {\n                flattenedIndex += index.yw * ").concat(g,";\n              }\n            }\n            if (flattenedIndex[0] == coords[0] || flattenedIndex[1] == coords[0] ||\n                flattenedIndex[0] == coords[0] + 1 || flattenedIndex[1] == coords[0] + 1) {\n              vec4 updVals = ").concat(h,";\n              if (flattenedIndex[0] == coords[0]) {\n                sum.xy += updVals.xy;\n                found.xy = vec2(1.);\n              } else if (flattenedIndex[0] == coords[0] + 1) {\n                sum.zw += updVals.xy;\n                found.zw = vec2(1.);\n              }\n              if (flattenedIndex[1] == coords[0]) {\n                sum.xy += updVals.zw;\n                found.xy = vec2(1.);\n              } else if (flattenedIndex[1] == coords[0] + 1) {\n                sum.zw += updVals.zw;\n                found.zw = vec2(1.);\n              }\n            }\n          }\n          setOutput(mix(").concat(f,", sum, found));\n        }\n      ")}}const lT={kernelName:S.ScatterNd,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{indices:r,updates:s}=t,{shape:o}=a,{sliceRank:i,numUpdates:c,sliceSize:l,strides:u,outputSize:d}=S.backend_util.calculateShapes(s,r,o),h=[d/l,l];if(0===d)return n.makeTensorInfo(o,r.dtype);const p=Kx({inputs:{x:r},backend:n,attrs:{shape:[c,i]}}),f=Kx({inputs:{x:s},backend:n,attrs:{shape:[c,l]}}),m=n.makeTensorInfo([],"float32",new Float32Array([0]));let g;g=(0,S.env)().getBool("WEBGL_PACK")?new cT(c,i,p.shape.length,f.shape.length,u,h):new iT(c,i,p.shape.length,f.shape.length,u,h);const y=n.runWebGLProgram(g,[f,p,m],f.dtype),b=Kx({inputs:{x:y},backend:n,attrs:{shape:o}});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(y),n.disposeIntermediateTensorInfo(m),b}};class uT{constructor(e,t,n,a){this.variableNames=["sortedSequence","values"],this.customUniforms=[{name:"numInputs",type:"int"}],this.outputShape=[e,n];const r="for (int i = 0; i < ".concat(Math.ceil(Math.log2(t+1)),"; ++i) { if (left >= right) break;"),s=2===(0,S.env)().getNumber("WEBGL_VERSION")?"while (left < right) {":r,o="left"===a?"<":"<=";this.userCode="\n       int findBound(int batch, float value) {\n         int left = 0;\n         int right = numInputs;\n         int mid;\n         ".concat(s,"\n           mid = (left + right) / 2;\n           if (getSortedSequence(batch, mid) ").concat(o," value) {\n             left = mid + 1;\n           } else {\n             right = mid;\n           }\n         }\n         return right;\n       }\n\n       void main() {\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int valueIndex = coords[1];\n\n         float value = getValues(batch, valueIndex);\n\n         setOutput(float(findBound(batch, value)));\n       }\n     ")}}const dT={kernelName:S.SearchSorted,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{sortedSequence:r,values:s}=t,{side:o}=a,i=new uT(r.shape[0],r.shape[1],s.shape[1],o),c=[[r.shape[1]]];return n.runWebGLProgram(i,[r,s],"int32",c)}};class hT{constructor(e,t,n){let a,r;if(this.variableNames=["c","a","b"],this.outputShape=t,n>4)throw Error("Where for rank ".concat(n," is not yet supported"));if(1===n)r="resRC",a="resRC";else{const n=["resRC.x","resRC.y","resRC.z","resRC.w"],s=[],o=[];for(let a=0;a<t.length;a++)o.push("".concat(n[a])),a<e&&s.push("".concat(n[a]));a=s.join(),r=o.join()}const s=Ab(n);this.userCode="\n      void main() {\n        ".concat(s," resRC = getOutputCoords();\n        float cVal = getC(").concat(a,");\n        if (cVal >= 1.0) {\n          setOutput(getA(").concat(r,"));\n        } else {\n          setOutput(getB(").concat(r,"));\n        }\n      }\n    ")}}const pT={kernelName:S.Select,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{condition:a,t:r,e:s}=t,o=new hT(a.shape.length,r.shape,r.shape.length);return n.runWebGLProgram(o,[a,r,s],(0,S.upcastType)(r.dtype,s.dtype))}},fT=Bx({opSnippet:"\n  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.\n  // see: https://arxiv.org/abs/1706.02515\n  float scaleAlpha = ".concat(S.backend_util.SELU_SCALEALPHA,";\n  float scale = ").concat(S.backend_util.SELU_SCALE,";\n  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);\n")}),mT={kernelName:S.Selu,backendName:"webgl",kernelFunc:fT},gT=Bx({opSnippet:"if (isnan(x)) return x;\n  return 1.0 / (1.0 + exp(-1.0 * x));\n",packedOpSnippet:"\n  vec4 result = 1.0 / (1.0 + exp(-1.0 * x));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",cpuKernelImpl:Ov}),yT={kernelName:S.Sigmoid,backendName:"webgl",kernelFunc:gT},bT=Bx({opSnippet:"\n  if (isnan(x)) { return 0.0; }\n  return sign(x);\n"}),vT={kernelName:S.Sign,backendName:"webgl",kernelFunc:bT},xT=Bx({opSnippet:"if (isnan(x)) return x;\n  return sin(x);\n",packedOpSnippet:"\n  vec4 result = sin(x);\n  bvec4 isNaN = isnan(x);\n  ".concat(Tx,"\n  return result;\n")}),wT={kernelName:S.Sin,backendName:"webgl",kernelFunc:xT},kT=Bx({opSnippet:"\n  float e2x = exp(x);\n  return (e2x - 1.0 / e2x) / 2.0;\n"}),ST={kernelName:S.Sinh,backendName:"webgl",kernelFunc:kT},NT=Bx({opSnippet:"\n  float epsilon = 1.1920928955078125e-7;\n  float threshold = log(epsilon) + 2.0;\n\n  bool too_large = x > -threshold;\n  bool too_small = x < threshold;\n\n  float result;\n  float exp_x = exp(x);\n\n  if (too_large){\n    result = x;\n  }\n  else if (too_small){\n    result = exp_x;\n  }\n  else{\n    result = log(exp_x + 1.0);\n  }\n  return result;\n"}),IT={kernelName:S.Softplus,backendName:"webgl",kernelFunc:NT},TT={kernelName:S.SpaceToBatchND,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{blockShape:s,paddings:o}=a;S.util.assert(r.shape.length<=4,(()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet"));const i=s.reduce(((e,t)=>e*t)),c=[[0,0]];c.push(...o);for(let y=1+s.length;y<r.shape.length;++y)c.push([0,0]);const l=[],u=TI({inputs:{x:r},backend:n,attrs:{paddings:c,constantValue:0}}),d=S.backend_util.getReshaped(u.shape,s,i,!1),h=S.backend_util.getPermuted(d.length,s.length,!1),p=S.backend_util.getReshapedPermuted(u.shape,s,i,!1),f=Kx({inputs:{x:u},backend:n,attrs:{shape:d}}),m=rw({inputs:{x:f},backend:n,attrs:{perm:h}}),g=Kx({inputs:{x:m},backend:n,attrs:{shape:p}});return l.push(u),l.push(f),l.push(m),l.forEach((e=>n.disposeIntermediateTensorInfo(e))),g}};const CT={kernelName:S.SparseFillEmptyRows,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{indices:a,values:r,denseShape:s,defaultValue:o}=t;if(1!==s.shape.length)throw new Error("Dense shape must be a vector, saw:\n         ".concat(s.shape));if(2!==a.shape.length)throw new Error("Indices must be a matrix, saw:\n         ".concat(a.shape));if(1!==r.shape.length)throw new Error("Values must be a vector, saw:\n         ".concat(r.shape));if(0!==o.shape.length)throw new Error("Default value must be a scalar, saw:\n        ".concat(o.shape));const i=n.readSync(a.dataId),c=n.readSync(r.dataId),l=n.readSync(s.dataId),u=n.readSync(o.dataId)[0],[d,h,p,f,m]=Lv(i,a.shape,a.dtype,c,r.dtype,l,u);return[n.makeTensorInfo(h,a.dtype,d),n.makeTensorInfo([h[0]],r.dtype,p),n.makeTensorInfo([f.length],"bool",new Uint8Array(f.map((e=>Number(e))))),n.makeTensorInfo([m.length],a.dtype,new Int32Array(m))]}};const ET={kernelName:S.SparseReshape,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{inputIndices:a,inputShape:r,newShape:s}=t;if(2!==a.shape.length)throw new Error("Input indices should be a matrix but received shape ".concat(a.shape));if(1!==r.shape.length)throw new Error("Input shape should be a vector but received shape ".concat(r.shape));if(1!==s.shape.length)throw new Error("Target shape should be a vector but received shape ".concat(s.shape));const o=Array.from(n.readSync(r.dataId)),i=n.readSync(a.dataId),c=Array.from(n.readSync(s.dataId)),[l,u,d]=Bv(i,a.shape,a.dtype,o,c);return[n.makeTensorInfo(u,a.dtype,l),n.makeTensorInfo([d.length],s.dtype,new Int32Array(d))]}};const _T={kernelName:S.SparseSegmentMean,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:a,indices:r,segmentIds:s}=t;if(a.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==r.shape.length)throw new Error("Indices should be a vector but received shape\n              ".concat(r.shape));if(1!==s.shape.length)throw new Error("Segment ids should be a vector but received shape\n              ".concat(s.shape));const o=n.readSync(a.dataId),i=n.readSync(r.dataId),c=n.readSync(s.dataId),[l,u]=Pv(o,a.shape,a.dtype,i,c,!0);return n.makeTensorInfo(u,a.dtype,l)}};const AT={kernelName:S.SparseSegmentSum,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:a,indices:r,segmentIds:s}=t;if(a.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==r.shape.length)throw new Error("Indices should be a vector but received shape\n             ".concat(r.shape));if(1!==s.shape.length)throw new Error("Segment ids should be a vector but received shape\n             ".concat(s.shape));const o=n.readSync(a.dataId),i=n.readSync(r.dataId),c=n.readSync(s.dataId),[l,u]=Pv(o,a.shape,a.dtype,i,c);return n.makeTensorInfo(u,a.dtype,l)}};const RT={kernelName:S.SparseToDense,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{sparseIndices:r,sparseValues:s,defaultValue:o}=t,{outputShape:i}=a,{sliceRank:c,numUpdates:l,sliceSize:u,strides:d,outputSize:h}=S.backend_util.calculateShapes(s,r,i);if("string"===s.dtype){const e=n.bufferSync(r),t=n.bufferSync(s),a=S.util.decodeString(n.readSync(o.dataId)[0]),p=Dv(e,t,i,h,u,l,c,d,a,false);return n.makeTensorInfo(i,p.dtype,p.values)}const p=new iT(l,c,r.shape.length,s.shape.length,d,[h,1],false),f=n.runWebGLProgram(p,[s,r,o],s.dtype),m=Kx({inputs:{x:f},backend:n,attrs:{shape:i}});return n.disposeIntermediateTensorInfo(f),m}};const FT={kernelName:S.SplitV,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{numOrSizeSplits:s,axis:o}=a,i=S.util.parseAxisParam(o,r.shape)[0],c=S.backend_util.prepareSplitSize(r,s,i),l=r.shape.length,u=new Array(l).fill(0),d=r.shape.slice();return c.map((e=>{const t=[...d];t[i]=e;const a=ek({inputs:{x:r},backend:n,attrs:{begin:u,size:t}});return u[i]+=e,a}))}},DT="return sqrt(x);",OT=Bx({opSnippet:DT,packedOpSnippet:DT,cpuKernelImpl:Vv}),MT={kernelName:S.Sqrt,backendName:"webgl",kernelFunc:OT},zT=Bx({opSnippet:"return x * x;"}),LT={kernelName:S.Square,backendName:"webgl",kernelFunc:zT},BT="return (a - b) * (a - b);",PT=Px({opSnippet:BT,packedOpSnippet:BT}),VT={kernelName:S.SquaredDifference,backendName:"webgl",kernelFunc:PT};const WT={kernelName:S.StaticRegexReplace,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t;if("string"!==r.dtype)throw new Error("Input must be of datatype string");const s=n.readSync(r.dataId),o=S.backend_util.fromUint8ToStringArray(s),i=Wv(o,"string",a);return n.makeTensorInfo(r.shape,"string",i)}};const UT={kernelName:S.Step,backendName:"webgl",kernelFunc:function(e){let{inputs:t,attrs:n,backend:a}=e;const{x:r}=t,s=ox+"\n    return x > 0.0 ? 1.0 : float(".concat(n.alpha,");\n  "),o=new sx(r.shape,s);return a.runWebGLProgram(o,[r],r.dtype)}};class GT{constructor(e,t,n){this.variableNames=["x"],this.outputShape=n;const a=n.length,r=Ab(n.length),s=Ab(n.length);let o="";if(1===a)o="coords * strides + begin";else{let e=0;o=n.map(((t,a)=>(e++,1===n.length?"coords * strides[".concat(a,"] + begin[").concat(a,"]"):"coords[".concat(e-1,"] * strides[").concat(a,"] + begin[").concat(a,"]")))).join(",")}this.userCode="\n      ".concat(r," begin = ").concat(r,"(").concat(e,");\n      ").concat(r," strides = ").concat(r,"(").concat(t,");\n\n      void main() {\n        ").concat(s," coords = getOutputCoords();\n        setOutput(getX(").concat(o,"));\n      }\n    ")}}const HT={kernelName:S.StridedSlice,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{begin:s,end:o,strides:i,beginMask:c,endMask:l,ellipsisMask:u,newAxisMask:d,shrinkAxisMask:h}=a,{finalShapeSparse:p,finalShape:f,isIdentity:m,sliceDim0:g,isSimpleSlice:y,begin:b,end:v,strides:x}=S.slice_util.sliceInfo(r.shape,s,o,i,c,l,u,d,h);let w;if(m)w=Kx({inputs:{x:r},backend:n,attrs:{shape:f}});else if(g||y){S.util.assert(r.shape.length>=1,(()=>"Input must have rank at least 1, got: ".concat(r.shape.length)));const e=S.slice_util.computeOutShape(b,v,x),t=ek({inputs:{x:r},backend:n,attrs:{begin:b,size:e}});w=Kx({inputs:{x:t},backend:n,attrs:{shape:f}}),n.disposeIntermediateTensorInfo(t)}else{if(n.shouldExecuteOnCPU([r])){const e=n.readSync(r.dataId),t=(0,S.buffer)(r.shape,r.dtype,e),a=Uv(p,t,x,b);w=n.makeTensorInfo(f,r.dtype,a.values)}else{const e=new GT(b,x,p);w=n.runWebGLProgram(e,[r],r.dtype)}}const k=Kx({inputs:{x:w},backend:n,attrs:{shape:f}});return n.disposeIntermediateTensorInfo(w),k}};const jT={kernelName:S.StringNGrams,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{separator:r,nGramWidths:s,leftPad:o,rightPad:i,padWidth:c,preserveShortSequences:l}=a,{data:u,dataSplits:d}=t,h=n.readSync(u.dataId),p=n.readSync(d.dataId),[f,m]=Gv(h,p,r,s,o,i,c,l);return[n.makeTensorInfo([f.length],"string",f),n.makeTensorInfo(d.shape,"int32",m)]}};const qT={kernelName:S.StringSplit,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{skipEmpty:r}=a,{input:s,delimiter:o}=t;if("string"!==s.dtype)throw new Error("Input must be of datatype string");if(1!==s.shape.length)throw new Error("Input must be a vector, got shape: ".concat(s.shape));if(0!==o.shape.length)throw new Error("Delimiter must be a scalar, got shape: ".concat(o.shape));const i=n.readSync(s.dataId),c=n.readSync(o.dataId)[0],[l,u,d]=Hv(i,c,r),h=u.length;return[n.makeTensorInfo([h,2],"int32",l),n.makeTensorInfo([h],"string",u),n.makeTensorInfo([2],"int32",new Int32Array(d))]}};const XT={kernelName:S.StringToHashBucketFast,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{numBuckets:r}=a,{input:s}=t;if("string"!==s.dtype)throw new Error("Input must be of datatype string");if(r<=0)throw new Error("Number of buckets must be at least 1");const o=n.readSync(s.dataId),i=jv(o,r);return n.makeTensorInfo(s.shape,"int32",i)}},KT=Bx({opSnippet:"return tan(x);"}),QT={kernelName:S.Tan,backendName:"webgl",kernelFunc:KT},YT=Bx({opSnippet:"\n  float e2x = exp(-2.0 * abs(x));\n  return sign(x) * (1.0 - e2x) / (1.0 + e2x);\n"}),ZT={kernelName:S.Tanh,backendName:"webgl",kernelFunc:YT};const JT={kernelName:S.TensorScatterUpdate,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{tensor:r,indices:s,updates:o}=t,{}=a,{sliceRank:i,numUpdates:c,sliceSize:l,strides:u,outputSize:d}=S.backend_util.calculateShapes(o,s,r.shape),h=[d/l,l];if(0===d)return n.makeTensorInfo(r.shape,s.dtype);const p=Kx({inputs:{x:s},backend:n,attrs:{shape:[c,i]}}),f=Kx({inputs:{x:o},backend:n,attrs:{shape:[c,l]}}),m=Kx({inputs:{x:r},backend:n,attrs:{shape:h}}),g=new iT(c,i,p.shape.length,f.shape.length,u,h,!1,!0),y=n.runWebGLProgram(g,[f,p,m],m.dtype),b=Kx({inputs:{x:y},backend:n,attrs:{shape:r.shape}});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(y),b}};class $T{constructor(e,t){this.variableNames=["A"];const n=new Array(e.length);for(let s=0;s<n.length;s++)n[s]=e[s]*t[s];this.outputShape=n,this.rank=n.length;const a=Ab(this.rank),r=function(e){const t=e.length;if(t>5)throw Error("Tile for rank ".concat(t," is not yet supported"));if(1===t)return"imod(resRC, ".concat(e[0],")");const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],a=[];for(let r=0;r<e.length;r++)a.push("imod(".concat(n[r],", ").concat(e[r],")"));return a.join()}(e);this.userCode="\n      void main() {\n        ".concat(a," resRC = getOutputCoords();\n        setOutput(getA(").concat(r,"));\n      }\n    ")}}function eC(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{reps:s}=a;if("string"===r.dtype||r.shape.length>5){const e=n.readSync(r.dataId),t="string"===r.dtype?e.map((e=>S.util.decodeString(e))):e,a=(0,S.buffer)(r.shape,r.dtype,t),o=Xv(a,s);return n.makeTensorInfo(o.shape,o.dtype,o.values)}const o=new $T(r.shape,s);return n.runWebGLProgram(o,[r],r.dtype)}const tC={kernelName:S.Tile,backendName:"webgl",kernelFunc:eC};class nC{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"negativeInf",type:"float"},{name:"dir",type:"int"},{name:"inc",type:"int"}],this.outputShape=e,this.userCode="\n       void main() {\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int elemIdx = coords[1];\n\n         // We compare elements pair-wise within a group of size 2 * inc.\n         // The comparing rule for each group alternates between ascending\n         // and descending. Within each group, we compare each pair at\n         // positions i and i+inc. To decide whether an element at position i\n         // is x0 or x1, we mod it by 2 * inc, if the result is smaller than\n         // inc, it is in the first half of the group, we denote it as x0,\n         // otherwise we denote it as x1.\n         // For example, as shown in the Bitonic top K paper referenced above,\n         // Figure5(a) shows that element[1] is in the\n         // second half of the group when group size is 2, but it is in the\n         // first half of the group when group size is 4.\n\n         bool isFirstInPair = imod(elemIdx, 2 * inc) < inc;\n         int i = isFirstInPair ? elemIdx : elemIdx - inc;\n\n         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));\n         int i1 = firstPass == 1 ? i + inc : int(getIndices(batch, i + inc));\n         float x0 = i0 < n ? getX(batch, i0) : negativeInf;\n         float x1 = i1 < n ? getX(batch, i1) : negativeInf;\n\n         // Denotes which direction indices are in (ascending or descending).\n         bool reverse = imod(elemIdx, 2 * dir) >= dir;\n         bool isGreater = x0 > x1 || (x0 == x1 && i1 > i0);\n         if (reverse == isGreater) { // Elements in opposite order of direction\n           int iTemp = i0;\n           i0 = i1;\n           i1 = iTemp;\n         }\n         if (isFirstInPair) {\n            setOutput(float(i0));\n         } else {\n            setOutput(float(i1));\n         }\n       }\n     "}}class aC{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"k",type:"int"}],this.outputShape=e,this.userCode="\n    void main() {\n         // Takes max of indices (0, k), (1, k + 1), (2, k + 2) ...\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int elemIdx = coords[1];\n\n         // The output size is half of the previous size.\n         // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _ (k=4),\n         // we only need to output the indices at positions |, the indices at\n         // positions _ can be thrown away, see Figure5(b) After Phase 2\n         // (Merge phase) in the Bitonic Top K paper referenced above.\n         // For example, the paper shows we only need to output the orange bars.\n         // The output sequence should look like this | | | | | | | |.\n         // Because the sequence is halved, to map the output index back\n         // to the previous sequence to find the corresponding value,\n         // we need to double the index. When we double the index,\n         // we basically interpolate a position, so 2i looks like\n         // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k position\n         // of each 2k positions by - elemIdx % k. E.g. for output at\n         // index 4,5,6,7, we want to get the corresponding element at\n         // original index 8,9,10,11, for output at index 8,9,10,11,\n         // we want to get the corresponding element at original index\n         // 16,17,18,19, so on and so forth.\n\n         int i = elemIdx < k ? elemIdx : (elemIdx * 2 - imod(elemIdx, k));\n         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));\n         int i1 = firstPass == 1 ? i + k : int(getIndices(batch, i + k));\n\n         float x0 = getX(batch, i0);\n         float x1 = i1 < n ? getX(batch, i1) : x0;\n\n         setOutput(x0 >= x1 ? float(i0) : float(i1));\n       }\n     "}}function rC(e,t){null!==t&&e.disposeIntermediateTensorInfo(t)}function sC(e){let t=1;for(;t<e;)t*=2;return t}const oC={kernelName:S.TopK,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{k:s,sorted:o}=a,i=(0,S.env)().getNumber("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD"),c=(0,S.env)().getNumber("TOPK_K_CPU_HANDOFF_THRESHOLD"),l=r.shape,u=l[l.length-1];if(n.shouldExecuteOnCPU([r])||u<i||s>c){const e=n.readSync(r.dataId),[t,a]=Kv(e,l,r.dtype,s,o);return[n.makeTensorInfo(t.shape,t.dtype,t.values),n.makeTensorInfo(a.shape,a.dtype,a.values)]}if(0===s)return l[l.length-1]=0,[n.makeTensorInfo(l,r.dtype,[]),n.makeTensorInfo(l,"int32",[])];if(1===u)return[r,BS({attrs:{shape:l,dtype:"int32",value:0},backend:n})];const d=n.texData.get(r.dataId),h=null!==d&&d.isPacked,p=h?n.unpackTensor(r):r,f=S.util.sizeFromShape(l)/u,m=Kx({inputs:{x:p},attrs:{shape:[f,u]},backend:n});h&&rC(n,p);const g=sC(s),y=sC(u);let b=null;const v=()=>null===b?[m,m]:[m,b],x=(e,t,a)=>{const r=v(),s=new nC(a),o=[[u],[null===b?1:0],[Number.NEGATIVE_INFINITY],[e],[t]],i=b;b=n.runWebGLProgram(s,r,"int32",o),rC(n,i)};for(let S=1;S<g;S*=2){const e=2*S;for(let t=S;t>=1;t/=2)x(e,t,[f,y])}for(let S=y;S>g;S/=2){const e=v(),t=new aC([f,S/2]),a=[[u],[null===b?1:0],[g]],r=b;b=n.runWebGLProgram(t,e,"int32",a),rC(n,r);const s=g/2,o=2*s;for(let n=s;n>=1;n/=2)x(o,n,b.shape)}let w=b;b=ek({inputs:{x:b},backend:n,attrs:{begin:0,size:[f,s]}}),rC(n,w);let k=aN({inputs:{x:m,indices:b},backend:n,attrs:{axis:1,batchDims:1}});rC(n,m);const N=l.slice(0,-1);N.push(s),w=b,b=Kx({inputs:{x:b},attrs:{shape:N},backend:n}),rC(n,w);const I=k;return k=Kx({inputs:{x:k},attrs:{shape:N},backend:n}),rC(n,I),[k,b]}};class iC{constructor(e,t,n,a,r,s){this.variableNames=["Image","Transforms"],this.outputShape=s;const o="nearest"===n?1:2;let i;switch(a){case"constant":default:i=1;break;case"reflect":i=2;break;case"wrap":i=3;break;case"nearest":i=4}this.userCode="\n            float mapCoord(float outCoord, float len) {\n              float inCoord = outCoord;\n              if(".concat(i," == 2) {\n                if (inCoord < 0.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz2 = 2.0 * len;\n                    if (inCoord < sz2) {\n                      inCoord = sz2 * float(int(float(-inCoord / sz2))) +\n                      inCoord;\n                    }\n                    inCoord = inCoord < -len ? inCoord + sz2 : -inCoord - 1.0;\n                  }\n                } else if (inCoord > len - 1.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz2 = 2.0 * len;\n                    inCoord -= sz2 * float(int(float(inCoord / sz2)));\n                    if (inCoord >= len) {\n                      inCoord = sz2 - inCoord - 1.0;\n                    }\n                  }\n                }\n                return clamp(inCoord, 0.0, len - 1.0);\n              } else if (").concat(i," == 3) {\n                if (inCoord < 0.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz = len - 1.0;\n                    inCoord += len * (float(int(float(-inCoord / sz))) + 1.0);\n                  }\n                } else if (inCoord > len - 1.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz = len - 1.0;\n                    inCoord -= len * float(int(float(inCoord / sz)));\n                  }\n                }\n                return clamp(inCoord, 0.0, len - 1.0);\n              } else if (").concat(i," == 4) {\n                return clamp(outCoord, 0.0, len - 1.0);\n              } else {\n                return outCoord;\n              }\n            }\n\n            float readWithFillValue(int batch, int coordY, int coordX,\n              int channel) {\n              float outputValue;\n              if (0 <= coordY && coordY < ").concat(e," && 0 <= coordX && coordX < ").concat(t,") {\n                  outputValue = getImage(batch, coordY, coordX, channel);\n              } else {\n                outputValue = float(").concat(r,");\n              }\n              return outputValue;\n            }\n\n            void main() {\n              ivec4 coords = getOutputCoords();\n              float outputValue;\n              int batch = coords[0];\n              int x = coords[2];\n              int y = coords[1];\n              int channel = coords[3];\n              float xf = float(x);\n              float yf = float(y);\n              float a1 = getTransforms(batch, 0);\n              float a2 = getTransforms(batch, 1);\n              float a3 = getTransforms(batch, 2);\n              float b1 = getTransforms(batch, 3);\n              float b2 = getTransforms(batch, 4);\n              float b3 = getTransforms(batch, 5);\n              float c1 = getTransforms(batch, 6);\n              float c2 = getTransforms(batch, 7);\n              float projection = c1 * xf + c2 * yf + 1.0;\n              if (projection == 0.0) {\n                outputValue = float(").concat(r,");\n              } else {\n                float inX = (a1 * xf + a2 * yf + a3) / projection;\n                float inY = (b1 * xf + b2 * yf + b3) / projection;\n                float mapX = mapCoord(inX, float(").concat(t,"));\n                float mapY = mapCoord(inY, float(").concat(e,"));\n\n                if (").concat(o," == 1) {\n                  int coordY = int(round(mapY));\n                  int coordX = int(round(mapX));\n                  outputValue = readWithFillValue(batch, coordY, coordX,\n                    channel);\n                } else {\n                  float yFloor = floor(mapY);\n                  float xFloor = floor(mapX);\n                  float yCeil = yFloor + 1.0;\n                  float xCeil = xFloor + 1.0;\n                  float valueYFloor = (xCeil - mapX) *\n                  readWithFillValue(batch, int(yFloor), int(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, int(yFloor), int(xCeil), channel);\n                  float valueYCeil = (xCeil - mapX) *\n                  readWithFillValue(batch, int(yCeil), int(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, int(yCeil), int(xCeil), channel);\n                  outputValue = (yCeil - mapY) * valueYFloor +\n                  (mapY - yFloor) * valueYCeil;\n                }\n              }\n              setOutput(outputValue);\n            }\n        ")}}const cC={kernelName:S.Transform,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{image:r,transforms:s}=t,{interpolation:o,fillMode:i,fillValue:c,outputShape:l}=a,[u,d,h,p]=r.shape,[f,m]=null!=l?l:[d,h],g=new iC(d,h,o,i,c,[u,f,m,p]);return n.runWebGLProgram(g,[r,s],"float32")}};const lC={kernelName:S.Unique,backendName:"webgl",kernelFunc:function(e){const{inputs:t,attrs:n,backend:a}=e,{axis:r}=n,{x:s}=t;ab(s,"unique"),console.warn("WARNING: ","UI might be locked temporarily as data is being downloaded");const o=a.readSync(s.dataId),{outputValues:i,outputShape:c,indices:l}=Yv(o,r,s.shape,s.dtype);return[a.makeTensorInfo(c,s.dtype,i),a.makeTensorInfo([l.length],"int32",l)]}};const uC={kernelName:S.Unpack,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{value:r}=t;let{axis:s}=a;s<0&&(s+=r.shape.length);const o=r,i=o.shape.length,c=r.shape[s],l=new Array(i-1);let u=0;for(let m=0;m<i;m++)m!==s&&(l[u++]=o.shape[m]);const d=[],h=new Array(i).fill(0),p=o.shape.slice();p[s]=1;const f=new Array(c);for(let m=0;m<f.length;m++){h[s]=m;const e=ek({inputs:{x:o},backend:n,attrs:{begin:h,size:p}}),t=Kx({inputs:{x:e},backend:n,attrs:{shape:l}});f[m]=t,d.push(e)}return d.forEach((e=>n.disposeIntermediateTensorInfo(e))),f}};class dC{constructor(e,t){this.variableNames=["x","segmentIds"];const n=e.windowSize,a=e.batchSize,r=e.inSize,s=e.numSegments,o=s*Math.ceil(r/n);this.outputShape=[a,o];const i=4*Math.floor(n/4),c=n%4,l="\n        sumValue += dot(values, segFilter);\n    ";let u="";r%n>0&&(u="\n        if (inIdx < 0 || inIdx >= ".concat(r,") {\n          return initializationValue;\n        }\n      "));let d="";r%n>0&&(d="\n        if (inIdx < 0 || inIdx >= ".concat(r,") {\n          return -1.0;\n        }\n      ")),this.userCode="\n      const float initializationValue = ".concat("0.0",";\n\n      float getValue(int batch, int inIdx) {\n        ").concat(u,"\n        return getX(batch, inIdx);\n      }\n\n      float getSegmentIdAtIndex(int inIdx) {\n        ").concat(d,"\n        return getSegmentIds(inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = int(floor(float(outIdx) / float(\n          ").concat(s,")) * float(").concat(n,"));\n        int currentSeg = int(mod(float(outIdx), float(").concat(s,")));\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ").concat(i,"; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0\n          );\n\n          ").concat(l,"\n        }\n\n        int inIdx = inOffset + ").concat(i,";\n        if (").concat(1===c,") {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            0,\n            0,\n            0\n          );\n\n          ").concat(l,"\n        } else if (").concat(2===c,") {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n              0,\n              0\n          );\n\n          ").concat(l,"\n        } else if (").concat(3===c,") {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            0\n          );\n\n          ").concat(l,"\n        }\n        setOutput(").concat("sumValue",");\n      }\n    ")}}const hC={kernelName:S.UnsortedSegmentSum,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:r,segmentIds:s}=t,{numSegments:o}=a,i=r.shape.length,c=[];let l=0;const u=S.backend_util.getAxesPermutation([l],i);let d=r;null!=u&&(d=rw({inputs:{x:r},backend:n,attrs:{perm:u}}),c.push(d),l=S.backend_util.getInnerMostAxes(1,i)[0]);const h=S.backend_util.segment_util.computeOutShape(d.shape,l,o),p=S.util.sizeFromShape([d.shape[l]]),f=Kx({inputs:{x:d},backend:n,attrs:{shape:[-1,p]}});c.push(f);const m=(0,S.sumOutType)(r.dtype),g=(e,t,a,r,s)=>{const o=e.shape[0],i=e.shape[1],l=S.backend_util.segment_util.segOpComputeOptimalWindowSize(i,s),u=new dC({windowSize:l,inSize:i,batchSize:o,numSegments:s},t),d=n.compileAndRun(u,[e,a],r);if(c.push(d),d.shape[1]===s)return d;const h=OI({backend:n,attrs:{start:0,stop:s,step:1,dtype:"float32"}}),p=eC({inputs:{x:h},backend:n,attrs:{reps:[i/l]}});c.push(h),c.push(p);return g(d,t,p,r,s)},y=Kx({inputs:{x:g(f,"unsortedSegmentSum",s,m,o)},backend:n,attrs:{shape:h}});let b=y;if(null!=u){c.push(y);const e=S.backend_util.getUndoAxesPermutation(u);b=rw({inputs:{x:b},backend:n,attrs:{perm:e}})}return c.forEach((e=>n.disposeIntermediateTensorInfo(e))),b}},pC=[iw,lw,dw,pw,gw,vw,xw,ww,Cw,Ew,Aw,Fw,Ow,zw,Bw,Ww,Uw,jw,qw,Xw,Yw,nk,ak,rk,sk,uk,pk,gk,Rx,vk,Ck,Mk,Vk,Uk,Gk,Hk,jk,Xk,Qk,Zk,aS,rS,sS,iS,uS,pS,fS,gS,bS,vS,wS,kS,NS,TS,ES,AS,DS,zS,PS,WS,HS,qS,QS,JS,$S,tN,rN,oN,cN,_x,lN,Nk,dN,pN,mN,Ox,yN,vN,xN,kN,NN,TN,EN,AN,DN,MN,LN,PN,VN,WN,HN,jN,qN,XN,KN,YN,$N,tI,uI,Xx,dI,pI,mI,yI,ik,vI,kI,SI,CI,_I,Lx,AI,RI,FI,DI,MI,lk,rI,LI,PI,WI,Qx,HI,qI,QI,ZI,eT,nT,rT,oT,lT,dT,pT,mT,yT,vT,wT,ST,tk,lI,IT,TT,CT,ET,_T,AT,RT,FT,MT,LT,VT,WT,UT,HT,jT,qT,XT,iI,aw,QT,ZT,JT,tC,oC,cC,sw,lC,uC,hC,wI];for(const n of pC)(0,S.registerKernel)(n);S.version_core,uu.version_converter;const fC=e=>{let{className:t}=e;return(0,i.jsxs)("svg",{className:t,xmlns:"http://www.w3.org/2000/svg",width:"234",height:"142",viewBox:"0 0 234 142",fill:"none",children:[(0,i.jsxs)("g",{clipPath:"url(#clip0_2_6)",children:[(0,i.jsx)("path",{opacity:"0.3",d:"M233.56 0.679932H0.560059V141.63H233.56V0.679932Z",fill:"white"}),(0,i.jsx)("path",{d:"M233.5 0.5H0.5V141.45H233.5V0.5Z",stroke:"white",strokeMiterlimit:"10"})]}),(0,i.jsx)("defs",{children:(0,i.jsx)("clipPath",{id:"clip0_2_6",children:(0,i.jsx)("rect",{width:"234",height:"141.95",fill:"white"})})})]})},mC=e=>{let{className:t}=e;return(0,i.jsxs)("svg",{className:t,xmlns:"http://www.w3.org/2000/svg",width:"234",height:"142",viewBox:"0 0 234 142",fill:"none",children:[(0,i.jsxs)("g",{clipPath:"url(#clip0_2_25)",children:[(0,i.jsx)("path",{opacity:"0.3",d:"M233.56 0.5H0.560059V141.45H233.56V0.5Z",fill:"#8EFF5C"}),(0,i.jsx)("path",{d:"M233.5 0.5H0.5V141.45H233.5V0.5Z",stroke:"#8EFF5C",strokeMiterlimit:"10"})]}),(0,i.jsx)("defs",{children:(0,i.jsx)("clipPath",{id:"clip0_2_25",children:(0,i.jsx)("rect",{width:"234",height:"141.95",fill:"white"})})})]})},gC=e=>{let{className:t}=e;return(0,i.jsx)("svg",{className:t,xmlns:"http://www.w3.org/2000/svg",width:"283",height:"107",viewBox:"0 0 283 107",fill:"none",children:(0,i.jsx)("path",{opacity:"0.3",d:"M282.87 0.5H0.109863V106.5H282.87V0.5Z",fill:"white"})})},yC=e=>{let{className:t}=e;return(0,i.jsx)("svg",{className:t,xmlns:"http://www.w3.org/2000/svg",width:"283",height:"107",viewBox:"0 0 283 107",fill:"none",children:(0,i.jsx)("path",{opacity:"0.3",d:"M282.87 0.5H0.109863V106.5H282.87V0.5Z",fill:"#8EFF5C"})})},bC=e=>{let{className:t}=e;return(0,i.jsxs)("svg",{className:t,width:"285",height:"125",viewBox:"0 0 285 125",fill:"none",xmlns:"http://www.w3.org/2000/svg",children:[(0,i.jsxs)("g",{clipPath:"url(#clip0_2_12)",children:[(0,i.jsx)("path",{d:"M156.04 123.98L1.04 108.28L0.5 0.530029H156.04V123.98Z",stroke:"white",strokeMiterlimit:"10"}),(0,i.jsx)("path",{d:"M283.98 88.11L210.61 80.75L210.36 30.27H283.98V88.11Z",stroke:"white",strokeMiterlimit:"10",strokeLinecap:"round",strokeDasharray:"2 2"}),(0,i.jsx)("path",{d:"M156.04 123.98L283.93 89.29V30.84C283.93 30.84 161.15 -0.660043 155.93 0.529957",stroke:"white",strokeMiterlimit:"10"}),(0,i.jsx)("path",{opacity:"0.3",d:"M155.54 1.09003C160.76 -0.0999738 283.43 31.39 283.43 31.39V89.44L155.54 124.13",fill:"white"}),(0,i.jsx)("path",{d:"M210.92 80.2201C211.46 80.0201 1.04 108.28 1.04 108.28L0.5 1.09009L210.92 30.8301",stroke:"white",strokeMiterlimit:"10",strokeLinecap:"round",strokeDasharray:"2 2"}),(0,i.jsx)("path",{opacity:"0.3",d:"M155.97 123.55L0.970176 107.85L0.430176 0.100098H155.97V123.55Z",fill:"white"})]}),(0,i.jsx)("defs",{children:(0,i.jsx)("clipPath",{id:"clip0_2_12",children:(0,i.jsx)("rect",{width:"284.48",height:"124.53",fill:"white"})})})]})},vC=e=>{let{className:t}=e;return(0,i.jsxs)("svg",{className:t,width:"285",height:"125",viewBox:"0 0 285 125",fill:"none",xmlns:"http://www.w3.org/2000/svg",children:[(0,i.jsxs)("g",{clipPath:"url(#clip0_2_28)",children:[(0,i.jsx)("path",{d:"M156.04 123.98L1.04 108.28L0.5 0.530029H156.04V123.98Z",stroke:"#8EFF5C",strokeMiterlimit:"10"}),(0,i.jsx)("path",{d:"M283.98 88.11L210.61 80.75L210.36 30.27H283.98V88.11Z",stroke:"#8EFF5C",strokeMiterlimit:"10",strokeLinecap:"round",strokeDasharray:"2 2"}),(0,i.jsx)("path",{d:"M156.04 123.98L283.93 89.29V30.84C283.93 30.84 161.15 -0.660043 155.93 0.529957",stroke:"#8EFF5C",strokeMiterlimit:"10"}),(0,i.jsx)("path",{opacity:"0.3",d:"M155.54 1.09003C160.76 -0.0999738 283.43 31.39 283.43 31.39V89.44L155.54 124.13",fill:"#8EFF5C"}),(0,i.jsx)("path",{d:"M210.92 80.2201C211.46 80.0201 1.04 108.28 1.04 108.28L0.5 1.09009L210.92 30.8301",stroke:"#8EFF5C",strokeMiterlimit:"10",strokeLinecap:"round",strokeDasharray:"2 2"}),(0,i.jsx)("path",{opacity:"0.3",d:"M155.97 123.55L0.970176 107.85L0.430176 0.100098H155.97V123.55Z",fill:"#8EFF5C"})]}),(0,i.jsx)("defs",{children:(0,i.jsx)("clipPath",{id:"clip0_2_28",children:(0,i.jsx)("rect",{width:"284.48",height:"124.53",fill:"white"})})})]})},xC="MaskDetectionComponent_container__maskDetectionComponent__4Qjgu",wC="MaskDetectionComponent_container__header__eulZM",kC="MaskDetectionComponent_container__flexBox__V1hK+",SC="MaskDetectionComponent_container__rotatedMessage__KlZtJ",NC="MaskDetectionComponent_container__videoContainer__nU82m",IC="MaskDetectionComponent_container__videoElement__DEAIY",TC="MaskDetectionComponent_container__suggestionMessage__ERU7m",CC="MaskDetectionComponent_container__buttonAlign__0UWyo",EC="MaskDetectionComponent_container__mask__3eVbB",_C=[{title:"Front head-on",maskDefault:(0,i.jsx)(fC,{}),maskSuccess:(0,i.jsx)(mC,{})},{title:"Passenger side profile",maskDefault:(0,i.jsx)(gC,{}),maskSuccess:(0,i.jsx)(yC,{})},{title:"Rear 3/4 passenger side",maskDefault:(0,i.jsx)(bC,{}),maskSuccess:(0,i.jsx)(vC,{})},{title:"Rear side",maskDefault:(0,i.jsx)(fC,{}),maskSuccess:(0,i.jsx)(mC,{})}],AC=e=>{let{isCarDetected:t,maskDefault:n,maskSuccess:a}=e;return(0,i.jsx)("div",{className:EC,children:t?a:n})},RC=e=>{let{photoList:n,setPhotoList:a,handleButtonClick:r}=e;const s=(0,t.useRef)(null),o=(0,t.useRef)(null),[l,u]=(0,t.useState)(""),[d,h]=(0,t.useState)(!1),[p,f]=(0,t.useState)(null),[m,g]=(0,t.useState)(window.innerHeight>window.innerWidth),[y,b]=(0,t.useState)(0),v=150,x=250,w=200,S=200;(0,t.useEffect)((()=>{(async()=>{const e=await k.load();f(e)})(),navigator.mediaDevices.getUserMedia({video:{facingMode:"environment"}}).then((e=>{s.current&&(s.current.srcObject=e,s.current.play())})).catch((e=>{console.error("Error accessing camera:",e)}));const e=async()=>{if(!p||!s.current)return;const e=await p.detect(s.current);console.log("Predictions:",e);const t=e.filter((e=>"car"===e.class));if(t.length>0){const e=t[0].bbox;console.log("Detected car box:",e),(e=>{const t=e.x<v,n=e.x+e.width>v+w,a=e.y<x,r=e.y+e.height>x+S,s=t&&n||a&&r;e.x>=v&&e.x+e.width<=v+w&&e.y>=x&&e.y+e.height<=x+S?(u("Car is inside the mask"),h(!0),console.log("Car is aligned")):s?(u("Car is touching at least two sides of the mask"),h(!0),console.log("Car is touching at least two sides")):(h(!1),u(t?"Move phone to the left":n?"Move phone to the right":a?"Move phone up":r?"Move phone down":"Car not detected"),console.log("Car is not aligned:",l))})({x:e[0],y:e[1],width:e[2],height:e[3]})}else u("Car not detected"),h(!1)},t=setInterval((()=>{s.current&&p&&e()}),1e3),n=()=>{g(window.innerHeight>window.innerWidth)};return window.addEventListener("orientationchange",n),window.addEventListener("resize",n),()=>{clearInterval(t),window.removeEventListener("orientationchange",n),window.removeEventListener("resize",n)}}),[p]);return(0,i.jsxs)("div",{className:xC,children:[(0,i.jsx)("div",{className:wC,children:_C[y].title}),m&&(0,i.jsx)("div",{className:SC,children:"Please rotate your device to landscape mode"}),(0,i.jsxs)("div",{className:NC,children:[(0,i.jsx)("video",{ref:s,className:IC,children:(0,i.jsx)("track",{kind:"captions"})}),(0,i.jsx)("canvas",{ref:o,className:IC,style:{display:"none"}})]}),(0,i.jsx)(AC,{isCarDetected:d,maskDefault:_C[y].maskDefault,maskSuccess:_C[y].maskSuccess}),(0,i.jsx)("div",{className:kC,children:(0,i.jsx)("p",{className:TC,children:l})}),(0,i.jsx)("div",{className:CC,children:(0,i.jsx)(c,{title:"Take Photo",onClick:()=>{if(o.current&&s.current){const e=o.current.getContext("2d");if(e){e.drawImage(s.current,0,0,o.current.width,o.current.height);const t=o.current.toDataURL("image/png");b((e=>(e+1)%_C.length)),h(!1),u("");const i=[...n];i.push(t),a(i),y===_C.length-1&&r()}}},disabled:!d})})]})},FC="PhotoList_container__flexboxItem__LwuNN",DC="PhotoList_container__padding__msPj9",OC="PhotoList_container__flexbox__UxSw3",MC="PhotoList_container__header__3TqXN",zC="PhotoList_container__description__K42qs",LC=e=>{let{photoList:t}=e;return(0,i.jsxs)("div",{className:DC,children:[(0,i.jsxs)("div",{children:[(0,i.jsx)("div",{className:MC,children:"Photo capture complete!"}),(0,i.jsx)("div",{className:zC,children:"Review your photos before submitting or retake any by clicking on an image below."}),(0,i.jsx)("div",{className:OC,children:t.map(((e,t)=>(0,i.jsx)("img",{src:e,className:FC,alt:""},t)))})]}),(0,i.jsx)(c,{title:"Submit photos",disabled:!1,onClick:()=>console.log("Done")})]})},BC=()=>{const[e,n]=(0,t.useState)(0),[a,r]=(0,t.useState)([]),s=()=>{n((e=>(e+1)%o.length))},o=[(0,i.jsx)(f,{handleButtonClick:s},"1"),(0,i.jsx)(w,{handleButtonClick:s},"2"),(0,i.jsx)(RC,{photoList:a,setPhotoList:e=>{r(e)},handleButtonClick:s},"3"),(0,i.jsx)(LC,{photoList:a},"4")];return o[e]};const PC=function(){return(0,i.jsx)("div",{className:"App",children:(0,i.jsx)(BC,{})})};a.createRoot(document.getElementById("root")).render((0,i.jsx)(t.StrictMode,{children:(0,i.jsx)(PC,{})}))})()})();
//# sourceMappingURL=main.b6b587a2.js.map